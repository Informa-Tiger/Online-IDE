{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","length","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","push","position","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","ln","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","canCastTo","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedSignatures","missingInterfaceMethods","hierarchy","abstractMethods","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","pushError","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","scopeNode","stm","superConstructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","conditionType","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","stackposOfVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","pushLocalVariableToStack","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","updateWorkspaces","w","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","window","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","elements","dontSortElements","addPanel","$captionElement","$listElement","fixed","enabled","$buttonNew","$accordionDiv","close","$element","renderElement","prepend","renameElement","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","$htmlFirstLine","sort","b","aName","sortName","bName","cssClass","$div","addElementActionCallback","$elementAction","addEventListener","contextMenuItems","renameCallback","contextMenuProvider","cmi","preventDefault","pageX","pageY","deleteCallback","pointPos","selection","newText","invokeCallback","ae1","findElement","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","Workspace","restoreFromData","currentFileId","currentlyOpenModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","showProgramPointerAndVariables","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","random","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","newPosition","intervalBorders","maxStepsPerSecond","intervalDelta","intervalIndex","intervalMin","speed","stepsPerSecond","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","max","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","clearTimeout","inDebounce","hash","position1Cm","position2Cm","sqrt","path","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","pe","me","mm","mewidth","ee","meheight","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","restart","spriteAnimations","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","actActors","getModule","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p1","p2","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","abstandPunktZuStrecke","q","lambda","fx","fy","s2","shapeType","helper","getCenterX","getCenterY","sh","testdestroyed","angleInDeg","centerX","centerY","isOutsideView","shape","sh1","collidesWith","angleDeg","setVisible","tint","react","getCopy","bringToFront","sendToBack","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","centerXInitial","centerYInitial","setHitPolygonDirty","container","highestIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","apply","bounds","screen","cX","cY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","anzahlX","anzahlY","addToDefaultGroup","bh","BitmapHelper","colorArray","colorBuffer","update","initGraphics","vertexArray","Float32Array","vertexIndexArray","Int32Array","xStep","yStep","vertexBuffer","Buffer","VertexIndexBuffer","geometry","Geometry","addIndex","shader","Shader","from","Mesh","DRAW_MODES","TRIANGLES","g","red","green","blue","hex","intColorToHexRGB","r1","g1","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","colorName","intColor","intColorToRGB","o1","d1","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","closeAndFill","pointsNumber","ph","addPoint","PolygonHelper","lineTo","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","sprite","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","h","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","scaleMode","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","texture","textures","Sprite","dynamicTexture1","RenderTexture","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","atan2","deltaTimeMillis","printStream","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","xIndex","yIndex","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","forward","turn","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","el","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","moduleMap","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BACA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,0CAGA,4BACA,0BACA,4DACA,0DACA,4DACA,0DACA,kDACA,sCACA,0CACA,oCACA,sDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhLJ,CAAYA,MAAS,KAmLd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK,IAWvBT,EAAUU,aAAe,SAXF,IAYvBV,EAAUW,YAAc,QAZD,IAavBX,EAAUY,aAAe,SAbF,IAcvBZ,E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AQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QAEvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QACvB,EAAKvlB,UAAUulB,QAAQ,IAAI,GAAJ,QAC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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||, !\r\n    ampersand, // &\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor){\r\n                if(currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0){\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if(method.isConstructor){\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if(firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedSignatures: string[] = [];\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                        } else {\r\n                            implementedSignatures.push(m.getSignatureWithReturnParameter());\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                for (let m of abstractMethods) {\r\n\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingAbstractMethods.push(m);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound , staticClass: this};\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if(operation == TokenType.keywordInstanceof){\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"int\": stringPrimitiveType, \r\n            \"float\": stringPrimitiveType, \"double\": doublePrimitiveType, \r\n            \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value)); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for(let s of strings){\r\n                    values.push({type: stringPrimitiveType, value: s});\r\n                }\r\n                \r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushError(\"| gefunden. Gemeint ist wohl || (Oder-Operator)?\", 1);\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if(base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if(base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if(base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if(base == 16) return (charCode >= 48 && charCode <= 57 ) || (charCode >= 97 && charCode <= 102) ||\r\n         (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if(!(lastCharWasNewline && char == \" \")){\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            } \r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if(this.currentChar == '-'){\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if(this.currentChar == '-'){\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if(this.currentChar == 'd' || this.currentChar == 'f'){\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if(radix != 10){\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if(exponent != 0) value *= Math.pow(10, exponent);       \r\n        \r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation(){\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        \r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at,text, line, column, text.length + 1);        \r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n            if (c != null && c.baseClass?.hasConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = true;\r\n                    if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                        let stm = methodNode.statements[0].statements;\r\n                        if (stm.length > 0 && stm[0].type == TokenType.superConstructorCall) {\r\n                            error = false;\r\n                        }\r\n                    } else if (methodNode.statements[0].type == TokenType.superConstructorCall) {\r\n                        error = false;\r\n                    }\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt Konstruktoren, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos,  conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} \r\n               = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n            this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let superclassType: Klass = <Klass>classContext.baseClass;\r\n        if (superclassType instanceof StaticClass) {\r\n            this.pushError(\"Statische Methoden haben keine super-Methoden.\", node.position);\r\n            return { type: null, isAssignable: false };\r\n        }\r\n        if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: true,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even iv method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while(scc != null && scc.attributes.indexOf(attribute) == -1){\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n    [TokenType.or], [TokenType.and],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                term = {\r\n                    type: TokenType.keywordThis,\r\n                    position: position\r\n                };\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null) {\r\n            return null;\r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Ändert das Element an der Position index der Liste. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index < this.objectArray.length && index >= 0){\r\n                this.valueArray[index] = r;\r\n                this.objectArray[index] = r.value;\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n        \r\n        if(this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n\r\n        this.main.workspaceList.push(w);\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\"\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(\"mousedown\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number):JQuery<HTMLElement> {\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if(mi.link != null){\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") +  '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if(mi.link == null){\r\n            $item.on('mousedown.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(\"mousedown.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(\"mousedown\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n        \r\n        $item.on('mousemove.contextmenu', () => {\r\n            if(mi != parentMenuItem && $openSubMenu != null){\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if(mi.subMenu != null){\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(\"mousedown.contextmenu\", () => {\r\n        jQuery(document).off(\"mousedown.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n    \r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(\"mousedown.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    headings.on(\"mousedown\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: {[id: string]: any}): JQuery<HTMLDivElement>{\r\n\r\n    let s = \"\";\r\n    if(id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if(klass != null && klass != \"\") s += ` class=\"${klass}\"`; \r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if(css !=  null){\r\n        div.css(css);\r\n    }\r\n\r\n    if(text != null && text != \"\"){\r\n        div.text(text);\r\n    }\r\n    \r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>){\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\" id=\"workspace\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            this.$buttonNew.on('mousedown', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\"\r\n                }\r\n\r\n                that.elements.push(ae);\r\n\r\n                let $element = that.renderElement(ae);\r\n                that.$listElement.prepend($element);\r\n\r\n                that.$listElement.scrollTop(0);\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n\r\n        $ce.on('mousedown', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements(){\r\n        if(this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n            return (aName.localeCompare(bName));\r\n        });\r\n        this.elements.forEach((element) => {this.$listElement.append(element.$htmlFirstLine)});\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let that = this;\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass}\">\r\n        <div class=\"jo_fileimage\"></div><div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active\"></div>' : \"\"}\r\n        </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        element.$htmlFirstLine.on('mousedown', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n        });\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (that.contextMenuProvider != null) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        }, false);\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on('mousedown', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if(ae != null){\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n    \r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string){\r\n        if(element != null){\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n        \r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElementData(): any {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\"\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        this.$consoleTabHeading.trigger(\"mousedown\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { System } from \"pixi.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        that.$outer.on('mousedown', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on('mousemove.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.speedcontrol', () => {\r\n                jQuery(document).off('mouseup.speedcontrol');\r\n                jQuery(document).off('mousemove.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.interpreter.stepsPerSecond = speed;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(speed);\r\n        if(speed >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"2\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                that.main.networkManager.sendUpdates(() => {\r\n                    that.setWorkspaceActive(workspace);\r\n                });\r\n            }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('mousedown', (e) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository'\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository'\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n        \r\n        $zoomcontrolBar.on('mousedown', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on('mousemove.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.zoomcontrol', () => {\r\n                jQuery(document).off('mouseup.zoomcontrol');\r\n                jQuery(document).off('mousemove.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(\"mouseenter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(\"mouseleave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n                line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : \"\") + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        jQuery('#slider1').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#leftpanel');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(\"mousemove.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width + dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth - dx) + \"px\");\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider1\", () => {\r\n                jQuery(document).off(\"mousemove.slider1\");\r\n                jQuery(document).off(\"mouseup.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let ee = jQuery('#bottomdiv-outer');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                let height = Number.parseInt(ee.css('height').replace('px', ''));\r\n                ee.css('height', (height - dy) + \"px\");\r\n\r\n                let meheight = Number.parseInt(me.css('height').replace('px', ''));\r\n                me.css('height', (meheight + dy) + \"px\");\r\n\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider2\", () => {\r\n                jQuery(document).off(\"mousemove.slider2\");\r\n                jQuery(document).off(\"mouseup.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#rightdiv');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(\"mousemove.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width - dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth + dx) + \"px\");\r\n                \r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                width += dx;\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider3\", () => {\r\n                jQuery(document).off(\"mousemove.slider3\");\r\n                jQuery(document).off(\"mouseup.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.rufname + \" \" + ud.familienname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 0\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    jQuery('#login').show();\r\n                    jQuery('#bitteWarten').css('display', 'none');\r\n                    jQuery('#login-message').empty();\r\n                    this.main.interpreter.setState(InterpreterState.not_initialized);\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n                    this.main.bottomDiv?.console?.clear();\r\n                    this.main.interpreter.printManager.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.pause();\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null) {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.actActors.length > 0) || this.processingHelper != null) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({type: tvo.type, value: tvo.value}));                \r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred \": 0xCD5C5C,\r\n        \"indigo \": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Point } from \"pixi.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.on(listenerType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        this.$containerInner.on(\"mousemove\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseenter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseleave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                this.interpreter.timerStopped = false;\r\n                this.interpreter.timerFunction(33.33, false, 0.08);\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => {return mls.shapeHelper.runtimeObject == listener});\r\n        if(index >= 0){\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(angleInDeg);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if(sh1.isDestroyed){\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"setCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"setCenter\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if(!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)){\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n        \r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n    }\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n    \r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelper(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelper extends ShapeHelper {\r\n\r\n    private colorArray: Float32Array;\r\n    private colorBuffer: PIXI.Buffer;\r\n\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelper = new BitmapHelper(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n\r\n        for (let i = 0; i < this.colorArray.length; i++) bh.colorArray[i] = this.colorArray[i];\r\n        bh.colorBuffer.update();\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n        if (this.displayObject == null) {\r\n            this.initGraphics();\r\n            this.worldHelper.stage.addChild(this.displayObject);\r\n        }\r\n\r\n    };\r\n\r\n    protected initGraphics() {\r\n\r\n        let vertexArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 2);\r\n        this.colorArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 4);\r\n        let vertexIndexArray = new Int32Array(this.anzahlX * this.anzahlY * 6); // Anzahl der Dreieckseckpunkte\r\n\r\n        let xStep = this.width / this.anzahlX;\r\n        let yStep = this.height / this.anzahlY;\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let left = x * xStep + this.left;\r\n                let top = y * yStep + this.top;\r\n                let index = (x + y * (this.anzahlX)) * 8;\r\n                vertexArray[index] = left;\r\n                vertexArray[index + 1] = top;\r\n                vertexArray[index + 2] = left + xStep;\r\n                vertexArray[index + 3] = top;\r\n                vertexArray[index + 4] = left;\r\n                vertexArray[index + 5] = top + yStep;\r\n                vertexArray[index + 6] = left + xStep;\r\n                vertexArray[index + 7] = top + yStep;\r\n\r\n                let color = (x + y) % 2;\r\n                index = (x + y * (this.anzahlX)) * 16;\r\n                for (let i = 0; i < 16; i++) {\r\n                    this.colorArray[index + i] = color;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let i: number = 0; // index des Dreieckspunktes\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n\r\n                let index = (x + y * this.anzahlX) * 4;\r\n                i = (x + y * this.anzahlX) * 6;\r\n                vertexIndexArray[i] = index;\r\n                vertexIndexArray[i + 1] = index + 1;\r\n                vertexIndexArray[i + 2] = index + 2;\r\n                vertexIndexArray[i + 3] = index + 1;\r\n                vertexIndexArray[i + 4] = index + 3;\r\n                vertexIndexArray[i + 5] = index + 2;\r\n\r\n            }\r\n        }\r\n\r\n\r\n        let vertexBuffer = new PIXI.Buffer(vertexArray, true);\r\n        this.colorBuffer = new PIXI.Buffer(this.colorArray, false);\r\n        let VertexIndexBuffer = new PIXI.Buffer(vertexIndexArray, true, true);\r\n\r\n\r\n\r\n        const geometry = new PIXI.Geometry()\r\n            .addAttribute('aVertexPosition', // the attribute name\r\n                vertexBuffer, // x, y\r\n                2).addIndex(VertexIndexBuffer) // the size of the attribute\r\n\r\n            .addAttribute('aColor', // the attribute name\r\n                this.colorBuffer,\r\n                4); // the size of the attribute\r\n\r\n        const shader = PIXI.Shader.from(`\r\n    \r\n        precision mediump float;\r\n        attribute vec2 aVertexPosition;\r\n        attribute vec4 aColor;\r\n    \r\n        uniform mat3 translationMatrix;\r\n        uniform mat3 projectionMatrix;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n    \r\n            vColor = aColor;\r\n            gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    \r\n        }`,\r\n\r\n            `precision mediump float;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n            gl_FragColor = vColor;\r\n        }\r\n    \r\n    `);\r\n\r\n        this.displayObject = new PIXI.Mesh(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLES);\r\n\r\n        this.displayObject.position.set(this.left, this.top);\r\n\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        let r = this.colorArray[i];\r\n        let g = this.colorArray[i + 1];\r\n        let b = this.colorArray[i + 2];\r\n        let a = this.colorArray[i + 3];\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: Math.round(r * 255),\r\n            green: Math.round(g * 255),\r\n            blue: Math.round(b * 255),\r\n            hex: ColorHelper.intColorToHexRGB(Math.round(r * 255) * 0x10000 + Math.round(g * 255) * 0x100 + Math.round(b * 255))\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        let r1 = this.colorArray[i];\r\n        let g1 = this.colorArray[i + 1];\r\n        let b1 = this.colorArray[i + 2];\r\n\r\n        return Math.abs(r - r1) < 0.5 && Math.abs(g - g1) < 0.5 && Math.abs(b - b1) < 0.5;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let i = (x + y * (this.anzahlX)) * 16;\r\n\r\n                let r = ((c & 0xff0000) >> 16) / 255;\r\n                let g = ((c & 0xff00) >> 8) / 255;\r\n                let b = ((c & 0xff)) / 255;\r\n\r\n                this.colorArray[i] = r;\r\n                this.colorArray[i + 1] = g;\r\n                this.colorArray[i + 2] = b;\r\n                this.colorArray[i + 3] = alpha;\r\n                this.colorArray[i + 4] = r;\r\n                this.colorArray[i + 5] = g;\r\n                this.colorArray[i + 6] = b;\r\n                this.colorArray[i + 7] = alpha;\r\n                this.colorArray[i + 8] = r;\r\n                this.colorArray[i + 9] = g;\r\n                this.colorArray[i + 10] = b;\r\n                this.colorArray[i + 11] = alpha;\r\n                this.colorArray[i + 12] = r;\r\n                this.colorArray[i + 13] = g;\r\n                this.colorArray[i + 14] = b;\r\n                this.colorArray[i + 15] = alpha;\r\n            }\r\n        }\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let i = (x + y * this.anzahlX) * 16;\r\n        return Math.trunc(this.colorArray[i] * 255) * 0x10000 +\r\n            Math.trunc(this.colorArray[i + 1] * 255) * 0x100 +\r\n            Math.trunc(this.colorArray[i + 2] * 255);\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = '---';\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \" oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if(max < min){\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Point, PRECISION, TilingSprite } from \"pixi.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: {x: number, y: number}[];\r\n\r\n                for(let i = 0; i < points.length - 1; i += 2){\r\n                        sh.addPoint(points[i].value, points[i+1].value, i >= points.length -2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if(!closeAndFill){\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(this.hitPolygonInitial.length > 0){\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n    \r\n    setPoint(x: number, y: number, index: number) {\r\n        if(index == 0 || index == 1){\r\n            this.hitPolygonInitial[index] = {x: x, y: y};\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{x: x1,y: y1}, {x: x2,y: y2}];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. Falls scale ungleich 1 ist wird die Bitmap des Sprites VOR dem Rendern um den Faktor scale gestreckt. Dabei wird die nearest neighbour-Interpolation verwendet damit aus Einzelpixeln schöne Quadrate werden. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.setTexture(null, index);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TilingSprite } from \"pixi.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter;\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter(){\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum/length;\r\n        this.centerYInitial = this.ySum/length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean){\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.borderColor,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        if (this.isFilled) {\r\n            this.render();\r\n        } else {\r\n            if (this.borderColor != null) {\r\n                this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n                this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n                this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n            }\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n\r\n    }\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = 20;\r\n        let lengthBackward = 10;\r\n        let lengthBackwardP = 10;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if(shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty){\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if(this.initialHitPolygonDirty){\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon(){\r\n        this.hitPolygonInitial = this.lineElements.map((le) => {return {x: le.x, y: le.y}});\r\n    }\r\n\r\n}\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean = true) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = true;\r\n        if (this.config.withPCode == null) this.config.withPCode = true;\r\n        if (this.config.withConsole == null) this.config.withConsole = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withPCode = false;\r\n            this.config.withConsole = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}