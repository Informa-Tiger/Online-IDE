{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","Visibility","booleanPrimitiveTypeCopy","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","super","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","length","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","attributeValues","class","av","baseClass","set","att","attributes","v","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","push","position","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","indexOf","newNode","ntr","ln","noOp","jn","dest","destination","sw","dl","destinationLabels","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","k","isGenericVariantFrom","i1","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","cd","getCompositeData","interf","cdMap","a","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","itemList","attribute","getAttributes","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","typeLeft","typeRight","Klass","upToVisibility","filter","baseClassUptoVisibility","protected","found","m1","upToVisibilityInBaseClass","a1","hasConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","canCastTo","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedSignatures","missingInterfaceMethods","hierarchy","abstractMethods","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if1","if2","newInterface","nonGenericCastable","type2","type1","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","equals","referenceElement","array","destType","castTo","s1","stringClass","forEach","getResultType","doublePrimitiveType","booleanPrimitiveType","declaration","charPrimitiveType","charAt","localeCompare","toLowerCase","endsWith","startsWith","toLocaleLowerCase","toLocaleUpperCase","substring","trim","lastIndexOf","replace","pattern","regExp","RegExp","strings","split","values","compute","voidPrimitiveType","floatPrimitiveType","negation","automatic","needsStatement","String","fromCharCode","trunc","LexerState","charCodeAt","varType","IntegerType","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","initializeAttributeValues","parseInt","v0","v1","sign","toString","FloatType","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","isNaN","Infinity","DoubleType","CharacterType","match","BooleanType","TokenTypeToDataTypeMap","CompilerStatus","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","pushError","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","lastCharWasNewline","firstChar","radix","exponent","hasExponential","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","nextToken","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","classNode1","mainMethod","classNode","classDefinitionsAST","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","scopeNode","stm","superConstructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","mo","getModules","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","Array","isArray","statement","deleteStepFinishedFlagOnStepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","ec","elementCount","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","conditionType","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","stackposOfVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","pushLocalVariableToStack","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","op","operatorPrecedence","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","right","opData","wrong","correctOp","position2","constantFolding","isConstant","pcLeft","pcRight","result","toTokenType","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","listHelper","IteratorHelper","typeE","tvE","iteratorInterface","hasNext","remove","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","$line","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","ws","workspaceList","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","updateWorkspaces","w","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","render","$childContainer","removeAllChildren","html","child","escapeHtml","unsafe","twoDez","z","formatAsJavadocComment","indent","indentString","stringWrap","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","window","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","elements","addPanel","$captionElement","$listElement","fixed","enabled","$buttonNew","$accordionDiv","close","$element","renderElement","prepend","renameElement","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","$htmlFirstLine","sort","b","aName","sortName","bName","cssClass","$div","addElementActionCallback","$elementAction","addEventListener","contextMenuItems","renameCallback","contextMenuProvider","cmi","preventDefault","pageX","pageY","deleteCallback","pointPos","newText","invokeCallback","ae1","findElement","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","withFiles","currentFileId","currentlyOpenModule","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","restoreFromData","SoundTools","sound","sounds","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","active","isEmbedded","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","$firstLine","span","valueString","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","language","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","showProgramPointerAndVariables","$entry","consoleTop","commandEntry","resultEntry","ce","detachValue","dontDetectLastChange","setModuleActive","getMonacoEditor","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","random","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","stringToDate","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","running","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","posOld","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","implList","getTypeVariableDeclaration","getGenericParameterDefinition","decl","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","selection","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","placeholder","$buttonRow","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","newPosition","intervalBorders","maxStepsPerSecond","intervalDelta","intervalIndex","floor","intervalMin","speed","stepsPerSecond","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","students","$studentLine","$studentClass","$studentName","rufname","familienname","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","fill","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","rr","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","max","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","filename","hashedSignature","scb","cb","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","clearTimeout","inDebounce","chr","hash","position1Cm","position2Cm","sqrt","path","ex","ey","arrow","arrows","step","steps","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","currentClassBoxes","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","objectDiagram","$selectElement","selected","rootIdentifier","rootValue","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","pe","me","mm","mewidth","ee","meheight","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","$loginSpinner","loginHappened","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","hasTextFocus","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentMethod","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueMap","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","restart","spriteAnimations","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","actActors","getModule","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","spriteHelper","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","listenerTypes","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","abstand","p1","p2","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","polygonBerührtPolygon","punkte1","punkte2","abstandPunktZuGerade","shapeType","helper","getCenterX","getCenterY","sh","testdestroyed","angleInDeg","centerX","centerY","isOutsideView","shape","sh1","collidesWith","angleDeg","setVisible","tint","react","getCopy","bringToFront","sendToBack","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","centerXInitial","centerYInitial","setHitPolygonDirty","container","highestIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","apply","bounds","screen","cX","cY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","anzahlX","anzahlY","addToDefaultGroup","bh","colorArray","colorBuffer","update","initGraphics","vertexArray","Float32Array","vertexIndexArray","Int32Array","xStep","yStep","vertexBuffer","Buffer","VertexIndexBuffer","geometry","Geometry","addIndex","shader","Shader","from","Mesh","DRAW_MODES","TRIANGLES","g","red","green","blue","hex","intColorToHexRGB","r1","g1","b1","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","colorName","intColor","intColorToRGB","o1","d1","rx","ry","setRadiusX","setRadiusY","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","groupHelperCopy","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shape1","shapeHelper1","shape2","shapeHelper2","shapeToAdd","closeAndFill","pointsNumber","ph","addPoint","lineTo","addCenterCircle","midx","midy","angleStart","dw","drawRoundedRect","sprite","polygon","polygonStore","getPolygon","pixels","plugins","extract","h","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","fx","fy","isTransparent","scaleModeClass","spriteLibraryEntry","scaleMode","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","texture","textures","Sprite","dynamicTexture1","RenderTexture","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","getWidth","getHeight","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","atan2","deltaTimeMillis","printStream","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","valueMap","alphaDeg","valueMap1","oRet","valueMapRet","messageType","setUserData","getUserData","getterList","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","client","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","forward","turn","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","newLineElement","vx","vy","vxp","vyp","firstPoint","le","setupInitialHitPolygon","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","uriMap","Uri","scheme","main1","methodAST","f1","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","decoration","getAllDecorations","el","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","moduleMap","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,uSClFrD,IAAYC,E,wDAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BACA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,0CAGA,4BACA,0BACA,4DACA,0DACA,4DACA,0DACA,kDACA,sCACA,0CACA,oCACA,sDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhLJ,CAAYA,MAAS,KAmLd,ICvKKC,EAERC,EDqKOC,EAA4C,CACnD,CAACH,EAAUI,YAAa,iBAExB,CAACJ,EAAUK,iBAAkB,yBAC7B,CAACL,EAAUM,uBAAwB,4BACnC,CAACN,EAAUO,iBAAkB,2BAC7B,CAACP,EAAUQ,gBAAiB,+BAC5B,CAACR,EAAUS,cAAe,sBAC1B,CAACT,EAAUU,MAAO,OAClB,CAACV,EAAUW,OAAQ,QAEnB,CAACX,EAAUY,cAAe,QAC1B,CAACZ,EAAUa,aAAc,OACzB,CAACb,EAAUc,cAAe,QAC1B,CAACd,EAAUe,YAAa,MACxB,CAACf,EAAUgB,kBAAmB,YAC9B,CAAChB,EAAUiB,aAAc,OACzB,CAACjB,EAAUkB,aAAc,OACzB,CAAClB,EAAUmB,iBAAkB,WAC7B,CAACnB,EAAUoB,eAAgB,SAC3B,CAACpB,EAAUqB,kBAAmB,YAC9B,CAACrB,EAAUsB,gBAAiB,UAC5B,CAACtB,EAAUuB,kBAAmB,YAC9B,CAACvB,EAAUwB,eAAgB,SAC3B,CAACxB,EAAUyB,gBAAiB,UAC5B,CAACzB,EAAU0B,mBAAoB,aAC/B,CAAC1B,EAAU2B,cAAe,QAC1B,CAAC3B,EAAU4B,WAAY,KACvB,CAAC5B,EAAU6B,YAAa,MACxB,CAAC7B,EAAU8B,eAAgB,SAC3B,CAAC9B,EAAU+B,aAAc,OACzB,CAAC/B,EAAUgC,gBAAiB,UAC5B,CAAChC,EAAUiC,WAAY,KACvB,CAACjC,EAAUkC,aAAc,OACzB,CAAClC,EAAUmC,aAAc,OACzB,CAACnC,EAAUoC,eAAgB,SAC3B,CAACpC,EAAUqC,cAAe,QAC1B,CAACrC,EAAUsC,iBAAkB,WAC7B,CAACtC,EAAUuC,aAAc,OACzB,CAACvC,EAAUwC,cAAe,QAC1B,CAACxC,EAAUyC,mBAAoB,aAC/B,CAACzC,EAAU0C,cAAe,QAC1B,CAAC1C,EAAU2C,gBAAiB,UAQ5B,CAAC3C,EAAU4C,aAAc,IACzB,CAAC5C,EAAU6C,cAAe,IAC1B,CAAC7C,EAAU8C,mBAAoB,IAC/B,CAAC9C,EAAU+C,oBAAqB,IAChC,CAAC/C,EAAUgD,kBAAmB,IAC9B,CAAChD,EAAUiD,mBAAoB,IAC/B,CAACjD,EAAUkD,wBAAyB,KAGpC,CAAClD,EAAUmD,KAAM,IACjB,CAACnD,EAAUoD,OAAQ,IACnB,CAACpD,EAAUqD,QAAS,IACpB,CAACrD,EAAUsD,MAAO,IAClB,CAACtD,EAAUuD,gBAAiB,IAC5B,CAACvD,EAAUwD,UAAW,IACtB,CAACxD,EAAUyD,aAAc,IACzB,CAACzD,EAAU0D,aAAc,IACzB,CAAC1D,EAAU2D,aAAc,KACzB,CAAC3D,EAAU4D,YAAa,KACxB,CAAC5D,EAAU6D,OAAQ,IACnB,CAAC7D,EAAU8D,SAAU,IACrB,CAAC9D,EAAU+D,cAAe,KAC1B,CAAC/D,EAAUgE,gBAAiB,KAC5B,CAAChE,EAAUiE,OAAQ,KACnB,CAACjE,EAAUkE,UAAW,KACtB,CAAClE,EAAUmE,YAAa,IACxB,CAACnE,EAAUoE,gBAAiB,KAC5B,CAACpE,EAAUqE,iBAAkB,KAC7B,CAACrE,EAAUsE,0BAA2B,KACtC,CAACtE,EAAUuE,oBAAqB,KAChC,CAACvE,EAAUwE,kBAAmB,KAC9B,CAACxE,EAAUyE,WAAY,IACvB,CAACzE,EAAU0E,KAAM,KACjB,CAAC1E,EAAU2E,IAAK,KAChB,CAAC3E,EAAU4E,KAAM,IACjB,CAAC5E,EAAU6E,iBAAkB,IAG7B,CAAC7E,EAAU8E,WAAY,IAEvB,CAAC9E,EAAU+E,OAAQ,IACnB,CAAC/E,EAAUgF,UAAW,MAGtB,CAAChF,EAAUiF,OAAQ,IAGnB,CAACjF,EAAUkF,WAAY,KAGvB,CAAClF,EAAUmF,IAAK,IAGhB,CAACnF,EAAUoF,OAAQ,kBACnB,CAACpF,EAAUqF,KAAM,uBAGjB,CAACrF,EAAUsF,SAAU,oBAGrB,CAACtF,EAAUuF,gBAAiB,kCAG5B,CAACvF,EAAUwF,SAAU,gBAErB,CAACxF,EAAUyF,iBAAkB,2BAItBC,EAAiD,CACxD,IAAK1F,EAAU4C,YACf,IAAK5C,EAAU6C,aACf,IAAK7C,EAAU8C,kBACf,IAAK9C,EAAU+C,mBACf,IAAK/C,EAAUgD,iBACf,IAAKhD,EAAUiD,kBAGf,IAAKjD,EAAUmD,IACf,IAAKnD,EAAUiF,MACf,IAAKjF,EAAUoD,MACf,IAAKpD,EAAUqD,OACf,IAAKrD,EAAUsD,KACf,IAAKtD,EAAUuD,eACf,IAAKvD,EAAUwD,SACf,KAAMxD,EAAUkF,UAChB,IAAKlF,EAAUmF,GACfQ,IAAM3F,EAAUyD,YAChB,IAAKzD,EAAU0D,YACf,IAAK1D,EAAU6D,MACf,IAAK7D,EAAU8D,QACf,IAAK9D,EAAUmE,WACf,IAAKnE,EAAU0E,IACf,IAAK1E,EAAU2E,GACf,IAAK3E,EAAU4E,IACf,IAAK5E,EAAU6E,gBAEf,IAAK7E,EAAU8E,UACf,IAAK9E,EAAU+E,MAEf,MAAO/E,EAAUgF,SAGjB,IAAKhF,EAAUoF,MACf,KAAMpF,EAAUqF,IAGhB,KAAMrF,EAAUsF,QAChB,KAAMtF,EAAU4F,UAGTC,EAA6C,CACpD,MAAS7F,EAAUY,aACnB,KAAQZ,EAAUa,YAClB,MAASb,EAAUc,aACnB,IAAOd,EAAUe,WACjB,UAAaf,EAAUgB,iBACvB,KAAQhB,EAAUiB,YAClB,KAAQjB,EAAUkB,YAClB,SAAYlB,EAAUmB,gBACtB,OAAUnB,EAAUoB,cACpB,UAAapB,EAAUqB,iBACvB,QAAWrB,EAAUsB,eACrB,UAAatB,EAAUuB,iBACvB,OAAUvB,EAAUwB,cACpB,QAAWxB,EAAUyB,eACrB,WAAczB,EAAU0B,kBACxB,MAAS1B,EAAU2B,aACnB,GAAM3B,EAAU4B,UAChB,IAAO5B,EAAU6B,WACjB,OAAU7B,EAAU8B,cACpB,KAAQ9B,EAAU+B,YAClB,QAAW/B,EAAUgC,eACrB,GAAMhC,EAAUiC,UAChB,KAAQjC,EAAUkC,YAClB,KAAQlC,EAAUmC,YAClB,OAAUnC,EAAUoC,cACpB,MAASpC,EAAUqC,aACnB,SAAYrC,EAAUsC,gBACtB,KAAQtC,EAAUuC,YAClB,MAASvC,EAAUwC,aACnB,WAAcxC,EAAUyC,kBACxB,KAAQzC,EAAUU,KAClB,MAASV,EAAUW,MACnB,MAASX,EAAU0C,aACnB,QAAW1C,EAAU2C,gBAQdmD,EAAiD,CACxD,EAAK,KACL,EAAK,KACL,EAAK,KACLC,IAAM,IACN,IAAK,IACL,KAAM,MEhXJ,MAAgBC,EAUlB,cARO,KAAAC,eAAgB,EAEhB,KAAAC,eAAiC,IAAIC,IAIrC,KAAAC,cAAwB,GAexB,cACH,OAAO,KAKX,sBACIC,KAAKH,eAAiB,IAAIC,KAK5B,MAAgBG,UAAsBN,EAA5C,c,oBAEW,KAAAO,aAAoB,KAEpB,KAAAC,YAAsB,GAMtB,OAAOC,GACV,OAAOA,GAAQJ,KAGZ,cAAcK,EAAsBC,GAEvC,IAAIC,EAAYP,KAAKQ,eAAeH,GAEpC,OAAiB,MAAbE,EACO,KAGc,MAArBD,EACOC,EAAUD,EAAkBvG,YAGhCwG,EAAS,KAIb,UAAUH,GACb,OAA6C,MAAtCJ,KAAKS,aAAaL,EAAKrG,YAG3B,mBAAmBqG,GACtB,OAAOJ,KAAKS,aAAaL,EAAKrG,aAKhC,MAAO2G,EAgBT,YAAYxI,EAAckI,EAAYO,EAClCC,EAAmBC,EAAwBC,EAAkBf,GAfjE,KAAAH,eAAyB,EAgBrBI,KAAKjG,WAAa7B,EAClB8H,KAAKI,KAAOA,EACZJ,KAAKW,YAAcA,EACnBX,KAAKY,SAAWA,EAChBZ,KAAKa,WAAaA,EAClBb,KAAKc,QAAUA,EACfd,KAAKH,eAAiB,IAAIC,IAC1BE,KAAKD,cAAgBA,GAIvB,MAAOgB,UAAepB,EAsDxB,YAAYzH,EAAc8I,EAA8BC,EACpDC,EACAC,EAAqBP,EAAmBb,EAAwBqB,GAAyB,GACzFC,QAvDJ,KAAAzB,eAAyB,EAMzB,KAAAwB,eAAyB,EACzB,KAAAE,WAAqB,EASrB,KAAAC,8BAAwC,EAIxC,KAAAC,eAAiD,KAoC7CxB,KAAKjG,WAAa7B,EAClB8H,KAAKgB,cAAgBA,EACrBhB,KAAKiB,WAAaA,EAClBjB,KAAKmB,WAAaA,EAClBnB,KAAKY,SAAWA,EAChBZ,KAAKa,WAAa,EAClBb,KAAKD,cAAgBA,EACrBC,KAAKoB,cAAgBA,EAEF,MAAfF,IAC0B,mBAAfA,EACPlB,KAAKyB,OAASP,GAEdlB,KAAK0B,QAAUR,EACfA,EAAYS,OAAS3B,OAI7BA,KAAK4B,UAAY1J,EAAO8I,EAAca,GAEtC,IAAK,IAAIpI,KAAKuH,EAAcc,WACxB,GAA2B,GAAvBrI,EAAC,eAA4B,CAC7BuG,KAAK+B,iBAAkB,EAAM,MAIrC/B,KAAK+B,gBAAkB/B,KAAK+B,iBAAuC,MAAnB/B,KAAKiB,YAA2D,GAArCjB,KAAKiB,WAAL,eA1D/E,cACI,OAA2C,GAAxCjB,KAAKgB,cAAcc,WAAWE,QAC1BhC,KAAKgB,cAAcc,WAAW9B,KAAKgB,cAAcc,WAAWE,OAAS,GAAGC,WAInF,iBAAiBC,GACb,OAAOlC,KAAKgB,cAAcc,WAAWI,GAAO9B,KAGhD,aAAa8B,GACT,OAAOlC,KAAKgB,cAAcc,WAAWI,GAGzC,gBACI,OAAOlC,KAAKiB,WAGhB,oBACI,OAAOjB,KAAKgB,cAAcc,WAAWE,OAGzC,mBACI,OAAOhC,KAAKgB,cAsChB,kCACI,OAAsB,MAAnBhB,KAAKiB,WACGjB,KAAKiB,WAAWlH,WAAa,IAAMiG,KAAK4B,UAExC,QAAU5B,KAAK4B,UAI9B,qBAEI,IAAIO,EAAQ,GAEW,MAAnBnC,KAAKiB,YAAoD,QAA9BjB,KAAKiB,WAAWlH,aAC3CoI,GAASC,EAAkBpC,KAAKiB,YAAc,KAGlDkB,GAASnC,KAAKjG,WAAa,IAE3B,IAAI+H,EAAa9B,KAAKgB,cAAcc,WACpC,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAWE,OAAQrK,IAAK,CAExC,IAAI8B,EAAIqI,EAAWnK,GACnB,GAAG8B,EAAEwI,WAAW,CAEZE,GAASC,EADuB3I,EAAE2G,KACGiC,aAAe,OAAS5I,EAAEM,gBAE/DoI,GAASC,EAAkB3I,EAAE2G,MAAQ,IAAM3G,EAAEM,WAG7CpC,EAAImK,EAAWE,OAAS,IACxBG,GAAS,MAOjB,OAFAA,GAAS,IAEFA,EAIX,qBAAqBG,GAEjB,GAAIA,EAAyB,OAAOtC,KAAKjG,WAAa,MAEtD,IAAIwI,EAAU,GAEdA,GAAWvC,KAAKjG,WAAa,IAE7B,IAAI+H,EAAa9B,KAAKgB,cAAcc,WACpC,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAWE,OAAQrK,IAAK,CAExC,IAAI8B,EAAIqI,EAAWnK,GACnB4K,GAAW,MAAS5K,EAAI,GAAKmK,EAAWE,OAAU,IAAMvI,EAAEM,WAAa,IAEnEpC,EAAImK,EAAWE,OAAS,IACxBO,GAAW,MAOnB,OAFAA,GAAW,IAEJA,EAGJ,YAAY3J,GACf,MAAO,GAGJ,OAAOwH,GACV,OAAOA,GAAQJ,KAGZ,cAAcK,EAAsBC,GACvC,OAAO,KAGJ,QAAQD,EAAsBmC,EAAqBC,GACtD,OAAO,KAGJ,UAAUrC,GACb,OAAO,EAGJ,OAAOxH,EAAcwH,GAAqB,OAAOxH,GAKtD,MAAO8J,EAMT,YAAYZ,GACR9B,KAAK8B,WAAaA,EAClB9B,KAAK2C,YAGT,YACI3C,KAAK6B,GAAK,IACV,IAAIlK,EAAI,EACR,KAAOA,EAAIqI,KAAK8B,WAAWE,QACvBhC,KAAK6B,IAAM7B,KAAK8B,WAAWnK,GAAGyI,KAAKrG,WAC/BpC,EAAIqI,KAAK8B,WAAWE,OAAS,IAC7BhC,KAAK6B,IAAM,MAEflK,IAEJqI,KAAK6B,IAAM,KA4Bb,SAAUO,EAAkBhC,G,QAC9B,GAAGA,EAAI,eACAA,EAAI,cAAkB4B,OAAS,EAAE,CAChC,IAAItI,GAAa0G,EAAI,eAAsBA,EAAKrG,WAAa,aAA0C,QAA/B,EAAGqG,EAAI,4BAAwB,eAAErG,YAAcqG,EAAKrG,YAC1H,IAEF,OADGL,GAAK0G,EAAI,cAAkBwC,IAAIC,GAAMT,EAAkBS,EAAGzC,OAAO0C,KAAK,MAClEpJ,EAAI,IAInB,OAAO0G,EAAI,eAAsBA,EAAKrG,WAAa,aAA0C,QAA/B,EAAGqG,EAAI,4BAAwB,eAAErG,YAAcqG,EAAKrG,WCpWhH,MAAO,EAUT,YAAYgJ,GANZ,KAAAC,cAAkD,GAIlD,KAAAC,gBAAmD,IAAInD,IAInDE,KAAKkD,MAAQH,EAqBjB,SAAShJ,GAEL,IAAIgJ,EAAQ/C,KAAKkD,MAEjB,KAAe,MAATH,GAAc,CAChB,IAAII,EAAKnD,KAAKiD,gBAAgBzK,IAAIuK,EAAMhJ,YAAYvB,IAAIuB,GACxD,GAAS,MAANoJ,EAKC,OAHqB,MAAlBA,EAAGxC,aACFwC,EAAGxC,YAAYwC,GAEZA,EAQXJ,EAAQA,EAAMK,UAGlB,OAAO,KAGX,4BAEIpD,KAAKiD,gBAAkB,IAAInD,IAE3B,IAAIiD,EAAQ/C,KAAKkD,MACjB,KAAe,MAATH,GAAc,CAEhB,IAAIH,EAAyB,IAAI9C,IACjCE,KAAKiD,gBAAgBI,IAAIN,EAAMhJ,WAAY6I,GAE3C,IAAI,IAAIU,KAAOP,EAAMQ,WAAW,CAG5B,IAAI3K,EAAY,KACb0K,EAAIlD,gBAAgBH,IACnBrH,EAAQ0K,EAAIlD,KAAKF,cAGrB,IAAIsD,EAAW,CACXpD,KAAMkD,EAAIlD,KACVxH,MAAOA,GAGW,MAAnB0K,EAAI3C,cACH6C,EAAE7C,YAAc2C,EAAI3C,YACpB6C,EAAEnK,OAAS2G,MAGf4C,EAAIS,IAAIC,EAAIvJ,WAAYyJ,GAI5BT,EAAQA,EAAMK,YC/EpB,MAAO,EAaT,YAAY1B,GAXZ,KAAA+B,cAAwB,EAExB,KAAAC,aAA8B,GAE9B,KAAAC,SAAqC,IAAI7D,IACzC,KAAA8D,mBAAsC,GAEtC,KAAAC,iBAA4C,GAKxC7D,KAAK0B,QAAUA,EAGnB,wBAAwBoC,GACpB9D,KAAK6D,iBAAiBE,KAAKD,GAG/B,eAAe1D,EAEV4D,EAAwBC,EAA8BC,GAEvD,IAAIC,EAAgBnE,KAAK0B,QAAQ0C,WAElB,MAAZJ,GACIG,EAAcnC,OAAS,IACtBgC,EAAWG,EAAcA,EAAcnC,OAAS,GAAGgC,UAI3D,IAAIK,EAAiB,CACjBjE,KAAMA,EACN4D,SAAUA,EACVM,cAAc,GAKlB,OAFAL,EAAcM,eAAeF,GAEtBrE,KAAKwE,iBAAiBH,EAAMH,GAIvC,oBAAoBO,EAAgBP,GAEhC,IAAIF,EAAWhE,KAAK0B,QAAQ0C,WAAWpC,OAAS,EAAIyC,EAEnC,MAAdP,IACCA,EAAalE,KAAKyD,iBAGtB,IAAIiB,EAAc,CACdV,SAAUA,EACVE,WAAYA,GAOhB,OAJAlE,KAAK0D,aAAaK,KAAKW,GAEvB1E,KAAK2D,SAASN,IAAIa,EAAYQ,GAEvBR,EAIX,WAAWG,GACP,IAAI,IAAI1M,EAAI,EAAGA,EAAIqI,KAAK0D,aAAa1B,OAAQrK,IAAI,CAC7C,IAAIyB,EAAI4G,KAAK0D,aAAa/L,GAC1B,GAAGyB,EAAEiL,MAAQA,EAAK,CAEd,IAAInC,EAAQlC,KAAK0B,QAAQ0C,WAAWO,QAAQN,GAE5C,GAAGnC,EAAQlC,KAAK0B,QAAQ0C,WAAWpC,OAAS,EAAE,CAC1C,IAAI4C,EAAU5E,KAAK0B,QAAQ0C,WAAWlC,EAAQ,GAC9C9I,EAAEiL,KAAOO,QAIbjN,KAKJ,wBAAwB0M,EAAiBH,GAE5B,MAAdA,IACCA,EAAalE,KAAKyD,iBAGtB,IAAItB,EAAqB,CACrBkC,KAAMA,EACNH,WAAYA,GAMhB,OAHAlE,KAAK0D,aAAaK,KAAK5B,GACvBnC,KAAK2D,SAASN,IAAIa,EAAY/B,GAEvB+B,EAGJ,iBAAiBG,EAAgBH,GAEnB,MAAdA,IACCA,EAAalE,KAAKyD,iBAGtB,IAAIoB,EAAqB,CACrBX,WAAYA,EACZG,KAAMA,GAKV,OAFArE,KAAK4D,mBAAmBG,KAAKc,GAEtBX,EAIX,eACI,IAAI,IAAIY,KAAM9E,KAAK0D,aAEf,GAAkB,MAAfoB,EAAGd,SACFc,EAAGd,SAAWhE,KAAK0B,QAAQ0C,WAAWO,QAAQG,EAAGT,UAC9C,CACH,KAAMS,EAAGd,SAAWhE,KAAK0B,QAAQ0C,WAAWpC,OAAS,GACjDhC,KAAK0B,QAAQ0C,WAAWL,KAAK,CACzB3D,KAAMzG,EAAUoL,KAChBf,SAAU,OAGlBc,EAAGT,KAAOrE,KAAK0B,QAAQ0C,WAAWpE,KAAK0B,QAAQ0C,WAAWpC,OAAS,GAK3E,IAAI,IAAIgD,KAAMhF,KAAK4D,mBAAmB,CAClC,IAAIqB,EAAOjF,KAAK2D,SAASnL,IAAIwM,EAAGd,YACrB,MAARe,IACCD,EAAGX,KAAKa,YAAcD,EAAKjB,UAInC,IAAI,IAAImB,KAAMnF,KAAK6D,iBAAiB,CAChC,IAAI,IAAIuB,KAAMD,EAAGE,kBACbF,EAAGG,eAAeF,EAAGG,UAAYvF,KAAK2D,SAASnL,IAAI4M,EAAGjD,OAAO6B,SAEjEmB,EAAGE,kBAAoB,KACK,MAAzBF,EAAGK,qBACFL,EAAGK,mBAAqBxF,KAAK2D,SAASnL,IAAI2M,EAAGK,oBAAoBxB,aHxJjF,SAAYpK,GAAa,uBAAQ,6BAAW,yBAA5C,CAAYA,MAAU,KAqBhB,MAAO,UAAc+F,EAoCvB,YAAY5F,EAAoBrC,EAAgBqI,GAC5CsB,QAlCJ,KAAAoE,cAAgC,GAEhC,KAAAC,gBAA0B,EAC1B,KAAAC,oBAA8B,EAa9B,KAAAC,WAA0B,GAC1B,KAAAC,oBAAgC,GAEhC,KAAA1E,YAAsB,EAItB,KAAA2E,yBAA2D,KAEpD,KAAAC,QAAoB,GACnB,KAAAC,UAAiC,IAAIlG,IAEtC,KAAAyD,WAA0B,GAC1B,KAAA0C,aAAuC,IAAInG,IAO9CE,KAAKD,cAAgBA,EAErBC,KAAKjG,WAAaA,EAClBiG,KAAKtI,OAASA,EACdsI,KAAKa,WAAajH,EAAWsM,OAE7BlG,KAAKmG,YAAc,IAAI,EAAYnG,MAEnCA,KAAKoG,+BAAiC,CAClCzE,OAAQ,KACRjK,OAAQsI,KAAKtI,OACb0M,WAAY,GACZiC,aAAc,MAGlBrG,KAAKoG,+BAA+BC,aAAe,IAAI,EAAarG,KAAKoG,gCAI7E,qBACI,IAAIE,EAAWtG,KACf,KAAiC,MAA1BsG,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,EAGX,0BACI,IAAIA,EAAWtG,KACf,KAAiC,MAA1BsG,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,EAAEvM,WAGb,oBAAoBpC,GAChB,IAAIoL,EAAe/C,KACnB,KAAgB,MAAT+C,GAAe,CAClB,IAAK,IAAIyD,KAAMzD,EAAM6C,WACjB,GAAiE,MAA9DY,EAAGC,2BAA2B9O,EAAE+O,2BAAoC,OAAO,EAElF3D,EAAQA,EAAMK,UAGlB,OAAO,EAIX,wBAAwBrJ,GACpB,IAAIgJ,EAAe/C,KACnB,KAAgB,MAAT+C,GAAe,CAClB,IAAK,IAAIyD,KAAMzD,EAAM6C,WAAY,CAC7B,IAAIe,EAAgBH,EAAGC,2BAA2B1M,GAClD,GAAS,MAAN4M,EAAY,OAAOA,EAE1B5D,EAAQA,EAAMK,UAGlB,OAAO,KAKX,0BAA0BwD,GACA,MAAlB5G,KAAKoD,WAA8C,MAAzBpD,KAAKoD,UAAU1L,QAAkBsI,KAAKoD,UAAU1L,OAAOmP,gBACjFD,EAAkBjC,QAAQ3E,KAAKoD,WAAa,GAC5CwD,EAAkB7C,KAAK/D,KAAKoD,WAEhC,IAAK,IAAI0D,KAAM9G,KAAK+G,mBACA,MAAZD,EAAG/D,OAAoC,MAAnB+D,EAAG/D,MAAMrL,QAAkBoP,EAAG/D,MAAMrL,OAAOmP,gBAC/DD,EAAkBjC,QAAQmC,EAAG/D,OAAS,GACtC6D,EAAkB7C,KAAK+C,EAAG/D,OAGlC,IAAK,IAAIiE,KAAUhH,KAAK4F,WACN,MAAVoB,GAAkBA,EAAOtP,OAAOmP,gBAChCD,EAAkBjC,QAAQqC,GAAU,GACpCJ,EAAkB7C,KAAKiD,GAKnC,mBAEI,IAAIF,EAAuB,GACvBG,EAAgD,IAAInH,IAExD,IAAK,IAAIoH,KAAKlH,KAAKuD,WACf,GAAI2D,EAAE9G,gBAAgB,GAAS8G,EAAE9G,gBAAgB,EAAW,CACxD,IAAI+G,EAAMF,EAAMzO,IAAI0O,EAAE9G,MACX,MAAP+G,GACAA,EAAM,CACFpE,MAAOmE,EAAE9G,KACTgH,WAAW,EACXrN,WAAYmN,EAAEnN,YAElBkN,EAAM5D,IAAI6D,EAAE9G,KAAM+G,GAClBL,EAAG/C,KAAKoD,IAERA,EAAIpN,YAAc,KAAOmN,EAAEnN,eAE5B,CACH,IAAIqG,EAAa8G,EAAE9G,KACnB,KAAOA,aAAgB,GACnBA,EAAOA,EAAKiC,YAEhB,GAAIjC,aAAgB,GAASA,aAAgB,EAAW,CACpD,IAAI+G,EAAMF,EAAMzO,IAAI4H,GACT,MAAP+G,GACAA,EAAM,CACFpE,MAAO3C,EACPgH,WAAW,EACXrN,WAAYmN,EAAEnN,YAElBkN,EAAM5D,IAAIjD,EAAM+G,GAChBL,EAAG/C,KAAKoD,KAERA,EAAIpN,YAAc,KAAOmN,EAAEnN,WAC3BoN,EAAIC,WAAY,IAMhC,OAAON,EAIX,sBACIzF,MAAMgG,sBAEN,IAAK,IAAItP,KAAKiI,KAAK+F,QACfhO,EAAEsP,sBAGN,IAAK,IAAIH,KAAKlH,KAAKuD,WACf2D,EAAErH,eAAiB,IAAIC,IAGH,MAApBE,KAAKmG,aACLnG,KAAKmG,YAAYkB,sBAMzB,8BACI,IAAIrP,EAAWgI,KACXsH,EAA4C,KAEhD,KAAY,MAALtP,GAC+B,MAA9BA,EAAE8N,2BACuBwB,EAAR,MAAbA,EAAiCtP,EAAE8N,yBAEvBwB,EAAUC,OAAOvP,EAAE8N,2BAGvC9N,EAAIA,EAAEoL,UAEV,OAAOkE,EAGX,mBAAmBE,EACflF,EAAkCmF,EAClCC,GAEA,IAAIC,EAA8C,GAElD,IAAK,IAAIC,KAAa5H,KAAK6H,cAAcL,GACrCG,EAAS5D,KAAK,CACV5B,MAAOyF,EAAU7N,WAAa,GAC9B+N,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAYP,EAAU7N,WACtBqO,MAAOV,EACP3H,cAA0C,MAA3B6H,EAAU7H,mBAAwBsI,EAAY,CACzDzP,MAAOgP,EAAU7H,iBAK7B,IAAK,IAAI4B,KAAU3B,KAAKsI,WAAWd,GAC3B7F,EAAOP,eACXuG,EAAS5D,KAAK,CACV5B,MAAOR,EAAO4G,qBACdC,WAAY7G,EAAO5H,WACnB0O,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfb,KAAMC,OAAOC,UAAUC,mBAAmBlH,OAC1CoH,WAAYxG,EAAOiH,qBAAqBtG,GACxC8F,MAAOV,EACPmB,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DhJ,cAAuC,MAAxB4B,EAAO5B,mBAAwBsI,EAAY,CACtDzP,MAAO+I,EAAO5B,iBAS1B,OAJA4H,EAAWA,EAASJ,OAAOvH,KAAKmG,YAAY6C,mBAAmBxB,EAC3DlF,EAAyBmF,EACzBC,IAEGC,EAGX,iCAAiCsB,GAEzBjJ,KAAKmG,YAAYC,+BAA+BhC,WAAWpC,OAAS,GACpEiH,EAAalF,KAAK,CACdrC,QAAS1B,KAAKmG,YAAYC,+BAC1B8C,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAC5CL,OAAQ,mDAAqD3B,KAAKmG,YAAYpM,WAC9EuP,oBAAqB,KACrBC,oBAAqB,yCAMjC,qBAAqB3H,GAEjB,IAAI5J,EAAWgI,KACf,KAAY,MAALhI,GAAW,CACd,IAAI2J,EAAS3J,EAAEgO,UAAUxN,IAAIoJ,GAC7B,GAAc,MAAVD,EAAgB,OAAOA,EAC3B3J,EAAIA,EAAEoL,UAGV,OAAO,KAIJ,OAAOhD,GACV,OAAOA,GAAQJ,KAGnB,aAAaoD,GACTpD,KAAKoD,UAAYA,EACjBpD,KAAKmG,YAAY/C,UAAYA,EAAU+C,YAGpC,UAAUxE,GACTA,EAAOf,SACPZ,KAAKmG,YAAYqD,UAAU7H,IAE3B3B,KAAK+F,QAAQhC,KAAKpC,GAClB3B,KAAKgG,UAAU3C,IAAI1B,EAAOC,UAAWD,IAItC,aAAaiG,GACZA,EAAUhH,SACVZ,KAAKmG,YAAYsD,aAAa7B,IAE9B5H,KAAKuD,WAAWQ,KAAK6D,GACrB5H,KAAKiG,aAAa5C,IAAIuE,EAAU7N,WAAY6N,IAI7C,cAAcvH,EAAsBC,GAEvC,OAAID,GAAa1G,EAAUiE,OAASyC,GAAa1G,EAAUkE,YACnDyC,aAA6B,GAASA,GAAqBoJ,GAK/DrJ,GAAa1G,EAAUyC,oBACnBkE,aAA6B,GAAeA,aAA6B,GAClEzG,EAIR,KAVQA,EAcZ,QAAQwG,EAAsBmC,EAAqBC,GACtD,GAAIpC,GAAa1G,EAAUiE,MACvB,OAAO4E,EAAa5J,OAAS6J,EAAc7J,MAG/C,GAAIyH,GAAa1G,EAAUkE,SACvB,OAAO2E,EAAa5J,OAAS6J,EAAc7J,MAG/C,GAAIyH,GAAa1G,EAAUyC,kBAAmB,CAC1C,IAAIuN,EAAyCnH,EAAa5J,MAAOsK,MAC7D0G,EAAYnH,EAAcrC,KAC9B,GAAIwJ,aAAqB,EAAa,CAElC,KAAmB,MAAZD,GAAkB,CACrB,GAAIA,IAAaC,EAAUC,MAAO,OAAO,EACzCF,EAAWA,EAASvG,UAExB,OAAO,EAEX,GAAIwG,aAAqB,EACrB,KAAmB,MAAZD,GAAkB,CACrB,IAAK,IAAIhS,KAAKgS,EAAS/D,WACnB,GAAIjO,IAAMiS,EAAW,OAAO,EAEhCD,EAAWA,EAASvG,UAG5B,OAAO,EAGX,OAAO,KAMJ,WAAW0G,EAA4B/P,GAE1C,IAAIgM,EAAoB/F,KAAK+F,QAAQgE,OAAQpI,GAClCA,EAAOd,YAAciJ,IAAiC,MAAd/P,GAAsB4H,EAAO5H,YAAcA,IAG9F,GAAsB,MAAlBiG,KAAKoD,YAAoC,MAAdrJ,GAAsBA,GAAciG,KAAKjG,YAAgC,GAAlBgM,EAAQ/D,QAAc,CACxG,IAAIgI,EAA0BF,GAAkBlQ,EAAWsM,OAAS4D,EAAiBlQ,EAAWqQ,UAEhG,IAAK,IAAIlS,KAAKiI,KAAKoD,UAAUkF,WAAW0B,EAAyBjQ,GAAciG,KAAKjG,WAAaiG,KAAKoD,UAAUrJ,WAAaA,GAAa,CAEtI,IAAImQ,GAAQ,EACZ,IAAK,IAAIC,KAAMpE,EACX,GAAIoE,EAAGvI,WAAa7J,EAAE6J,UAAW,CAC7BsI,GAAQ,EACR,MAIHA,GACDnE,EAAQhC,KAAKhM,IAMzB,OAAOgO,EAMJ,cAAc+D,GAEjB,IAAIvG,EAA0B,GAC9B,IAAK,IAAI2D,KAAKlH,KAAKuD,WACX2D,EAAErG,YAAciJ,GAChBvG,EAAWQ,KAAKmD,GAIxB,GAAsB,MAAlBlH,KAAKoD,UAAmB,CAExB,IAAIgH,EAA4BN,GAAkBlQ,EAAWsM,OAAS4D,EAAiBlQ,EAAWqQ,UAElG,IAAK,IAAI/C,KAAKlH,KAAKoD,UAAUyE,cAAcuC,GAA4B,CAEnE,IAAIF,GAAQ,EAEZ,KAAIhD,EAAErG,WAAauJ,GAAnB,CAEA,IAAK,IAAIC,KAAM9G,EACX,GAAI8G,EAAGtQ,YAAcmN,EAAEnN,WAAY,CAC/BmQ,GAAQ,EACR,MAIHA,GACD3G,EAAWQ,KAAKmD,KAM5B,OAAO3D,EAGJ,iBACH,IAAK,IAAIxL,KAAKiI,KAAK+F,QACf,GAAIhO,EAAEqJ,cAAe,OAAO,EAGhC,OAAsB,MAAlBpB,KAAKoD,WAA0BpD,KAAKoD,UAAUkH,iBAK/C,eAAeC,EAAwBT,EAA4BU,EAA0BxK,KAAKjG,YAErG,IAAI0Q,EAAyBzK,KAAK+F,QAAQgE,OAAQhS,GACvCA,EAAEqJ,eAGb,OAA2B,GAAvBqJ,EAAazI,QAAiC,MAAlBhC,KAAKoD,UAC1BpD,KAAKoD,UAAUsH,eAAeH,EAAgBT,EAAgBU,GAE9DG,EAAoBF,EAAczK,KAAKjG,WAAYwQ,EAAgBC,GAAiB,GAK5F,6BAA6BzQ,EAAoBwQ,EACpDK,EAA4Bd,GAE5B,IAEI/D,EAAU4E,EAFG3K,KAAKsI,WAAWwB,GAEa/P,EAAYwQ,EAAgBvK,KAAKjG,WAAY6Q,GAE3F,GAAiC,GAA7B7E,EAAQ8E,WAAW7I,SAAgB4I,EAAmB,CACtD,IAAIE,EAAgB9K,KAAKmG,YAAY4E,6BAA6BhR,EAAYwQ,GAAgB,EAAOT,GACrG,OAA2B,MAAvBgB,EAAcE,MACPF,EAGJ/E,EAGX,OAAOA,EAIJ,UAAUhM,EAAoBiH,GAEjC,IAAIW,EAAS3B,KAAKgG,UAAUxN,IAAIuB,EAAaiH,EAAca,IAE3D,OAAc,MAAVF,GAAoC,MAAlB3B,KAAKoD,UAChBpD,KAAKoD,UAAU6H,UAAUlR,EAAYiH,GAGzCW,EAGJ,aAAa5H,EAAoB+P,GAEpC,IAAIkB,EAAQ,KACRE,GAA6B,EAE7BtD,EAAY5H,KAAKiG,aAAazN,IAAIuB,GAClCoR,EAAiC,MAAbvD,EAWxB,GATiB,MAAbA,EACAoD,EAAQ,gBAAkBjR,EAAa,+BAEnC6N,EAAU/G,WAAaiJ,IACvBkB,EAAQ,gBAAkBjR,EAAa,yBAA2BH,EAAWgO,EAAU/G,YAAc,sCACrG+G,EAAY,KACZsD,GAAoB,GAGX,MAAbtD,GAAuC,MAAlB5H,KAAKoD,UAAmB,CAC7C,IAAIgH,EAA4BN,GAAkBlQ,EAAWsM,OAAS4D,EAAiBlQ,EAAWqQ,UAE9FmB,EAAqBpL,KAAKoD,UAAUiI,aAAatR,EAAYqQ,GACjE,GAAoC,MAAhCgB,EAAmBxD,WAAqBuD,EACxC,OAAOC,EAKf,MAAO,CAAExD,UAAWA,EAAWoD,MAAOA,EAAOE,kBAAmBA,GAG7D,UAAU9K,GAEb,GAAIA,GAAQkL,EACR,OAAO,EAGX,GAAIlL,aAAgB,EAAO,CACvB,IAAIgD,EAAmBpD,KAEvB,KAAoB,MAAboD,GAAmB,CACtB,GAAIhD,EAAKsG,2BAA6BtD,EAAUsD,0BAA2B,CACvE,GAAItG,EAAKqF,cAAczD,OAAS,EAAG,CAC/B,IAAI5I,EAAYmS,KAAKC,IAAIpL,EAAKqF,cAAczD,OAAQoB,EAAUqC,cAAczD,QAC5E,IAAK,IAAIrK,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB,IAAKyL,EAAUqC,cAAc9N,GAAGyI,KAAKqL,UAAUrL,EAAKqF,cAAc9N,GAAGyI,MAAO,OAAO,EAEvF,OAAO,EAEX,OAAO,EAEXgD,EAAYA,EAAUA,WAI9B,GAAIhD,aAAgB,EAAW,CAE3B,IAAI2C,EAAe/C,KACnB,KAAe,MAAT+C,GAAc,CAChB,IAAK,IAAIpL,KAAKoL,EAAM6C,WAChB,GAAIxF,EAAKsG,2BAA6B/O,EAAE+O,0BACpC,OAAO,EAGf3D,EAAQA,EAAMK,WAItB,OAAO,EAIJ,OAAOxK,EAAcwH,GAExB,OAAOxH,EAIX,mBAEI,GAAsB,MAAlBoH,KAAKoD,WAAqB,EAAMsI,gBAAgB/G,QAAQ3E,KAAKoD,UAAUrJ,aAAe,EACtF,MAAO,CAAE4R,QAAS,gJAAiJC,eAAgB,IAGvL,IAAID,EAAU,GACVE,EAAmC,GACnCC,EAAkC,GAClCC,EAAoC,GAEpChJ,EAAe/C,KACfgM,EAAsB,CAACjJ,EAAMhJ,YACjC,KAA0B,MAAnBgJ,EAAMK,WAAmB,CAE5B,GADAL,EAAQA,EAAMK,UACV4I,EAAUrH,QAAQ5B,EAAMhJ,aAAe,EAAG,CAC1CgJ,EAAMK,UAAY,KAClB4I,EAAY,CAACjJ,EAAMhJ,YAAYwN,OAAOyE,GACtCL,EAAU,cAAgB5I,EAAMhJ,WAAa,0BAC7C4R,GAAW,IAAMK,EAAUlJ,KAAK,aAAe,IAC/C,MAEJkJ,EAAY,CAACjJ,EAAMhJ,YAAYwN,OAAOyE,GAG1C,GAAe,IAAXL,EAAe,CAEf,GAAsB,MAAlB3L,KAAKoD,YAAsBpD,KAAKmB,WAAY,CAE5C,IAAI8K,EAA4B,GAE5BlJ,EAAe/C,KAGnB,KAAgB,MAAT+C,GAAe,CAClB,IAAK,IAAIhL,KAAKgL,EAAMgD,QACZhO,EAAEoJ,WACF8K,EAAgBlI,KAAKhM,GAErB+T,EAAsB/H,KAAKhM,EAAEmU,mCAGrCnJ,EAAQA,EAAMK,UAGlB,IAAK,IAAIrL,KAAKkU,EAENH,EAAsBnH,QAAQ5M,EAAEmU,mCAAqC,GACrEL,EAAuB9H,KAAKhM,GAOpC8T,EAAuB7J,OAAS,IAChC2J,EAAU,cAAgB3L,KAAKjG,WAAa,8EAE5C4R,GAAWE,EAAuBjJ,IAAK7K,GAAMA,EAAEmU,mCAAmCpJ,KAAK,OAI3F,IAAK,IAAInL,KAAKqI,KAAK4F,WACf,IAAK,IAAI7N,KAAKJ,EAAE2Q,aACRwD,EAAsBnH,QAAQ5M,EAAEmU,mCAAqC,GACrEH,EAAwBhI,KAAKhM,GAKrCgU,EAAwB/J,OAAS,IAElB,IAAX2J,IAAeA,GAAW,MAE9BA,GAAW,cAAgB3L,KAAKjG,WAAa,uFAE7C4R,GAAWI,EAAwBnJ,IAAK7K,GAAMA,EAAE6J,WAAWkB,KAAK,OAMxE,MAAO,CAAE6I,QAASA,EAASC,eAAgBC,EAAuBtE,OAAOwE,IAI7E,gBAAgB7E,GACZ,IAAIlP,EAAyBgI,KACzB6B,EAAKqF,EAAEnN,WAGX,IAFImN,aAAa,IAAOrF,EAAKqF,EAAER,2BAEnB,MAAL1O,GAAW,CACd,GAAIA,EAAE0O,2BAA6B7E,EAAI,OAAO,EAC9C7J,EAAIA,EAAEoL,UAEV,OAAO,EAGJ,YAAYxK,EAAcuT,EAAoB,IAEjD,IAAIzS,EAAY,IACZ6J,EAAavD,KAAK6H,cAAcjO,EAAWwS,SAC3C/S,EAAwBT,EAAMA,MAElC,GAAc,MAAVS,EACA,MAAO,OAGX,IAAK,IAAI1B,EAAI,EAAGA,EAAI4L,EAAWvB,OAAQrK,IAAK,CAExC,IAAIiQ,EAAYrE,EAAW5L,GACvB6L,EAAInK,EAAOgT,SAASzE,EAAU7N,YAC9B6N,EAAUxH,gBAAgBH,EAC1BvG,GAAKkO,EAAU7N,WAAa,UAAY6N,EAAUxH,KAAKkM,YAAY9I,EAAG2I,EAAY,GAElFzS,GAAKkO,EAAU7N,WAAa,gBAE5BpC,EAAI4L,EAAWvB,OAAS,IACxBtI,GAAK,WAKb,OAAOA,EAAI,IAIf,QAGI,IAAI6S,EAAkBlU,OAAOY,OAAO+G,MAMpC,OAJAuM,EAAS3G,WAAa5F,KAAK4F,WAAW4G,MAAM,GAC5CD,EAAS1M,eAAiB,IAAIC,IAC9ByM,EAAShG,qBAAuBvG,KAEzBuM,GAxqBI,EAAAb,gBAA4B,CAAC,UAAW,QAAS,SAAU,UAAW,YAAa,UA6qBhG,MAAO,UAAoB/L,EAe7B,YAAYoD,GACR1B,QAPG,KAAA0E,QAAoB,GACnB,KAAAC,UAAiC,IAAIlG,IAEtC,KAAAyD,WAA0B,GAC1B,KAAA0C,aAAuC,IAAInG,IAK9CE,KAAK6J,MAAQ9G,EACb/C,KAAKjG,WAAagJ,EAAMhJ,WAED,MAAnBgJ,EAAMK,YACNpD,KAAKoD,UAAYL,EAAMK,UAAU+C,aAGrCnG,KAAKoG,+BAAiC,CAClCzE,OAAQ,KACRjK,OAAQsI,KAAK6J,MAAMnS,OACnB0M,WAAY,GACZiC,aAAc,MAGlBrG,KAAKoG,+BAA+BC,aAAe,IAAI,EAAarG,KAAKoG,gCAI7E,sBACI/E,MAAMgG,sBAEN,IAAK,IAAItP,KAAKiI,KAAK+F,QACfhO,EAAEsP,sBAGN,IAAK,IAAIH,KAAKlH,KAAKuD,WACf2D,EAAErH,eAAiB,IAAIC,IAKxB,YAAYlH,EAAcuT,EAAoB,IAEjD,IAAIzS,EAAY,IACZ6J,EAAavD,KAAK6H,cAAcjO,EAAWwS,SAC3C/S,EAAS2G,KAAKyM,YAElB,IAAK,IAAI9U,EAAI,EAAGA,EAAI4L,EAAWvB,OAAQrK,IAAK,CAExC,IAAIiQ,EAAYrE,EAAW5L,GAC3B+B,GAAKkO,EAAU7N,WAAa,KAAOV,GAAU,KAAO,MAAQuO,EAAUxH,KAAKkM,YAAYjT,EAAOgT,SAASzE,EAAU7N,YAAaoS,EAAY,GACtIxU,EAAI4L,EAAWvB,OAAS,IACxBtI,GAAK,MAKb,OAAOA,EAAI,IAIf,mBAAmB8N,EACflF,EAAkCmF,EAClCC,GAEA,IAAIC,EAA8C,GAElD,IAAK,IAAIC,KAAa5H,KAAK6H,cAAcL,GACrCG,EAAS5D,KAAK,CACV5B,MAAOyF,EAAU7N,WACjB+N,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAYP,EAAU7N,WACtBqO,MAAOV,EACP3H,cAA0C,MAA3B6H,EAAU7H,mBAAwBsI,EAAY,CACzDzP,MAAOgP,EAAU7H,iBAK7B,IAAK,IAAI4B,KAAU3B,KAAKsI,WAAWd,GAC/BG,EAAS5D,KAAK,CACV5B,MAAOR,EAAO4G,qBACdC,WAAY7G,EAAO5H,WACnB+N,KAAMC,OAAOC,UAAUC,mBAAmBlH,OAC1CoH,WAAYxG,EAAOiH,qBAAqBtG,GACxC8F,MAAOV,EACPe,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DhJ,cAAuC,MAAxB4B,EAAO5B,mBAAwBsI,EAAY,CACtDzP,MAAO+I,EAAO5B,iBAK1B,OAAO4H,EAGJ,OAAOvH,GACV,OAAOA,GAAQJ,KAGZ,UAAU2B,GACb3B,KAAK+F,QAAQhC,KAAKpC,GAClB3B,KAAKgG,UAAU3C,IAAI1B,EAAOC,UAAWD,GAGlC,aAAaiG,GAChB5H,KAAKuD,WAAWQ,KAAK6D,GACrB5H,KAAKiG,aAAa5C,IAAIuE,EAAU7N,WAAY6N,GAGzC,cAAcvH,EAAsBC,GAEvC,OAAO,KAIJ,QAAQD,EAAsBmC,EAAqBC,GACtD,OAAO,KAGJ,6BAA6B1I,EAAoBwQ,EACpDK,EAA4Bd,GAE5B,OAAOa,EAAoB3K,KAAKsI,WAAWwB,GAAiB/P,EAAYwQ,EACpEvK,KAAK6J,MAAM9P,WAAY6Q,GAQxB,WAAWd,EAA4B/P,GAE1C,IAAIgM,EAAoB/F,KAAK+F,QAAQyG,QAAQzC,OAAQpI,GAC1CA,EAAOd,YAAciJ,IAAiC,MAAd/P,GAAsBA,GAAc4H,EAAO5H,aAG9F,GAAsB,MAAlBiG,KAAKoD,UAAmB,CACxB,IAAI4G,EAA0BF,GAAkBlQ,EAAWsM,OAAStM,EAAWsM,OAAStM,EAAWqQ,UACnG,IAAK,IAAIlS,KAAKiI,KAAKoD,UAAUkF,WAAW0B,EAAyBjQ,GAAa,CAE1E,IAAImQ,GAAQ,EACZ,IAAK,IAAIC,KAAMpE,EACX,GAAIoE,EAAGvI,WAAa7J,EAAE6J,UAAW,CAC7BsI,GAAQ,EACR,MAIHA,GACDnE,EAAQhC,KAAKhM,IAMzB,OAAOgO,EAOJ,cAAcyB,GAEjB,IAAIjE,EAA0BvD,KAAKuD,WAAWwG,OAAQnC,GAC3CA,EAAU/G,YAAc2G,GAGnC,GAAsB,MAAlBxH,KAAKoD,UAAmB,CAExB,IAAIsJ,EAA0BlF,GAAkB5N,EAAWsM,OAASsB,EAAiB5N,EAAWqQ,UAEhG,IAAK,IAAI/C,KAAKlH,KAAKoD,UAAUyE,cAAc6E,GAA0B,CAEjE,IAAIxC,GAAQ,EAEZ,IAAK,IAAIG,KAAM9G,EACX,GAAI8G,EAAGtQ,YAAcmN,EAAEnN,WAAY,CAC/BmQ,GAAQ,EACR,MAIHA,GACD3G,EAAWQ,KAAKmD,IAM5B,OAAO3D,EAGJ,UAAUxJ,EAAoBiH,GAEjC,IAAIW,EAAS3B,KAAKgG,UAAUxN,IAAIuB,EAAaiH,EAAca,IAE3D,OAAc,MAAVF,GAAoC,MAAlB3B,KAAKoD,UAChBpD,KAAKoD,UAAU6H,UAAUlR,EAAYiH,GAGzCW,EAGJ,aAAa5H,EAAoB+P,GAEpC,IAAIkB,EAAQ,GACR2B,GAAW,EACX/E,EAAY5H,KAAKiG,aAAazN,IAAIuB,GAUtC,GARiB,MAAb6N,GACA+E,GAAW,EACX3B,EAAQ,gBAAkBjR,EAAa,kCAChC6N,EAAU/G,WAAaiJ,IAC9BkB,EAAQ,gBAAkBjR,EAAa,yBAA2BH,EAAWgO,EAAU/G,YAAc,sCACrG+G,EAAY,MAGC,MAAbA,GAAuC,MAAlB5H,KAAKoD,UAAmB,CAC7C,IAAIgH,EAA4BN,GAAkBlQ,EAAWsM,OAAS4D,EAAiBlQ,EAAWqQ,UAE9F2C,EAA8B5M,KAAKoD,UAAUiI,aAAatR,EAAYqQ,GAC1E,GAAIuC,EACA,OAAOC,EAIf,MAAO,CAAEhF,UAAWA,EAAWoD,MAAOA,EAAOE,mBAAoByB,GAG9D,UAAUvM,GAEb,OAAO,EAIJ,OAAOxH,EAAcwH,GACxB,OAAOxH,EAGX,gBAAgBsO,GACZ,IAAIlP,EAAyBgI,KAC7B,KAAY,MAALhI,GAAW,CACd,GAAIA,GAAKkP,EAAG,OAAO,EACnBlP,EAAIA,EAAEoL,UAEV,OAAO,GAKT,MAAO,UAAkBzD,EAc3B,YAAY5F,EAAoBrC,EAAgBqI,GAC5CsB,QAZJ,KAAAoE,cAAgC,GAEhC,KAAAE,oBAA8B,EAIvB,KAAAkH,QAAuB,GAEvB,KAAA9G,QAAoB,GACnB,KAAAC,UAAiC,IAAIlG,IAIzCE,KAAKD,cAAgBA,EACrBC,KAAKjG,WAAaA,EAClBiG,KAAKtI,OAASA,EAGlB,0BACI,IAAI4O,EAAetG,KACnB,KAAiC,MAA1BsG,EAAEC,sBAA8BD,EAAIA,EAAEC,qBAC7C,OAAOD,EAAEvM,WAGb,2BAA2BA,GACvB,GAAGiG,KAAK0G,2BAA6B3M,EAAY,OAAOiG,KACxD,IAAI,IAAI8M,KAAO9M,KAAK6M,QAAQ,CACxB,IAAIE,EAAMD,EAAIrG,2BAA2B1M,GACzC,GAAU,MAAPgT,EAAa,OAAOA,EAE3B,OAAO,KAIX,QAEI,IAAIC,EAA0B3U,OAAOY,OAAO+G,MAK5C,OAHAgN,EAAanN,eAAiB,IAAIC,IAClCkN,EAAazG,qBAAuBvG,KAE7BgN,EAGX,sBACI3L,MAAMgG,sBAEN,IAAK,IAAItP,KAAKiI,KAAK+F,QACfhO,EAAEsP,sBAMV,mBAAmB/E,EAAkCmF,EACjDC,GAEA,IAAIC,EAA8C,GAElD,IAAK,IAAIhG,KAAU3B,KAAKsI,aACpBX,EAAS5D,KAAK,CACV5B,MAAOR,EAAO4G,qBACdC,WAAY7G,EAAO5H,WACnB+N,KAAMC,OAAOC,UAAUC,mBAAmBlH,OAC1CoH,WAAYxG,EAAOiH,qBAAqBtG,GACxC8F,MAAOV,EACPe,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DhJ,cAAuC,MAAxB4B,EAAO5B,mBAAwBsI,EAAY,CACtDzP,MAAO+I,EAAO5B,iBAK1B,OAAO4H,EAGJ,YAAY/O,EAAcuT,EAAoB,IACjD,OAAmB,MAAfvT,EAAMA,MACC,OAEHA,EAAMA,iBAAiB,EAChBA,EAAMA,MAAMsK,MAAMoJ,YAAY1T,GAE9B,QAKZ,OAAOwH,GACV,OAAOA,GAAQJ,KAGZ,UAAU2B,GACb3B,KAAK+F,QAAQhC,KAAKpC,GAClB3B,KAAKgG,UAAU3C,IAAI1B,EAAOC,UAAWD,GAGlC,cAActB,EAAsBC,GAEvC,OAAID,GAAa1G,EAAUiE,OAASyC,GAAa1G,EAAUkE,UAIvDwC,GAAa1G,EAAUyC,oBACnBkE,aAA6B,GAAeA,aAA6B,GAJtEzG,EASJ,KAIJ,QAAQwG,EAAsBmC,EAAqBC,GAEtD,OAAIpC,GAAa1G,EAAUiE,MAChB4E,EAAa5J,OAAS6J,EAAc7J,MAG3CyH,GAAa1G,EAAUkE,SAChB2E,EAAa5J,OAAS6J,EAAc7J,MAGxC,KAQJ,aAEH,OAAOoH,KAAK+F,QAIT,UAAUhM,EAAoBiH,GAEjC,OAAOhB,KAAKgG,UAAUxN,IAAIuB,EAAaiH,EAAca,IAIlD,UAAUzB,GAEb,GAAIA,aAAgB,EAAW,CAC3B,IAAI6M,GAAqB,EACzB,GAAI7M,EAAKsG,2BAA6B1G,KAAK0G,0BAA2B,CAElE,GADAuG,GAAqB,EACY,GAA7BjN,KAAKyF,cAAczD,OAAa,OAAO,EAC3C,IAAIkL,EAAmB9M,EACvB,GAAIJ,KAAKyF,cAAczD,QAAUkL,EAAMzH,cAAczD,OAAQ,OAAO,EACpE,IAAK,IAAIrK,EAAI,EAAGA,EAAIqI,KAAKyF,cAAczD,OAAQrK,IAAK,CAChD,IAAIkL,EAAK7C,KAAKyF,cAAc9N,GAE5B,IADcuV,EAAMzH,cAAc9N,GACrByI,KAAKqL,UAAU5I,EAAGzC,MAAO,OAAO,EAEjD,OAAO,EAEP,IAAK,IAAI+M,KAASnN,KAAK6M,QACnB,GAAIM,EAAM1B,UAAUrL,GAChB,OAAO,EAInB,OAAO,EAKP,OAHIA,aAAgB,GAASA,EAAKsG,2BAG3B,EAMR,OAAO9N,EAAcwH,GACxB,OAAOxH,EAGJ,6BAA6BmB,EAAoBwQ,EAAwBK,GAE5E,OAAOD,EAAoB3K,KAAKsI,aAAcvO,EAAYwQ,EAAgBvK,KAAKjG,WAAY6Q,IAOnG,SAASD,EAAoBE,EAAsB9Q,EAAoBwQ,EACnEC,EACAI,GAEA,IAAIwC,EAA4B,GAC5BC,EAA6B,IAC7BrC,EAAQ,KAERsC,GAAgC,EAEpC,IAAK,IAAIvV,KAAK8S,EAAY,CAEtB,IAAI0C,EAAkB,EACtB,GAAIxV,EAAEgC,YAAcA,GAAchC,EAAEqJ,eAAiBwJ,EAAmB,CAEpE0C,GAAgC,EAEhC,IAAIrL,EAAalK,EAAEyV,cACnB,GAAIzV,EAAE0V,qBAAuBlD,EAAevI,QAAWC,GAAclK,EAAE0V,qBAAuBlD,EAAevI,OAAS,CAElH,IAAI0L,GAAQ,EAER/V,EAAI,EAER,IAAKA,EAAI,EAAGA,EAAII,EAAE0V,qBAAuBxL,EAAa,EAAI,GAAItK,IAAK,CAC/D,IAAIgW,EAAiB5V,EAAE6V,iBAAiBjW,GACpCkW,EAAYtD,EAAe5S,GAE/B,GAAiB,MAAbkW,EAAmB,CACnBH,GAAQ,EAAO,MAGnB,GAAIC,GAAkBE,EAAtB,CAIA,IAAIA,EAAUpC,UAAUkC,GAAxB,CAKAD,GAAQ,EACR,MALIH,KASR,GAAGG,GAASzL,EAAW,CACnB,IACI6L,EADqB/V,EAAEgW,aAAapW,GACqByI,KAAMiC,YAG/D,IAAK,IAAI2L,EAAIrW,EAAGqW,EAAIzD,EAAevI,OAAQgM,IAAK,CAC5C,IAAIH,EAAYtD,EAAe5S,GAE/B,GAAiB,MAAbkW,EAAmB,CACnBH,GAAQ,EAAO,MAGnB,GAAII,GAA2BD,EAA/B,CAIA,IAAIA,EAAUpC,UAAUqC,GAAxB,CAKAJ,GAAQ,EACR,MALIH,MAUZG,GAASH,GAAmBF,IACxBE,EAAkBF,IAClBD,EAAkB,IAEtBA,EAAgBrJ,KAAKhM,GACrBsV,EAAqBE,KAQrC,GAA8B,GAA1BH,EAAgBpL,OAEhB,GAAIsL,EACA,GAA4B,GAAzB/C,EAAevI,OACdgJ,EAAQJ,EAAoB,wDAA0DJ,EAAkB,+CAAiDzQ,EAAa,2FACnK,CACH,IAAIkU,EAAa1D,EAAe3H,IAAIxC,GAAQA,EAAKrG,YAAY+I,KAAK,MAClEkI,EAAQJ,EAAoB,uBAAuBqD,8CAAuDzD,IAAoB,uBAAuByD,mEAA4ElU,UAGrOiR,EAAQ,WAAaR,EAAkB,6CAA+CzQ,EAAa,IAU3G,OALIqT,EAAgBpL,OAAS,IACzBoL,EAAkBA,EAAgBZ,MAAM,EAAG,IAIxC,CACHxB,MAAOA,EACPH,WAAYuC,GAKd,SAAUc,EAAkBC,EAAiCC,GAE/D,OAA2B,MAAvBA,EACOxU,EAAWsM,QAGlBiI,aAAsB,IAAaA,EAAaA,EAAWtE,OAC3DuE,aAA+B,IAAaA,EAAsBA,EAAoBvE,OAEtFsE,GAAcC,EACPxU,EAAWwS,QAGlBgC,EAAoBC,gBAAgBF,GAC7BvU,EAAWqQ,UAGfrQ,EAAWsM,QIlyChB,MAAO,UAAkBvG,EAK3B,YAAY0C,GACRhB,QACArB,KAAKqC,YAAcA,EACnBrC,KAAKjG,WAAa,QAEA,MAAfsI,IACCrC,KAAKjG,WAAasI,EAAYtI,WAAa,MAG/CiG,KAAKsO,gBAAkB,IAAI5N,EAAU,SAAU6N,EAAmBlV,GAC/CA,EAAOT,MAAOoJ,QAC9B,EAAOpI,EAAWsM,QAAQ,GAG1B,OAAO9F,GACV,OAAQA,aAAgB,GAAcA,EAAKiC,YAAYmM,OAAOxO,KAAKqC,aAG1D,SACT,OAAOrC,KAAKqC,YAAYtI,WAAa,KAGlC,cAAcsG,EAAsBC,GACvC,OAAGD,GAAa1G,EAAU8U,iBACfzO,KAAKqC,YAGT,KAIJ,QAAQhC,EAAsBmC,EAAqBC,GAEtD,GAAGpC,GAAa1G,EAAU8U,iBACtB,OAAcjM,EAAa5J,MAAc6J,EAAc7J,OAKxD,UAAUmB,EAAoB6H,GACjC,OAAO,KAGJ,aAAa7H,GAChB,MAAiB,UAAdA,EACQiG,KAAKsO,gBAET,KAGJ,UAAUlO,GAEb,OAAKA,aAAgB,GAIdJ,KAAKqC,YAAYoJ,UAAUrL,EAAKiC,aAGpC,OAAOzJ,EAAcwH,GAExB,IAAIsO,EAAkB9V,EAAMA,MAAO4T,QAC/BmC,EAAgCvO,EAAMiC,YAE1C,IAAI,IAAI6E,KAAKwH,EACT1O,KAAKqC,YAAYuM,OAAO1H,EAAGyH,GAG/B,MAAO,CACHvO,KAAMA,EACNxH,MAAO8V,GAKR,YAAY9V,EAAcuT,EAAoB,IAEjD,IAAInK,EAAiB,EAErB,GAAkB,MAAfpJ,EAAMA,MAAc,CAEnB,IAAIc,EAAY,IAERwN,EAAsBtO,EAAMA,MAEhC,IAAI,IAAIjB,EAAI,EAAGA,EAAIuP,EAAElF,OAAQrK,IAAI,CAE7B,IAAI6L,EAAI0D,EAAEvP,GAENkX,EAAKrL,EAAEpD,KAAKkM,YAAY9I,EAAG2I,EAAU,GAMzC,GAJAzS,GAAKmV,EACFlX,EAAIuP,EAAElF,OAAS,IAAGtI,GAAK,WAC1BsI,GAAU6M,EAAG7M,OAEVA,EAASmK,EAAW,MAI/B,OAAOzS,EAAI,IAER,MAAO,QC/FhB,MAAO,UAAoB,EAE7B,YAAYhC,GACR2J,MAAM,SAAU3J,EAAQ,6BAIxBsI,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAEU,IAA+BA,EAAW,GAAGlJ,MAAOsK,MAAMnJ,WAAa,KAE/E,GAAO,KC+iBhB,MAAO,UAA4B,EA6BrC,YAAYqJ,GACR/B,MAAM,SAAU,KAAM,6DACtBrB,KAAKoD,UAAYA,EACjB,IAAI0L,EAAc9O,KAClBoD,EAAU2C,QAAQgE,OAAOhS,GAAqB,YAAhBA,EAAEgC,YAA0BgV,QAAQhX,GAAKA,EAAEkJ,WAAa6N,GA7BnF,cACH,OAAOnV,EAAUQ,eAGd,cAAckG,EAAsBC,GAEvC,GAAGD,GAAa1G,EAAUyC,kBACtB,OAAOiF,MAAM2N,cAAc3O,EAAWC,GAG1C,IAAIC,EAAYP,KAAKQ,eAAeH,GAEpC,OAAiB,MAAbE,EACO,KAGc,MAArBD,EACOC,EAAUD,EAAkBvG,YAGhCwG,EAAS,KAYpB,OACIP,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,OAAUqO,EAAqB,IAAOA,EAC1D,MAASA,EAAqB,OAAU2D,EACxC,QAAW3D,EAAqB,KAAQA,GACxC,CAAC3R,EAAUiE,OAAQ,CAAE,OAAUsR,EAAsB,KAAQA,GAC7D,CAACvV,EAAUkE,UAAW,CAAE,OAAUqR,EAAsB,KAAQA,GAChE,CAACvV,EAAU6D,OAAQ,CAAE,OAAU0R,GAC/B,CAACvV,EAAU8D,SAAU,CAAE,OAAUyR,GACjC,CAACvV,EAAU+D,cAAe,CAAE,OAAUwR,GACtC,CAACvV,EAAUgE,gBAAiB,CAAE,OAAUuR,IAK5ClP,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAAK6L,EACtDzM,GAAiCA,EAAW,GAAGlJ,MAAOoJ,QAAW,GAAO,EAAO,yEACpFhC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,WAAYqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWsO,EACjKtN,GAAiCA,EAAW,GAAGlJ,MAAOyW,OAAgBvN,EAAW,GAAGlJ,QAAY,GAAO,EAAO,iJACnHoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWoO,EACvKpN,GAAgCA,EAAW,GAAGlJ,OAAkBkJ,EAAW,GAAGlJ,OAAW,GAAO,EAAO,oIAC5GoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWyN,EAC1KzM,GAAkCA,EAAW,GAAGlJ,MAAQ0W,cAAuBxN,EAAW,GAAGlJ,QAAY,GAAO,EAAO,qLAC5HoH,KAAKwJ,UAAU,IAAIzI,EAAO,mBAAoB,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWoO,EACjLpN,GAAkCA,EAAW,GAAGlJ,MAAQ2W,eAA2BzN,EAAW,GAAGlJ,MAAO2W,eAAmB,GAAO,EAAO,uIAC9IvP,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,SAAUqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWoO,EACpKpN,GAAkCA,EAAW,GAAGlJ,MAAQ4W,SAAkB1N,EAAW,GAAGlJ,QAAY,GAAO,EAAO,gKACvHoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,SAAUqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWoO,EACtKpN,GAAkCA,EAAW,GAAGlJ,MAAQ6W,WAAoB3N,EAAW,GAAGlJ,QAAY,GAAO,EAAO,kKACzHoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IAAK4I,EAC3DxJ,GAAkCA,EAAW,GAAGlJ,MAAQ8W,qBAAwB,GAAO,EAAO,sOACnG1P,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IAAK4I,EAC3DxJ,GAAkCA,EAAW,GAAGlJ,MAAQ+W,qBAAwB,GAAO,EAAO,sOACnG3P,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,aAAcqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWwK,EACtKxJ,GAAkCA,EAAW,GAAGlJ,MAAQgX,UAAmB9N,EAAW,GAAGlJ,QAAY,GAAO,EAAO,mKACxHoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,aAAcqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChK,CAAE/G,WAAY,WAAYqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWwK,EAC1GxJ,GAAkCA,EAAW,GAAGlJ,MAAQgX,UAAmB9N,EAAW,GAAGlJ,MAAiBkJ,EAAW,GAAGlJ,QAAY,GAAO,EAAO,wMACvJoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAAK4I,EACpDxJ,GAAkCA,EAAW,GAAGlJ,MAAQiX,QAAW,GAAO,EAAO,iJACtF7P,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IAAKwM,EACvDpN,GAA2D,IAAzBA,EAAW,GAAGlJ,OAAkB,GAAO,EAAO,oJACrFoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWyN,EACxKzM,GAAkCA,EAAW,GAAGlJ,MAAQ+L,QAAiB7C,EAAW,GAAGlJ,QAAY,GAAO,EAAO,8FACtHoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC1G,CAAE/G,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyN,EACCzM,GAAkCA,EAAW,GAAGlJ,MAAQ+L,QAAiB7C,EAAW,GAAGlJ,MAAiBkJ,EAAW,GAAGlJ,QAAY,GAAO,EAAO,oJACrJoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CAAC,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAWyN,EAC5KzM,GAAkCA,EAAW,GAAGlJ,MAAQkX,YAAqBhO,EAAW,GAAGlJ,QAAY,GAAO,EAAO,4FAC1HoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC1G,CAAE/G,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyN,EACCzM,GAAkCA,EAAW,GAAGlJ,MAAQkX,YAAqBhO,EAAW,GAAGlJ,MAAiBkJ,EAAW,GAAGlJ,QAAY,GAAO,EAAO,gKACzJoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,SAAUqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GwK,EACCxJ,GAAkCA,EAAW,GAAGlJ,MAAQmX,QAAiBjO,EAAW,GAAGlJ,MAAiBkJ,EAAW,GAAGlJ,QAAY,GAAO,EAAO,4JACrJoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GwK,EACCxJ,IACG,IAAIkO,EAAmBlO,EAAW,GAAGlJ,MACjCqX,EAAS,IAAIC,OAAOF,EAAS,KAEjC,OAAiBlO,EAAW,GAAGlJ,MAAQmX,QAAQE,EAAiBnO,EAAW,GAAGlJ,SAC/E,GAAO,EAAO,qHACrBoH,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GwK,EACCxJ,IACG,IAAIkO,EAAmBlO,EAAW,GAAGlJ,MACjCqX,EAAS,IAAIC,OAAOF,EAAS,IAEjC,OAAiBlO,EAAW,GAAGlJ,MAAQmX,QAAQE,EAAiBnO,EAAW,GAAGlJ,SAC/E,GAAO,EAAO,yHACrBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpG,IAAI,EAAUwK,GACbxJ,IACG,IAAIkO,EAAmBlO,EAAW,GAAGlJ,MACjCqX,EAAS,IAAIC,OAAOF,EAAS,IAE7BG,EAAoBrO,EAAW,GAAGlJ,MAAQwX,MAAMH,GAChDI,EAAkB,GACtB,IAAI,IAAI3W,KAAKyW,EACTE,EAAOtM,KAAK,CAAC3D,KAAMkL,EAAqB1S,MAAOc,IAGnD,OAAO2W,IAER,GAAO,EAAO,8MAIlB,QAAQhQ,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAiB4J,EAAa5J,MAElC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAIwF,EAAcrC,MAAQkL,GAAuB7I,EAAcrC,MAAQgP,GAE5D3M,EAAcrC,KADdxH,EAAiB6J,EAAc7J,MAO9C,KAAKe,EAAU6D,MACX,OAAO5E,EAAkB6J,EAAc7J,MAE3C,KAAKe,EAAU8D,QACX,OAAO7E,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU+D,aACX,OAAO9E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUgE,eACX,OAAO/E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUiE,MACX,OAAOhF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUkE,SACX,OAAOjF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUyC,kBACX,OAAOiF,MAAMiP,QAAQjQ,EAAWmC,EAAcC,IAOnD,YAAY7J,GACf,MAAO,IAAcA,EAAMA,MAAQ,KAgGpC,IAAI2X,EAAoB,IA1TzB,cAAiCtQ,EAEnC,OAEID,KAAKE,cAAe,EAEpBF,KAAKjG,WAAa,OAElBiG,KAAKG,YAAc,sBAEnBH,KAAKQ,eAAiB,GAGtBR,KAAKS,aAAe,GAIjB,cACH,OAAO9G,EAAUkB,YAGd,OAAOjC,EAAcwH,GAExB,OAAOxH,EAKJ,QAAQyH,EAAsBmC,EAAqBC,GAEtD,OAAO,KAIJ,YAAY7J,GACf,MAAO,SAwRJ2V,EAAmB,IA1xBxB,cAAgCtO,EAElC,OACID,KAAKE,aAAe,EAEpBF,KAAKjG,WAAa,MAElBiG,KAAKG,YAAc,aAEnBH,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,IAAOsR,EAAkB,QAAWA,EAAkB,MAASiC,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,EAAqB,OAAU3D,GAC5M,CAAC3R,EAAUoD,OAAQ,CAAE,KAAQwR,EAAkB,IAAOA,EAAkB,QAAWA,EAAkB,MAASiC,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GACxM,CAACtV,EAAUuD,gBAAiB,CAAE,IAAOqR,EAAkB,QAAWA,EAAkB,MAASiC,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GACvL,CAACtV,EAAUqD,QAAS,CAAE,IAAOuR,EAAkB,QAAWA,GAC1D,CAAC5U,EAAUwD,UAAW,CAAE,IAAOoR,EAAkB,QAAWA,EAAkB,MAASiC,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GACjL,CAACtV,EAAU4D,YAAa,CAAE,KAAQgR,GAClC,CAAC5U,EAAU2D,aAAc,CAAE,KAAQiR,GACnC,CAAC5U,EAAU8W,UAAW,CAAE,KAAQlC,GAChC,CAAC5U,EAAU6D,OAAQ,CAAE,IAAO0R,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAU8D,SAAU,CAAE,IAAOyR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC7L,CAACvV,EAAU+D,cAAe,CAAE,IAAOwR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAClM,CAACvV,EAAUgE,gBAAiB,CAAE,IAAOuR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GACpM,CAACvV,EAAUiE,OAAQ,CAAE,IAAOsR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAUkE,UAAW,CAAE,IAAOqR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,IAKlMlP,KAAKS,aAAe,CAChB,MAAS,CAAEiQ,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,KAAQ,CAAED,WAAW,EAAMC,gBAAgB,GAC3C,IAAO,CAAED,WAAW,EAAMC,gBAAgB,GAC1C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,IAMtD,cACI,OAAOhX,EAAUK,gBAGd,OAAOpB,EAAcwH,GAExB,OAAIA,GAAQoQ,GAAsBpQ,GAAQ6O,EAC/B,CACH7O,KAAMA,EACNxH,MAAOA,EAAMA,OAIjBwH,GAAQkL,EACD,CACHlL,KAAMA,EACNxH,MAAO,GAAaA,EAAMA,OAI9BwH,GAAQgP,EACD,CACHhP,KAAMA,EACNxH,MAAOgY,OAAOC,aAAqBjY,EAAMA,aAHjD,EAUG,QAAQyH,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAiB4J,EAAa5J,MAElC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAIwF,EAAcrC,KACPxH,EAAiB6J,EAAc7J,MAK9C,KAAKe,EAAUoD,MACX,OAAqB,MAAjB0F,GAA+B7J,EAC5BA,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUuD,eACX,OAAOtE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUwD,SACX,OAAIsF,EAAcrC,MAAQmO,EACfhD,KAAKuF,MAAMlY,EAAiB6J,EAAc7J,OAE9CA,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUqD,OACX,OAAIyF,EAAcrC,MAAQmO,EACfhD,KAAKuF,MAAMlY,EAAiB6J,EAAc7J,OAE9C,EAEX,KAAKe,EAAU4D,WACX,OAAO3E,IAEX,KAAKe,EAAU2D,YACX,OAAO1E,IAEX,KAAKe,EAAU8W,SACX,OAAQ7X,EAEZ,KAAKe,EAAU6D,MACX,OAAO5E,EAAkB6J,EAAc7J,MAE3C,KAAKe,EAAU8D,QACX,OAAO7E,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU+D,aACX,OAAO9E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUgE,eACX,OAAO/E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUiE,MACX,OAAOhF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUkE,SACX,OAAOjF,GAAkB6J,EAAc7J,OAO5C,YAAYA,GACf,MAAO,GAAaA,EAAMA,QAqpBvB4X,EAAqB,IA/oB1B,cAAkCvQ,EAEpC,OAEID,KAAKE,aAAe,EAEpBF,KAAKjG,WAAa,QAElBiG,KAAKG,YAAc,2CAEnBH,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,QAAWuT,EAAoB,IAAOA,EAAoB,MAASA,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,EAAqB,OAAU3D,GAChN,CAAC3R,EAAUoD,OAAQ,CAAE,KAAQyT,EAAoB,QAAWA,EAAoB,IAAOA,EAAoB,MAASA,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GAC9M,CAACtV,EAAUuD,gBAAiB,CAAE,QAAWsT,EAAoB,IAAOA,EAAoB,MAASA,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GAC3L,CAACtV,EAAUwD,UAAW,CAAE,QAAWqT,EAAoB,IAAOA,EAAoB,MAASA,EAAoB,MAASA,EAAoB,OAAUvB,EAAqB,OAAUA,GACrL,CAACtV,EAAU4D,YAAa,CAAE,KAAQiT,GAClC,CAAC7W,EAAU2D,aAAc,CAAE,KAAQkT,GACnC,CAAC7W,EAAU8W,UAAW,CAAE,KAAQD,GAChC,CAAC7W,EAAU6D,OAAQ,CAAE,IAAO0R,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAU8D,SAAU,CAAE,IAAOyR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC7L,CAACvV,EAAU+D,cAAe,CAAE,IAAOwR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAClM,CAACvV,EAAUgE,gBAAiB,CAAE,IAAOuR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GACpM,CAACvV,EAAUiE,OAAQ,CAAE,IAAOsR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAUkE,UAAW,CAAE,IAAOqR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,IAKlMlP,KAAKS,aAAe,CAChB,IAAO,CAAEiQ,WAAW,EAAOC,gBAAgB,GAC3C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,IAKrD,cACI,OAAOhX,EAAUM,sBAGd,OAAOrB,EAAcwH,GAExB,OAAIA,GAAQkL,EACD,CACHlL,KAAMA,EACNxH,MAAO,GAAaA,EAAMA,OAI9BwH,GAAQmO,EACD,CACHnO,KAAMA,EACNxH,MAAO2S,KAAKuF,MAAclY,EAAMA,QAIpCwH,GAAQ6O,EACD,CACH7O,KAAMA,EACNxH,MAAOA,EAAMA,YAHrB,EAUG,QAAQyH,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAiB4J,EAAa5J,MAElC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAIwF,EAAcrC,KACPxH,EAAiB6J,EAAc7J,MAK9C,KAAKe,EAAUoD,MACX,OAAqB,MAAjB0F,GAA+B7J,EAC5BA,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUuD,eACX,OAAOtE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUwD,SACX,OAAOvE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU4D,WACX,OAAO3E,IAEX,KAAKe,EAAU2D,YACX,OAAO1E,IAEX,KAAKe,EAAU8W,SACX,OAAQ7X,EAEZ,KAAKe,EAAU6D,MACX,OAAO5E,EAAkB6J,EAAc7J,MAE3C,KAAKe,EAAU8D,QACX,OAAO7E,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU+D,aACX,OAAO9E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUgE,eACX,OAAO/E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUiE,MACX,OAAOhF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUkE,SACX,OAAOjF,GAAkB6J,EAAc7J,OAO5C,YAAYA,GACf,MAAO,GAAaA,EAAMA,QAohBvBqW,EAAsB,IA9gB3B,cAAmChP,EAErC,OAEID,KAAKE,aAAe,EAEpBF,KAAKjG,WAAa,SAElBiG,KAAKG,YAAc,2CAEnBH,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,IAAOgS,EAAqB,QAAWA,EAAqB,MAASA,EAAqB,MAASA,EAAqB,OAAUA,EAAqB,OAAUA,EAAqB,OAAU3D,GACpN,CAAC3R,EAAUoD,OAAQ,CAAE,KAAQkS,EAAqB,IAAOA,EAAqB,QAAWA,EAAqB,MAASA,EAAqB,MAASA,EAAqB,OAAUA,EAAqB,OAAUA,GACnN,CAACtV,EAAUuD,gBAAiB,CAAE,IAAO+R,EAAqB,QAAWA,EAAqB,MAASA,EAAqB,MAASA,EAAqB,OAAUA,EAAqB,OAAUA,GAC/L,CAACtV,EAAUwD,UAAW,CAAE,IAAO8R,EAAqB,QAAWA,EAAqB,MAASA,EAAqB,MAASA,EAAqB,OAAUA,EAAqB,OAAUA,GACzL,CAACtV,EAAU4D,YAAa,CAAE,KAAQ0R,GAClC,CAACtV,EAAU2D,aAAc,CAAE,KAAQ2R,GACnC,CAACtV,EAAU8W,UAAW,CAAE,KAAQxB,GAChC,CAACtV,EAAU6D,OAAQ,CAAE,IAAO0R,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAU8D,SAAU,CAAE,IAAOyR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC7L,CAACvV,EAAU+D,cAAe,CAAE,IAAOwR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAClM,CAACvV,EAAUgE,gBAAiB,CAAE,IAAOuR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GACpM,CAACvV,EAAUiE,OAAQ,CAAE,IAAOsR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,GAC3L,CAACvV,EAAUkE,UAAW,CAAE,IAAOqR,EAAsB,MAASA,EAAsB,OAAUA,EAAsB,QAAWA,EAAsB,MAASA,EAAsB,OAAUA,IAIlMlP,KAAKS,aAAe,CAChB,IAAO,CAAEiQ,WAAW,EAAOC,gBAAgB,GAC3C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,IAMrD,cACI,OAAOhX,EAAUM,sBAGd,OAAOrB,EAAcwH,GAExB,OAAIA,GAAQkL,EACD,CACHlL,KAAMA,EACNxH,MAAO,GAAaA,EAAMA,OAI9BwH,GAAQmO,EACD,CACHnO,KAAMA,EACNxH,MAAO2S,KAAKuF,MAAclY,EAAMA,QAIpCwH,GAAQoQ,EACD,CACHpQ,KAAMA,EACNxH,MAAOA,EAAMA,YAHrB,EAUG,QAAQyH,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAiB4J,EAAa5J,MAElC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAIwF,EAAcrC,KACPxH,EAAiB6J,EAAc7J,MAK9C,KAAKe,EAAUoD,MACX,OAAqB,MAAjB0F,GAA+B7J,EAC5BA,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUuD,eACX,OAAOtE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUwD,SACX,OAAOvE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU4D,WACX,OAAO3E,IAEX,KAAKe,EAAU2D,YACX,OAAO1E,IAEX,KAAKe,EAAU8W,SACX,OAAQ7X,EAEZ,KAAKe,EAAU6D,MACX,OAAO5E,EAAkB6J,EAAc7J,MAE3C,KAAKe,EAAU8D,QACX,OAAO7E,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU+D,aACX,OAAO9E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUgE,eACX,OAAO/E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUiE,MACX,OAAOhF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUkE,SACX,OAAOjF,GAAkB6J,EAAc7J,OAO5C,YAAYA,GACf,MAAO,GAAaA,EAAMA,QAmZvBsW,EAAuB,IA7Y5B,cAAoCjP,EAEtC,OAEID,KAAKE,cAAe,EAEpBF,KAAKjG,WAAa,UAElBiG,KAAKG,YAAc,oCAEnBH,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,OAAUqO,GAC9B,CAAC3R,EAAU0E,KAAM,CAAE,QAAW6Q,GAC9B,CAACvV,EAAU2E,IAAK,CAAE,QAAW4Q,GAC7B,CAACvV,EAAU4E,KAAM,CAAE,KAAQ2Q,GAC3B,CAACvV,EAAUiE,OAAQ,CAAE,QAAWsR,GAChC,CAACvV,EAAUkE,UAAW,CAAE,QAAWqR,IAGvClP,KAAKS,aAAe,CAChB,OAAU,CAAEiQ,WAAW,EAAMC,gBAAgB,GAC7C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,GAC9C,QAAW,CAAED,WAAW,EAAMC,gBAAgB,IAMtD,cACI,OAAOhX,EAAUO,gBAGd,OAAOtB,EAAcwH,GAExB,GAAIA,GAAQkL,EACR,MAAO,CACHlL,KAAMA,EACNxH,MAAO,GAAaA,EAAMA,OAO/B,QAAQyH,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAkB4J,EAAa5J,MAEnC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAOrE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAUiE,MACX,OAAOhF,GAAmB6J,EAAc7J,MAE5C,KAAKe,EAAUkE,SACX,OAAOjF,GAAmB6J,EAAc7J,MAE5C,KAAKe,EAAU0E,IACX,OAAOzF,GAAmB6J,EAAc7J,MAE5C,KAAKe,EAAU2E,GACX,OAAO1F,GAAmB6J,EAAc7J,MAE5C,KAAKe,EAAU4E,IACX,OAAQ3F,GAOb,YAAYA,GACf,MAAO,GAAcA,EAAMA,QN5gB/BiB,EMi1BwBqV,EACrB,IC/1BF6B,ED+1BM,EAAa,IAAI,EAAY,MAC7BzF,EAAsB,IAAI,EAAoB,GAC9C8D,EAAoB,IAlGzB,cAAiCnP,EAEnC,OAEID,KAAKE,aAAe,KAEpBF,KAAKjG,WAAa,OAElBiG,KAAKG,YAAc,cAEnBH,KAAKQ,eAAiB,CAClB,CAAC7G,EAAUsD,MAAO,CAAE,OAAUqO,EAAqB,KAAQA,GAC3D,CAAC3R,EAAUiE,OAAQ,CAAE,KAAQsR,GAC7B,CAACvV,EAAUkE,UAAW,CAAE,KAAQqR,GAChC,CAACvV,EAAU6D,OAAQ,CAAE,KAAQ0R,GAC7B,CAACvV,EAAU8D,SAAU,CAAE,KAAQyR,GAC/B,CAACvV,EAAU+D,cAAe,CAAE,KAAQwR,GACpC,CAACvV,EAAUgE,gBAAiB,CAAE,KAAQuR,IAK1ClP,KAAKS,aAAe,CAChB,IAAO,CAAEiQ,WAAW,EAAMC,gBAAgB,GAC1C,MAAS,CAAED,WAAW,EAAMC,gBAAgB,GAC5C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,OAAU,CAAED,WAAW,EAAMC,gBAAgB,GAC7C,KAAQ,CAAED,WAAW,EAAMC,gBAAgB,GAC3C,UAAa,CAAED,WAAW,EAAMC,gBAAgB,IAKjD,cACH,OAAOhX,EAAUS,aAGd,OAAOxB,EAAcwH,GAExB,OAAIA,GAAQkL,EACD1S,EAGPwH,GAAQmO,GAAoBnO,GAAQoQ,GAAsBpQ,GAAQ6O,EAC3D,CACH7O,KAAMA,EACNxH,MAAgBA,EAAMA,MAAOoY,WAAW,SAHhD,EASG,QAAQ3Q,EAAsBmC,EAAqBC,GAEtD,IAAI7J,EAAiB4J,EAAa5J,MAElC,OAAQyH,GACJ,KAAK1G,EAAUsD,KACX,OAAOrE,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU6D,MACX,OAAO5E,EAAkB6J,EAAc7J,MAE3C,KAAKe,EAAU8D,QACX,OAAO7E,EAAiB6J,EAAc7J,MAE1C,KAAKe,EAAU+D,aACX,OAAO9E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUgE,eACX,OAAO/E,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUiE,MACX,OAAOhF,GAAkB6J,EAAc7J,MAE3C,KAAKe,EAAUkE,SACX,OAAOjF,GAAkB6J,EAAc7J,OAO5C,YAAYA,GACf,MAAO,IAAcA,EAAMA,MAAQ,MAehC8Q,EAAW,IA11BhB,cAAwB/J,EAE1B,cACI0B,QACArB,KAAKjG,WAAa,OAGtB,cAAcsG,EAAsBC,GAChC,OAAO,KAEX,QAAQD,EAAsBmC,EAAqBC,GAC/C,OAAO,KAEX,UAAUrC,GACN,OAAQA,aAAgB,GAASA,aAAgB,EAErD,OAAOxH,EAAcwH,GACjB,OAAOxH,EAEX,OAAOwH,GACH,OAAQA,aAAgB,GAASA,aAAgB,EAG9C,YAAYxH,GACf,MAAO,SAm0BJqY,EAAU,IA/zBf,cAAuBtR,EAEzB,cACI0B,QACArB,KAAKjG,WAAa,MAGtB,cAAcsG,EAAsBC,GAChC,OAAO,KAEX,QAAQD,EAAsBmC,EAAqBC,GAC/C,OAAO,KAEX,UAAUrC,GACN,OAAQA,aAAgB,GAASA,aAAgB,EAErD,OAAOxH,EAAcwH,GACjB,OAAOxH,EAEX,OAAOwH,GACH,OAAQA,aAAgB,GAASA,aAAgB,EAG9C,YAAYxH,GACf,MAAO,QAyyBJsY,EAAc,IEl2BnB,cAA4B,EAI9B,YAAY9N,GACR/B,MAAM,UAAW,KAAM,mEAH3B,KAAA8P,YAAc,GAIVnR,KAAKoD,UAAYA,EAEjBpD,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa6N,EAAmB3V,IAAYA,EAAMA,MAAQwY,OAAOC,mBAAoB,EAAMzX,EAAWsM,QAAQ,EAAM,iEACpJlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa6N,EAAmB3V,IAAYA,EAAMA,MAAQwY,OAAOE,mBAAoB,EAAM1X,EAAWsM,QAAQ,EAAM,mEAEpJlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAIjC,UAAUnR,GACN,OAAOJ,KAAKmR,YAAYxM,QAAQvE,IAAS,GAAKiB,MAAMoK,UAAUrL,GAGlE,OAEIJ,KAAKmR,YAAc,CAAC5C,EAAkBiC,EAAoBvB,GAE1DjP,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,WAAYqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,wCAAwC,IAE7DoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQwY,OAAOI,SAAS1P,EAAW,GAAGlJ,SAErD,GAAO,EAAO,+GAA+G,IAGpIoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IAAKuM,EAC3DnN,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,uDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IAAK8N,EAC1D1O,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,sDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK6L,EACxDzM,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,oDAEnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,iBAAkBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC9FyN,EACCzM,IACG,IAAI2P,EAAK3P,EAAW,GAAGlJ,MACnB8Y,EAAK5P,EAAW,GAAGlJ,MACvB,OAAI6Y,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,IACR,GAAO,EAAO,qKAErB1R,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,iBAAkBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC9FoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASkJ,EAAW,GAAGlJ,OAC7C,GAAO,EAAO,gFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAO,mEAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAO,0CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyN,EACCzM,GACUsP,OAAOI,SAAS1P,EAAW,GAAGlJ,QACtC,GAAO,EAAM,kDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyN,EACCzM,GACUsP,OAAOI,SAAS1P,EAAW,GAAGlJ,MAAOkJ,EAAW,GAAGlJ,QAC3D,GAAO,EAAM,8HAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FyN,EACCzM,GACUyJ,KAAKoG,KAAK7P,EAAW,GAAGlJ,QAChC,GAAO,EAAM,wGAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FwK,EACCxJ,IACWA,EAAW,GAAGlJ,QAAU,GAAGgZ,SAAS,IAC7C,GAAO,EAAM,6DAEpB5R,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FwK,EACCxJ,IACWA,EAAW,GAAGlJ,QAAU,GAAGgZ,SAAS,KAC7C,GAAO,EAAM,mEAEpB5R,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FwK,EACCxJ,IACWA,EAAW,GAAGlJ,QAAU,GAAGgZ,SAAS,IAC7C,GAAO,EAAM,6DAEpB5R,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FwK,EACCxJ,GACWA,EAAW,GAAGlJ,MAAOgZ,YAC9B,GAAO,EAAM,kEAEpB5R,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGwK,EACCxJ,IACWA,EAAW,GAAGlJ,QAAU,GAAGgZ,SAAS9P,EAAW,GAAGlJ,QAC3D,GAAO,EAAM,qEAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7Fd,KACC8B,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAM,wDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,GACUsP,OAAOI,SAAS1P,EAAW,GAAGlJ,QACtC,GAAO,EAAM,qGAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGd,KACC8B,GACUsP,OAAOI,SAAS1P,EAAW,GAAGlJ,MAAOkJ,EAAW,GAAGlJ,QAC3D,GAAO,EAAM,8GAOjB,YAAYA,GACf,MAAO,GAAaA,EAAMA,QF4rBQ,GAC/BiZ,EAAY,IGn2BjB,cAA0B,EAI5B,YAAYzO,GACR/B,MAAM,QAAS,KAAM,qEAHzB,KAAA8P,YAAc,GAIVnR,KAAKoD,UAAYA,EAEjBpD,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa8P,EAAqB5X,IAAYA,EAAMA,MAAQwY,OAAOU,YAAa,EAAMlY,EAAWsM,QAAQ,EAAM,mEAC/IlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa8P,EAAqB5X,IAAYA,EAAMA,MAAQwY,OAAOW,YAAa,EAAMnY,EAAWsM,QAAQ,EAAM,qEAC/IlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa8P,EAAqB5X,IAAYA,EAAMA,MAAQwY,OAAOY,MAAO,EAAMpY,EAAWsM,QAAQ,EAAM,0CACzIlG,KAAKyJ,aAAa,IAAI/I,EAAU,oBAAqB8P,EAAqB5X,IAAYA,EAAMA,MAAQwY,OAAOa,oBAAqB,EAAMrY,EAAWsM,QAAQ,EAAM,+CAC/JlG,KAAKyJ,aAAa,IAAI/I,EAAU,oBAAqB8P,EAAqB5X,IAAYA,EAAMA,MAAQwY,OAAOc,oBAAqB,EAAMtY,EAAWsM,QAAQ,EAAM,+CAE/JlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAIjC,UAAUnR,GACN,OAAOJ,KAAKmR,YAAYxM,QAAQvE,IAAS,GAAKiB,MAAMoK,UAAUrL,GAGlE,OAEIJ,KAAKmR,YAAc,CAACX,EAAoBvB,GAExCjP,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,eAAgBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3G,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,sCAAsC,IAE3DoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,sCAAsC,IAE3DoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQwY,OAAOe,WAAWrQ,EAAW,GAAGlJ,SAEvD,GAAO,EAAO,+GAA+G,IAGpIoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IAAKuM,EAC3DnN,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,sDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IAAK8N,EAC1D1O,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,qDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK6L,EACxDzM,GAAwByJ,KAAKuF,MAAMhP,EAAW,GAAGlJ,QAAW,GAAO,EAAO,kEAE/EoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,eAAgBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC5FyN,EACCzM,IACG,IAAI2P,EAAK3P,EAAW,GAAGlJ,MACnB8Y,EAAK5P,EAAW,GAAGlJ,MACvB,OAAI6Y,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,IACR,GAAO,EAAO,qKAErB1R,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,eAAgBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC5FoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASkJ,EAAW,GAAGlJ,OAC7C,GAAO,EAAO,gFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAO,sDAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GACUyJ,KAAKuF,MAAMhP,EAAW,GAAGlJ,QACjC,GAAO,EAAO,0CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG0P,EACC1O,GACUsP,OAAOe,WAAWrQ,EAAW,GAAGlJ,QACxC,GAAO,EAAM,oDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/FwK,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAM,qDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/Fd,KACC8B,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAM,sDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,GACUsP,OAAOe,WAAWrQ,EAAW,GAAGlJ,QACxC,GAAO,EAAM,mGAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/FoO,EACCpN,GACUsP,OAAOgB,MAAMtQ,EAAW,GAAGlJ,QACnC,GAAO,EAAM,yFAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjDwM,EACCpN,GACUsP,OAAOgB,MAAMtQ,EAAW,GAAGlJ,QACnC,GAAO,EAAO,0EAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/FoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASyZ,KAC/B,GAAO,EAAM,gFAEpBrS,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtDwM,EACCpN,GACUA,EAAW,GAAGlJ,OAASyZ,KAC/B,GAAO,EAAO,gEAIlB,YAAYzZ,GACf,MAAO,GAAaA,EAAMA,QH8sBI,GAC3B0Z,EAAa,IIp2BlB,cAA2B,EAI7B,YAAYlP,GACR/B,MAAM,SAAU,KAAM,sEAH1B,KAAA8P,YAAc,GAIVnR,KAAKoD,UAAYA,EAEjBpD,KAAKyJ,aAAa,IAAI/I,EAAU,YAAauO,EAAsBrW,IAAYA,EAAMA,MAAQwY,OAAOU,YAAa,EAAMlY,EAAWsM,QAAQ,EAAM,oEAChJlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAauO,EAAsBrW,IAAYA,EAAMA,MAAQwY,OAAOW,YAAa,EAAMnY,EAAWsM,QAAQ,EAAM,sEAChJlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAauO,EAAsBrW,IAAYA,EAAMA,MAAQwY,OAAOY,MAAO,EAAMpY,EAAWsM,QAAQ,EAAM,2CAC1IlG,KAAKyJ,aAAa,IAAI/I,EAAU,oBAAqBuO,EAAsBrW,IAAYA,EAAMA,MAAQwY,OAAOa,oBAAqB,EAAMrY,EAAWsM,QAAQ,EAAM,gDAChKlG,KAAKyJ,aAAa,IAAI/I,EAAU,oBAAqBuO,EAAsBrW,IAAYA,EAAMA,MAAQwY,OAAOc,oBAAqB,EAAMtY,EAAWsM,QAAQ,EAAM,gDAEhKlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAIjC,UAAUnR,GACN,OAAOJ,KAAKmR,YAAYxM,QAAQvE,IAAS,GAAKiB,MAAMoK,UAAUrL,GAGlE,OAEIJ,KAAKmR,YAAc,CAAClC,GAEpBjP,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,eAAgBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3G,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,uCAAuC,IAE5DoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,uCAAuC,IAE5DoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQwY,OAAOe,WAAWrQ,EAAW,GAAGlJ,SAEvD,GAAO,EAAO,iHAAiH,IAGtIoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IAAKuM,EAC3DnN,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,uDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IAAK8N,EAC1D1O,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,sDACnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK6L,EACxDzM,GAAwByJ,KAAKuF,MAAMhP,EAAW,GAAGlJ,QAAW,GAAO,EAAO,mEAE/EoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,gBAAiBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FyN,EACCzM,IACG,IAAI2P,EAAK3P,EAAW,GAAGlJ,MACnB8Y,EAAK5P,EAAW,GAAGlJ,MACvB,OAAI6Y,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,IACR,GAAO,EAAO,qKAErB1R,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,gBAAiBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASkJ,EAAW,GAAGlJ,OAC7C,GAAO,EAAO,gFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAO,sDAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GACUyJ,KAAKuF,MAAMhP,EAAW,GAAGlJ,QACjC,GAAO,EAAO,0CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGmO,EACCnN,GACUsP,OAAOe,WAAWrQ,EAAW,GAAGlJ,QACxC,GAAO,EAAM,qDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGwK,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAM,qDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAM,uDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,GACUsP,OAAOe,WAAWrQ,EAAW,GAAGlJ,QACxC,GAAO,EAAM,oGAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGoO,EACCpN,GACUsP,OAAOgB,MAAMtQ,EAAW,GAAGlJ,QACnC,GAAO,EAAM,0FAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjDwM,EACCpN,GACUsP,OAAOgB,MAAMtQ,EAAW,GAAGlJ,QACnC,GAAO,EAAO,0EAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASyZ,KAC/B,GAAO,EAAM,iFAEpBrS,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtDwM,EACCpN,GACUA,EAAW,GAAGlJ,OAASyZ,KAC/B,GAAO,EAAO,gEAIlB,YAAYzZ,GACf,MAAO,GAAaA,EAAMA,QJ+sBM,GAC7B2Z,EAAgB,IKr2BrB,cAA8B,EAIhC,YAAYnP,GACR/B,MAAM,YAAa,KAAM,oEAH7B,KAAA8P,YAAc,GAIVnR,KAAKoD,UAAYA,EAEjBpD,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAIjC,UAAUnR,GACN,OAAOJ,KAAKmR,YAAYxM,QAAQvE,IAAS,GAAKiB,MAAMoK,UAAUrL,GAGlE,OAEIJ,KAAKmR,YAAc,CAAC/B,EAAmB9D,GAEvCtL,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvG,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,0CAA0C,IAG/DoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IAAK0M,EACzDtN,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,uDAEnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,mBAAoBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyN,EACCzM,IACG,IAAI2P,EAAK3P,EAAW,GAAGlJ,MACnB8Y,EAAK5P,EAAW,GAAGlJ,MACvB,OAAI6Y,EAAKC,EAAW,EAChBD,EAAKC,GAAY,EACd,IACR,GAAO,EAAO,qKAErB1R,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,mBAAoBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASkJ,EAAW,GAAGlJ,OAC7C,GAAO,EAAO,gFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAO,sDAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GACmBA,EAAW,GAAGlJ,MAAOoY,WAAW,IACjD,GAAO,EAAO,0CAErBhR,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD0M,EACCtN,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAO,2CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACvG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyN,EACCzM,GACUsP,OAAOI,SAAS1P,EAAW,GAAGlJ,MAAOkJ,EAAW,GAAGlJ,QAC3D,GAAO,EAAM,mEAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGsO,EACCtN,GACmBA,EAAW,GAAGlJ,MAAOgZ,SAAS9P,EAAW,GAAGlJ,OAAOyW,OAAO,IAC3E,GAAO,EAAM,iFAEpBrP,KAAKwJ,UAAU,IAAIzI,EAAO,kBAAmB,IAAI2B,EAAc,CAC3D,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyN,EACCzM,GACmBA,EAAW,GAAGlJ,MAAOoY,WAAW,IACjD,GAAO,EAAM,qEAEpBhR,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACCpN,GAC+D,MAA5CA,EAAW,GAAGlJ,MAAO4Z,MAAM,eAC5C,GAAO,EAAM,sFAEpBxS,KAAKwJ,UAAU,IAAIzI,EAAO,kBAAmB,IAAI2B,EAAc,CAC3D,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACCpN,GACkE,MAA/CA,EAAW,GAAGlJ,MAAO4Z,MAAM,kBAC5C,GAAO,EAAM,uGAEpBxS,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACCpN,GAC2D,MAAxCA,EAAW,GAAGlJ,MAAO4Z,MAAM,WAC5C,GAAO,EAAM,mEAEhBxS,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CAC5D,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACCpN,GAC+D,MAA5CA,EAAW,GAAGlJ,MAAO4Z,MAAM,eAC5C,GAAO,EAAM,4GAEpBxS,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGsO,EACCtN,GACmBA,EAAW,GAAGlJ,MAAO+W,qBACtC,GAAO,EAAM,8CAEpB3P,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGsO,EACCtN,GACmBA,EAAW,GAAGlJ,MAAO8W,qBACtC,GAAO,EAAM,+CAEpB1P,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,aAAcqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGd,KACC8B,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAM,sDAKjB,YAAYA,GACf,MAAO,GAAaA,EAAMA,QLmtBY,GACnC6Z,EAAc,IMt2BnB,cAA4B,EAI9B,YAAYrP,GACR/B,MAAM,UAAW,KAAM,uEAH3B,KAAA8P,YAAc,GAIVnR,KAAKoD,UAAYA,EAEjBpD,KAAKyJ,aAAa,IAAI/I,EAAU,OAAQV,KAAOpH,IAAYA,EAAMA,OAAQ,IAAQ,EAAMgB,EAAWsM,QAAQ,EAAM,+CAChHlG,KAAKyJ,aAAa,IAAI/I,EAAU,QAASV,KAAOpH,IAAYA,EAAMA,OAAQ,IAAS,EAAMgB,EAAWsM,QAAQ,EAAM,gDAElHlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAIjC,UAAUnR,GACN,OAAOJ,KAAKmR,YAAYxM,QAAQvE,IAAS,GAAKiB,MAAMoK,UAAUrL,GAGlE,OAEIJ,KAAKmR,YAAc,CAACjC,GAEpBlP,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,gBAAiBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7G,KACCgB,IAEGA,EAAW,GAAGlJ,MAAQkJ,EAAW,GAAGlJ,QAErC,GAAO,EAAO,wCAAwC,IAE7DoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3G,KACCgB,IAEGA,EAAW,GAAGlJ,MAAyB,MAAjBkJ,EAAW,IAAmD,QAArCA,EAAW,GAAGlJ,MAAM2W,gBAEpE,GAAO,EAAO,qLAAuL,IAE5MvP,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IAAKwM,EAC5DpN,GAAwBA,EAAW,GAAGlJ,OAAU,GAAO,EAAO,wDAEnEoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,iBAAkBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC9FyN,EACCzM,GACYA,EAAW,GAAGlJ,OACdkJ,EAAW,GAAGlJ,MACL,EAAI,GACvB,GAAO,EAAO,sGAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,iBAAkBqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC9FoO,EACCpN,GACUA,EAAW,GAAGlJ,OAASkJ,EAAW,GAAGlJ,OAC7C,GAAO,EAAO,gFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GACU,GAAKA,EAAW,GAAGlJ,OAC3B,GAAO,EAAO,sDAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GACoBA,EAAW,GAAGlJ,MAAS,EAAI,GAC7C,GAAO,EAAO,0CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxDwM,EACCpN,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAO,8CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,gBAAiBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7Gd,KACC8B,GACUA,EAAW,GAAGlJ,OACtB,GAAO,EAAM,uDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GoO,EACCpN,GACiC,MAAvBA,EAAW,GAAGlJ,OAAgE,QAAtCkJ,EAAW,GAAGlJ,MAAO2W,eACrE,GAAO,EAAM,iMAEpBvP,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GoO,EACCpN,GACiC,MAAvBA,EAAW,GAAGlJ,OAAgE,QAAtCkJ,EAAW,GAAGlJ,MAAO2W,eACrE,GAAO,EAAM,iMAKjB,YAAY3W,GACf,MAAO,GAAaA,EAAMA,QN8vBQ,GAE/B8Z,EAAiD,CACxD,CAAC/Y,EAAUK,iBAAkBuU,EAC7B,CAAC5U,EAAUM,uBAAwBuW,EACnC,CAAC7W,EAAUO,iBAAkBgV,EAC7B,CAACvV,EAAUQ,gBAAiBmR,EAC5B,CAAC3R,EAAUS,cAAegV,EAC1B,CAACzV,EAAUuC,aAAcwN,ICj3B7B,SAAKqH,GACD,uBAAQ,+BAAY,uCAAgB,6CAAmB,2CAAkB,2CAD7E,CAAKA,MAAU,KAIf,IMIY4B,ENYN,MAAO,EAuBT,cARA,KAAAC,YAA2B,CACvBjZ,EAAUoF,MAAOpF,EAAUqF,IAAKrF,EAAUsF,SAK9C,KAAA4T,qBAAqD,GAGjD7S,KAAK6S,qBAAqBlZ,EAAU4C,aAAe5C,EAAU6C,aAC7DwD,KAAK6S,qBAAqBlZ,EAAUgD,kBAAoBhD,EAAUiD,kBAClEoD,KAAK6S,qBAAqBlZ,EAAU8C,mBAAqB9C,EAAU+C,mBACnEsD,KAAK6S,qBAAqBlZ,EAAU6C,cAAgB7C,EAAU4C,YAC9DyD,KAAK6S,qBAAqBlZ,EAAUiD,mBAAqBjD,EAAUgD,iBACnEqD,KAAK6S,qBAAqBlZ,EAAU+C,oBAAsB/C,EAAU8C,kBAGxE,IAAIqW,GAaA,GAXA9S,KAAK8S,MAAQA,EAAM/C,QAAQ,IAAU,KACrC/P,KAAK+S,UAAY,GACjB/S,KAAKgT,UAAY,GACjBhT,KAAKiT,aAAe,KACpBjT,KAAKkT,aAAe,GACpBlT,KAAKmT,IAAM,EACXnT,KAAKoJ,KAAO,EACZpJ,KAAKqJ,OAAS,EACdrJ,KAAKoT,sBAAwB,KAGT,GAAhBN,EAAM9Q,OACN,MAAO,CAAEqR,OAAQrT,KAAK+S,UAAWO,OAAQtT,KAAKgT,UAAWC,aAAc,MAQ3E,IALAjT,KAAKuT,YAAcT,EAAMzD,OAAO,GAEhCrP,KAAKwT,SAAWV,EAAM9Q,OAAS,EAAI8Q,EAAMzD,OAAO,GAnE1C,SAsECrP,KAAKuT,aACRvT,KAAKyT,YAGT,GAAIzT,KAAKkT,aAAalR,OAAS,EAAG,CAC9B,IAAI0R,EAAc1T,KAAKkT,aAAaS,MAChCC,EAAgB5T,KAAK6S,qBAAqBa,GAE9C1T,KAAK6T,gBAAgB/Z,EAAkB4Z,GAAe,IAAM5Z,EAAkB8Z,IAGlF,MAAO,CACHP,OAAQrT,KAAK+S,UACbO,OAAQtT,KAAKgT,UACbC,aAAcjT,KAAKiT,cAK3B,oBAAoBa,GAChB,GAAgC,GAA5B9T,KAAKkT,aAAalR,OAAa,CAC/B,IAAI0R,EAAc1T,KAAK6S,qBAAqBiB,GAE5C,YADA9T,KAAK6T,gBAAgB/Z,EAAkB4Z,GAAe,IAAM5Z,EAAkBga,IAGlF,IAAIC,EAAc/T,KAAKkT,aAAaS,MAChCd,EAAuB7S,KAAK6S,qBAAqBkB,GACjDD,GAAMjB,GACN7S,KAAK6T,gBAAgB/Z,EAAkBia,GAAe,IAAMja,EAAkB+Y,IAItF,gBAAgB7H,GACa,MAArBhL,KAAKiT,eAAsBjT,KAAKiT,aAAejI,GAGvD,OACIhL,KAAKmT,MACLnT,KAAKuT,YAAcvT,KAAKwT,SACpBxT,KAAKmT,IAAM,EAAInT,KAAK8S,MAAM9Q,OAC1BhC,KAAKwT,SAAWxT,KAAK8S,MAAMzD,OAAOrP,KAAKmT,IAAM,GAE7CnT,KAAKwT,SAhHH,IAkHNxT,KAAKqJ,SAKT,YAEI,IAAI2K,EAAOhU,KAAKuT,YAEZU,EAAmB5U,EAAgB2U,GAEvC,GAAwB,MAApBC,EAA0B,CAC1B,OAAQA,GACJ,KAAKta,EAAU8C,kBACX,MAAqB,KAAjBuD,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUkD,uBAAwB,MACjDmD,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAU8C,kBAAmB,KAC5CuD,KAAKkT,aAAanP,KAAKkQ,QACvBjU,KAAKmU,QAGb,KAAKxa,EAAU+C,mBACXsD,KAAKoU,oBAAoBH,GACzB,MACJ,KAAKta,EAAU4C,YACXyD,KAAKkT,aAAanP,KAAKkQ,GACvB,MACJ,KAAKta,EAAU6C,aACXwD,KAAKoU,oBAAoBH,GACzB,MACJ,KAAKta,EAAUgD,iBACXqD,KAAKkT,aAAanP,KAAKkQ,GACvB,MACJ,KAAKta,EAAUiD,kBACXoD,KAAKoU,oBAAoBH,GACzB,MACJ,KAAKta,EAAU0E,IACX,MAAqB,KAAjB2B,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAU0E,IAAK,MAC9B2B,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUyE,UAAW,UACpC4B,KAAKmU,QAGb,KAAKxa,EAAU2E,GACX,MAAqB,KAAjB0B,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAU2E,GAAI,MAC7B0B,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKqU,UAAU,mDAAoD,GACnErU,KAAKkU,UAAUva,EAAU2E,GAAI,WAC7B0B,KAAKmU,QAGb,KAAKxa,EAAUuD,eACX,MAAqB,KAAjB8C,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUsE,yBAA0B,MACnD+B,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUuD,eAAgB,UACzC8C,KAAKmU,QAGb,KAAKxa,EAAU4E,IACX,MAAqB,KAAjByB,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUkE,SAAU,MACnCmC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAU4E,IAAK,UAC9ByB,KAAKmU,QAGb,KAAKxa,EAAUwD,SACX,MAAqB,KAAjB6C,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUuE,mBAAoB,MAC7C8B,KAAKmU,YACLnU,KAAKmU,QAEmB,KAAjBnU,KAAKwT,cACZxT,KAAKsU,sBAEmB,KAAjBtU,KAAKwT,cACZxT,KAAKuU,uBAGTvU,KAAKkU,UAAUva,EAAUwD,SAAU,UACnC6C,KAAKmU,QAET,KAAKxa,EAAUqD,OACX,MAAqB,KAAjBgD,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUwE,iBAAkB,MAC3C6B,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUqD,OAAQ,UACjCgD,KAAKmU,QAGb,KAAKxa,EAAUsD,KACX,MAAqB,KAAjB+C,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAU4D,WAAY,MACrCyC,KAAKmU,YACLnU,KAAKmU,QAEmB,KAAjBnU,KAAKwT,UACZxT,KAAKkU,UAAUva,EAAUoE,eAAgB,MACzCiC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUsD,KAAM,UAC/B+C,KAAKmU,QAGb,KAAKxa,EAAU6D,MACX,MAAqB,KAAjBwC,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAU+D,aAAc,MACvCsC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAU6D,MAAO,UAChCwC,KAAKmU,QAGb,KAAKxa,EAAU8D,QACX,MAAqB,KAAjBuC,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUgE,eAAgB,MACzCqC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAU8D,QAAS,UAClCuC,KAAKmU,QAGb,KAAKxa,EAAUmD,IACX,MAAqB,KAAjBkD,KAAKwT,UAAmBxT,KAAKmT,IAAM,EAAInT,KAAK8S,MAAM9Q,QAAsC,KAA5BhC,KAAK8S,MAAM9S,KAAKmT,IAAM,IAClFnT,KAAKkU,UAAUva,EAAUgF,SAAU,OACnCqB,KAAKmU,OACLnU,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUmD,IAAK,UAC9BkD,KAAKmU,QAIb,KAAKxa,EAAUmE,WACX,MAAqB,KAAjBkC,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAUiE,MAAO,MAChCoC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUmE,WAAY,UACrCkC,KAAKmU,QAGb,KAAKxa,EAAUoD,MACX,MAAqB,KAAjBiD,KAAKwT,UACLxT,KAAKkU,UAAUva,EAAU2D,YAAa,MACtC0C,KAAKmU,YACLnU,KAAKmU,SAGAnU,KAAKwU,QAAQxU,KAAKwT,SAAU,KAChC,CAAC7Z,EAAUI,WAAYJ,EAAUK,gBAAiBL,EAAUM,sBAAuBN,EAAU6C,cAAcmI,QAAQ3E,KAAKoT,wBAA0B,EAK7H,KAAjBpT,KAAKwT,UACVxT,KAAKkU,UAAUva,EAAUqE,gBAAiB,MAC1CgC,KAAKmU,YACLnU,KAAKmU,SAGLnU,KAAKkU,UAAUva,EAAUoD,MAAO,UAChCiD,KAAKmU,aAVLnU,KAAKyU,YAab,KAAK9a,EAAUyD,YAEX,YADA4C,KAAK0U,uBAET,KAAK/a,EAAU0D,YAEX,YADA2C,KAAK2U,oBAET,KAAKhb,EAAUsF,QAKX,OAJAe,KAAKkU,UAAUva,EAAUsF,QAAS,MAClCe,KAAKoJ,OACLpJ,KAAKqJ,OAAS,OACdrJ,KAAKmU,OAET,KAAKxa,EAAUoF,MACf,KAAKpF,EAAUqF,IAEX,YADAgB,KAAK4U,WAET,KAAKjb,EAAU4F,SAEX,YADAS,KAAKmU,OAET,KAAKxa,EAAUmF,GAEX,YADAkB,KAAK6U,gBAMb,OAFA7U,KAAKkU,UAAUD,EAAkBD,QACjChU,KAAKmU,OAOLnU,KAAKwU,QAAQR,EAAM,IACnBhU,KAAKyU,YAITzU,KAAK8U,yBAIT,UAAUhB,EAAeiB,EAAiC3L,EAAepJ,KAAKoJ,KAAMC,EAAiBrJ,KAAKqJ,OAAQrH,GAAkB,GAAK+S,GAAM/S,QAC3I,IAAInJ,EAAW,CACXib,GAAIA,EACJlb,MAAOmc,EACP/Q,SAAU,CACNqF,OAAQA,EACRD,KAAMA,EACNpH,OAAQA,IAIVhC,KAAK4S,YAAYjO,QAAQmP,IAAO,IAClC9T,KAAKoT,sBAAwBU,GAGjC9T,KAAK+S,UAAUhP,KAAKlL,GAGxB,UAAUkc,EAAc/S,EAAgBgT,EAAyB,QAAS5L,EAAepJ,KAAKoJ,KAAMC,EAAiBrJ,KAAKqJ,QACtHrJ,KAAKgT,UAAUjP,KAAK,CAChBgR,KAAMA,EACN/Q,SAAU,CACNoF,KAAMA,EACNC,OAAQA,EACRrH,OAAQA,GAEZiT,MAAOD,IAMf,QAAQ9N,EAAWgO,GACf,IAAIC,EAAWjO,EAAE8J,WAAW,GAE5B,OAAW,IAARkE,EAAoBC,GAAY,IAAMA,GAAY,GAC1C,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,GAARD,EAAmBC,GAAY,IAAMA,GAAY,GACzC,IAARD,EAAoBC,GAAY,IAAMA,GAAY,IAASA,GAAY,IAAMA,GAAY,KAC1FA,GAAY,IAAMA,GAAY,QADhC,EAIJ,WACI,IAAI9L,EAASrJ,KAAKqJ,OACdD,EAAOpJ,KAAKoJ,KAEZgM,EAAWpV,KAAKmT,IACpB,KAA2B,KAApBnT,KAAKuT,aAA0C,MAApBvT,KAAKuT,aACnCvT,KAAKmU,OAGT,IAAIkB,EAASrV,KAAKmT,IAClBnT,KAAKkU,UAAUva,EAAUoF,MAAOiB,KAAK8S,MAAMlD,UAAUwF,EAAUC,GAASjM,EAAMC,GAKlF,uBACI,IAAIA,EAASrJ,KAAKqJ,OACdD,EAAOpJ,KAAKoJ,KAChBpJ,KAAKmU,OACL,IAAIH,EAAOhU,KAAKuT,YAChB,GAAY,MAARS,EAAc,CACd,IAAIsB,EAAa7V,EAAmBO,KAAKwT,UACvB,MAAd8B,GACAtV,KAAKqU,UAAU,wBAA0BrU,KAAKwT,SAAW,kBAAmB,GACvD,KAAjBxT,KAAKwT,WACLQ,EAAOhU,KAAKwT,SACZxT,KAAKmU,UAGTH,EAAOsB,EACPtV,KAAKmU,QAGbnU,KAAKmU,OACmB,KAApBnU,KAAKuT,YACLvT,KAAKqU,UAAU,iDAAkD,GAEjErU,KAAKmU,OAGTnU,KAAKkU,UAAUva,EAAUS,aAAc4Z,EAAM5K,EAAMC,GAIvD,oBACI,IAAID,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OACd0L,EAAO,GAIX,IAFA/U,KAAKmU,SAEQ,CACT,IAAIH,EAAOhU,KAAKuT,YAChB,GAAY,MAARS,EACA,GAAqB,KAAjBhU,KAAKwT,SACLxT,KAAKmU,WAEF,CACH,IAAImB,EAAa7V,EAAmBO,KAAKwT,UACvB,MAAd8B,EACAtV,KAAKqU,UAAU,wBAA0BrU,KAAKwT,SAAW,kBAAmB,IAE5EQ,EAAOsB,EACPtV,KAAKmU,YAGV,IAAY,KAARH,EAAa,CACpBhU,KAAKmU,OACL,MACG,GAAY,MAARH,GA/cT,KA+cyBA,EAAiB,CACxChU,KAAKqU,UAAU,kEAAmEU,EAAK/S,OAAS,EAAG,QAASoH,EAAMC,GAClH,OAEJ0L,GAAQf,EACRhU,KAAKmU,OAGTnU,KAAKkU,UAAUva,EAAUQ,eAAgB4a,EAAM3L,EAAMC,EAAQ0L,EAAK/S,OAAS,GAI/E,sBACI,IAAIoH,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OACdkM,GAA8B,EAE9BR,EAAO,KAIX,IAHA/U,KAAKmU,OACLnU,KAAKmU,SAEQ,CACT,IAAIH,EAAOhU,KAAKuT,YAChB,GAAY,KAARS,GAAgC,KAAjBhU,KAAKwT,SAAiB,CACrCxT,KAAKmU,OACLnU,KAAKmU,OACLY,GAAQ,KACR,MAEJ,GA5eE,KA4eEf,EAAiB,CACjBhU,KAAKqU,UAAU,gFAAiF,GAChG,MAEQ,MAARL,GACAhU,KAAKoJ,OACLpJ,KAAKqJ,OAAS,EACdkM,GAAqB,EACrBR,GAAQf,GACAuB,GAA8B,KAARvB,IAC9Be,GAAQf,EACRuB,GAAqB,GAGzBvV,KAAKmU,OAGTnU,KAAKkU,UAAUva,EAAUwF,QAAS4V,EAAM3L,EAAMC,GAIlD,sBACI,IAAID,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OAEd0L,EAAO,KAIX,IAHA/U,KAAKmU,OACLnU,KAAKmU,SAEQ,CACT,IAAIH,EAAOhU,KAAKuT,YAChB,GAAY,MAARS,EACA,MAEJ,GA9gBE,KA8gBEA,EAEA,MAEJe,GAAQf,EACRhU,KAAKmU,OAGTnU,KAAKkU,UAAUva,EAAUwF,QAAS4V,EAAM3L,EAAMC,GAKlD,YACI,IAAID,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OAEdsI,EAAe,EACI,KAApB3R,KAAKuT,cACJ5B,GAAQ,EACR3R,KAAKmU,QAGT,IAAIiB,EAAWpV,KAAKmT,IAEhBqC,EAAYxV,KAAKuT,YAErBvT,KAAKmU,OAEL,IAAIsB,EAAgB,GAapB,IAXiB,KAAbD,GAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK7Q,QAAQ3E,KAAKuT,cAAgB,IAC7E,KAApBvT,KAAKuT,aACLkC,EAAQ,GACRzV,KAAKmU,QACsB,KAApBnU,KAAKuT,aACZkC,EAAQ,EACRzV,KAAKmU,QACFsB,EAAQ,EACfL,EAAWpV,KAAKmT,KAGbnT,KAAKwU,QAAQxU,KAAKuT,YAAakC,IAClCzV,KAAKmU,OAGT,IAAIL,EAAKna,EAAUK,gBAEnB,GAAwB,KAApBgG,KAAKuT,YAAoB,CAIzB,IAHAO,EAAKna,EAAUM,sBAEf+F,KAAKmU,OACEnU,KAAKwU,QAAQxU,KAAKuT,YAAa,KAClCvT,KAAKmU,OAGI,IAATsB,GACAzV,KAAKqU,UAAU,qEAAsErU,KAAKmT,IAAMiC,EAAU,QAASpV,KAAKoJ,KAAMpJ,KAAKqJ,QAAUrJ,KAAKmT,IAAMiC,IAKhK,IAAIF,EAAOlV,KAAK8S,MAAMlD,UAAUwF,EAAUpV,KAAKmT,KAE/CiC,EAAWpV,KAAKmT,IAChB,IAAIuC,EAAmB,EAEnBC,GAA0B,EAE9B,GAAwB,KAApB3V,KAAKuT,YAAoB,CACzBoC,GAAiB,EACjB3V,KAAKmU,OACL,IAAIyB,EAA2B5V,KAAKmT,IAOpC,IAJuB,KAApBnT,KAAKuT,aACJvT,KAAKmU,OAGFnU,KAAKwU,QAAQxU,KAAKuT,YAAa,KAClCvT,KAAKmU,OAEI,IAATsB,GACAzV,KAAKqU,UAAU,qEAAsErU,KAAKmT,IAAMiC,EAAU,QAASpV,KAAKoJ,KAAMpJ,KAAKqJ,QAAUrJ,KAAKmT,IAAMiC,IAE5J,IAAIS,EAAiB7V,KAAK8S,MAAMlD,UAAUgG,EAAkB5V,KAAKmT,KACjEuC,EAAWtE,OAAOI,SAASqE,GAGR,KAApB7V,KAAKuT,aAA0C,KAApBvT,KAAKuT,cACzB5Z,EAAUM,sBAChB+F,KAAKmU,OACO,IAATsB,GACCzV,KAAKqU,UAAU,qEAAsErU,KAAKmT,IAAMiC,EAAU,QAASpV,KAAKoJ,KAAMpJ,KAAKqJ,QAAUrJ,KAAKmT,IAAMiC,KAIhK,IAAIxc,EAAiBkb,GAAMna,EAAUK,gBAAmBoX,OAAOI,SAAS0D,EAAMO,GAASrE,OAAOe,WAAW+C,GACzGtc,GAAS+Y,EACM,GAAZ+D,IAAe9c,GAAS2S,KAAKuK,IAAI,GAAIJ,IAExC1V,KAAKkU,UAAUJ,EAAIlb,EAAOwQ,EAAMC,GAIpC,gBACI,IAAID,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OAAS,EACvB+L,EAAWpV,KAAKmT,IAChBa,EAAOhU,KAAKuT,YAEhB,KAAgC,MAAzBlU,EAAgB2U,KAAkBhU,KAAK+V,QAAQ/B,IA7nBhD,KA6nB2DA,GAC7DhU,KAAKmU,OACLH,EAAOhU,KAAKuT,YAGhB,IAAI8B,EAASrV,KAAKmT,IAEd4B,EAAO/U,KAAK8S,MAAMlD,UAAUwF,EAAUC,GAC1CrV,KAAKkU,UAAUva,EAAUmF,GAAGiW,EAAM3L,EAAMC,EAAQ0L,EAAK/S,OAAS,GAGlE,yBACI,IAAIoH,EAAOpJ,KAAKoJ,KACZC,EAASrJ,KAAKqJ,OAEd+L,EAAWpV,KAAKmT,IAChBa,EAAOhU,KAAKuT,YAEhB,KAAgC,MAAzBlU,EAAgB2U,KAAkBhU,KAAK+V,QAAQ/B,IA/oBhD,KA+oB2DA,GAC7DhU,KAAKmU,OACLH,EAAOhU,KAAKuT,YAGhB,IAAI8B,EAASrV,KAAKmT,IAEd4B,EAAO/U,KAAK8S,MAAMlD,UAAUwF,EAAUC,GAEtCvB,EAAKtU,EAAYuV,GACrB,GAAU,MAANjB,GAA2B,iBAANA,EAyBzB9T,KAAKkU,UAAUva,EAAUI,WAAYgb,EAAM3L,EAAMC,QAvB7C,OAAQyK,GACJ,KAAKna,EAAUU,KACX2F,KAAKkU,UAAUva,EAAUO,iBAAiB,EAAMkP,EAAMC,GACtD,MACJ,KAAK1P,EAAUW,MACX0F,KAAKkU,UAAUva,EAAUO,iBAAiB,EAAOkP,EAAMC,GACvD,MACJ,KAAK1P,EAAU0C,aACf,KAAK1C,EAAU2C,eACP0D,KAAKoT,uBAAyBzZ,EAAUmD,IACxCkD,KAAKkU,UAAUva,EAAUI,WAAYgb,EAAM3L,EAAMC,GAEjDrJ,KAAKkU,UAAUJ,EAAIiB,EAAM3L,EAAMC,GAEnC,MACJ,QACIrJ,KAAKkU,UAAUJ,EAAIiB,EAAM3L,EAAMC,IAW/C,QAAQ2K,GACJ,MAAe,KAARA,GAAuB,MAARA,GO3rBxB,MAAO,EAQT,cALA,KAAAgC,4BAAwC,CAAC,MAEzC,KAAAC,YAAuB,kBASvB,OACIlO,OAAOC,UAAUkO,uCAAuC,SAAUlW,MAClE+H,OAAOC,UAAUmO,qCAAqC,SAAUnW,MAGpE,6BAA6BoW,EAAiCpS,EAA2BqS,EAAYC,EAA6CC,GAE9I,IAAIC,EAAqCxW,KAAKyW,OAAOL,GAErD,OAAOM,QAAQC,QACXH,GAIR,wBAAwBA,GACpB,IAAK,IAAI7e,EAAI,EAAGA,EAAI6e,EAAMxU,OAAS,EAAGrK,IAAK,CACvC,IAAIif,EAAIJ,EAAM7e,GACVkf,EAAKL,EAAM7e,EAAI,GACnB,KAAIif,EAAExO,MAAM0O,cAAgBD,EAAGzO,MAAM2O,kBACjCH,EAAExO,MAAM0O,eAAiBD,EAAGzO,MAAM2O,gBAClC,GAAIH,EAAExO,MAAM4O,WAAaH,EAAGzO,MAAM6O,YAC9BT,EAAMU,OAAOvf,EAAI,EAAG,QAEpB,GAAyB,GAArBif,EAAExO,MAAM4O,WAAkBJ,EAAE7B,KAAK/S,OAAS,GAA6B,GAAxB6U,EAAGzO,MAAM6O,aAAoBJ,EAAGzO,MAAM4O,UAAYH,EAAGzO,MAAM6O,aAA0B,IAAXJ,EAAG9B,KAAY,CACxI,IAAIoC,EAAQP,EAAE7B,KAAK/S,QAAU6U,EAAGzO,MAAM4O,UAAYH,EAAGzO,MAAM6O,aACvDE,EAAQ,GACRP,EAAE7B,KAAO6B,EAAE7B,KAAKqC,OAAO,EAAGD,GAC1BX,EAAMU,OAAOvf,EAAE,EAAG,IAEbwf,EAAQ,GAGbN,EAAGzO,MAAM4O,UAAYH,EAAGzO,MAAM6O,YAAcE,EAC5CX,EAAMU,OAAOvf,EAAG,GAChBA,MAIA6e,EAAMU,OAAOvf,EAAG,GAChBA,OASxB,+BAA+Bye,EAC3BE,EACAC,GAEA,IAAIC,EAAqCxW,KAAKyW,OAAOL,GAErD,OAAOM,QAAQC,QACXH,GAKR,OAAOJ,GAEH,IAAII,EAAqC,GAQrCzB,EAAOqB,EAAM/J,SAAStE,OAAOsP,OAAOC,oBAAoBC,IAExDC,GAAY,IAAI,GAAQC,IAAI1C,GAAM1B,OAItC,GAAiB,MAAbmE,EAAmB,MAAO,GAY9B,IAAIE,EAA2B,KAC3BC,EAAc,EAEdC,EAAmC,GACnCC,EAA0C,GAC1CC,GAAyB,EACzBC,EAA8B,EAC9BC,EAA4B,EAEhC,IAAK,IAAIrgB,EAAI,EAAGA,EAAI6f,EAAUxV,OAAQrK,IAAK,CAEvC,IAAIkB,EAAI2e,EAAU7f,GAGlB,OAFAogB,IAEQlf,EAAEib,IAEN,KAAKna,EAAU8B,cACXqc,GAAgB,EAChB,MACJ,KAAKne,EAAU+B,YAEP7C,EAAEmL,SAASqF,OAAS,GACpBrJ,KAAKiY,aAAazB,EAAO3d,EAAEmL,SAASoF,KAAM,EAAG,GAEjD,MACJ,KAAKzP,EAAUgD,iBAQX,GAPImb,IACAA,GAAgB,EAChBD,EAA8B9T,KAAK4T,EAAc,GACjDA,KAEJA,IACAC,EAAuB7T,KAAKlL,EAAEmL,SAASoF,MACd,MAArBsO,EAA2B,CAC3B,IAAI5D,EAAK4D,EAAkB5D,GACvBA,GAAMna,EAAU6C,cAAgBsX,GAAMna,EAAUI,YAAc+Z,GAAMna,EAAUkD,wBAC9EmD,KAAKkY,eAAeR,EAAmB7e,EAAG2d,EAAO,KAGzD,GAAI7e,EAAI6f,EAAUxV,OAAS,EAAG,CAC1B,IAAImW,EAASX,EAAU7f,EAAI,GACvBwgB,EAAOrE,IAAMna,EAAUsF,SAAWkZ,EAAOrE,IAAMna,EAAUoF,OACzDiB,KAAKoY,aAAa5B,EAAO2B,EAAOnU,SAASoF,KAAM+O,EAAOnU,SAASqF,OAAQ,GAG/E,MACJ,KAAK1P,EAAUiD,kBACPib,EAA8BA,EAA8B7V,OAAS,IAAM2V,IAC3EE,EAA8BlE,MAC9BgE,IAEA3X,KAAKiY,aAAazB,EAAO3d,EAAEmL,SAASoF,KAAM,EAAG,IAGjDuO,IACA,IAAIU,EAAeT,EAAuBjE,MAC1C,GAAoB,MAAhB0E,GAAwBA,GAAgBxf,EAAEmL,SAASoF,KAC1B,MAArBsO,GAA6BA,EAAkB1T,SAASoF,MAAQvQ,EAAEmL,SAASoF,MAC3EpJ,KAAK+P,QAAQyG,EAAO3d,EAAEmL,SAAUnL,EAAEmL,SAAU,KAAO,IAAIsU,OAxD7D,EAwDoEX,SAGlE,GAAIhgB,EAAI,EAAG,CACP,IAAIwgB,EAASX,EAAU7f,EAAI,GACvBwgB,EAAOrE,IAAMna,EAAUoF,OAASoZ,EAAOrE,IAAMna,EAAUsF,SACvDe,KAAKoY,aAAa5B,EAAO3d,EAAEmL,SAASoF,KAAMvQ,EAAEmL,SAASqF,OAAQ,GAIzE,MACJ,KAAK1P,EAAU4C,YAEX,GADAyb,IACIrgB,EAAI6f,EAAUxV,OAAS,EAAG,CAC1B,IAAIuW,EAAaf,EAAU7f,EAAI,GAC3B6gB,EAAahB,EAAU7f,EAAI,GAC3B4gB,EAAWzE,IAAMna,EAAUoF,OAASyZ,EAAW1E,IAAMna,EAAUsF,UAC/De,KAAKiY,aAAazB,EAAO+B,EAAWvU,SAASoF,KAAMmP,EAAWvU,SAASqF,OAAQkP,EAAWvU,SAAShC,QACnGrK,IACI6gB,EAAW1E,IAAMna,EAAU6C,eAC3B7E,IACAqgB,MAIZ,GAAIrgB,EAAI,EAAG,CACP,IAAI8gB,EAAajB,EAAU7f,EAAI,GAC3B+gB,EAAalB,EAAU7f,EAAI,GAC3B8gB,EAAW3E,IAAMna,EAAUoF,OAAS2Z,EAAW5E,IAAMna,EAAUsF,SAAYe,KAAK2Y,iBAAiBD,EAAW5E,KAC1E,GAA9B2E,EAAWzU,SAAShC,QACpBhC,KAAKiY,aAAazB,EAAOiC,EAAWzU,SAASoF,KAAMqP,EAAWzU,SAASqF,OAAQ,GAI3F,MACJ,KAAK1P,EAAU6C,aAEX,GADAwb,IACIrgB,EAAI,EAAG,CACP,IAAI4gB,EAAaf,EAAU7f,EAAI,GAC3B6gB,EAAahB,EAAU7f,EAAI,GAC3B4gB,EAAWzE,IAAMna,EAAUoF,OAASyZ,EAAW1E,IAAMna,EAAUsF,SAC/De,KAAKiY,aAAazB,EAAO+B,EAAWvU,SAASoF,KAAMmP,EAAWvU,SAASqF,OAAQkP,EAAWvU,SAAShC,QAG3G,MACJ,KAAKrI,EAAUsF,QAEX,GADA8Y,EAAsB,EAClBpgB,EAAI6f,EAAUxV,OAAS,EAAG,CAE1B,IAAI4W,EAAsB5Y,KAAK2Y,iBAAiBjB,aAAiB,EAAjBA,EAAmB5D,IAC/D+E,EAAsB7Y,KAAK2Y,iBAAiB3Y,KAAK8Y,qBAAqBnhB,EAAG6f,GAAW1D,IAEpFiF,EAAgBvB,EAAU7f,EAAI,GAC9BqhB,EAASxB,EAAU7f,EAAI,GACvBshB,EAAqB,EAEzB,GAAIF,EAAcjF,IAAMna,EAAUsF,QAC9B,MAGJ,IAAIkY,EAAgB,EACpB,GAAI4B,EAAcjF,IAAMna,EAAUoF,MAAO,CACrC,GAAIia,EAAOlF,IAAMna,EAAUsF,QACvB,MAEJga,EAAqBF,EAAc/U,SAAShC,OAC5CrK,IACIqhB,EAAOlF,IAAMna,EAAUiD,oBACvBua,GAAS,GAIb4B,EAAcjF,IAAMna,EAAUiD,oBAC9Bua,GAAS,IAOV0B,GAAuBD,KAAqBzB,EAAQ,GAEvD,IAAI+B,EAAKvB,EAAcR,EACpBa,EAAoB,GACnBkB,IAEAA,EAAK,IAAGA,EAAK,GAEjB,IAAIC,EAhJN,EAgJ2BD,EAErBC,EAAqBF,EACrBjZ,KAAKoY,aAAa5B,EAAO3d,EAAEmL,SAASoF,KAAO,EAAG,EAAG+P,EAAqBF,GAC/DE,EAAqBF,GAC5BjZ,KAAKiY,aAAazB,EAAO3d,EAAEmL,SAASoF,KAAO,EAAG,EAAG6P,EAAqBE,GAG9E,MACJ,KAAKxf,EAAUoF,MACX,GAAIpH,EAAI6f,EAAUxV,OAAS,EAAG,CAE1B,GADgBwV,EAAU7f,EAAI,GAChBmc,IAAMna,EAAUwF,SACtBxH,EAAI,EAAG,CACS6f,EAAU7f,EAAI,GAChBmc,IAAMna,EAAUsF,SACtBpG,EAAEmL,SAAShC,OAAS,GACpBhC,KAAKiY,aAAazB,EAAO3d,EAAEmL,SAASoF,KAAMvQ,EAAEmL,SAASqF,OAAQxQ,EAAEmL,SAAShC,OAAS,IAMrG,MACJ,KAAKrI,EAAUiF,MACf,KAAKjF,EAAU8E,UACX,GAAI9G,EAAI,EAAG,CACP,IAAI8gB,EAAajB,EAAU7f,EAAI,GAC3B+gB,EAAalB,EAAU7f,EAAI,GAC3B8gB,EAAW3E,IAAMna,EAAUsF,SAAWyZ,EAAW5E,IAAMna,EAAUsF,SAAYe,KAAK2Y,iBAAiBD,EAAW5E,KAC1G2E,EAAW3E,IAAMna,EAAUoF,OAAuC,GAA9B0Z,EAAWzU,SAAShC,QACxDhC,KAAKiY,aAAazB,EAAOiC,EAAWzU,SAASoF,KACzCqP,EAAWzU,SAASqF,OAAQ,GAI5C,GAAI1R,EAAI6f,EAAUxV,OAAS,EAAG,CAC1B,IAAIoX,EAAY5B,EAAU7f,EAAI,GAC1ByhB,EAAUtF,IAAMna,EAAUwF,SAAWia,EAAUtF,IAAMna,EAAUoF,OAASqa,EAAUtF,IAAMna,EAAUsF,SAClGe,KAAKoY,aAAa5B,EAAO4C,EAAUpV,SAASoF,KAAMgQ,EAAUpV,SAASqF,OAAQ,GAGrF,MACJ,KAAK1P,EAAU+C,mBACc,MAArBgb,GAA6BA,EAAkB5D,IAAMna,EAAU8C,mBAC/DuD,KAAKkY,eAAeR,EAAmB7e,EAAG2d,EAAO,IAQ7D,GAAIxW,KAAK2Y,iBAAiB9f,EAAEib,IAAK,CAE7B,IAAIuF,EAAexgB,EAAEib,IAAMna,EAAU6D,OAASwC,KAAKsZ,gCAAgC3hB,EAAG6f,GAClF+B,EAAiB1gB,EAAEib,IAAMna,EAAU8D,SAAWuC,KAAKwZ,kCAAkC7hB,EAAG6f,GAE5F,GAAIO,GAAuB,GAA0B,MAArBL,GAA6B,CAAC/d,EAAU4C,YAAa5C,EAAUmE,WAAYnE,EAAUiF,OAAO+F,QAAQ+S,EAAkB5D,IAAM,EAAG,CAE3J,GAAInc,EAAI,EAAG,CACP,IAAI8hB,EAAcjC,EAAU7f,EAAI,GAC5B+hB,EAAUL,GAAgBE,EAAkB,EAAI,EAChDE,EAAY3F,IAAMna,EAAUoF,MACxB0a,EAAYzV,SAAShC,QAAU0X,GAC/B1Z,KAAKoY,aAAa5B,EAAOiD,EAAYzV,SAASoF,KAC1CqQ,EAAYzV,SAASqF,OAAQqQ,EAASD,EAAYzV,SAAShC,QAGrD,GAAV0X,GACA1Z,KAAKoY,aAAa5B,EAAO3d,EAAEmL,SAASoF,KAAMvQ,EAAEmL,SAASqF,OAAQ,GAIzE,GAAI1R,EAAI6f,EAAUxV,OAAS,EAAG,CAC1B,IAAIoX,EAAY5B,EAAU7f,EAAI,GAC1B+hB,EAAUL,EAAgB,EAAI,EAC9BD,EAAUtF,IAAMna,EAAUoF,OACtBwa,GAAkB5hB,EAAI6f,EAAUxV,OAAS,GAAKwV,EAAU7f,EAAI,GAAGmc,IAAMna,EAAU4C,cAC/Emd,EAAS,GAETN,EAAUpV,SAAShC,QAAU0X,GAC7B1Z,KAAKoY,aAAa5B,EAAO4C,EAAUpV,SAASoF,KACxCgQ,EAAUpV,SAASqF,OAAQqQ,EAASN,EAAUpV,SAAShC,UAG3DuX,GAAkBH,EAAUtF,IAAMna,EAAU4C,cAC5Cmd,EAAS,GAEC,GAAVA,GAAa1Z,KAAKoY,aAAa5B,EAAO4C,EAAUpV,SAASoF,KAAMgQ,EAAUpV,SAASqF,OAAQ,MAO1GxQ,EAAEib,IAAMna,EAAUoF,OAASlG,EAAEib,IAAMna,EAAUsF,UAC7CyY,EAAoB7e,GAO5B,OAFAmH,KAAK2Z,wBAAwBnD,GAEtBA,EAGX,qBAAqBoD,EAAsBpC,GAEvC,GAAGoC,GAAgBpC,EAAUxV,OAAS,EAAG,OAAOwV,EAAUoC,GAE1D,IAAI5L,EAAI4L,EAAe,EACvB,KAAM5L,EAAIwJ,EAAUxV,OAAS,IAAMwV,EAAUxJ,GAAG8F,IAAMna,EAAUoF,OAASyY,EAAUxJ,GAAG8F,IAAMna,EAAUkgB,SAClG7L,IAEJ,OAAOwJ,EAAUxJ,GAIrB,gCAAgChK,EAAkBwT,GAC9C,IAAI7f,EAAIqM,EAAW,EACnB,KAAOrM,EAAI6f,EAAUxV,QAAQ,CACzB,IAAI8R,EAAK0D,EAAU7f,GAAGmc,GACtB,GAAIA,GAAMna,EAAU8D,QAChB,OAAO,EAEX,GAAI,CAAC9D,EAAUoF,MAAOpF,EAAUiF,MAAOjF,EAAUI,YAAY4K,QAAQmP,GAAM,EACvE,OAAO,EAEXnc,IAEJ,OAAO,EAGX,kCAAkCqM,EAAkBwT,GAChD,IAAI7f,EAAIqM,EAAW,EACnB,KAAOrM,GAAK,GAAG,CACX,IAAImc,EAAK0D,EAAU7f,GAAGmc,GACtB,GAAIA,GAAMna,EAAU6D,MAChB,OAAO,EAEX,GAAI,CAAC7D,EAAUoF,MAAOpF,EAAUiF,MAAOjF,EAAUI,YAAY4K,QAAQmP,GAAM,EACvE,OAAO,EAEXnc,IAEJ,OAAO,EAGX,iBAAiB4e,GACb,OAAgB,MAATA,GAAiBA,GAAS5c,EAAUqD,QAAUuZ,GAAS5c,EAAU+E,MAGpE,eAAegZ,EAA0B7e,EAAU2d,EAAoCzB,GAC3F,IAAI+E,EAAe,CACf1Q,KAAMsO,EAAkB1T,SAASoF,KACjCC,OAAQqO,EAAkB1T,SAASqF,OAASqO,EAAkB1T,SAAShC,QAEvE+X,EAAa,CACb3Q,KAAMvQ,EAAEmL,SAASoF,KACjBC,OAAQxQ,EAAEmL,SAASqF,QAEnByQ,EAAa1Q,MAAQ2Q,EAAW3Q,MAChC2Q,EAAW1Q,OAASyQ,EAAazQ,QAAU0L,EAAK/S,QAChDhC,KAAK+P,QAAQyG,EAAOsD,EAAcC,EAAYhF,GAItD,aAAayB,EAAoCpN,EAAcC,EAAgB2Q,GAC3ExD,EAAMzS,KAAK,CACPqE,MAAO,CACH6O,YAAa5N,EACb0N,gBAAiB3N,EACjB4N,UAAW3N,EAAS2Q,GAA4B,GAAV3Q,EAAc,EAAI,GACxDyN,cAAe1N,GAEnB2L,KAAM,KAId,aAAayB,EAAoCpN,EAAcC,EAAgB2Q,GAEvEA,EAAiB,EACjBha,KAAKiY,aAAazB,EAAOpN,EAAMC,GAAS2Q,GAI5CxD,EAAMzS,KAAK,CACPqE,MAAO,CACH6O,YAAa5N,EACb0N,gBAAiB3N,EACjB4N,UAAW3N,EACXyN,cAAe1N,GAEnB2L,KAAM,IAAIuD,OAAO0B,KAIzB,QAAQxD,EAAoCsD,EAAiDC,EAA+ChF,GAExIyB,EAAMzS,KAAK,CACPqE,MAAO,CACH6O,YAAa6C,EAAazQ,OAC1B0N,gBAAiB+C,EAAa1Q,KAC9B4N,UAAW+C,EAAW1Q,OACtByN,cAAeiD,EAAW3Q,MAE9B2L,KAAMA,KClcZ,MAAOkF,EAIT,cAFA,KAAAC,OAAkB,GAGdla,KAAKma,aAGT,YAAYjiB,GACR,IAAK,IAAIkiB,KAASpa,KAAKka,OACnB,GAAIE,EAAMliB,MAAQA,EAAM,CACpB8H,KAAKqa,oBAAoBD,GACzB,OAIZ,oBAAoBA,GAChBrS,OAAOsP,OAAOiD,SAASF,EAAMG,aAE7B,IAAIC,EAAOC,SAASC,gBACpB,IAAK,MAAMxhB,KAAOb,OAAOsiB,KAAKP,EAAMQ,WAAY,CAC5C,MAAMhiB,EAAQwhB,EAAMQ,UAAU1hB,GAE9BshB,EAAKK,MAAMC,YAAY5hB,EAAKN,IAMpC,aAEIoH,KAAKka,OAAOnW,KAAK,CACb7L,KAAM,OACNqiB,YAAa,oBACbK,UAAW,CACP,mBAAoB,UACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAAmB,UACnB,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,0BAChB,gBAAiB,UACjB,sBAAuB,0BACvB,oBAAqB,MACrB,mBAAoB,OACpB,2BAA4B,UAC5B,sBAAuB,mBACvB,iCAAkC,UAClC,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,0BACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,gBAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAGvB,+BAAgC,QAChC,gCAAiC,iBACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,UAC5B,4BAA6B,UAC7B,sBAAuB,QACvB,2BAA4B,qBAC5B,wBAAyB,OACzB,wBAAyB,QACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,qBAClB,YAAa,QAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,8BAOhC5a,KAAKka,OAAOnW,KAAK,CACb7L,KAAM,QACNqiB,YAAa,qBACbK,UAAW,CACP,mBAAoB,QACpB,oBAAqB,UACrB,sBAAuB,UACvB,uBAAwB,UACxB,oBAAqB,UACrB,mBAAoB,UACpB,WAAY,UACZ,yBAA0B,UAC1B,yBAA0B,UAC1B,sBAAuB,mBACvB,qBAAsB,UACtB,sBAAuB,UACvB,cAAe,UACf,oBAAqB,UACrB,0BAA2B,UAC3B,2BAA4B,UAC5B,kBAtBa,UAuBb,kBAAmB,UACnB,qBAAsB,UACtB,eAAgB,UAChB,gBA1Ba,UA2Bb,sBAAuB,UACvB,oBAAqB,MACrB,mBAAoB,QACpB,2BAA4B,QAC5B,sBAAuB,UACvB,iCAhCa,UAiCb,4BAA6B,UAC7B,mBAAoB,UACpB,qBAAsB,UACtB,qBAAsB,UACtB,mBAAoB,UACpB,eAAgB,UAChB,iBAAkB,6BAClB,kBAAmB,YACnB,gCAAiC,MACjC,4BAA6B,yBAC7B,0BAA2B,4BAC3B,yBAA0B,UAC1B,sBAAuB,yBACvB,qBAAsB,UACtB,sBAAuB,UACvB,4BAA6B,UAC7B,oCAAqC,UACrC,gCAAiC,UACjC,6BAA8B,UAC9B,yBAA0B,UAE1B,sBAAuB,UAIvB,+BAAgC,UAChC,gCAAiC,UACjC,mBAAoB,mBACpB,6BAA8B,UAC9B,2BAA4B,QAC5B,4BAA6B,UAC7B,sBAAuB,UACvB,2BAA4B,QAC5B,wBAAyB,OACzB,wBAAyB,UACzB,kBAAmB,qBACnB,kBAAmB,mBAGnB,iBAAkB,QAClB,YAAa,UAGb,4BAA6B,UAC7B,wBAAyB,UACzB,mCAAoC,UACpC,+BAAgC,UAChC,8BAA+B,QAC/B,qCAAsC,UACtC,mBAAoB,yBACpB,oBAAqB,yBAGrB,uBAAwB,UACxB,kBAAmB,UACnB,uBAAwB,yBCnNlC,MAAO,EAoBT,YAAYG,EAAgCjB,EAA4BC,GAhBjE,KAAAlY,GAAK,EAAYmZ,QAMxB,KAAAC,qBAA+B,EAG/B,KAAAC,kBAAmC,GAEnC,KAAAC,YAAqC,IAAIrb,IAEzC,KAAAsb,aAAoC,KACpC,KAAAzZ,OAAiB,KAIb3B,KAAKqb,OAASN,EAEd/a,KAAK8Z,aAAeA,EACpB9Z,KAAK+Z,WAAaA,EAElB/Z,KAAKob,aAAoC,MAArBL,EAA4B,KAAOA,EAAkBK,aAEtD,MAAfpb,KAAKqb,SACLrb,KAAKqb,OAAOH,kBAAkBnX,KAAK/D,MACnCA,KAAK2B,OAAS3B,KAAKqb,OAAO1Z,QAIlC,eACI,IAAI2Z,EAAY,IAAI,EAAY,KAAM,CAAElS,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAAK,CAAEoH,KAAM,EAAGC,OAAQ,IAAOrH,OAAQ,IAE3GsZ,EAAUL,qBAAsB,EAChC,IAAIM,EAAkBvb,KAElBwb,GAAe,EAEnB,KAAa,MAAND,GACoB,MAAnBA,EAAGH,eACHE,EAAUF,aAAeG,EAAGH,cAGhCG,EAAGJ,YAAYpM,QAAQ,CAAC0M,EAAU1hB,KAEe,MAAzCuhB,EAAUH,YAAY3iB,IAAIuB,IAC1BuhB,EAAUH,YAAY9X,IAAItJ,EAAY0hB,GAGtCA,EAASC,SAAWF,IACpBA,EAAcC,EAASC,YAK/BH,EAAKA,EAAGF,OAMZ,OAFAC,EAAUK,eAAiBH,EAAc,EAElCF,EAKX,gCAAgC5T,GAE5B,IAAIkU,EAAqD,GAmCzD,OAjCA5b,KAAKmb,YAAYpM,QAAQ,CAAC0M,EAAU1hB,KAGf,GAAdA,IAIa,MAAZ0hB,GAAqC,MAAjBA,EAASrb,MAAgBqb,EAASrb,gBAAgB,GACtEwb,EAAgB7X,KAAK,CACjB5B,MAAOpI,EAAa,KACpBoO,WAAYpO,EAAa,OACzBgG,cAAe,qBACf8I,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,MAAOV,IAKfkU,EAAgB7X,KAAK,CACjB5B,MAAOpI,EACPoO,WAAYpO,EACZ+N,KAAMC,OAAOC,UAAUC,mBAAmB6T,SAC1C1T,MAAOV,OAMI,MAAf1H,KAAKqb,QAAkBrb,KAAKqb,OAAOD,cAAgBpb,KAAKob,eACxDQ,EAAkBA,EAAgBrU,OAAOvH,KAAKqb,OAAOU,gCAAgCrU,KAGlFkU,EAGX,oBAAoBxS,EAAcC,GAE9B,IAAKrJ,KAAKgc,iBAAiB5S,EAAMC,GAC7B,OAAO,KAGX,IAAI4S,EAAwC,KACxCC,EAAmB,IAEvB,IAAK,IAAIX,KAAMvb,KAAKkb,kBAChB,GAAIK,EAAGS,iBAAiB5S,EAAMC,GAAS,CACnC,IAAI8S,EAAMZ,EAAGa,oBAAoBhT,EAAMC,GACnC8S,EAAIpC,WAAW3Q,KAAO+S,EAAIrC,aAAa1Q,KAAO8S,IAC9CD,EAAwCE,EACxCD,EAAmBC,EAAIpC,WAAW3Q,KAAO+S,EAAIrC,aAAa1Q,MAStE,OAA6C,MAAzC6S,EACOA,EAEAjc,KAKf,iBAAiBoJ,EAAcC,GAC3B,QAAID,EAAOpJ,KAAK8Z,aAAa1Q,MAAQA,EAAOpJ,KAAK+Z,WAAW3Q,QAIxDA,GAAQpJ,KAAK8Z,aAAa1Q,KAAaC,GAAUrJ,KAAK8Z,aAAazQ,OACnED,GAAQpJ,KAAK+Z,WAAW3Q,MAAaC,GAAUrJ,KAAK+Z,WAAW1Q,SAlJhE,EAAA2R,MAAgB,ECErB,MAAO,UAA0B,EAInC,YAAYqB,EAAUC,GAClBjb,MAAMgb,GACNrc,KAAKsc,UAAYA,GAcnB,MAAO,UAAa,EAqBtB,YAAYviB,EAAoBrC,EAAgB6kB,GAE5Clb,MAAMtH,EAAYrC,GArBtB,KAAA8kB,aAA2B,GAC3B,KAAAC,oBAA0D,GAC1D,KAAAC,eAAgD,GAEhD,KAAAC,UAAmB,KAkBf3c,KAAKoD,UAAY,EAEjB,IAAIzL,EAAY,EAEhB,IAAK,IAAIilB,KAAOL,EAAgB,CAE5B,IAAI3U,EAAuB,IAAIlH,EAAUkc,EAAI7iB,WAAYiG,KAAM,MAAM,EAAMpG,EAAWsM,QAAQ,GAE1E,MAAhB0W,EAAI5Y,WACJ4D,EAAUuH,YAAc,CACpBzX,OAAQA,EACRsM,SAAU4Y,EAAI5Y,UAGlB4D,EAAU/H,eAAewD,IAAI3L,EAAQ,CAACklB,EAAI5Y,YAG9ChE,KAAKmG,YAAYsD,aACb7B,GAIJ,IAAIiV,EAAe,CACf9iB,WAAY6iB,EAAI7iB,WAChB+iB,QAASnlB,KAGbqI,KAAKwc,aAAazY,KAAK8Y,GACvB7c,KAAKyc,oBAAoBG,EAAI7iB,YAAc8iB,EAC3C7c,KAAK0c,eAAeG,EAAGC,SAAWD,EAItC,GAAGnlB,EAAOmP,eAAe,CACrB7G,KAAK2c,UAAY,CACbvc,KAAM,IAAI,EAAUJ,MACpBpH,MAAO,IAEX,IAAI,IAAImkB,KAAM/c,KAAKwc,aAEfO,EAAG1jB,OAAS,IAAI,EAAkB2G,KAAM+c,GAExC/c,KAAK2c,UAAU/jB,MAAMmL,KAAK,CACtB3D,KAAMJ,KACNpH,MAAOmkB,EAAG1jB,SAKtB,IAAI2jB,EAAOhd,KAEXA,KAAKmG,YAAYqD,UAAU,IAAIzI,EAAO,YAClC,IAAI2B,EAAc,IAAK,IAAI,EAAU1C,MAAQ8B,IAEzC,GAAsB,MAAlB9B,KAAK2c,UAAmB,CAExB,IAAItM,EAAS,GACb,IAAK,IAAI4M,KAAMjd,KAAKwc,aAEhBnM,EAAOtM,KAAK,CACR3D,KAAM4c,EACNpkB,MAAOqkB,EAAG5jB,SAKlB2G,KAAK2c,UAAY,CACbvc,KAAM,IAAI,EAAU4c,GACpBpkB,MAAOyX,GAKf,OAAOrQ,KAAK2c,YAEb,GAAO,IAGd3c,KAAKwJ,UAAU,IAAIzI,EAAO,WACtB,IAAI2B,EAAc,IAAK4I,EAAsBxJ,GAESA,EAAW,GAAGlJ,MAEpD0jB,UAAUviB,YAEvB,GAAO,IAGdiG,KAAKwJ,UAAU,IAAIzI,EAAO,YACtB,IAAI2B,EAAc,IAAK6L,EAAmBzM,GAEYA,EAAW,GAAGlJ,MAEpD0jB,UAAUQ,SAEvB,GAAO,IA/GlB,WAAWI,GAEP,IAAIC,EAAqBnd,KAAKyc,oBAAoBS,GAClD,OAAgB,MAAZC,GAA0B,EACvBA,EAASL,QAIb,YAAYlkB,EAAcuT,EAAoB,IACjD,IAAIiR,EAAgCxkB,EAAMA,MAC1C,OAAOoH,KAAKjG,WAAa,IAAMqjB,EAAWd,UAAUviB,WA0GjD,UAAUqG,GAEb,OAAIA,GAAQmO,GAILlN,MAAMoK,UAAUrL,GAIpB,OAAOxH,EAAcwH,GAExB,GAAIA,GAAQmO,EAAkB,CAC1B,IAAI8N,EAAwBzjB,EAAMA,MAClC,MAAO,CACHwH,KAAMmO,EACN3V,MAAOyjB,EAAGC,UAAUQ,SAI5B,OAAOzb,MAAMuN,OAAOhW,EAAOwH,ICxK7B,MAAO,UAAmB,EAE5B,YAAY1I,GACR2J,MAAM,QAAS3J,EAAQ,oEAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAMgP,EAAmBD,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGsO,EACHtN,GACU,MAEf,GAAO,EAAM,qEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGyN,EACHzM,GACU,MAEf,GAAO,EAAM,oEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtGwK,EACHxJ,GACU,MAEf,GAAO,EAAM,uEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG0P,EACH1O,GACU,MAEf,GAAO,EAAM,sEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtGmO,EACHnN,GACU,MAEf,GAAO,EAAM,uEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,cAAeqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACHpN,GACU,MAEf,GAAO,EAAM,wEAMb9B,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGsO,EACHtN,GACU,MAEf,GAAO,EAAM,qEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyN,EACHzM,GACU,MAEf,GAAO,EAAM,oEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGwK,EACHxJ,GACU,MAEf,GAAO,EAAM,uEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvG0P,EACH1O,GACU,MAEf,GAAO,EAAM,sEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGmO,EACHnN,GACU,MAEf,GAAO,EAAM,uEAEb9B,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,eAAgBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGoO,EACHpN,GACU,MAEf,GAAO,EAAM,yEChGf,MAAO,EAAb,cAw6BI,KAAA0b,oBAAiD,GAn5BjD,sBAAsB9lB,EAAgB+lB,EAA0BC,EAA0BC,GAEtF3d,KAAKyd,YAAcA,EACnBzd,KAAKtI,OAASA,EAEdsI,KAAK4d,iBAAmB,GACxB5d,KAAK4d,iBAAiB7Z,KAAK2Z,GAC3B1d,KAAK6d,mBAAqBH,EAE1B1d,KAAK2d,KAAOA,EAEZ,IAAIG,EAAoBJ,EAAY/B,eAWpC,OAVA3b,KAAK+d,yBAA2BD,EAEhC9d,KAAKge,eAAiB,KACtBhe,KAAKgT,UAAY,GAEjBhT,KAAKie,eAAiB,GACtBje,KAAKke,kBAAoB,GAEzBle,KAAKme,cAAa,GAEXne,KAAKgT,UAIhB,MAAMtb,EAAgB+lB,GAalB,GAXAzd,KAAKyd,YAAcA,EACnBzd,KAAKtI,OAASA,EAEdsI,KAAK4d,iBAAmB,GACxB5d,KAAK6d,mBAAqB,KAE1B7d,KAAKge,eAAiB,KACtBhe,KAAKgT,UAAY,GAEjBhT,KAAK+d,yBAA2B,EAE5B/d,KAAKtI,OAAOqb,UAAU/Q,OAAS,EAAG,CAClC,IAAIoc,EAAYpe,KAAKtI,OAAOqb,UAAU/S,KAAKtI,OAAOqb,UAAU/Q,OAAS,GACrEhC,KAAKtI,OAAO2mB,gBAAgBtE,WAAa,CAAE3Q,KAAMgV,EAAUpa,SAASoF,KAAMC,OAAQ+U,EAAUpa,SAASqF,OAAS,EAAGrH,OAAQ,GAG7HhC,KAAK4d,iBAAiB7Z,KAAK/D,KAAKtI,OAAO2mB,iBACvCre,KAAK6d,mBAAqB7d,KAAKtI,OAAO2mB,gBAEtCre,KAAKie,eAAiB,GACtBje,KAAKke,kBAAoB,GAEzBle,KAAKme,eAELne,KAAKse,kBAELte,KAAKue,wBAELve,KAAKtI,OAAO4b,OAAO,GAAKtT,KAAKgT,UAIjC,wBAEI,IAAIwL,EAAcxe,KAAKtI,OAAO8mB,YAE9B,GAAmB,MAAfA,GAAuBA,EAAYpa,WAAWpC,OAAS,EAAG,OAE9D,IAEIyc,EAFAC,EAAqB,KACrBvY,EAA2B,KAG/B,IAAK,IAAIwY,KAAa3e,KAAKtI,OAAOknB,oBAC9B,GAAID,EAAUve,MAAQzG,EAAUY,aAAc,CAE1C,IAAIskB,EAAKF,EAAUG,aAEnB,IAAK,IAAI/mB,KAAK8mB,EAAG1Y,YAAYJ,QACzB,GAAoB,QAAhBhO,EAAEgC,YAA6D,GAArChC,EAAEiJ,cAAcc,WAAWE,OAAa,CAClE,IAAI+c,EAAKhnB,EAAEiJ,cAAcc,WAAW,GAChCid,EAAG3e,gBAAgB,GAAa2e,EAAG3e,KAAKiC,aAAeiJ,IACrC,MAAdoT,EACA1e,KAAKqU,UAAU,8DAA+DsK,EAAU3a,WAExF0a,EAAa3mB,EACboO,EAAc0Y,EAAG1Y,YACjBsY,EAAaE,KAQrC,GAAkB,MAAdD,EAAoB,CAEpB,IAAI1a,EAAyB0a,EAAW7e,eAAe,GAC7B,MAAtB6e,EAAWhd,SAAmBgd,EAAWhd,QAAQ0C,WAAWpC,OAAS,IACrEgC,EAAW0a,EAAWhd,QAAQ0C,WAAW,GAAGJ,UAGhDhE,KAAKgf,qBAELhf,KAAKtI,OAAO8mB,YAAcxe,KAAKge,eAE/Bhe,KAAKuE,eAAe,CAAC,CACjBnE,KAAMzG,EAAUslB,eAChBjb,SAAUA,EACVM,cAAc,EACd3C,OAAQ+c,EACRvY,YAAaA,GACd,CACC/F,KAAMzG,EAAUulB,gBAChBlb,SAAU0a,EAAW7e,eAAerH,IAAIwH,KAAKtI,QAAQ,MAEtD,IAMX,kBACI,GAAuC,MAAnCsI,KAAKtI,OAAOknB,oBAEhB,IAAK,IAAID,KAAa3e,KAAKtI,OAAOknB,oBAO9B,GANID,EAAUve,MAAQzG,EAAUY,cAC5ByF,KAAKmf,cAAcR,GAEnBA,EAAUve,MAAQzG,EAAUiB,aAC5BoF,KAAKof,aAAaT,GAElBA,EAAUve,MAAQzG,EAAUgB,iBAAkB,CAC9C,IAAIqM,EAAS2X,EAAUG,aACT,MAAV9X,GACAhH,KAAKqf,6BAA6BrY,IAQlD,aAAasY,GAET,GAA6B,MAAzBA,EAASR,aAAsB,OAEnC9e,KAAKuf,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAE5D,IAAIC,EAAkBJ,EAASR,aAI/B9e,KAAK6d,mBAAmBzC,aAAesE,EACvC1f,KAAKge,eAAiB0B,EAAUtZ,+BAEhC,IAAK,IAAIwB,KAAa0X,EAAS/b,WACV,MAAbqE,GAAsBA,EAAUhH,UAAwC,MAA5BgH,EAAU+X,gBACtD3f,KAAK4f,oBAAoBhY,GAI7B8X,EAAUtZ,+BAA+BhC,WAAWpC,OAAS,GAC7DhC,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUkgB,OAChB7V,SAAUhE,KAAK6f,cAAc7b,SAC7B8b,iCAAiC,EACjCxb,cAAc,EACdyb,wBAAwB,IAKhC/f,KAAKge,eAAe3X,aAAa2Z,eAEjC,IAAK,IAAIC,KAAcX,EAASvZ,QACV,MAAdka,GAAuBA,EAAW9e,YAAe8e,EAAWrf,UAC5DZ,KAAKkgB,cAAcD,GAI3BjgB,KAAKmgB,eAAe,MAGpBngB,KAAKuf,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAE5D,IAAK,IAAIW,KAAiBd,EAASjP,OAE/B,GAA2C,MAAvC+P,EAAcC,sBAA+B,CAE7C,IAAI5mB,EAAa,CACb/B,OAAQsI,KAAKtI,OACb2O,aAAc,KACdjC,WAAY,IAGhBpE,KAAKge,eAAiBvkB,EAEtBuG,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2mB,cAChBtc,SAAUoc,EAAcpc,SACxB0b,UAAWA,EACXxC,gBAAiBkD,EAAcrmB,aAGnCiG,KAAKugB,2BAA2Bb,EAAWU,EAAcC,sBACrDD,EAAcpc,SAAUoc,EAAcI,eAAgBJ,EAAcK,sBAExEzgB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU+mB,WAChB1c,SAAUoc,EAAcpc,SACxBM,cAAc,IAGlB,IAAI6Y,EAAqBuC,EAAUjD,oBAAoB2D,EAAcrmB,YACrEojB,EAASwD,uBAAyBlnB,EAClC0jB,EAASnZ,SAAWoc,EAAcpc,SAM1ChE,KAAKmgB,eAAe,MAIpBngB,KAAKuf,oBAAmB,EAAOD,EAASE,UAAWF,EAASG,SAE5Dzf,KAAK6d,mBAAmBzC,aAAesE,EAAUvZ,YACjDnG,KAAKge,eAAiB0B,EAAUvZ,YAAYC,+BAE5C,IAAK,IAAIwB,KAAa0X,EAAS/b,WACV,MAAbqE,GAAqBA,EAAUhH,UAAwC,MAA5BgH,EAAU+X,gBACrD3f,KAAK4f,oBAAoBhY,GAIjC5H,KAAKge,eAAe3X,aAAa2Z,eAEjC,IAAK,IAAIC,KAAcX,EAASvZ,QACV,MAAdka,GAAsBA,EAAWrf,UACjCZ,KAAKkgB,cAAcD,GAG3BjgB,KAAKqf,6BAA6BK,GAElC1f,KAAKmgB,eAAe,MAIxB,2BAA2BT,EAAiBkB,EACxC5c,EAAwBwc,EAAgCC,GACxD,IAAIlW,EAAyB,GAE7B,IAAK,IAAI9Q,KAAKmnB,EAAgB,CAC1B,IAAIC,EAAW7gB,KAAK8gB,YAAYrnB,GAChB,MAAZonB,GACJtW,EAAexG,KAAK8c,EAASzgB,MAGjC,IAAI2F,EAAU2Z,EAAU3U,6BAA6B2U,EAAU3lB,WAC3DwQ,GAAgB,EAAM3Q,EAAWwS,SAKrC,GAHApM,KAAKtI,OAAOqpB,uBAAuB/c,EAAUwc,EAAgBd,EAAUpX,WAAW1O,EAAWwS,QAASsT,EAAU3lB,YAAa0mB,GAGxG,MAAjB1a,EAAQiF,MAER,OADAhL,KAAKqU,UAAUtO,EAAQiF,MAAOhH,GACvB,CAAE5D,KAAMkL,EAAqB0V,cAAc,GAGtD,IAAIrf,EAASoE,EAAQ8E,WAAW,GAEhC,IAAK,IAAIlT,EAAI,EAAGA,EAAI4S,EAAevI,OAAQrK,IAAK,CAC5C,IAAIgX,EAAWhN,EAAOiM,iBAAiBjW,GACnCspB,EAAU1W,EAAe5S,GACxBspB,EAAQzS,OAAOG,IAEZsS,aAAmBhhB,GAAiB0O,aAAoB1O,GACpDghB,EAAQC,mBAAmBvS,GAAUgC,gBACrC3Q,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwnB,UAChBnd,SAAU,KACVod,QAASzS,EACT0S,iBAA2C,EAAxB9W,EAAevI,OAAarK,IAQnEqI,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2nB,WAChB3f,OAAQA,EACRqC,SAAUA,EACVM,cAAc,EACdid,aAAa,EACbC,kBAAmBjX,EAAevI,OAAS,KAInD,cAAc2c,GAEV,GAA8B,MAA1BA,EAAUG,aAAsB,OAEpC9e,KAAKuf,oBAAmB,EAAOZ,EAAUa,UAAWb,EAAUc,SAE9D,IAAI1c,EAAe4b,EAAUG,aAIzB2C,EAAmB1e,EAAM2e,mBAEG,IAA5BD,EAAiB9V,SACjB3L,KAAKqU,UAAUoN,EAAiB9V,QAASgT,EAAU3a,SAAU,QAAShE,KAAK2hB,uBAAuBhD,EAAUc,QAASgC,IAGzH,IAAIre,EAAYL,EAAMK,UACL,MAAbA,GAAqBA,EAAU1L,QAAUqL,EAAMrL,QAAU0L,EAAUvC,YAAcjH,EAAWwS,SAC5FpM,KAAKqU,UAAU,mBAAqBjR,EAAUrJ,WAAa,eAAiBgJ,EAAMhJ,WAAa,4BAA6B4kB,EAAU3a,UAG1IhE,KAAK6d,mBAAmBzC,aAAerY,EACvC/C,KAAKge,eAAiBjb,EAAMqD,+BAE5B,IAAK,IAAIwB,KAAa+W,EAAUpb,WACX,MAAbqE,GAAsBA,EAAUhH,UAAwC,MAA5BgH,EAAU+X,gBACtD3f,KAAK4f,oBAAoBhY,GAI7B7E,EAAMqD,+BAA+BhC,WAAWpC,OAAS,GACzDhC,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUkgB,OAChB7V,SAAUhE,KAAK6f,cAAc7b,SAC7B8b,iCAAiC,EACjCxb,cAAc,EACdyb,wBAAwB,IAKhC/f,KAAKge,eAAe3X,aAAa2Z,eAEjC,IAAK,IAAIC,KAActB,EAAU5Y,QACX,MAAdka,GAAuBA,EAAW9e,YAAe8e,EAAWrf,UAC5DZ,KAAKkgB,cAAcD,GAI3BjgB,KAAKqf,6BAA6Btc,GAElC/C,KAAKmgB,eAAe,MAGpBngB,KAAKuf,oBAAmB,EAAOZ,EAAUa,UAAWb,EAAUc,SAE9Dzf,KAAK6d,mBAAmBzC,aAAerY,EAAMoD,YAC7CnG,KAAKge,eAAiBjb,EAAMoD,YAAYC,+BAExC,IAAK,IAAIwB,KAAa+W,EAAUpb,WACX,MAAbqE,GAAqBA,EAAUhH,UAAwC,MAA5BgH,EAAU+X,gBACrD3f,KAAK4f,oBAAoBhY,GAI7B7E,EAAMoD,YAAYC,+BAA+BhC,WAAWpC,OAAS,GACrEhC,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUkgB,OAChB7V,SAAUhE,KAAK6f,cAAc7b,SAC7B8b,iCAAiC,EACjCxb,cAAc,EACdyb,wBAAwB,IAKhC/f,KAAKge,eAAe3X,aAAa2Z,eAEjC,IAAK,IAAIC,KAActB,EAAU5Y,QACX,MAAdka,GAAsBA,EAAWrf,UACjCZ,KAAKkgB,cAAcD,GAI3BjgB,KAAKmgB,eAAe,MAKxB,6BAA6ByB,GAEzB,IAAIC,EAA0C,GAE9C,IAAK,IAAI9pB,KAAK6pB,EAAI7b,QAAS,CAEvB,IAAInE,EAAY7J,EAAEmU,kCAClB,GAA+B,MAA3B2V,EAAajgB,GAAoB,CAEjC,IAAIkgB,EAAkB,iBAClBF,aAAe,IAAWE,EAAU,iBACpCF,aAAe,IAAME,EAAU,YAEnC9hB,KAAKqU,UAAUyN,EAAUF,EAAI7nB,WAAa,kDAAoD6H,EAAW7J,EAAE8H,eAAerH,IAAIwH,KAAKtI,QAAQ,GAAI,SAC/IsI,KAAKqU,UAAUyN,EAAUF,EAAI7nB,WAAa,kDAAoD6H,EAAWigB,EAAajgB,GAAW/B,eAAerH,IAAIwH,KAAKtI,QAAQ,GAAI,cAGrKmqB,EAAajgB,GAAa7J,GAOtC,uBAAuBiM,EAAwByd,GAE3C,IAAI/nB,EAAY,GAChB,IAAK,IAAI3B,KAAK0pB,EAAiB7V,eAC3BlS,GAAK,aAA+B,MAAhB3B,EAAEkJ,WAAqB,QAAUmB,EAAkBrK,EAAEkJ,aAAe,IAAMlJ,EAAEgC,WAAa,IAC7GL,GAAK3B,EAAEiJ,cAAcc,WAAWc,IAAInJ,GAAK2I,EAAkB3I,EAAE2G,MAAQ,IAAM3G,EAAEM,YAAY+I,KAAK,MAC9FpJ,GAAK,2CAGT,MAAO,CACHgP,MAAO,6BACPqZ,cAAgBC,GACL,CACH,CACIC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CAAE2O,gBAAiB/S,EAASoF,KAAM6N,YAAajT,EAASqF,OAAS,EAAGyN,cAAe9S,EAASoF,KAAM4N,UAAWhT,EAASqF,OAAS,GACtI0L,KAAMrb,MAU9B,cAAcumB,G,MAEV,IAAIte,EAASse,EAAWnB,aAIxB,GAFA9e,KAAKmiB,uBAAuBxgB,GAEd,MAAVA,EAAgB,OAIpB3B,KAAKgf,qBACLrd,EAAOD,QAAU1B,KAAKge,eAEtBhe,KAAKuf,oBAAmB,EAAOU,EAAWT,UAAWS,EAAWR,SAChEzf,KAAK6d,mBAAmBlc,OAASA,EAEjC,IAAI+Z,EAAmB,EAEvB,IAAK,IAAIlY,KAAK7B,EAAOygB,mBAAmBtgB,WACpC0B,EAAEkY,SAAWA,IAEb1b,KAAK6d,mBAAmB1C,YAAY9X,IAAIG,EAAEzJ,WAAYyJ,GAM1D,GAFAxD,KAAK+d,yBAA2BkC,EAAWne,WAAWE,OAAS,EAE3DL,EAAOP,eAAiBpB,KAAK6d,mBAAmBzC,wBAAwB,EAAO,CAC/E,IAAIpjB,EAAWgI,KAAK6d,mBAAmBzC,aACvC,GAAS,MAALpjB,IAAwB,QAAf,EAAIA,EAAEoL,iBAAS,eAAEkH,kBAAkB,CAC5C,IAAIU,GAAiB,EAErB,GAD6B,MAAzBiV,EAAW7b,YAAsD,GAAhC6b,EAAW7b,WAAWpC,SAAagJ,GAAQ,IAC3EA,EAED,GADAA,GAAQ,EACJiV,EAAW7b,WAAW,GAAGhE,MAAQzG,EAAU0oB,UAAW,CACtD,IAAIC,EAAMrC,EAAW7b,WAAW,GAAGA,WAC/Bke,EAAItgB,OAAS,GAAKsgB,EAAI,GAAGliB,MAAQzG,EAAU4oB,uBAC3CvX,GAAQ,QAELiV,EAAW7b,WAAW,GAAGhE,MAAQzG,EAAU4oB,uBAClDvX,GAAQ,GAGhB,GAAIA,EAAO,CACP,IAAIwX,EAAqB,KACrB/X,EAAezS,EAAEoL,UAAU2C,QAAQgE,OAAOhS,GAAKA,EAAEqJ,eACrD,GAA2B,GAAvBqJ,EAAazI,OAAa,CAC1B,IAAIygB,EAAa,SAAWhY,EAAa,GAAGzJ,cAAcc,WAAWc,IAAInJ,GAAKA,EAAEM,YAAY+I,KAAK,MAAQ,KACrGkB,EAAWic,EAAWjc,SAC1Bwe,EAAW,CACP9Z,MAAO,mDAEPqZ,cAAgBC,GACL,CAAC,CACJC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CACH2O,gBAAiB/S,EAASoF,KAAO,EAAG6N,YAAa,EAAGH,cAAe9S,EAASoF,KAAO,EAAG4N,UAAW,EACjGrL,QAAS,GACT+W,SAAU3a,OAAO4a,eAAeC,OAEpC7N,KAAM,OAAS0N,EAAa,SAOhDziB,KAAKqU,UAAU,8BAAgCrc,EAAE+B,WAAa,4IAC1DkmB,EAAWjc,SAAU,QAASwe,KAK9C,IAAIK,EAAoB7iB,KAAKyd,YAAYF,QAAQ,SAASnd,KAc1D,GAbwB,CAAC,MAAO,aAAc,YAAa,UACvD,cAAe,YAAa,cAAe,eAAgB,gBACzCuE,QAAQhD,EAAO5H,aAAe,GAAKiG,KAAK6d,mBAAmBzC,aAAa/M,gBAAgBwU,IAC1G7iB,KAAKuE,eAAe,CAChB,CACInE,KAAMzG,EAAUmpB,kBAChB9e,SAAUic,EAAWjc,aAKPhE,KAAK+iB,mBAAmB9C,EAAW7b,YAAY4e,oBAE/C,CACtBhjB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUkgB,OAChB7V,SAAUic,EAAWR,QACrBK,iCAAiC,EACjCxb,cAAc,EACdyb,wBAAwB,IAG5B,IAAIkD,EAAKthB,EAAOuhB,gBACXvhB,EAAOP,eAAuB,MAAN6hB,GAAcA,GAAM1S,GAC7CvQ,KAAKqU,UAAU,0EAA4E4O,EAAGlpB,WAAa,+DAAgEkmB,EAAWjc,UAI9LrC,EAAOJ,8BAAgCvB,KAAK+d,yBACtCkC,EAAWne,WAAWE,OAAS,EAErChC,KAAKmgB,iBACLngB,KAAKge,eAAe3X,aAAa2Z,eAOrC,uBAAuBre,GAEnB,IAAIoB,EAAQ/C,KAAK6d,mBAAmBzC,aACpC,GAAa,MAATrY,EAEA,IAAK,IAAIogB,KAAMnjB,KAAKyd,YAAY2F,YAAW,GACvC,IAAK,IAAIprB,KAAKmrB,EAAG7F,UAAU+F,SACvB,GAAIrrB,aAAa,GAASA,GAAK+K,GAAS/K,EAAEqW,gBAAgBtL,GACtD,IAAK,IAAIhL,KAAKC,EAAE+N,QACZ,GAAS,MAALhO,GAAuB,MAAV4J,GAAkB5J,EAAE6J,WAAaD,EAAOC,UAErD,YADAD,EAAOL,WAAY,GAY/C,oBAAoBsG,GAEhB,GAAiB,MAAbA,EAAmB,OAGvB,GAA4B,MAAxBA,EAAU7N,YAAkD,MAA5B6N,EAAU+X,eAAwB,OAElE/X,EAAUhH,SACVZ,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2pB,oBAChBC,oBAAqB3b,EAAU7N,WAC/BiK,SAAU4D,EAAU+X,eAAe3b,SACnCjB,MAAqB/C,KAAK6d,mBAAmBzC,eAGjDpb,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU6pB,cAChBD,oBAAqB3b,EAAU7N,WAC/BiK,SAAU4D,EAAU+X,eAAe3b,SACnCyf,eAAe,IAKvB,IAAIC,EAAqB1jB,KAAK8gB,YAAYlZ,EAAU+X,gBAE1B,MAAtB+D,GAAyD,MAA3BA,EAAmBtjB,OAC5CJ,KAAK2jB,uBAAuBD,EAAmBtjB,KAAMwH,EAAUgc,cAAc9E,gBAElC,MAAxClX,EAAUgc,cAAc9E,aACxB9e,KAAKqU,UAAU,oBAAsBzM,EAAU7N,WAAa,mCAAoC6N,EAAU5D,UAE1GhE,KAAKqU,UAAU,kCAAoCqP,EAAmBtjB,KAAO,sBAAwBwH,EAAU7N,WAAa,YAAc6N,EAAUgc,cAAc9E,aAAa/kB,WAAa,4BAA6B6N,EAAU+X,eAAe3b,WAM1PhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUmE,WAChBkG,SAAU4D,EAAU+X,eAAe3b,SACnCM,cAAc,EACduf,mBAAmB,KAQ/B,qBAEI7jB,KAAKge,eAAiB,CAClBtmB,OAAQsI,KAAKtI,OACb0M,WAAY,GACZiC,aAAc,MAGlBrG,KAAKge,eAAe3X,aAAe,IAAI,EAAarG,KAAKge,gBAEzDhe,KAAK6f,cAAgB,KAIzB,aAAaiE,GAA8B,GAEvC9jB,KAAKgf,qBAEL,IAAIhb,EAAyB,CAAEoF,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAEvD+hB,EAAiB/jB,KAAKtI,OAAOqsB,eACX,MAAlBA,GAA0BA,EAAe/hB,OAAS,GAA0B,MAArB+hB,EAAe,KACtE/f,EAAWhE,KAAKtI,OAAOqsB,eAAe,GAAG/f,UAGxC8f,IACD9jB,KAAKuf,oBAAmB,EAAMvb,EAAU,CAAEoF,KAAM,IAAQC,OAAQ,EAAGrH,OAAQ,GAAKhC,KAAKge,gBACrFhe,KAAK2d,KAAO,IAGhB3d,KAAKtI,OAAO8mB,YAAcxe,KAAKge,eAE/B,IAAIgG,GAA0B,EAEI,MAA9BhkB,KAAKtI,OAAOqsB,gBAA0B/jB,KAAKtI,OAAOqsB,eAAe/hB,OAAS,IAE1EgiB,GAAiB,EACjBhkB,KAAK+iB,mBAAmB/iB,KAAKtI,OAAOqsB,gBAEhCD,GAA4C,MAAtB9jB,KAAK6f,eAAyB7f,KAAK6f,cAAczf,MAAQzG,EAAUsqB,sBACzFjkB,KAAKkkB,sBAGTlkB,KAAKmkB,aAAenkB,KAAKtI,OAAO0sB,eACP,MAArBpkB,KAAKmkB,eAAsBnkB,KAAKmkB,aAAe,CAAE/a,KAAM,IAAQC,OAAQ,EAAGrH,OAAQ,IAGtFhC,KAAK6d,mBAAmB9D,WAAa/Z,KAAKmkB,aACrCL,GAAoB9jB,KAAKmgB,eAAengB,KAAKge,gBAAgB,GAClEhe,KAAK2d,KAAO,KAEZ3d,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU+mB,WAChB1c,SAAUhE,KAAKmkB,aACf7f,cAAc,EACd+f,sBAAsB,IACvB,IAIPrkB,KAAKge,eAAe3X,aAAa2Z,eAE5B8D,GAAuBE,IACxBhkB,KAAKmgB,eAAengB,KAAKge,gBACzBhe,KAAK2d,KAAO,MAKpB,uBAAuB2G,EAAgBC,EAAcvgB,EAAyBwgB,GAE1E,GAAgB,MAAZF,EAAkB,OAAO,EAE7B,GAAIA,EAAS9V,OAAO+V,GAChB,OAAO,EAGX,GAAgB,MAAZD,GAA8B,MAAVC,EAAgB,OAAO,EAE/C,IAAKD,EAAS7Y,UAAU8Y,GASpB,OAPIA,GAAUrV,GAAoC,MAAZsV,GAElCxkB,KAAKykB,+BAA+BD,IAKjC,EAGX,GAA+B,MAA3BF,EAAQ,aAA2BA,EAAQ,YAAgB3f,QAAQ4f,IAAW,EAC9E,OAAO,EAGX,GAAID,aAAoB,GAASC,GAAUjZ,EAAqB,CAE5D,IAAIoZ,EAAoB1kB,KAAK2kB,qBAAqBL,EAAUtgB,GAE5D,OAAyB,MAArB0gB,IACA1kB,KAAKuE,eAAemgB,IACb,GAOf,GAAIJ,aAAoBrkB,IAAkBskB,aAAkBtkB,GAAiBskB,GAAUjZ,GAAsB,CACzG,IAAIsZ,EAAWN,EAASpD,mBAAmBqD,GAC3C,IAAKK,EAASlU,UACV,OAAO,EAEPkU,EAASjU,gBACT3Q,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwnB,UAChBC,QAASmD,EACTvgB,SAAUA,IAKtB,OAAO,EAIX,qBAAqB5D,EAAa4D,GAC9B,IAAI6gB,EAAiBzkB,EAAK0kB,qBAAqB,cAC/C,OAAsB,MAAlBD,GAA0BA,EAAe3B,iBAAmB5X,EAErD,CACHlL,KAAMzG,EAAU2nB,WAChBtd,SAAUA,EACVrC,OAAQkjB,EACRtD,aAAa,EACbC,iBAAkB,EAClBld,cAAc,GAKX,KAIf,+BAA+BkgB,GAC3B,GAAIA,EAASpkB,MAAQzG,EAAUorB,UAAYP,EAASQ,UAAYrrB,EAAUmE,WAAY,CAClF,IAAIqV,EAAMqR,EAASxgB,SACnBhE,KAAKqU,UAAU,sHACXlB,EAAK,QAAS,CACdzK,MAAO,sBACPqZ,cAAgBC,GACL,CAAC,CACJC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CACH2O,gBAAiB5D,EAAI/J,KAAM6N,YAAa9D,EAAI9J,OAAQyN,cAAe3D,EAAI/J,KAAM4N,UAAW7D,EAAI9J,OAAS,EACrGsC,QAAS,GACT+W,SAAU3a,OAAO4a,eAAeC,OAEpC7N,KAAM,WAW9B,mBAAmBkQ,GAGf,GAAa,MAATA,GAAiC,GAAhBA,EAAMjjB,QAA2B,MAAZijB,EAAM,GAAY,MAAO,CAAEjC,qBAAqB,GAE1F,IAGIkC,EAHAlC,EAA+BhjB,KAAKmlB,6BAA6BF,GAEjEG,EAAWH,EAAMA,EAAMjjB,OAAS,GAiBpC,OAfgB,MAAZojB,GACIA,EAAShlB,MAAQzG,EAAU0oB,UAC3B6C,EAAcE,EAASrL,YAEvBmL,EAAc7sB,OAAOgtB,OAAO,GAAID,EAASphB,UACtB,MAAfkhB,IACAA,EAAY7b,QAAU6b,EAAYljB,OAClCkjB,EAAYljB,OAAS,IAG7BhC,KAAKmkB,aAAee,GAEpBA,EAAcllB,KAAKmkB,aAGhB,CAAEnB,oBAAqBA,EAAqBkC,YAAaA,GAIpE,6BAA6BD,GACzB,IAAIjC,GAAsB,EAE1B,IAAK,IAAI3e,KAAQ4gB,EAAO,CAEpB,GAAY,MAAR5gB,EAAc,SAElB,IAAIjE,EAAOJ,KAAK8gB,YAAYzc,GAEhB,MAARjE,GAA4C,MAA5BA,EAAK4iB,qBAA+B5iB,EAAK4iB,sBACzDA,GAAsB,GAMd,MAAR5iB,GAA6B,MAAbA,EAAKA,MAAgBA,EAAKA,MAAQmQ,IAExB,MAAtBvQ,KAAK6f,eACL7f,KAAK6f,cAAczf,MAAQzG,EAAUmE,YAAckC,KAAK6f,cAAcgE,kBACtE7jB,KAAK6f,cAAcgE,mBAAoB,EAEvC7jB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUsqB,qBAChBjgB,SAAU,KACVshB,SAAU,EACVhhB,cAAc,IACf,IAOf,OAAO0e,EAOX,iBAAiB7P,EAAa/O,GAC1B,GAAkB,MAAdA,EAAJ,CACKmhB,MAAMC,QAAQphB,KAAaA,EAAa,CAACA,IAC9C,IAAK,IAAImX,KAAMnX,EACXpE,KAAKge,eAAe5Z,WAAW8S,OAAO/D,IAAO,EAAGoI,IAIxD,eAAekK,EAAoCC,GAA8C,GAE7F,GAAiB,MAAbD,EAAJ,CAEA,GAAIC,GAAsC1lB,KAAKge,eAAe5Z,WAAWpC,OAAS,EAAG,CACrDhC,KAAKge,eAAe5Z,WAAWpE,KAAKge,eAAe5Z,WAAWpC,OAAS,GACxFsC,cAAe,EAG9B,GAAIihB,MAAMC,QAAQC,GACd,IAAK,IAAIlK,KAAMkK,EACXzlB,KAAKge,eAAe5Z,WAAWL,KAAKwX,GAChCA,EAAGnb,MAAQzG,EAAUkgB,QAAU0B,EAAGnb,MAAQzG,EAAUgsB,YAC1B,MAAtB3lB,KAAK6f,gBAAuB7f,KAAK6f,cAAcvb,cAAe,GAEnD,MAAfiX,EAAGvX,SACHhE,KAAKmkB,aAAe5I,EAAGvX,SAEvBuX,EAAGvX,SAAWhE,KAAKmkB,aAEvBnkB,KAAK6f,cAAgBtE,OAGzBvb,KAAKge,eAAe5Z,WAAWL,KAAK0hB,GAChCA,EAAUrlB,MAAQzG,EAAUkgB,QAAU4L,EAAUrlB,MAAQzG,EAAUgsB,YACxC,MAAtB3lB,KAAK6f,gBAAuB7f,KAAK6f,cAAcvb,cAAe,GAE5C,MAAtBmhB,EAAUzhB,SACVhE,KAAKmkB,aAAesB,EAAUzhB,SAE9ByhB,EAAUzhB,SAAWhE,KAAKmkB,aAG9BnkB,KAAK6f,cAAgB4F,GAI7B,sBACI,IAAIG,EAAM5lB,KAAKge,eAAe5Z,WAAWuP,MACzC3T,KAAKge,eAAe3X,aAAawf,WAAWD,GAMhD,mBAAmBE,EAA6BhM,EAA4BC,EACxErY,GAEA,IAAI6Z,EAAK,IAAI,EAAYvb,KAAK6d,mBAAoB/D,EAAcC,GAIhE,GAFA/Z,KAAK4d,iBAAiB7Z,KAAK/D,KAAK6d,oBAE5BiI,IACAvK,EAAGN,qBAAsB,EACzBjb,KAAK6d,mBAAmBlC,eAAiB3b,KAAK+d,yBAC9C/d,KAAK+d,yBAA2B,EAEjB,MAAXrc,GAAiB,CACjB,IAAIqkB,EAA8C,CAC9C3lB,KAAMzG,EAAUqsB,eAChBhiB,SAAU8V,EACVmM,yBAA0B,GAG9BvkB,EAAQ0C,WAAWL,KAAKgiB,GACxB/lB,KAAKwd,oBAAoBzZ,KAAKgiB,GAOtC,OAFA/lB,KAAK6d,mBAAqBtC,EAEnBA,EAIX,eAAe7Z,EAAmBgkB,GAA8C,GAE5E,IAAInK,EAAKvb,KAAK6d,mBAoBV,GAnBJ7d,KAAK6d,mBAAqB7d,KAAK4d,iBAAiBjK,MAGhD4H,EAAGJ,YAAYpM,QAAQvL,IACO,MAAtBA,EAAE0iB,kBAA4B1iB,EAAE2iB,2BAChCnmB,KAAKgT,UAAUjP,KAAKP,EAAE0iB,kBACtB1iB,EAAE0iB,iBAAmB,QAarB3K,EAAGN,sBAEHM,EAAGI,eAAiB3b,KAAK+d,yBACzB/d,KAAK+d,yBAA2B/d,KAAK6d,mBAAmBlC,eAEzC,MAAXja,GAAiB,CACjB,IAAI0kB,EAAqBpmB,KAAKwd,oBAAoB7J,MAGlD,GAF0B,MAAtByS,IAA4BA,EAAmBH,yBAA2B1K,EAAGI,gBAE7Eja,EAAQ0C,WAAWpC,OAAS,GAAK0jB,EAAoC,CACrE,IAAID,EAAY/jB,EAAQ0C,WAAW1C,EAAQ0C,WAAWpC,OAAS,IAIgH,GAA3K,CAACrI,EAAUgsB,WAAYhsB,EAAU0sB,WAAY1sB,EAAU2sB,YAAa3sB,EAAU4sB,2BAA4B5sB,EAAU6sB,2BAA2B7hB,QAAQ8gB,EAAUrlB,QACjKsB,EAAQ0C,WAAW1C,EAAQ0C,WAAWpC,OAAS,GAAGsC,cAAe,GAIzE5C,EAAQ0C,WAAWL,KAAK,CACpB3D,KAAMzG,EAAUulB,gBAChBlb,SAAUuX,EAAGxB,cAUjC,UAAUhF,EAAc/Q,EAAwBgR,EAAyB,QAASwN,GAC9ExiB,KAAKgT,UAAUjP,KAAK,CAChBgR,KAAMA,EACN/Q,SAAUA,EACVwe,SAAUA,EACVvN,MAAOD,IAIf,iBACIhV,KAAKie,eAAela,KAAK,IAG7B,oBACI/D,KAAKke,kBAAkBna,KAAK,IAGhC,cAAc0iB,GACwB,GAA9BzmB,KAAKie,eAAejc,OACpBhC,KAAKqU,UAAU,mGAAoGoS,EAAUziB,WAE7HhE,KAAKie,eAAeje,KAAKie,eAAejc,OAAS,GAAG+B,KAAK0iB,GACzDzmB,KAAKuE,eAAekiB,IAI5B,iBAAiBC,GACwB,GAAjC1mB,KAAKke,kBAAkBlc,OACvBhC,KAAKqU,UAAU,sGAAuGqS,EAAa1iB,WAEnIhE,KAAKke,kBAAkBle,KAAKke,kBAAkBlc,OAAS,GAAG+B,KAAK2iB,GAC/D1mB,KAAKuE,eAAemiB,IAI5B,gBAAgBC,EAA0BC,GACtC,IAAIC,EAAa7mB,KAAKie,eAAetK,MACrC,IAAK,IAAImT,KAAMD,EACXD,EAAGpiB,iBAAiBsiB,EAAIH,GAIhC,mBAAmBI,EAA6BH,GAC5C,IAAII,EAAgBhnB,KAAKke,kBAAkBvK,MAC3C,IAAK,IAAImT,KAAME,EACXJ,EAAGpiB,iBAAiBsiB,EAAIC,GAIhC,eACI,OAAO/mB,KAAKie,eAAejc,OAAS,GAAKhC,KAAKie,eAAeje,KAAKie,eAAejc,OAAS,GAAGA,OAAS,EAG1G,YAAYqC,EAAe4iB,GAAkC,GAEzD,GAAY,MAAR5iB,EAEJ,OAAQA,EAAKjE,MACT,KAAKzG,EAAUorB,SACX,OAAO/kB,KAAKknB,gBAAgB7iB,GAChC,KAAK1K,EAAUwtB,QACX,OAAOnnB,KAAKonB,eAAe/iB,GAC/B,KAAK1K,EAAU0tB,aACX,OAAOrnB,KAAKqnB,aAAahjB,GAC7B,KAAK1K,EAAU2nB,WACX,OAAOthB,KAAKshB,WAAWjd,GAC3B,KAAK1K,EAAUI,WACX,CACI,IAAIutB,EAAYtnB,KAAKunB,kBAAkBljB,GACnCb,EAAIa,EAAKoX,SAcb,OAbS,MAALjY,IACIyjB,GACAzjB,EAAEgkB,aAAc,EACXhkB,EAAE2iB,2BACH3iB,EAAE0iB,iBAAmB,OAGJ,MAAjB1iB,EAAEgkB,aAAwBhkB,EAAEgkB,cAC5BhkB,EAAE2iB,0BAA2B,EAC7BnmB,KAAKqU,UAAU,gBAAkB7Q,EAAEzJ,WAAa,oDAAqDsK,EAAKL,SAAU,UAIzHsjB,EAEf,KAAK3tB,EAAU8tB,mBACX,OAAOznB,KAAKynB,mBAAmBpjB,GACnC,KAAK1K,EAAU+tB,yBACf,KAAK/tB,EAAUguB,wBACX,OAAO3nB,KAAK4nB,gCAAgCvjB,GAChD,KAAK1K,EAAU4oB,qBACX,OAAOviB,KAAK6nB,qBAAqBxjB,GACrC,KAAK1K,EAAUa,YACX,OAAOwF,KAAK8nB,gBAAgBzjB,GAAM,GACtC,KAAK1K,EAAUc,aACX,OAAOuF,KAAK8nB,gBAAgBzjB,GAAM,GACtC,KAAK1K,EAAU6pB,cACX,OAAOxjB,KAAKwjB,cAAcnf,GAC9B,KAAK1K,EAAUouB,UACX,OAAO/nB,KAAK+nB,UAAU1jB,GAC1B,KAAK1K,EAAU2B,aACX,OAAO0E,KAAKgoB,aAAa3jB,GAC7B,KAAK1K,EAAU4B,UACX,OAAOyE,KAAKioB,UAAU5jB,GAC1B,KAAK1K,EAAU6B,WACX,OAAOwE,KAAKkoB,WAAW7jB,GAC3B,KAAK1K,EAAUwuB,sBACX,OAAOnoB,KAAKooB,6BAA6B/jB,GAC7C,KAAK1K,EAAUiC,UACX,OAAOoE,KAAKqoB,UAAUhkB,GAC1B,KAAK1K,EAAU8B,cACX,OAAOuE,KAAKsoB,cAAcjkB,GAC9B,KAAK1K,EAAUoC,cACX,OAAOiE,KAAKuoB,cAAclkB,GAC9B,KAAK1K,EAAU6uB,yBACX,OAAOxoB,KAAKwoB,yBAAyBnkB,GACzC,KAAK1K,EAAU8uB,oBACX,OAAOzoB,KAAK0oB,oBAAoBrkB,GACpC,KAAK1K,EAAUgvB,SACX,OAAO3oB,KAAK4oB,gBAAgBvkB,GAChC,KAAK1K,EAAU0C,aACf,KAAK1C,EAAU2C,eACX,OAAO0D,KAAK6oB,aAAaxkB,GAC7B,KAAK1K,EAAUwnB,UACX,OAAOnhB,KAAK8oB,kBAAkBzkB,GAClC,KAAK1K,EAAUqC,aAKX,OAJAgE,KAAK+oB,cAAc,CACf3oB,KAAMzG,EAAUgsB,WAChB3hB,SAAUK,EAAKL,WAEZ,KACX,KAAKrK,EAAUsC,gBAKX,OAJA+D,KAAKgpB,iBAAiB,CAClB5oB,KAAMzG,EAAUgsB,WAChB3hB,SAAUK,EAAKL,WAEZ,KACX,KAAKrK,EAAU6C,aACX,IAAI4D,EAAOJ,KAAK8gB,YAAYzc,EAAK4kB,oBAEjC,OADY,MAAR7oB,GAAgBA,EAAKA,gBAAgB,GAAOJ,KAAKkpB,iBAAiB7kB,EAAKL,SAAU5D,EAAKA,MACnFA,EACX,KAAKzG,EAAU0oB,UACXriB,KAAKuf,oBAAmB,EAAOlb,EAAKL,SAAUK,EAAK0V,YAEnD,IAAIiJ,EAAsBhjB,KAAKmlB,6BAA6B9gB,EAAKD,YAIjE,OAFApE,KAAKmgB,iBAEE,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,IAM3E,kBAAkB3e,GAEd,IAAI8kB,EAAYnpB,KAAK8gB,YAAYzc,EAAK+kB,YAEtC,GAAiB,MAAbD,GAAuC,MAAlBA,EAAU/oB,KAAc,OACjD,IAAIkkB,EAAiB6E,EAAU/oB,KAE/B,GAAgB,MAAZkkB,GAAuC,MAAnBjgB,EAAKglB,YAAsD,MAAhChlB,EAAKglB,WAAWvK,aAAsB,CAErF,IAAIyF,EAASlgB,EAAKglB,WAAWvK,aAE7B,GAAIwF,EAAS7Y,UAAU8Y,GAAS,CAE5B,GAAID,aAAoBrkB,GAAiBskB,aAAkBtkB,EAAe,CACvDqkB,EAASpD,mBAAmBqD,GAC9B5T,gBACT3Q,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwnB,UAChBnd,SAAUK,EAAKL,SACfod,QAASmD,SAGd,GAAID,aAAoB,GAASC,GAAUjZ,EAAqB,CACnE,IAAIuZ,EAAiBP,EAASQ,qBAAqB,cAC7B,MAAlBD,GAA0BA,EAAe3B,iBAAmB5X,EAE5DtL,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2nB,WAChBtd,SAAUK,EAAKL,SACfrC,OAAQkjB,EACRtD,aAAa,EACbC,iBAAkB,EAClBld,cAAc,KAIlBtE,KAAKqU,UAAU,gBAAkBiQ,EAASvqB,WAAa,yDAA2DwqB,EAAOxqB,WAAa,uBAAwBsK,EAAKL,UACnKhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwnB,UAChBnd,SAAUK,EAAKL,SACfod,QAASmD,KAMrB,MAAO,CACHvD,aAAcmI,EAAUnI,aACxB5gB,KAAMmkB,GAKd,IAAKD,aAAoB,GAASA,aAAoB,KAAeC,aAAkB,GAASA,aAAkB,GAc9G,OAPAvkB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2vB,UAChBtlB,SAAUK,EAAKL,SACfod,QAASmD,EACTjgB,cAAc,IAGX,CACH0c,aAAcmI,EAAUnI,aACxB5gB,KAAMmkB,GAIVvkB,KAAKqU,UAAU,gBAAkBiQ,EAASvqB,WAAa,yDAA2DwqB,EAAOxqB,WAAa,uBAAwBsK,EAAKL,WAO/K,aAAaK,G,MAET,IAAIjE,EAAOiE,EAAKjE,MAAQzG,EAAU0C,aAAe1C,EAAU4vB,MAAQ5vB,EAAU6vB,QAI7E,GAFAxpB,KAAKtI,OAAOqpB,uBAAuB1c,EAAKL,SAAUK,EAAKmc,eAAgB1mB,EAAkBuK,EAAKjE,MAAOiE,EAAKoc,sBAEzF,MAAbpc,EAAK0Q,KAAc,CAEnB,IAAI3U,EAAOJ,KAAK8gB,YAAYzc,EAAK0Q,MAErB,MAAR3U,IACKJ,KAAK2jB,uBAAuBvjB,EAAKA,KAAMkL,IACxCtL,KAAKqU,UAAU,4GAAsH,QAAZ,EAAGjU,EAAKA,YAAI,eAAErG,YAAa,IAAKsK,EAAKL,WAM1K,IAAIylB,GAAqB,EAEzB,GAAkB,MAAdplB,EAAKqlB,MAAe,CAEpB,IAAItpB,EAAOJ,KAAK8gB,YAAYzc,EAAKqlB,OAErB,MAARtpB,GACIA,EAAKA,MAAQkL,GAAuBlL,EAAKA,MAAQmO,IAC5CvO,KAAK2jB,uBAAuBvjB,EAAKA,KAAMkL,IACxCtL,KAAKqU,UAAU,8HAAgIjU,EAAKA,KAAKrG,WAAa,IAAKsK,EAAKL,WAK5LylB,GAAY,EAahB,OATAzpB,KAAKuE,eAAe,CAChBnE,KAAMA,EACN4D,SAAUK,EAAKL,SACf2lB,MAAqB,MAAbtlB,EAAK0Q,KACbzQ,cAAc,EACdmlB,UAAWA,IAIR,KAGX,gBAAgBplB,GAEZ,GAA2B,MAAvBA,EAAKsb,eACL,OAAO3f,KAAK0oB,oBAAoBrkB,EAAKsb,gBAKzC,IAAIiK,EAAY,EAChB,IAAK,IAAIC,KAAMxlB,EAAKylB,aAAc,CAC9B,GAAU,MAAND,EAIA,MAHA7pB,KAAK8gB,YAAY+I,GACjBD,IAcR,OAPA5pB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUowB,eAChB/lB,SAAUK,EAAKL,SACfgmB,UAAW3lB,EAAK2lB,UAAUlL,aAC1B8K,UAAWA,IAGR,CACH5I,cAAc,EACd5gB,KAAMiE,EAAK2lB,UAAUlL,cAM7B,oBAAoBza,GAEhB,IAAI4lB,EAA2B,CAC3B7pB,KAAMzG,EAAUuwB,WAChBlmB,SAAUK,EAAKL,SACfgmB,UAAW3lB,EAAK2lB,UAAUlL,cAG9B9e,KAAKuE,eAAe0lB,GAEpB,IAAK,IAAIE,KAAO9lB,EAAK4gB,MAGjB,GAAW,MAAPkF,EAIJ,GAAIA,EAAI/pB,MAAQzG,EAAU8uB,oBACtBzoB,KAAK0oB,oBAAoByB,OACtB,CACH,IAAIC,EAAQpqB,KAAK8gB,YAAYqJ,GAC7B,GAAa,MAATC,EACA,OAEJ,IAAIC,EAAyBhmB,EAAK2lB,UAAUlL,aAAczc,YACrDrC,KAAK2jB,uBAAuByG,EAAMhqB,KAAMiqB,EAAYF,EAAInmB,WACzDhE,KAAKqU,UAAU,2BAA6B+V,EAAMhqB,KAAKrG,WAAa,gCAAkCswB,EAAWtwB,WAAa,uBAAwBowB,EAAInmB,UAYtK,OANAhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2wB,WAChBtmB,SAAUK,EAAKL,SACfumB,sBAAuBlmB,EAAK4gB,MAAMjjB,SAG/B,CACHgf,cAAc,EACd5gB,KAAMiE,EAAK2lB,UAAUlL,cAK7B,yBAAyBza,EAAoCmmB,GAAwC,GAE3D,MAAlCnmB,EAAKomB,aAAa3L,eAClBza,EAAKomB,aAAa3L,aAAepV,GAGrC,IAAIghB,EAAsC,MAAb1qB,KAAK2d,MAAgB3d,KAAK4d,iBAAiB5b,QAAU,EAE9EyZ,EAAqB,CACrB1hB,WAAYsK,EAAKtK,WACjB2hB,SAAUgP,EAAwB,KAAO1qB,KAAK+d,2BAC9C3d,KAAMiE,EAAKomB,aAAa3L,aACxBjf,eAAgB,IAAIC,IACpBqP,YAAa,CAAEzX,OAAQsI,KAAKtI,OAAQsM,SAAUK,EAAKL,UACnDlD,QAASuD,EAAKvD,SAyClB,GAtCAd,KAAK2qB,kBAAkBtmB,EAAKL,SAAUyX,GAElCiP,GAEA1qB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUixB,wBAChB5mB,SAAUK,EAAKL,SACf6mB,kCAA0D,MAAvBxmB,EAAKsb,eACxClE,SAAUA,EACVnX,aAAqC,MAAvBD,EAAKsb,iBAGnB3f,KAAK2d,KAAKlC,EAAS1hB,aACnBiG,KAAKqU,UAAU,gBAAkBhQ,EAAKtK,WAAa,gFAAiFsK,EAAKL,UAG7IhE,KAAK2d,KAAKlC,EAAS1hB,YAAc0hB,EAEjCzb,KAAK6d,mBAAmB1C,YAAY9X,IAAIgB,EAAKtK,WAAY0hB,KAIrDzb,KAAK6d,mBAAmB1C,YAAY3iB,IAAI6L,EAAKtK,aAC7CiG,KAAKqU,UAAU,gBAAkBhQ,EAAKtK,WAAa,gFAAiFsK,EAAKL,UAG7IhE,KAAK6d,mBAAmB1C,YAAY9X,IAAIgB,EAAKtK,WAAY0hB,GAEzDzb,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU6uB,yBAChBxkB,SAAUK,EAAKL,SACf6mB,kCAA0D,MAAvBxmB,EAAKsb,eACxClE,SAAUA,EACVnX,aAAqC,MAAvBD,EAAKsb,kBAKA,MAAvBtb,EAAKsb,eAAwB,CAC7B,IAAImL,EAAW9qB,KAAK8gB,YAAYzc,EAAKsb,gBAErB,MAAZmL,IAEIrP,EAASrb,MAAQ6Q,EACjBwK,EAASrb,KAAO0qB,EAAS1qB,KACD,MAAjB0qB,EAAS1qB,KAChBJ,KAAKqU,UAAU,oGAAqGhQ,EAAKsb,eAAe3b,UAEnIhE,KAAK2jB,uBAAuBmH,EAAS1qB,KAAMqb,EAASrb,OACrDJ,KAAKqU,UAAU,oBAAsByW,EAAS1qB,KAAKrG,WAAa,8BAAgC0hB,EAASrb,KAAKrG,WAAa,4BAA6BsK,EAAKsb,eAAe3b,UAEpLhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUmE,WAChBkG,SAAUK,EAAKsb,eAAe3b,SAC9BM,cAAc,EACduf,mBAAmB,UAK3B,GAAIpI,EAASrb,MAAQ6Q,EACjBjR,KAAKqU,UAAU,sJAAuJhQ,EAAKomB,aAAazmB,cACrL,CACH,IAAI+mB,EAAsB,UACtBtP,EAASrb,MAAQmO,IAAkBwc,EAAc,QACjDtP,EAASrb,MAAQ6O,IAAqB8b,EAAc,UACpDtP,EAASrb,MAAQ8O,IAAsB6b,EAAc,YACrDtP,EAASrb,MAAQgP,IAAmB2b,EAAc,UAClDtP,EAASrb,MAAQkL,IAAqByf,EAAc,SAExDtP,EAASyK,iBAAmB,CACxBnR,KAAM,gFACN/Q,SAAUK,EAAKL,SACfwe,SACA,CACI9Z,MAAOqiB,EAAc,YACrBhJ,cAAgBC,IACZ,IAAI7O,EAAM9O,EAAKL,SACf,MAAO,CACH,CACIie,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CAAE2O,gBAAiB5D,EAAI/J,KAAM6N,YAAa9D,EAAI9J,OAAS8J,EAAInR,OAAQ8U,cAAe3D,EAAI/J,KAAM4N,UAAW7D,EAAI9J,OAAS8J,EAAInR,QAC/H+S,KAAMgW,OAM1B9V,MAAO,QAGXwG,EAAS0K,0BAA2B,EACpC1K,EAAS+L,YAAcgD,EAK/B,OAAO,KAIX,cAAcnmB,GAEV,IAAI1C,EAAS3B,KAAK6d,mBAAmBlc,OAErC,GAAc,MAAVA,EAEA,OADA3B,KAAKqU,UAAU,kEAAmEhQ,EAAKL,UAChF,KAGX,GAAiB,MAAbK,EAAK2mB,KAAc,CAEnB,GAA8B,MAA1BrpB,EAAOuhB,gBAEP,OADAljB,KAAKqU,UAAU,eAAiB1S,EAAO5H,WAAa,iCAAkCsK,EAAKL,UACpF,KAGX,IAAI5D,EAAOJ,KAAK8gB,YAAYzc,EAAK2mB,MAErB,MAAR5qB,IACKJ,KAAK2jB,uBAAuBvjB,EAAKA,KAAMuB,EAAOuhB,gBAAiB,KAAM7e,IACtErE,KAAKqU,UAAU,eAAiB1S,EAAO5H,WAAa,uCAAyC4H,EAAOuhB,gBAAgBnpB,WAAa,qCAAuCqG,EAAKA,KAAKrG,WAAa,IAAKsK,EAAKL,gBAMnL,MAA1BrC,EAAOuhB,iBAA2BvhB,EAAOuhB,iBAAmB3S,GAC5DvQ,KAAKqU,UAAU,eAAiB1S,EAAO5H,WAAa,wCAA0C4H,EAAOuhB,gBAAgBnpB,WAAa,sEAAuEsK,EAAKL,UAYtN,OARAhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUkgB,OAChB7V,SAAUK,EAAKL,SACf8b,gCAA8C,MAAbzb,EAAK2mB,KACtC1mB,cAAc,EACdyb,wBAAwB,IAGrB,CAAE3f,KAAM,KAAM4gB,cAAc,EAAOgC,qBAAqB,GAInE,cAAc3e,GAEV,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAE7BrG,KAAKuf,oBAAmB,EAAOlb,EAAKmb,UAAWnb,EAAKob,SAEpD,IAAIZ,EAAK7e,KAAK8gB,YAAYzc,EAAK4mB,WAC/B,GAAU,MAANpM,GAAyB,MAAXA,EAAGze,KAAc,OAEnC,IAAI8qB,EAAgBrM,EAAGze,KAEnB+qB,EAAWD,GAAiB5f,GAAuB4f,GAAiB9b,EAEpEgc,EAASF,aAAyB,EAEhCC,GAHUD,GAAiB3c,GAGF6c,GAC3BprB,KAAKqU,UAAU,mIAAqI6W,EAAcnxB,WAAYsK,EAAK4mB,UAAUjnB,UAG7LonB,GACAprB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwnB,UAChBnd,SAAUK,EAAK4mB,UAAUjnB,SACzBod,QAAS7S,IAIjB,IAAIzK,EAAyC,CACzC1D,KAAMzG,EAAU8B,cAChBuI,SAAUK,EAAKL,SACfwB,mBAAoB,KACpB6lB,WAAYF,EAAW,SAAW,SAClC9lB,kBAAmB,GACnBC,eAAgB,IAGpBtF,KAAKuE,eAAeT,GAGpB,IAAIwnB,EAAW1E,EAAG2E,eAAe5xB,EAAUgsB,WAAYthB,EAAKL,SAAUhE,MAEtE8D,EAAgBQ,cAAe,EAE/BsiB,EAAG4E,wBAAwB1nB,GAE3B9D,KAAKyrB,iBAEL,IAAIzI,EAAsB3e,EAAKqnB,UAAU1pB,OAAS,EAElD,IAAK,IAAI2pB,KAAYtnB,EAAKqnB,UAAW,CAIjC,GAFqC,MAArBC,EAASC,SA6ClB,CACH,IAAIzpB,EAAQykB,EAAGiF,oBAAoB,GACnC7rB,KAAK+iB,mBAAmB4I,EAASvnB,YACjCN,EAAgB0B,mBAAqBrD,MA9CzB,CAEZ,IAAIoD,EAA4B,KAEhC,GAAI6lB,GAAUO,EAASC,SAASxrB,MAAQzG,EAAUI,WAAY,CAC1D,IACI+xB,EADiBZ,EACPzO,oBAAoBkP,EAASC,SAAS7xB,YACxC,MAAR+xB,EACA9rB,KAAKqU,UAAU,mBAAqB6W,EAAcnxB,WAAa,wCAA0C4xB,EAASC,SAAS7xB,WAAY4xB,EAAS3nB,SAAU,SAE1JuB,EAAWumB,EAAKhP,YAEjB,CACY9c,KAAK8gB,YAAY6K,EAASC,UAAzC,IAEIG,EAAK/rB,KAAK6f,cAEVkM,EAAG3rB,MAAQzG,EAAU0tB,eACrB9hB,EAAWwmB,EAAGnzB,OAGdmzB,EAAG3rB,MAAQzG,EAAU2mB,gBACrB/a,EAAWwmB,EAAGrM,UAAUsM,WAAWD,EAAG7O,kBAG1Cld,KAAKkkB,sBAGO,MAAZ3e,GACAvF,KAAKqU,UAAU,wCAAyCsX,EAASC,SAAS5nB,UAG9E,IAAI7B,EAAQykB,EAAGiF,oBAAoB,GAC/BznB,EAAapE,KAAK+iB,mBAAmB4I,EAASvnB,YAEX,OAAnCA,aAAU,EAAVA,EAAY4e,sBAAgC5e,EAAW4e,sBACvDA,GAAsB,GAG1Blf,EAAgBuB,kBAAkBtB,KAAK,CACnCwB,SAAUA,EACVpD,MAAOA,KAiBnB,OANAykB,EAAGiF,oBAAoB,EAAGP,GAE1BtrB,KAAKisB,gBAAgBX,EAAU1E,GAE/B5mB,KAAKmgB,eAAe,MAEb,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,GAGnE,UAAU3e,GAEN,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAEzB6kB,EAAgBlrB,KAAK8gB,YAAYzc,EAAK4mB,WAErB,MAAjBC,GAAyBA,EAAc9qB,MAAQ8O,IAC/ClP,KAAKykB,+BAA+BpgB,EAAK4mB,WACzCjrB,KAAKqU,UAAU,iFAAkFhQ,EAAK4mB,UAAUjnB,WAGpH,IAIIkoB,EAOAC,EAXAC,EAAYxF,EAAG2E,eAAe5xB,EAAU2sB,YAAa,KAAMtmB,MAE3DqsB,EAAwBrsB,KAAK+iB,mBAAmB1e,EAAKioB,kBAAkBtJ,oBAoB3E,OAjB8B,MAA1B3e,EAAKkoB,oBACLL,EAAUtF,EAAG2E,eAAe5xB,EAAUgsB,WAAY,KAAM3lB,OAG5D4mB,EAAGiF,oBAAoB,EAAGO,GAItBD,EAD0B,MAA1B9nB,EAAKkoB,mBAA8D,GAAjCloB,EAAKkoB,kBAAkBvqB,QAG/BhC,KAAK+iB,mBAAmB1e,EAAKkoB,mBAAmBvJ,oBAG/D,MAAXkJ,GACAtF,EAAGiF,oBAAoB,EAAGK,GAGvB,CAAE9rB,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBqJ,GAAyBF,GAK5F,WAAW9nB,GAEP,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAE7BrG,KAAKuf,oBAAmB,EAAOlb,EAAKmb,UAAWnb,EAAKob,SAEpDzf,KAAK+iB,mBAAmB1e,EAAKmoB,kBAE7B,IAAIC,EAAuB7F,EAAGiF,oBAAoB,GAE9CX,EAAgBlrB,KAAK8gB,YAAYzc,EAAK4mB,WAErB,MAAjBC,GAAyBA,EAAc9qB,MAAQ8O,IAC/ClP,KAAKykB,+BAA+BpgB,EAAK4mB,WACzCjrB,KAAKqU,UAAU,6DAA8DhQ,EAAK4mB,UAAUjnB,WAGhG,IAAI0oB,EAAoB9F,EAAG2E,eAAe5xB,EAAU2sB,YAAa,KAAMtmB,MAEvEA,KAAKyrB,iBACLzrB,KAAK2sB,oBAEL,IAAIvoB,EAAapE,KAAK+iB,mBAAmB1e,EAAKD,YAC1C4e,EAAsB5e,EAAW4e,oBAEjC4J,EAAqBhG,EAAGiF,oBAAoB,GAYhD,OAXA7rB,KAAK6sB,mBAAmBD,EAAoBhG,GAC5C5mB,KAAK+iB,mBAAmB1e,EAAKyoB,iBAE7BlG,EAAG2E,eAAe5xB,EAAUgsB,WAAYvhB,EAAW8gB,YAAallB,KAAMysB,GAEtE7F,EAAGiF,oBAAoB,EAAGa,GAE1B1sB,KAAKisB,gBAAgBS,EAAmB9F,GAExC5mB,KAAKmgB,iBAEE,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,GAInE,6BAA6B3e,GAEzB,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAE7BrG,KAAKuf,oBAAmB,EAAOlb,EAAKmb,UAAWnb,EAAKob,SAGpD,IAAIsN,EAAwB/sB,KAAK+d,2BAG7Bc,EAAK7e,KAAK8gB,YAAYzc,EAAK2oB,YAC/B,GAAU,MAANnO,EAAY,OAChB,IASIoO,EATAC,EAAiBrO,EAAGze,KAExBJ,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwzB,wBAChBnpB,SAAUK,EAAK2oB,WAAWhpB,SAC1BopB,mBAAoBL,EACpBzoB,cAAc,IAKlB,IAAIwD,EAAmE,KAEvE,GAAIolB,aAA0B,EAC1BD,EAAwBC,EAAe7qB,YACvCyF,EAAO,aACJ,GAAIolB,aAA0B,GAA+D,MAAtDA,EAAeG,wBAAwB,YAAqB,CAElGvlB,EADAolB,EAAex1B,OAAOmP,eACf,eAEA,sBAEaqmB,EAAeG,wBAAwB,YAC/DJ,EAAwBC,EAAeznB,cAAc,GAAGrF,SACrD,MAAI8sB,aAA0B,GAAsC,SAA7BA,EAAenzB,YAMzD,OADAiG,KAAKqU,UAAU,uKAAwKhQ,EAAK2oB,WAAWhpB,UAChM,KALP8D,EAAO,QACPmlB,EAAwBjtB,KAAKyd,YAAYF,QAAQ,SAASnd,KAO9D,IAAIqqB,EAAepmB,EAAKomB,aAAa3L,aACrC,GAAoB,MAAhB2L,EAAsB,OAAO,KAEjC,IAAI6C,EAAkB7C,GAAgBxZ,EACtC,GAAIqc,EACA7C,EAAewC,EACf5oB,EAAKomB,aAAa3L,aAAemO,OAEjC,IAAKA,EAAsBxhB,UAAUgf,GAEjC,OADAzqB,KAAKqU,UAAU,kBAAoB4Y,EAAsBlzB,WAAa,yCAA2C0wB,EAAa1wB,WAAa,2BAA6BsK,EAAKkpB,mBAAqB,uBAAwBlpB,EAAKL,UACxN,KAIfhE,KAAKwoB,yBAAyB,CAC1BpoB,KAAMzG,EAAU6uB,yBAChBzuB,WAAYsK,EAAKkpB,mBACjB5N,eAAgB,KAChB7e,SAAS,EACTkD,SAAUK,EAAKmpB,iBACf/C,aAAcpmB,EAAKomB,eACpB,GAEH,IAAIgD,EAAmBztB,KAAK+d,yBAA2B,EACnD2P,EAAsC1tB,KAAK+d,2BAEnC,SAARjW,GAA2B,gBAARA,GAAkC,SAARA,EAC7C9H,KAAKuE,eAAe,CAAC,CACjBnE,KAAMzG,EAAUg0B,oBAChB3pB,SAAUK,EAAKL,SACfM,cAAc,EACdspB,qBAAsBb,EACtBc,kBAAmBJ,EACnBK,cAAerD,EACfsD,kBAAmBL,KACnB,GAGJ1tB,KAAKuE,eAAe,CAChB,CACInE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoBM,EACpBppB,cAAc,GAElB,CACIlE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoBL,EACpBzoB,cAAc,GAElB,CACIlE,KAAMzG,EAAU2nB,WAChBtd,SAAUK,EAAKL,SACfM,cAAc,EACdid,aAAa,EACb5f,OAAQurB,EAAejiB,UAAU,WAAY,IAAIvI,EAAc,KAC/D8e,iBAAkB,GAEtB,CACIphB,KAAMzG,EAAUmE,WAChBkG,SAAUK,EAAKL,SACfM,cAAc,EACduf,mBAAmB,KACnB,GAGZ,IACI6I,EACAuB,EAFAxB,EAAuB7F,EAAGiF,oBAAoB,GAIlD,GAAY,SAAR/jB,GAA2B,gBAARA,GAAkC,SAARA,EAAiB,CAC9D,IAAIomB,EAAqD,CACrD9tB,KAAMzG,EAAUw0B,yCAChBrmB,KAAMA,EACN9D,SAAUK,EAAKmpB,iBACflpB,cAAc,EACdspB,qBAAsBb,EACtBc,kBAAmBJ,EACnBM,kBAAmBL,EACnBxoB,YAAa,GAEjB+oB,EAA6BC,EAC7BxB,EAAoB9F,EAAGpiB,iBAAiB0pB,GAExCluB,KAAKuE,eACD2pB,QAKJluB,KAAKuE,eAAe,CAChB,CACInE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKmpB,iBACfJ,mBAAoBL,EACpBzoB,cAAc,GAElB,CACIlE,KAAMzG,EAAU2nB,WAChBtd,SAAUK,EAAKL,SACfM,cAAc,EACdid,aAAa,EACb5f,OAAQurB,EAAejiB,UAAU,UAAW,IAAIvI,EAAc,KAC9D8e,iBAAkB,KAG1BkL,EAAoB9F,EAAG2E,eAAe5xB,EAAU2sB,YAAa,KAAMtmB,MAEnEA,KAAKuE,eAAe,CAChB,CACInE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoBK,EACpBnpB,cAAc,GAElB,CACIlE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoBL,EACpBzoB,cAAc,GAElB,CACIlE,KAAMzG,EAAU2nB,WAChBtd,SAAUK,EAAKL,SACfM,cAAc,EACdid,aAAa,EACb5f,OAAQurB,EAAejiB,UAAU,OAAQ,IAAIvI,EAAc,KAC3D8e,iBAAkB,GAEtB,CACIphB,KAAMzG,EAAUmE,WAChBkG,SAAUK,EAAKL,SACfM,cAAc,EACduf,mBAAmB,KAI/B,IAAKyJ,EAAiB,CAClB,IAAIc,EAAoBpuB,KAAKge,eAAe5Z,WAAWpC,OACvDhC,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoBK,EACpBnpB,cAAc,IAElBtE,KAAK2jB,uBAAuBsJ,EAAuBxC,GAC/CzqB,KAAKge,eAAe5Z,WAAWpC,OAASosB,EAAoB,EAE5DpuB,KAAKge,eAAe5Z,WAAWuP,OAE/B3T,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwzB,wBAChBC,mBAAoBK,EACpBzpB,SAAUK,EAAKL,SACfM,cAAc,IAElB2pB,EAA2B3pB,cAAe,GAIlDtE,KAAKyrB,iBACLzrB,KAAK2sB,oBAEL,IAAIvoB,EAAapE,KAAK+iB,mBAAmB1e,EAAKD,YAC1C4e,EAAsB5e,EAAW4e,oBAEjC4J,EAAqBhG,EAAGiF,oBAAoB,GAWhD,OAVA7rB,KAAK6sB,mBAAmBD,EAAoBhG,GAE5CA,EAAG2E,eAAe5xB,EAAUgsB,WAAYvhB,EAAW8gB,YAAallB,KAAMysB,GAEtE7F,EAAGiF,oBAAoB,EAAGa,GAE1B1sB,KAAKisB,gBAAgBS,EAAmB9F,GAExC5mB,KAAKmgB,iBAEE,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,GAInE,aAAa3e,GAET,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAE7BrG,KAAKuf,oBAAmB,EAAOlb,EAAKmb,UAAWnb,EAAKob,SAEpD,IAAI4O,EAAsBzH,EAAGiF,oBAAoB,GAE7CX,EAAgBlrB,KAAK8gB,YAAYzc,EAAK4mB,WAErB,MAAjBC,GAAyBA,EAAc9qB,MAAQ8O,IAC/ClP,KAAKykB,+BAA+BpgB,EAAK4mB,WACzCjrB,KAAKqU,UAAU,oFAAqFhQ,EAAK4mB,UAAUjnB,WAGvH,IAAIA,EAAWK,EAAKL,SAEE,MAAlBK,EAAK4mB,YACLjnB,EAAWK,EAAK4mB,UAAUjnB,UAG9B,IAAIsqB,EAA2B1H,EAAG2E,eAAe5xB,EAAU2sB,YAAatiB,EAAUhE,MAElFA,KAAKyrB,iBACLzrB,KAAK2sB,oBAEL,IAAIvoB,EAAapE,KAAK+iB,mBAAmB1e,EAAKD,YAC1C4e,EAAsB5e,EAAW4e,oBAWrC,OATAhjB,KAAK6sB,mBAAmBwB,EAAqBzH,GAC7CA,EAAG2E,eAAe5xB,EAAUgsB,WAAYvhB,EAAW8gB,YAAallB,KAAMquB,GAEtEzH,EAAGiF,oBAAoB,EAAGyC,GAE1BtuB,KAAKisB,gBAAgBqC,EAA0B1H,GAE/C5mB,KAAKmgB,iBAEE,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,GAInE,UAAU3e,GAEN,IAAIuiB,EAAK5mB,KAAKge,eAAe3X,aAE7BrG,KAAKuf,oBAAmB,EAAOlb,EAAKmb,UAAWnb,EAAKob,SAEpD,IAAI8O,EAAuB3H,EAAGiF,oBAAoB,GAElD7rB,KAAKyrB,iBACLzrB,KAAK2sB,oBAEL,IAAIvoB,EAAapE,KAAK+iB,mBAAmB1e,EAAKD,YAC1C4e,EAAsB5e,EAAW4e,oBAEjC4J,EAAqBhG,EAAGiF,oBAAoB,GAChD7rB,KAAK6sB,mBAAmBD,EAAoBhG,GAE5C,IAAIsE,EAAgBlrB,KAAK8gB,YAAYzc,EAAK4mB,WAErB,MAAjBC,GAAyBA,EAAc9qB,MAAQ8O,IAC/ClP,KAAKykB,+BAA+BpgB,EAAK4mB,WACzCjrB,KAAKqU,UAAU,oFAAqFhQ,EAAK4mB,UAAUjnB,WAGvH4iB,EAAG2E,eAAe5xB,EAAU0sB,WAAYjiB,EAAW8gB,YAAallB,KAAMuuB,GAEtE,IAAIjD,EAAW1E,EAAGiF,oBAAoB,GAMtC,OAJA7rB,KAAKisB,gBAAgBX,EAAU1E,GAE/B5mB,KAAKmgB,iBAEE,CAAE/f,KAAM,KAAM4gB,cAAc,EAAOgC,oBAAqBA,GAInE,UAAU3e,G,MAEN,GAAsB,MAAlBA,EAAKmqB,WAAoD,MAA/BnqB,EAAKmqB,UAAU1P,aAAsB,OAAO,KAE1E,IAAIA,EAA6Bza,EAAKmqB,UAAU1P,aAChD,KAAMA,aAAwB,GAE1B,OADA9e,KAAKqU,UAAUhQ,EAAKmqB,UAAUz0B,WAAa,4EAA6EsK,EAAKL,UACtH,KAGX,GAAI8a,EAAa3d,WAEb,OADAnB,KAAKqU,UAAU,GAAGhQ,EAAKmqB,UAAUz0B,4GAA4GsK,EAAKmqB,UAAUz0B,wGAAyGsK,EAAKL,UACnQ,KAKP8a,EAAapnB,QAAUsI,KAAKtI,QAAUonB,EAAaje,YAAcjH,EAAWsM,QAC5ElG,KAAKqU,UAAU,cAAgByK,EAAa/kB,WAAa,4BAA6BsK,EAAKL,UAG/F,IAAIyqB,EAAmC,CACnCruB,KAAMzG,EAAUouB,UAChB/jB,SAAUK,EAAKL,SACfd,MAAO4b,EACP4P,2BAA2B,EAC3BpqB,cAAc,GAGlBtE,KAAKuE,eAAekqB,GACpBzuB,KAAKkpB,iBAAiB7kB,EAAKoc,qBAAsB3B,GAEjD,IAAIvU,EAAyB,GACzBokB,EAAqC,GACrCC,EAAgB5uB,KAAKge,eAAe5Z,WAExC,IAA4B,QAAxB,EAAAC,EAAKwqB,2BAAmB,eAAE7sB,QAAS,EACnC,IAAK,IAAIvI,KAAK4K,EAAKwqB,oBAAqB,CACpC,IAAIC,EAAiBF,EAAc5sB,OAC/B6e,EAAW7gB,KAAK8gB,YAAYrnB,GAChCk1B,EAAoB5qB,KAAK6qB,EAAc1X,OAAO4X,EAAgBF,EAAc5sB,OAAS8sB,IACrE,MAAZjO,EACAtW,EAAexG,KAAKwM,GAEpBhG,EAAexG,KAAK8c,EAASzgB,MAKzC,IAAI0J,EAAiBoE,EAAkB4Q,EAAc9e,KAAK6d,mBAAmBzC,cAKzErV,EAAU+Y,EAAapU,eAAeH,EAAgBT,GAK1D,GAHA9J,KAAKtI,OAAOqpB,uBAAuB1c,EAAKL,SAAUK,EAAKmc,eAAgB1B,EAAaxW,WAAW1O,EAAWsM,OAAQ4Y,EAAa/kB,YAAasK,EAAKoc,sBAG7IlW,EAAevI,OAAS,GAAK8c,EAAaxU,iBAAkB,CAE5D,GAAqB,MAAjBvE,EAAQiF,MAER,OADAhL,KAAKqU,UAAUtO,EAAQiF,MAAO3G,EAAKL,UAC5B,CAAE5D,KAAM0e,EAAckC,cAAc,GAG/C,IAAIrf,EAASoE,EAAQ8E,WAAW,GAChC7K,KAAK2qB,kBAAkBtmB,EAAKL,SAAUrC,GAEtC,IAAIotB,EAAqB,KACrB3T,EAAepb,KAAK6d,mBAAmBzC,aACvB,MAAhBA,GAAwBA,aAAwB,IAChD2T,EAAqB3T,EAAajV,aAGlCxE,EAAOd,YAAcjH,EAAWwS,SAAW0S,GAAgB1D,GAAgB0D,GAAgBiQ,GAC3F/uB,KAAKqU,UAAU,oEAAqEhQ,EAAKL,UAI7F,IAAI2K,EAAiB,KACrB,IAAK,IAAIhX,EAAI,EAAGA,EAAI4S,EAAevI,OAAQrK,IAAK,CACxCA,EAAIgK,EAAO8L,sBACXkB,EAAWhN,EAAOiM,iBAAiBjW,GAC/BA,GAAKgK,EAAO8L,oBAAsB,GAAK9L,EAAO6L,gBAC9CmB,EAAuBA,EAAUtM,cAGzC,IAAI4e,EAAU1W,EAAe5S,GAC7B,IAAK,IAAI4jB,KAAMoT,EAAoBh3B,GAC/BqI,KAAKge,eAAe5Z,WAAWL,KAAKwX,GAEnCvb,KAAK2jB,uBAAuB1C,EAAStS,EAAUtK,EAAKwqB,oBAAoBl3B,GAAGqM,SAAUK,EAAKwqB,oBAAoBl3B,KAC/GqI,KAAKqU,UAAU,yBAA2B4M,EAAQlnB,WAAa,uCAAyC4U,EAAS5U,WAAa,sBAAuBsK,EAAKwqB,oBAAoBl3B,GAAGqM,UAKzL,IAAIgrB,EAAkB,EACtB,GAAIrtB,EAAO6L,cAAe,CACtB,IAAIyhB,EAAyB1kB,EAAevI,OAASL,EAAO8L,oBAAsB,EAClFuhB,IAAqBC,EAAyB,GAC9CjvB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUu1B,kBAChBlrB,SAAUK,EAAKwqB,oBAAoBltB,EAAO8L,oBAAsB,GAAGzJ,SACnEmrB,eAAgBF,EAChB3qB,cAAc,EACd0lB,UAAWroB,EAAOoM,aAAapM,EAAO8L,oBAAsB,GAAGrN,OAKvEJ,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2nB,WAChB3f,OAAQA,EACRqC,SAAUK,EAAKL,SACfud,aAAa,EACbjd,aAA4D,MAA9Cwa,EAAasQ,8BAC3B5N,kBAAmBjX,EAAevI,OAAS,EAAIgtB,KAChD,GAEHP,EAAaC,2BAA4B,EACzCD,EAAanqB,cAAe,EAYhC,OARkD,MAA9Cwa,EAAasQ,+BACbpvB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU01B,gCAChBrrB,SAAUK,EAAKL,SACfM,cAAc,IACf,GAGA,CAAElE,KAAM0e,EAAckC,cAAc,GAI/C,cAAc3c,GAEV,GAAmB,MAAfA,EAAKhL,QAAqC,MAAnBgL,EAAKtK,WAAoB,OAAO,KAE3D,IAAIu1B,EAAKtvB,KAAK8gB,YAAYzc,EAAKhL,QAC/B,GAAU,MAANi2B,EAEA,OADAtvB,KAAKqU,UAAU,qCAAsChQ,EAAKL,UACnD,KAGX,KAAMsrB,EAAGlvB,gBAAgB,GAASkvB,EAAGlvB,gBAAgB,GAAekvB,EAAGlvB,gBAAgB,GAMnF,OALe,MAAXkvB,EAAGlvB,KACHJ,KAAKqU,UAAU,kDAAoDhQ,EAAKtK,WAAa,IAAKsK,EAAKL,UAE/FhE,KAAKqU,UAAU,mDAAqDib,EAAGlvB,KAAKrG,WAAa,8BAAgCsK,EAAKtK,WAAa,IAAKsK,EAAKL,UAElJ,KAGX,IAAImK,EAA8CmhB,EAAGlvB,KAErD,GAAI+N,aAAsB,EAAO,CAE7B,IAAI3G,EAAiB0G,EAAkBC,EAAYnO,KAAK6d,mBAAmBzC,cAEvEmU,EAAqBphB,EAAW9C,aAAahH,EAAKtK,WAAYyN,GAE9DgoB,EAA2B,KAK/B,GAJoC,MAAhCD,EAAmB3nB,YACnB4nB,EAA2BrhB,EAAWhI,YAAYkF,aAAahH,EAAKtK,WAAYyN,IAGhD,MAAhC+nB,EAAmB3nB,WAA2D,MAAtC4nB,EAAyB5nB,UAMjE,OALI2nB,EAAmBrkB,oBAAsBskB,EAAyBtkB,kBAClElL,KAAKqU,UAAUkb,EAAmBvkB,MAAO3G,EAAKL,UAE9ChE,KAAKqU,UAAUmb,EAAyBxkB,MAAO3G,EAAKL,UAEjD,CACH5D,KAAM+N,EACN6S,cAAc,GAEf,CACH,IAAIpZ,EAyBJ,OAxBoC,MAAhC2nB,EAAmB3nB,WACnB5H,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU6pB,cAChBxf,SAAUK,EAAKL,SACfuf,oBAAqBlf,EAAKtK,WAC1B0pB,eAAe,IAEnB7b,EAAY2nB,EAAmB3nB,YAE/B5H,KAAKuE,eAAe,CAAC,CACjBnE,KAAMzG,EAAUsqB,qBAChBjgB,SAAUK,EAAKL,SACfshB,SAAU,GACX,CACCllB,KAAMzG,EAAU2pB,oBAChBtf,SAAUK,EAAKL,SACfjB,MAAeoL,EAAYhI,YAC3Bod,oBAAqBlf,EAAKtK,cAE9B6N,EAAY4nB,EAAyB5nB,WAGzC5H,KAAK2qB,kBAAkBtmB,EAAKL,SAAU4D,GAE/B,CACHxH,KAAMwH,EAAUxH,KAChB4gB,cAAepZ,EAAU9G,UAI9B,GAAIqN,aAAsB,EAAa,CAE1C,GAAIA,EAAWtE,iBAAiB,EAAM,CAgBlC,OAfA7J,KAAKkkB,sBAIW,MAFD/V,EAAWtE,MAAM2S,aAAaiT,KAAK1S,GAAMA,EAAGhjB,YAAcsK,EAAKtK,aAG1EiG,KAAKqU,UAAU,mBAAqBlG,EAAWpU,WAAa,4CAA8CsK,EAAKtK,WAAYsK,EAAKL,UAGpIhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2mB,cAChBtc,SAAUK,EAAKL,SACf0b,UAAWvR,EAAWtE,MACtBqT,gBAAiB7Y,EAAKtK,aAGnB,CACHqG,KAAM+N,EAAWtE,MACjBmX,cAAc,GAGf,CACH,IAAIlX,EAAiBoE,EAAkBC,EAAYnO,KAAK6d,mBAAmBzC,cACvEoU,EAA2BrhB,EAAW9C,aAAahH,EAAKtK,WAAY+P,GACxE,OAA0C,MAAtC0lB,EAAyB5nB,WAUrB5H,KAAKkkB,sBACLlkB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2pB,oBAChBtf,SAAUK,EAAKL,SACfuf,oBAAqBlf,EAAKtK,WAC1BgJ,MAAOoL,IAEXnO,KAAK2qB,kBAAkBtmB,EAAKL,SAAUwrB,EAAyB5nB,WAG5D,CACHxH,KAAMovB,EAAyB5nB,UAAUxH,KACzC4gB,cAAewO,EAAyB5nB,UAAU9G,WAGtDd,KAAKqU,UAAUmb,EAAyBxkB,MAAO3G,EAAKL,UAC7C,CACH5D,KAAM+N,EACN6S,cAAc,KAKvB,CAEH,GAAuB,UAAnB3c,EAAKtK,WAEL,OADAiG,KAAKqU,UAAU,yBAA2Bib,EAAGlvB,KAAKrG,WAAa,sBAAwBsK,EAAKtK,WAAYsK,EAAKL,UACtG,KAGXhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU+1B,gBAChB1rB,SAAUK,EAAKL,WAGnB,IAAI2rB,EAAqB,IAAIjvB,EAAU,SAAU6N,EAAkB,MAAM,EAAM3U,EAAWsM,QAAQ,EAAM,oBAIxG,OAFAlG,KAAKtI,OAAOk4B,sBAAsBvrB,EAAKL,SAAU2rB,GAE1C,CACHvvB,KAAMmO,EACNyS,cAAc,IAQ1B,gBAAgB3c,EAA4BwrB,GAExC,IAAIzU,EAAepb,KAAK6d,mBAAmBzC,aAEvCyU,GAA2B,MAAhBzU,IACXA,EAAeA,EAAahY,WAGhC,IAAI0sB,EAAgB9vB,KAAK6d,mBAAmBlc,OAE5C,OAAoB,MAAhByZ,GAAyC,MAAjB0U,GACxB9vB,KAAKqU,UAAU,eAAiBwb,EAAU,QAAU,QAAU,sDAAuDxrB,EAAKL,UACnH,OAEPhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoB,IAGxBptB,KAAKkpB,iBAAiB7kB,EAAKL,SAAUoX,GAC9B,CAAEhb,KAAMgb,EAAc4F,cAAc,EAAO6O,QAASA,IAKnE,qBAAqBxrB,GAEjB,IAAI+W,EAAepb,KAAK6d,mBAAmBzC,aAEZ,OAA3BA,aAAY,EAAZA,EAAchY,YAA0D,UAArCgY,EAAahY,UAAUrJ,YAC1DiG,KAAKqU,UAAU,6GAA8GhQ,EAAKL,UAGtI,IAAI8rB,EAAgB9vB,KAAK6d,mBAAmBlc,OAE5C,GAAoB,MAAhByZ,GAAyC,MAAjB0U,IAA0BA,EAAc1uB,cAEhE,OADApB,KAAKqU,UAAU,4FAA6FhQ,EAAKL,UAC1G,KAGX,IAAI+rB,EAA+B3U,EAAahY,UAChD,GAAI2sB,aAA0B,EAE1B,OADA/vB,KAAKqU,UAAU,iDAAkDhQ,EAAKL,UAC/D,CAAE5D,KAAM,KAAM4gB,cAAc,GAEjB,MAAlB+O,IAAwBA,EAAwB/vB,KAAKyd,YAAYF,QAAQ,UAAUnd,MAGvFJ,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoB,IAGxB,IAAI7iB,EAAyB,GAE7B,GAAqB,MAAjBlG,EAAK2rB,SAAkB,CACvB,IAAIC,GAA2B,EAC/B,IAAK,IAAIx2B,KAAK4K,EAAK2rB,SAAU,CACzB,IAAIjR,EAAK/e,KAAK8gB,YAAYrnB,GAChB,MAANslB,EACAxU,EAAexG,KAAKgb,EAAG3e,MAEvB6vB,GAAkB,EAG1B,GAAIA,EACA,MAAO,CAAE7vB,KAAMkL,EAAqB0V,cAAc,GAI1D,IAAIjb,EAAUgqB,EAAerlB,eAAeH,EAAgB3Q,EAAWqQ,WAKvE,GAHAjK,KAAKtI,OAAOqpB,uBAAuB1c,EAAKL,SAAUK,EAAKmc,eAAgBuP,EAAeznB,WAAW1O,EAAWqQ,UAAW8lB,EAAeh2B,YAClIsK,EAAKoc,sBAEY,MAAjB1a,EAAQiF,MAER,OADAhL,KAAKqU,UAAUtO,EAAQiF,MAAO3G,EAAKL,UAC5B,CAAE5D,KAAMkL,EAAqB0V,cAAc,GAGtD,IAAIrf,EAASoE,EAAQ8E,WAAW,GAchC,OAZA7K,KAAK2qB,kBAAkBtmB,EAAKL,SAAUrC,GAEtC3B,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2nB,WAChB3f,OAAQA,EACR4f,aAAa,EACbvd,SAAUK,EAAKL,SACfwd,kBAAmBjX,EAAevI,OAAS,KAKxC,CAAE5B,KAAM,KAAM4gB,cAAc,GAIvC,gCAAgC3c,GAC5B,IAAIjE,EAAOJ,KAAK8gB,YAAYzc,EAAK6rB,SAEjC,GAAY,MAAR9vB,EAEJ,OAAKA,EAAK4gB,aAKL5gB,EAAKA,KAAKqL,UAAU+E,IAKzBxQ,KAAKuE,eAAe,CAChBnE,KAAMiE,EAAKjE,KACX4D,SAAUK,EAAKL,SACfmsB,qBAAsB9rB,EAAK2gB,UAAYrrB,EAAU2D,aAAgB,EAAI,IAIlE8C,IAXHJ,KAAKqU,UAAU,mGAAqGjU,EAAKA,KAAKrG,WAAYsK,EAAKL,UACxI5D,IANPJ,KAAKqU,UAAU,kIAAmIhQ,EAAKL,UAChJ5D,GAmBf,mBAAmBiE,GAEf,IAAI2lB,EAAYhqB,KAAK8gB,YAAYzc,EAAKhL,QAClC+2B,EAAYpwB,KAAK8gB,YAAYzc,EAAKnC,OAEtC,GAAiB,MAAb8nB,GAAkC,MAAboG,EAEzB,OAAMpG,EAAU5pB,gBAAgB,GAKhCJ,KAAKtI,OAAOk4B,sBAAsB,CAC9BxmB,KAAM/E,EAAKL,SAASoF,KACpBC,OAAQhF,EAAKL,SAASqF,OAAShF,EAAKL,SAAShC,OAC7CA,OAAQ,GACTgoB,EAAU5pB,KAAKiC,aAEbrC,KAAK2jB,uBAAuByM,EAAUhwB,KAAMmO,IAMjDvO,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU8tB,mBAChBzjB,SAAUK,EAAKL,WAGZ,CAAE5D,KAAkB4pB,EAAU5pB,KAAMiC,YAAa2e,aAAcgJ,EAAUhJ,gBAV5EhhB,KAAKqU,UAAU,+FAAiG+b,EAAUhwB,KAAKrG,WAAa,IAAKsK,EAAKnC,MAAM8B,UACrJ,CAAE5D,KAAkB4pB,EAAU5pB,KAAMiC,YAAa2e,aAAcgJ,EAAUhJ,iBAZhFhhB,KAAKqU,UAAU,sEAAuEhQ,EAAKhL,OAAO2K,UAC3F,MAwBf,iBAAiBA,EAAwB5D,GACrB,MAAZ4D,IACAA,EAAShC,OAAS,IAClBgC,EAAW,CACPoF,KAAMpF,EAASoF,KACfC,OAAQrF,EAASqF,OAASrF,EAAShC,OACnCA,OAAQ,IAGhBhC,KAAKtI,OAAOk4B,sBAAsB5rB,EAAU5D,IAKhD,kBAAkB4D,EAAwB2rB,GAItC,GAFA3vB,KAAKtI,OAAOk4B,sBAAsB5rB,EAAU2rB,GAExCA,aAAmB1vB,EACnB,OAGJ,IAAIowB,EAA+BV,EAAQ9vB,eAAerH,IAAIwH,KAAKtI,QAC/C,MAAhB24B,IACAA,EAAe,GACfV,EAAQ9vB,eAAewD,IAAIrD,KAAKtI,OAAQ24B,IAG5CA,EAAatsB,KAAKC,GAItB,kBAAkBK,GAEd,GAAuB,MAAnBA,EAAKtK,WAAoB,OAAO,KAEpC,IAAI0hB,EAAWzb,KAAKswB,kBAAkBjsB,EAAKtK,YAC3C,GAAgB,MAAZ0hB,EAUA,OATAzb,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoB3R,EAASC,WAGjC1b,KAAK2qB,kBAAkBtmB,EAAKL,SAAUyX,GACtCpX,EAAKoX,SAAWA,EAET,CAAErb,KAAMqb,EAASrb,KAAM4gB,cAAevF,EAAS3a,SAG1D,GAAiB,MAAbd,KAAK2d,KAAc,CACnB,IAAIlC,EAAWzb,KAAK2d,KAAKtZ,EAAKtK,YAC9B,GAAgB,MAAZ0hB,EAWA,OAVAzb,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU42B,oBAChBvsB,SAAUK,EAAKL,SACfjK,WAAYsK,EAAKtK,aAGrBiG,KAAK2qB,kBAAkBtmB,EAAKL,SAAUyX,GACtCpX,EAAKoX,SAAWA,EAGT,CAAErb,KAAMqb,EAASrb,KAAM4gB,cAAevF,EAAS3a,SAK9D,IAAI8G,EAAY5H,KAAKwwB,cAAcnsB,EAAKtK,WAAYsK,EAAKL,UACzD,GAAiB,MAAb4D,EAAmB,CAEnB,GAAIA,EAAUhH,SAAU,CACpB,IAAI6vB,EAAKzwB,KAAK6d,mBAAmBzC,aAC7BsV,EAAOD,aAAc,EAAeA,EAAKA,EAAGtqB,YAChDnG,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2pB,oBAChBtf,SAAUK,EAAKL,SACfjB,MAAO2tB,EACPnN,oBAAqB3b,EAAU7N,kBAGnCiG,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU6pB,cAChBxf,SAAUK,EAAKL,SACfuf,oBAAqB3b,EAAU7N,WAC/B0pB,eAAe,IAOvB,OAFAzjB,KAAK2qB,kBAAkBtmB,EAAKL,SAAU4D,GAE/B,CAAExH,KAAMwH,EAAUxH,KAAM4gB,cAAepZ,EAAU9G,SAG5D,IAAI6vB,EAAc3wB,KAAKyd,YAAYF,QAAQlZ,EAAKtK,YAChD,GAAmB,MAAf42B,EAAqB,CACrB,IAAI5tB,EAAQ4tB,EAAYvwB,KACxB,OAAM2C,aAAiB,GAASA,aAAiB,GAG7C/C,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUi3B,sBAChB5sB,SAAUK,EAAKL,SACfjB,MAAOA,IAGX/C,KAAK2qB,kBAAkBtmB,EAAKL,SAAUjB,GAE/B,CACH3C,KAAM2C,aAAiB,EAAQA,EAAMoD,YAAcpD,EACnDie,cAAc,KAZlBhhB,KAAKqU,UAAU,WAAatR,EAAMhJ,WAAa,4CAA6CsK,EAAKL,UAgB9F,CACH5D,KAAM2C,EACNie,cAAc,IAItBhhB,KAAKqU,UAAU,kBAAoBhQ,EAAKtK,WAAa,2BAA4BsK,EAAKL,UAI1F,kBAAkBjK,GACd,IAAIwhB,EAAKvb,KAAK6d,mBAEd,KAAa,MAANtC,GAAY,CAEf,IAAIE,EAAWF,EAAGJ,YAAY3iB,IAAIuB,GAElC,GAAgB,MAAZ0hB,GAAyC,MAArBA,EAASC,SAC7B,OAAOD,EAGXF,EAAKA,EAAGF,OAGZ,OAAO,KAIX,cAActhB,EAAoBiK,GAC9B,IAAIoX,EAAepb,KAAK6d,mBAAmBzC,aAC3C,GAAoB,MAAhBA,EACA,OAAO,KAGX,IAAIxT,EAAYwT,EAAa/P,aAAatR,EAAYH,EAAWwS,SACjE,GAA2B,MAAvBxE,EAAUA,UAAmB,OAAOA,EAAUA,UAElD,GAAIwT,aAAwB,EAAO,CAC/B,IAAIyV,EAAkBzV,EAAajV,YAAYkF,aAAatR,EAAYH,EAAWwS,SACnF,GAAiC,MAA7BykB,EAAgBjpB,UAAmB,OAAOipB,EAAgBjpB,UAKlE,OAAO,KAGX,WAAWvD,GAEP,IAAIysB,EAAwB,KAE5B,GAAmB,MAAfzsB,EAAKhL,OAAgB,CAIrB,IAAI03B,EAAY/wB,KAAK6d,mBAAmBzC,aACxC,GAAiB,MAAb2V,EAgBA,OAFA/wB,KAAKqU,UAAU,6BAA+BhQ,EAAKtK,WAC/C,uEAAwEsK,EAAKL,UAC1E,KAdPhE,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUq0B,yBAChBhqB,SAAUK,EAAKL,SACfopB,mBAAoB,IAGxB0D,EAAa,CACT1wB,KAAM2wB,EACN/P,cAAc,QAUtB8P,EAAa9wB,KAAK8gB,YAAYzc,EAAKhL,QAGvC,GAAkB,MAAdy3B,EAAoB,OAAO,KAE/B,KACKA,EAAW1wB,gBAAgB,GAAW0wB,EAAW1wB,gBAAgB,GACjE0wB,EAAW1wB,gBAAgB,GAAe0wB,EAAW1wB,gBAAgB,GAQtE,OANuB,MAAnB0wB,EAAW1wB,KACXJ,KAAKqU,UAAU,kDAAmDhQ,EAAKL,UAEvEhE,KAAKqU,UAAU,uBAAyByc,EAAW1wB,KAAKrG,WAAa,4BAA6BsK,EAAKL,UAGpG,KAGX,IAsBI+B,EAtBAoI,EAAmD2iB,EAAW1wB,KAE9D4wB,EAA+BhxB,KAAKge,eAAe5Z,WAAWpC,OAE9DuI,EAAyB,GACzBokB,EAAqC,GAErCC,EAAgB5uB,KAAKge,eAAe5Z,WACxC,GAAqB,MAAjBC,EAAK2rB,SACL,IAAK,IAAIv2B,KAAK4K,EAAK2rB,SAAU,CACzB,IAAIlB,EAAiBF,EAAc5sB,OAC/B6e,EAAW7gB,KAAK8gB,YAAYrnB,GAChCk1B,EAAoB5qB,KAAK6qB,EAAc1X,OAAO4X,EAAgBF,EAAc5sB,OAAS8sB,IACrE,MAAZjO,EACAtW,EAAexG,KAAKwM,GAEpBhG,EAAexG,KAAK8c,EAASzgB,MAOzC,GAAI+N,aAAsB,EACtBpI,EAAUoI,EAAWpD,6BAA6B1G,EAAKtK,WACnDwQ,GAAgB,OACjB,CACH,IAAIT,EAAiBoE,EAAkBC,EAAYnO,KAAK6d,mBAAmBzC,cAE3ErV,EAAUoI,EAAWpD,6BAA6B1G,EAAKtK,WACnDwQ,GAAgB,EAAOT,GAM/B,GAFA9J,KAAKtI,OAAOqpB,uBAAuB1c,EAAKL,SAAUK,EAAKmc,eAAgBrS,EAAW7F,WAAW1O,EAAWwS,QAAS/H,EAAKtK,YAAasK,EAAKoc,sBAEnH,MAAjB1a,EAAQiF,MAER,OADAhL,KAAKqU,UAAUtO,EAAQiF,MAAO3G,EAAKL,UAC5B,CAAE5D,KAAMkL,EAAqB0V,cAAc,GAGtD,IAAIrf,EAASoE,EAAQ8E,WAAW,GAEhC7K,KAAK2qB,kBAAkBtmB,EAAKL,SAAUrC,GAGlCA,EAAOf,UAAYuN,aAAsB,GAAkC,eAAzBA,EAAWpU,aAC7DiG,KAAKqU,UAAU,0HAA4HlG,EAAWpU,WAAa,IAAM4H,EAAO5H,WAAa,SAAUsK,EAAKL,SAAU,QACtNhE,KAAKixB,iBAAiBD,EAA8B,CAAC,CACjD5wB,KAAMzG,EAAUsqB,qBAChBjgB,SAAUK,EAAKL,SACfshB,SAAU,GAEd,CACIllB,KAAMzG,EAAUi3B,sBAChB5sB,SAAUK,EAAKL,SACfjB,MAAOoL,MAKf,IAAIQ,EAAiB,KACrB,IAAK,IAAIhX,EAAI,EAAGA,EAAI4S,EAAevI,OAAQrK,IAAK,CACxCA,EAAIgK,EAAO8L,sBACXkB,EAAWhN,EAAOiM,iBAAiBjW,GAC/BA,GAAKgK,EAAO8L,oBAAsB,GAAK9L,EAAO6L,gBAC9CmB,EAAuBA,EAAUtM,cAGzC,IAAI4e,EAAU1W,EAAe5S,GAC7B,IAAK,IAAI4jB,KAAMoT,EAAoBh3B,GAC/BqI,KAAKge,eAAe5Z,WAAWL,KAAKwX,GAEnCvb,KAAK2jB,uBAAuB1C,EAAStS,EAAUtK,EAAK2rB,SAASr4B,GAAGqM,SAAUK,EAAK2rB,SAASr4B,KACzFqI,KAAKqU,UAAU,yBAA2B4M,EAAQlnB,WAAa,uCAAyC4U,EAAS5U,WAAa,sBAAuBsK,EAAK2rB,SAASr4B,GAAGqM,UAgB9K,IAAIgrB,EAAkB,EACtB,GAAIrtB,EAAO6L,cAAe,CACtB,IAAIyhB,EAAyB1kB,EAAevI,OAASL,EAAO8L,oBAAsB,EAClFuhB,IAAqBC,EAAyB,GAC9CjvB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUu1B,kBAChBlrB,SAAUK,EAAK2rB,SAASruB,EAAO8L,oBAAsB,GAAGzJ,SACxDmrB,eAAgBF,EAChB3qB,cAAc,EACd0lB,UAAWroB,EAAOoM,aAAapM,EAAO8L,oBAAsB,GAAGrN,OAIvE,GAAIuB,EAAOd,YAAcjH,EAAWsM,OAAQ,CAExC,IAAIgrB,GAAU,EACV9V,EAAepb,KAAK6d,mBAAmBzC,aACvB,MAAhBA,EACA8V,GAAU,EAEN9V,GAAgBjN,GACdiN,aAAwB,GAASA,EAAaxV,WAAWjB,QAAmBwJ,GAAc,IAExF+iB,EADAvvB,EAAOd,YAAcjH,EAAWwS,SAGtBgP,EAAa/M,gBAAqCF,IAInE+iB,GACDlxB,KAAKqU,UAAU,eAAiB1S,EAAO5H,WAAa,sDAAuDsK,EAAKL,UA+BxH,OA3BIrC,EAAOf,UAA+B,MAAnBkwB,EAAW1wB,MAC7B0wB,EAAW1wB,gBAAgB,GAC3B0wB,EAAW1wB,KAAKyJ,iBAAiB,EAElC7J,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUw3B,gBAChBxvB,OAAQA,EACRqC,SAAUK,EAAKL,SACfM,cAAc,EACdkd,kBAAmBjX,EAAevI,OAAS,KAI/ChC,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU2nB,WAChB3f,OAAQA,EACRqC,SAAUK,EAAKL,SACfud,YAAmC,MAAtBuP,EAAWjB,SAA0BiB,EAAWjB,QAC7DvrB,cAAc,EACdkd,kBAAmBjX,EAAevI,OAAS,EAAIgtB,KAMvDhvB,KAAKkpB,iBAAiB7kB,EAAKoc,qBAAsB9e,EAAOuhB,iBAEjD,CAAE9iB,KAAMuB,EAAOuhB,gBAAiBlC,cAAc,GAIzD,aAAa3c,GAET,IAAIjE,EAEJ,OAAQiE,EAAK+sB,cACT,KAAKz3B,EAAUK,gBACXoG,EAAOmO,EACP,MACJ,KAAK5U,EAAUO,gBACXkG,EAAO8O,EACP,MACJ,KAAKvV,EAAUM,sBACXmG,EAAOoQ,EACP,MACJ,KAAK7W,EAAUQ,eACXiG,EAAOkL,EACPtL,KAAKkpB,iBAAiB7kB,EAAKL,SAAU5D,GACrC,MACJ,KAAKzG,EAAUS,aACXgG,EAAOgP,EACP,MACJ,KAAKzV,EAAUuC,YACXkE,EAAOsJ,EAWf,OAPA1J,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAU0tB,aAChBgK,SAAUjxB,EACV4D,SAAUK,EAAKL,SACfpL,MAAOyL,EAAKkB,WAGT,CAAEnF,KAAMA,EAAM4gB,cAAc,GAIvC,gBAAgB3c,GAEZ,IAAIitB,EAAe,EAAcC,oBAAoB5sB,QAAQN,EAAK2gB,WAAa,EAE/E,GAAI3gB,EAAK2gB,UAAYrrB,EAAU6E,gBAC3B,OAAOwB,KAAKwxB,uBAAuBntB,GAGvC,IAAIotB,EAAWzxB,KAAK8gB,YAAYzc,EAAK7B,aAAc8uB,GAE/CI,EAA8B1xB,KAAKge,eAAe5Z,WAAWpC,OAE7D2vB,EAAqB,KACrBttB,EAAK2gB,UAAYrrB,EAAU0E,IAC3BszB,EAAqB3xB,KAAKge,eAAe3X,aAAaklB,eAAe5xB,EAAU4sB,2BAA4BliB,EAAK7B,aAAawB,SAAUhE,MAChIqE,EAAK2gB,UAAYrrB,EAAU2E,KAClCqzB,EAAqB3xB,KAAKge,eAAe3X,aAAaklB,eAAe5xB,EAAU6sB,0BAA2BniB,EAAK7B,aAAawB,SAAUhE,OAG1I,IAAI4xB,EAAY5xB,KAAK8gB,YAAYzc,EAAK5B,eAEtC,GAAgB,MAAZgvB,GAAqC,MAAjBA,EAASrxB,MAA6B,MAAbwxB,GAAuC,MAAlBA,EAAUxxB,KAAc,OAAO,KAErG,GAAIkxB,EAAc,CACd,IAAKtxB,KAAK2jB,uBAAuBiO,EAAUxxB,KAAMqxB,EAASrxB,KAAMiE,EAAKL,SAAUK,EAAK7B,cAEhF,OADAxC,KAAKqU,UAAU,yBAA2Bud,EAAUxxB,KAAKrG,WAAa,4EAA8E03B,EAASrxB,KAAKrG,WAAa,6BAA8BsK,EAAKL,UAC3MytB,EAGNA,EAASzQ,cACVhhB,KAAKqU,UAAU,4GAA6GhQ,EAAKL,UAGrI,IAAIyhB,EAAiC,CAEjCrlB,KAAMiE,EAAK2gB,SACXhhB,SAAUK,EAAKL,SACfM,cAAc,EACduf,mBAAmB,GAMvB,OAHA7jB,KAAKuE,eAAekhB,GAGbgM,EAEJ,CAEH,GAAIptB,EAAK7B,aAAapC,MAAQzG,EAAUI,YAA4C,MAA9BsK,EAAK7B,aAAaiZ,SAAkB,CACtF,IAAIjY,EAAIa,EAAK7B,aAAaiZ,SACL,MAAjBjY,EAAEgkB,aAAwBhkB,EAAEgkB,cAC5BhkB,EAAE2iB,0BAA2B,EAC7BnmB,KAAKqU,UAAU,gBAAkB7Q,EAAEzJ,WAAa,oDAAqDsK,EAAKL,SAAU,SAI5H,IAAI6tB,EAAaJ,EAASrxB,KAAK4O,cAAc3K,EAAK2gB,SAAU4M,EAAUxxB,MAElE0xB,EAAgBL,EAASrxB,KAAT,YAChB2xB,EAAiBH,EAAUxxB,KAAV,YAErB,GAAkB,MAAdyxB,IAAwC,MAAjBC,GAA2C,MAAlBC,GAAyB,CACzE,IAAIC,EAAqC,MAAjBF,EAAwB,CAACL,EAASrxB,MAAQ0xB,EAC9DG,EAAuC,MAAlBF,EAAyB,CAACH,EAAUxxB,MAAQ2xB,EAErE,IAAK,IAAIG,KAAMF,EAAW,CACtB,IAAK,IAAI/O,KAAMgP,EAEX,GADAJ,EAAaK,EAAGljB,cAAc3K,EAAK2gB,SAAU/B,GAC3B,MAAd4O,EAAoB,CACpBJ,EAASrxB,KAAO8xB,EAChBN,EAAUxxB,KAAO6iB,EACjB,MAGR,GAAkB,MAAd4O,EAAoB,OAqBhC,OAhBkB,MAAdA,GAAsBxtB,EAAK2gB,UAAYrrB,EAAUsD,OAC7Cw0B,EAASrxB,gBAAgB,GAASwxB,EAAUxxB,MAAQkL,GACpDtL,KAAKixB,iBAAiBS,EAA6B1xB,KAAK2kB,qBAAqB8M,EAASrxB,KAAMiE,EAAK7B,aAAawB,WAC9G6tB,EAAavmB,GACNsmB,EAAUxxB,gBAAgB,GAASqxB,EAASrxB,MAAQkL,IAC3DtL,KAAKuE,eAAevE,KAAK2kB,qBAAqBiN,EAAUxxB,KAAMiE,EAAK7B,aAAawB,WAChF6tB,EAAavmB,IAKjBjH,EAAK2gB,WAAY,CAACrrB,EAAU0E,IAAK1E,EAAU2E,MAC3C0B,KAAKykB,+BAA+BpgB,EAAK7B,cACzCxC,KAAKykB,+BAA+BpgB,EAAK5B,gBAG3B,MAAdovB,GACA7xB,KAAKqU,UAAU,iBAAmBva,EAAkBuK,EAAK2gB,UAAY,oCAAsCyM,EAASrxB,KAAKrG,WAAa,QAAU63B,EAAUxxB,KAAKrG,WAAa,oBAAqBsK,EAAKL,UAC/LytB,IAIXzxB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUorB,SAChB0M,SAAUA,EAASrxB,KACnB4kB,SAAU3gB,EAAK2gB,SACfhhB,SAAUK,EAAKL,WAGO,MAAtB2tB,GACA3xB,KAAKge,eAAe3X,aAAawlB,oBAAoB,EAAG8F,GAGrD,CAAEvxB,KAAMyxB,EAAY7Q,cAAc,KAMjD,uBAAuB3c,GAEnB,IAAIotB,EAAWzxB,KAAK8gB,YAAYzc,EAAK7B,cAErC,GAAgB,MAAZivB,GAEAzxB,KAAK2jB,uBAAuB8N,EAASrxB,KAAM8O,EAAsB,KAAM7K,EAAK7B,cAAe,CAE3F,IAAIC,EAAgB4B,EAAK5B,cACzB,GAAqB,MAAjBA,EAAuB,CACvB,GAAIA,EAAcrC,MAAQzG,EAAUorB,UAAYtiB,EAAcuiB,UAAYrrB,EAAU+E,MAE7E,CACH,IAAIkoB,EAAK5mB,KAAKge,eAAe3X,aACzB8rB,EAAoBvL,EAAG2E,eAAe5xB,EAAU2sB,YAAajiB,EAAKL,SAAUhE,MAC5EoyB,EAAYpyB,KAAK8gB,YAAYre,EAAcD,cAC3C8oB,EAAW1E,EAAG2E,eAAe5xB,EAAUgsB,WAAYljB,EAAcD,aAAawB,SAAUhE,MAC5F4mB,EAAGiF,oBAAoB,EAAGsG,GAC1B,IAAIE,EAAaryB,KAAK8gB,YAAYre,EAAcA,eAChDmkB,EAAGiF,oBAAoB,EAAGP,GAE1B,IAAIlrB,EAAOgyB,EAAUhyB,KAKrB,OAJIA,GAAQiyB,EAAWjyB,MAAQA,EAAKqL,UAAU4mB,EAAWjyB,QACrDA,EAAOiyB,EAAWjyB,MAGf,CACHA,KAAMA,EACN4gB,cAAc,GAjBlBhhB,KAAKqU,UAAU,gGAAiGhQ,EAAKL,YA2BrI,eAAeK,GACX,IAAIotB,EAAWzxB,KAAK8gB,YAAYzc,EAAK6rB,SAErC,GAAgB,MAAZuB,GAAqC,MAAjBA,EAASrxB,KAEjC,OAAIiE,EAAK2gB,UAAYrrB,EAAUoD,OACtB00B,EAASrxB,KAAKqL,UAAU+E,GAO7BnM,EAAK2gB,UAAYrrB,EAAU4E,KACrBkzB,EAASrxB,MAAQ8O,GACnBlP,KAAKykB,+BAA+BpgB,EAAK6rB,SACzClwB,KAAKqU,UAAU,kCAAoCod,EAASrxB,KAAKrG,WAAa,oBAAqBsK,EAAKL,UACjGytB,IAKfzxB,KAAKuE,eAAe,CAChBnE,KAAMzG,EAAUwtB,QAChBnC,SAAU3gB,EAAK2gB,SACfhhB,SAAUK,EAAKL,WAGZytB,IArBCzxB,KAAKqU,UAAU,kCAAoCod,EAASrxB,KAAKrG,WAAa,oBAAqBsK,EAAKL,UACjGytB,IAv/FZ,EAAAF,oBAAsB,CAAC53B,EAAUmE,WAAYnE,EAAUoE,eAAgBpE,EAAUqE,gBAAiBrE,EAAUsE,yBAA0BtE,EAAUuE,oBCZrJ,MAAO,EA4CT,YAAoBo0B,GAAA,KAAAA,kBAfpB,KAAAC,UAAY,EAQZ,KAAAC,SAAkB,CACdxuB,SAAU,CAAEoF,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACxC8R,GAAIna,EAAUyF,gBACdxG,MAAO,0BAskCX,KAAA65B,sBAAqC,CAAC94B,EAAUuD,eAAgBvD,EAAUwD,SAAUxD,EAAUsD,KAC9FtD,EAAUoD,MAAOpD,EAAUmD,IAAKnD,EAAUqD,OAAQrD,EAAU8E,UAAW9E,EAAU6C,cA/jCjF,MAAMzE,GAOF,GALAiI,KAAKtI,OAASK,EAEdiI,KAAK+S,UAAYhb,EAAEgb,UACnB/S,KAAKgT,UAAY,GAEY,GAAzBhT,KAAK+S,UAAU/Q,OAKf,OAJAhC,KAAKtI,OAAOqsB,eAAiB,GAC7B/jB,KAAKtI,OAAOknB,oBAAsB,GAClC5e,KAAKtI,OAAOg7B,UAAY,QACxB1yB,KAAKtI,OAAO4b,OAAO,GAAKtT,KAAKgT,WAIjChT,KAAKmT,IAAM,EACXnT,KAAK2yB,sBAEL3yB,KAAK0yB,UAAY,GAEjB,IAAItU,EAAYpe,KAAK+S,UAAU/S,KAAK+S,UAAU/Q,OAAS,GACvDhC,KAAKwyB,SAASxuB,SAAW,CAAEoF,KAAMgV,EAAUpa,SAASoF,KAAMC,OAAQ+U,EAAUpa,SAASqF,OAAS+U,EAAUpa,SAAShC,OAAQA,OAAQ,GAEjI,IAAI4wB,EAAW5yB,KAAK6yB,YACpB7yB,KAAKtI,OAAOqsB,eAAiB6O,EAASE,eACtC9yB,KAAKtI,OAAOknB,oBAAsBgU,EAASG,mBAC3C/yB,KAAKtI,OAAO0sB,eAAiBwO,EAASxO,eACtCpkB,KAAKtI,OAAOg7B,UAAY1yB,KAAK0yB,UAE7B1yB,KAAKtI,OAAO4b,OAAO,GAAKtT,KAAKgT,UAIjC,sBAEIhT,KAAK6e,GAAK,GAEV,IAAK,IAAIlnB,EAAI,EAAGA,EAAIqI,KAAKuyB,UAAW56B,IAAK,CAErC,IAAI4e,EAAevW,KAAKwyB,SAExB,OAEQxyB,KAAKmT,KAAOnT,KAAK+S,UAAU/Q,SAFtB,CAIT,IAAImW,EAASnY,KAAK+S,UAAU/S,KAAKmT,KAKjC,GAJGgF,EAAOrE,IAAMna,EAAUwF,UACtBa,KAAKgzB,YAAc7a,GAGnBA,EAAOrE,IAAMna,EAAUsF,SAAWkZ,EAAOrE,IAAMna,EAAUoF,OAASoZ,EAAOrE,IAAMna,EAAUwF,QAAS,CAClGoX,EAAQ4B,EACe,MAApBnY,KAAKgzB,cACJzc,EAAM0c,cAAgBjzB,KAAKgzB,YAC3BhzB,KAAKgzB,YAAc,MAEvB,MAGJhzB,KAAKmT,MAITnT,KAAK6e,GAAG9a,KAAKwS,GAET5e,EAAIqI,KAAKuyB,UAAY,GACrBvyB,KAAKmT,MAKbnT,KAAKkzB,IAAMlzB,KAAK6e,GAAG,GACnB7e,KAAK8T,GAAK9T,KAAKkzB,IAAIpf,GACnB9T,KAAKgE,SAAWhE,KAAKkzB,IAAIlvB,SAI7B,YAEI,IAAIuS,EAGJ,IAFAvW,KAAKoe,UAAYpe,KAAKkzB,MAET,CAIT,GAFAlzB,KAAKmT,MAEDnT,KAAKmT,KAAOnT,KAAK+S,UAAU/Q,OAAQ,CACnCuU,EAAQvW,KAAKwyB,SACb,MAQJ,GALAjc,EAAQvW,KAAK+S,UAAU/S,KAAKmT,KACzBoD,EAAMzC,IAAMna,EAAUwF,UACrBa,KAAKgzB,YAAczc,GAGnBA,EAAMzC,IAAMna,EAAUsF,SAAWsX,EAAMzC,IAAMna,EAAUoF,OAASwX,EAAMzC,IAAMna,EAAUwF,QAAS,CAC/FoX,EAAM0c,cAAgBjzB,KAAKgzB,YAC3BhzB,KAAKgzB,YAAc,KACnB,OAKR,IAAK,IAAIr7B,EAAI,EAAGA,EAAIqI,KAAKuyB,UAAY,EAAG56B,IACpCqI,KAAK6e,GAAGlnB,GAAKqI,KAAK6e,GAAGlnB,EAAI,GAG7BqI,KAAK6e,GAAG7e,KAAKuyB,UAAY,GAAKhc,EAE9BvW,KAAKkzB,IAAMlzB,KAAK6e,GAAG,GACnB7e,KAAK8T,GAAK9T,KAAKkzB,IAAIpf,GACnB9T,KAAKgE,SAAWhE,KAAKkzB,IAAIlvB,SAI7B,UAAU+Q,EAAcC,EAAyB,QAAShR,EAAyBwe,GAC/D,MAAZxe,IAAkBA,EAAW3L,OAAOgtB,OAAO,GAAIrlB,KAAKgE,WACxDhE,KAAKgT,UAAUjP,KAAK,CAChBgR,KAAMA,EACN/Q,SAAUA,EACVwe,SAAUA,EACVvN,MAAOD,IAIf,OAAOlB,EAAeqf,GAAgB,EAAMC,GAAgC,GACxE,GAAIpzB,KAAK8T,IAAMA,EAAI,CACf,GAAIA,GAAMna,EAAU8E,WAAauB,KAAK8T,IAAMna,EAAUyF,gBAClD,OAAO,EAGX,IAAI4E,EAAyBhE,KAAKkzB,IAAIlvB,SAClC8P,GAAMna,EAAU8E,WAA+B,MAAlBuB,KAAKoe,WAE9Bpe,KAAKoe,UAAUpa,SAASoF,KAAOpF,EAASoF,OACxCpF,EAAW,CACPoF,KAAMpJ,KAAKoe,UAAUpa,SAASoF,KAC9BC,OAAQrJ,KAAKoe,UAAUpa,SAASqF,OAASrJ,KAAKoe,UAAUpa,SAAShC,OACjEA,OAAQ,IAKpB,IAAIwgB,EAAqB,KA6BzB,OA5BI1O,GAAMna,EAAU8E,WAAauB,KAAKoe,UAAUpa,SAASoF,KAAOpJ,KAAKkzB,IAAIlvB,SAASoF,OAC7EpJ,KAAKqzB,gBAAgBrzB,KAAKoe,UAAUtK,MAErC0O,EAAW,CACP9Z,MAAO,4BACPqZ,cAAgBC,GACL,CAAC,CACJC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CACH2O,gBAAiB/S,EAASoF,KAAM6N,YAAajT,EAASqF,OAAQyN,cAAe9S,EAASoF,KAAM4N,UAAWhT,EAASqF,OAChHsC,QAAS,GACT+W,SAAU3a,OAAO4a,eAAeC,OAEpC7N,KAAM,QAOlBqe,GACApzB,KAAKtI,OAAO47B,KAAKC,oBAAoBC,SAASxvB,EAAUhE,KAAKtI,SAKrEsI,KAAKqU,UAAU,kBAAoBva,EAAkBga,GAAM,sBAAwBha,EAAkBkG,KAAK8T,IAAK,QAAS9P,EAAUwe,IAC3H,EAOX,OAJI2Q,GACAnzB,KAAKoZ,aAGF,EAEX,gBAAgBtF,GACZ,GAAIA,GAAMna,EAAUmD,IAAK,OAAO,EAChC,IAAK,IAAI22B,KAAM,EAAOC,mBAClB,IAAK,IAAI1O,KAAYyO,EACjB,GAAI3f,GAAMkR,EAAU,OAAO,EAKvC,QACI,OAAOhlB,KAAKkzB,KAAOlzB,KAAKwyB,SAG5B,WAAWjc,GAEP,OAAKgP,MAAMC,QAAQjP,GAIZA,EAAM5R,QAAQ3E,KAAK8T,KAAO,EAHtB9T,KAAK8T,IAAMyC,EAO1B,qBACI,OAAOle,OAAOgtB,OAAO,GAAIrlB,KAAKgE,UAGlC,uBAEI,IAAIA,EAAWhE,KAAK2zB,qBAIpB,OAHA3vB,EAASqF,OAASrF,EAASqF,OAASrJ,KAAKgE,SAAShC,OAClDgC,EAAShC,OAAS,EAEXgC,EAOX,YAEI,IAAIwa,EAAwB,GACxBoV,EAA6B,GAE7BxP,EAA+B,CAC/B/a,OAAQ,EACRD,KAAM,IACNpH,OAAQ,GAGZ,MAAQhC,KAAK6zB,SAAS,CAElB,IAAIC,EAAS9zB,KAAKmT,IAElB,GAAInT,KAAK+zB,WAAW,EAAOC,6BAA8B,CACrD,IAAIltB,EAAK9G,KAAKi0B,uBACJ,MAANntB,IAAY8sB,EAAmBA,EAAiBrsB,OAAOT,QACxD,CACH,IAAIyU,EAAKvb,KAAKk0B,iBAEJ,MAAN3Y,IACAiD,EAAcA,EAAYjX,OAAOgU,IAErC6I,EAAiBpkB,KAAK2zB,qBAItB3zB,KAAKmT,KAAO2gB,IACZ9zB,KAAKmT,MACLnT,KAAK2yB,uBAKb,MAAO,CACHG,eAAgBtU,EAChBuU,mBAAoBa,EACpBxP,eAAgBA,GAMxB,4BAA4B7I,GAExB,IAAGvb,KAAKsyB,gBAER,GAAK/W,EAAGnb,MAAQzG,EAAUorB,UAAY,EAAOwM,oBAAoB5sB,QAAQ4W,EAAGyJ,UAAY,EAAI,CACxF,IAAItrB,EAAI,eACR,OAAQ6hB,EAAGyJ,UACP,KAAKrrB,EAAUsD,KAAMvD,EAAI,eAAgB,MACzC,KAAKC,EAAUoD,MAAOrD,EAAI,mBAAoB,MAC9C,KAAKC,EAAUuD,eAAgBxD,EAAI,kBAAmB,MACtD,KAAKC,EAAUwD,SAAUzD,EAAI,oBAEjCA,GAAK,cAAgBI,EAAkByhB,EAAGyJ,UAAY,IACtDhlB,KAAKqU,UAAU,YAAY3a,qGACvB,OAAQ6hB,EAAGvX,cAEf,CAACrK,EAAUwtB,QAASxtB,EAAU0tB,aAC9B1tB,EAAUI,WAAYJ,EAAU8tB,oBAAoB9iB,QAAQ4W,EAAGnb,OAAS,GACxEJ,KAAKqU,UAAU,yHACX,OAAQkH,EAAGvX,UAIvB,eAAemwB,GAA2B,GAEtC,IAAIC,EAA2B,KAE/B,OAAQp0B,KAAK8T,IACT,KAAKna,EAAU4C,YACf,KAAK5C,EAAUI,WACf,KAAKJ,EAAUa,YACf,KAAKb,EAAUc,aACf,KAAKd,EAAUwC,aACf,KAAKxC,EAAUS,aACf,KAAKT,EAAUK,gBACf,KAAKL,EAAUQ,eACf,KAAKR,EAAUO,gBACf,KAAKP,EAAUM,sBACf,KAAKN,EAAUe,WACX,IAAI25B,EAAMr0B,KAAKs0B,iCACXH,GAAiBn0B,KAAKu0B,OAAO56B,EAAU8E,WAAW,GAAM,GAC5D21B,EAAgBC,EAChB,MACJ,KAAK16B,EAAUgD,iBACX,IAAIyH,EAAwB,GACxB0V,EAAe9Z,KAAK2zB,qBAGxB,IAFA3zB,KAAKoZ,YAEEpZ,KAAK8T,IAAMna,EAAUiD,mBAAqBoD,KAAK8T,IAAMna,EAAUyF,iBAC/D,EAAO40B,4BAA4BrvB,QAAQ3E,KAAK8T,IAAM,GACzD1P,EAAaA,EAAWmD,OAAOvH,KAAKk0B,kBAExC,IAAIna,EAAa/Z,KAAK2zB,qBACtB5Z,EAAW1Q,OAAS0Q,EAAW1Q,OAAS0Q,EAAW/X,OACnD+X,EAAW/X,OAAS,EACpBhC,KAAKu0B,OAAO56B,EAAUiD,mBAEtBw3B,EAAgB,CAAC,CACbh0B,KAAMzG,EAAU0oB,UAChBre,SAAU8V,EACVC,WAAYA,EACZ3V,WAAYA,IAEhB,MAEJ,KAAKzK,EAAU2B,aACX84B,EAAgBp0B,KAAKw0B,aACrB,MACJ,KAAK76B,EAAU6B,WACX44B,EAAgBp0B,KAAKy0B,WACrB,MACJ,KAAK96B,EAAU4B,UACX64B,EAAgBp0B,KAAK00B,UACrB,MACJ,KAAK/6B,EAAUiC,UACXw4B,EAAgBp0B,KAAK20B,UACrB,MACJ,KAAKh7B,EAAUoC,cACXq4B,EAAgBp0B,KAAK40B,cACrB,MACJ,KAAKj7B,EAAU0C,aACf,KAAK1C,EAAU2C,eACX83B,EAAgBp0B,KAAK60B,aACrB,MACJ,KAAKl7B,EAAU8B,cACX24B,EAAgBp0B,KAAK80B,cACrB,MACJ,KAAKn7B,EAAUqC,aACX,IAAIgI,EAAWhE,KAAK2zB,qBACpB3zB,KAAKoZ,YACLgb,EAAgB,CAAC,CACbh0B,KAAMzG,EAAUqC,aAChBgI,SAAUA,IAEd,MACJ,KAAKrK,EAAUsC,gBACX,IAAI84B,EAAY/0B,KAAK2zB,qBACrB3zB,KAAKoZ,YACLgb,EAAgB,CAAC,CACbh0B,KAAMzG,EAAUsC,gBAChB+H,SAAU+wB,IAEd,MACJ,KAAKp7B,EAAU8E,UACX,MACJ,QACI,IAAI/E,EAAII,EAAkBkG,KAAK8T,IAC3Bpa,GAAKsG,KAAKkzB,IAAIt6B,QAAOc,GAAK,IAAMsG,KAAKkzB,IAAIt6B,MAAQ,KACrDc,GAAK,6BACLsG,KAAKqU,UAAU3a,GAEA,EAAOs6B,4BAA4BrvB,QAAQ3E,KAAK8T,KAAO,GAElE9T,KAAKoZ,YAKjB,GAAoB,MAAjBgb,EAEC,KAAOp0B,KAAK8T,IAAMna,EAAU8E,WAAa01B,GACrCn0B,KAAKoZ,YAIb,GAAoB,MAAjBgb,GAAyBA,EAAcpyB,OAAS,EAAE,CAEnC,MADAoyB,EAAcA,EAAcpyB,OAAS,GAE/ChC,KAAKg1B,4BAA4BZ,EAAcA,EAAcpyB,OAAS,IAEtEoyB,EAAgB,KAIxB,OAAOA,EAIX,cAEI,IAIIpJ,EAJAhnB,EAAWhE,KAAK2zB,qBAWpB,OATA3zB,KAAKoZ,YAICpZ,KAAK8T,IAAMna,EAAU8E,YACvBusB,EAAOhrB,KAAKi1B,YACZj1B,KAAKu0B,OAAO56B,EAAU8E,WAAW,GAAM,IAGpC,CAAC,CACJ2B,KAAMzG,EAAUoC,cAChBiI,SAAUA,EACVgnB,KAAMA,IAKd,aAEI,IAAIhnB,EAAWhE,KAAK2zB,qBAEpB3zB,KAAKoZ,YACL,IAAIoG,EAAYxf,KAAK2zB,qBAErB,GAAI3zB,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAO,CAC1C,IAAI0uB,EAAYjrB,KAAKi1B,YACjBxU,EAAwBzgB,KAAK2zB,qBAEjC3zB,KAAKtI,OAAOqpB,uBAAuB/c,EAAU,GAAI,QAASyc,GAE1DzgB,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAChCwD,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKqU,UAAU,qEAAsE,WAEzF,IAAIjQ,EAAapE,KAAKk0B,iBAClBzU,EAAUzf,KAAK2zB,qBAOnB,OANAlU,EAAQzd,OAAS,EAEC,MAAdoC,GAAsBA,EAAWpC,OAAS,GAAKoC,EAAW,GAAGhE,MAAQzG,EAAU0oB,YAC/E5C,EAAsBrb,EAAW,GAAI2V,YAGlC,CACH,CACI3Z,KAAMzG,EAAU2B,aAChB0I,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACTwL,UAAWA,EACX7mB,WAAYA,IAMxB,MAAO,GAIX,WAEI,IAAIJ,EAAWhE,KAAK2zB,qBAEhBuB,EAAqC,GAEzCl1B,KAAKoZ,YAEL,IAAIoG,EAAYxf,KAAK2zB,qBAErB,GAAI3zB,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAO,CAE1C,GAAIyD,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU+E,MAC3B,OAAOsB,KAAKm1B,2BAA2BnxB,EAAUwb,GAGrD,IAAIgN,EAAmBxsB,KAAKk0B,gBAAe,GAC3CgB,EAAmBnxB,KAAK/D,KAAK2zB,sBAC7B3zB,KAAKu0B,OAAO56B,EAAU8E,WACtB,IAAIwsB,EAAYjrB,KAAKi1B,YACrBC,EAAmBnxB,KAAK/D,KAAK2zB,sBAC7B3zB,KAAKu0B,OAAO56B,EAAU8E,WAAW,GACjC,IAAIquB,EAAkB9sB,KAAKk0B,gBAAe,GAEtCzT,EAAuBzgB,KAAK2zB,qBAChC3zB,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAEpCwD,KAAKtI,OAAOqpB,uBAAuB/c,EAAUkxB,EAAoB,MAAOzU,GAEpEzgB,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKqU,UAAU,mEAAoE,WAIvF,IAAIjQ,EAAapE,KAAKk0B,iBAClBzU,EAAUzf,KAAK2zB,qBAgBnB,OAfAlU,EAAQzd,OAAS,EAEC,MAAdoC,GAAsBA,EAAWpC,OAAS,GAAKoC,EAAW,GAAGhE,MAAQzG,EAAU0oB,YAC/E5C,EAAsBrb,EAAW,GAAI2V,YAGxB,MAAbkR,IACAA,EAAY,CACR7qB,KAAMzG,EAAU0tB,aAChBrjB,SAAUhE,KAAK2zB,qBACfvC,aAAcz3B,EAAUO,gBACxBqL,UAAU,IAIX,CACH,CACInF,KAAMzG,EAAU6B,WAChBwI,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACTwL,UAAWA,EACXuB,iBAAkBA,EAClBM,gBAAiBA,EACjB1oB,WAAYA,IAMxB,MAAO,GAIX,2BAA2BJ,EAAwBwb,GAE/C,IAAIiL,EAAezqB,KAAKo1B,YAEpB7H,EAA6BvtB,KAAKkzB,IAAIt6B,MACtCy8B,EAA6Br1B,KAAK2zB,qBACtC3zB,KAAKoZ,YAELpZ,KAAKu0B,OAAO56B,EAAU+E,OAAO,GAE7B,IAAIsuB,EAAahtB,KAAKi1B,YAEtBj1B,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAEhCwD,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKqU,UAAU,mEAAoE,WAGvF,IAAIjQ,EAAapE,KAAKk0B,iBAClBzU,EAAUzf,KAAK2zB,qBAOnB,OANAlU,EAAQzd,OAAS,EAEC,MAAdoC,GAAsBA,EAAWpC,OAAS,GAAKoC,EAAW,GAAGhE,MAAQzG,EAAU0oB,YAC/E5C,EAAsBrb,EAAW,GAAI2V,YAGvB,MAAdiT,GAAsC,MAAhBvC,GAAsC,MAAdrmB,EAA2B,GAEtE,CACH,CACIhE,KAAMzG,EAAUwuB,sBAChBnkB,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACT8N,mBAAoBA,EACpB9C,aAAcA,EACd+C,iBAAkB6H,EAClBrI,WAAYA,EACZ5oB,WAAYA,IAMxB,aAEI,IAAI0P,EAAK9T,KAAK8T,GACV9P,EAAWhE,KAAK2zB,qBAIpB,GAFA3zB,KAAKoZ,YAEDpZ,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAQ,CAC3C,IAAI+4B,EAAMt1B,KAAKu1B,4BACXC,EAAcF,EAAIrQ,MAOtB,OANIuQ,EAAYxzB,OAAS,GACrBhC,KAAKqU,UAAU,+DAAgE,QAASrQ,GAG5FhE,KAAKu0B,OAAO56B,EAAU8E,WAAW,GAAM,GAEhC,CAAC,CAEJ2B,KAAM0T,EACN9P,SAAUA,EACV+Q,KAA4B,GAAtBygB,EAAYxzB,OAAc,KAAOwzB,EAAY,GACnD9L,MAAO8L,EAAYxzB,QAAU,EAAI,KAAOwzB,EAAY,GACpDhV,eAAgB8U,EAAI9U,eACpBC,qBAAsB6U,EAAI7U,uBAIlC,OAAO,KAIX,cAEI,IAAIzc,EAAWhE,KAAK2zB,qBAEpB,GADA3zB,KAAKoZ,YACDpZ,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAO,CAE1C,IAAIk5B,EAAaz1B,KAAKi1B,YAEtBj1B,KAAKtI,OAAOqpB,uBAAuB/c,EAAU,GAAI,SAAUhE,KAAK2zB,sBAEhE3zB,KAAKu0B,OAAO56B,EAAU6C,cACtB,IAAIgjB,EAAYxf,KAAK2zB,qBAErB3zB,KAAKu0B,OAAO56B,EAAUgD,kBAAkB,GAExC,IAAI+4B,EAAyB,CACzBt1B,KAAMzG,EAAU8B,cAChBuI,SAAUA,EACVwb,UAAWA,EACXC,QAAS,KACTwL,UAAWwK,EACX/J,UAAW,IAGXiK,GAAsB,EAE1B,KAAO31B,KAAK8T,IAAMna,EAAU+B,aAAesE,KAAK8T,IAAMna,EAAUgC,gBAAgB,CAC5E,IAAIi6B,EAAe51B,KAAK2zB,qBAEpBkC,EAAY71B,KAAK8T,IAAMna,EAAUgC,eACjCk6B,IACIF,EACA31B,KAAKqU,UAAU,oEAAqE,QAASuhB,GAE7FD,GAAsB,GAI9B31B,KAAKoZ,YAEL,IAAIwS,EAAW,KACViK,IACDjK,EAAW5rB,KAAKi1B,aAGpBj1B,KAAKu0B,OAAO56B,EAAU+E,OAAO,GAE7B,IAAI0F,EAAwB,GAE5B,KAAOpE,KAAK8T,IAAMna,EAAUiD,mBAAqBoD,KAAK8T,IAAMna,EAAUyF,iBAC/DY,KAAK8T,IAAMna,EAAU+B,aAAesE,KAAK8T,IAAMna,EAAUgC,gBAC9D,CACE,IAAI8pB,EAAYzlB,KAAKk0B,iBACJ,MAAbzO,IACArhB,EAAaA,EAAWmD,OAAOke,IAIvC,IAAIqQ,EAAiC,CACjC11B,KAAMzG,EAAU+B,YAChBsI,SAAU4xB,EACVhK,SAAUA,EACVxnB,WAAYA,GAGhBsxB,EAAWhK,UAAU3nB,KAAK+xB,GAO9B,OAHAJ,EAAWjW,QAAUzf,KAAK+1B,uBAC1B/1B,KAAKu0B,OAAO56B,EAAUiD,mBAAmB,GAElC,CAAC84B,GAIZ,OAAO,KAIX,UAEI,IAAI1xB,EAAWhE,KAAK2zB,qBAGpB,GADA3zB,KAAKoZ,YACDpZ,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAO,CAC1C,IAAI0uB,EAAYjrB,KAAKi1B,YACjBxU,EAAuBzgB,KAAK2zB,qBAChC3zB,KAAKtI,OAAOqpB,uBAAuB/c,EAAU,GAAI,KAAMyc,GACvDzgB,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAEhCwD,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKqU,UAAU,uFAAwF,WAG3G,IAAIjQ,EAAapE,KAAKk0B,iBAElBl0B,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKoZ,YAGT,IAAI4c,EAA4B,KAgBhC,OAdIh2B,KAAK+zB,WAAWp6B,EAAUmC,eAC1BkE,KAAKoZ,YACL4c,EAAiBh2B,KAAKk0B,kBAGT,MAAbjJ,GAA8C,GAAzBjrB,KAAKgT,UAAUhR,SACpCipB,EAAY,CACR7qB,KAAMzG,EAAU0tB,aAChBrjB,SAAUhE,KAAK2zB,qBACfvC,aAAcz3B,EAAUO,gBACxBqL,UAAU,IAIX,CACH,CACInF,KAAMzG,EAAUiC,UAChBoI,SAAUA,EACVinB,UAAWA,EACXqB,iBAAkBloB,EAClBmoB,kBAAmByJ,IAM/B,MAAO,GAIX,UAOI,IAAIhyB,EAAWhE,KAAK2zB,qBAEhBnU,EAAYxf,KAAK2zB,qBACrB3zB,KAAKoZ,YACL,IAAIhV,EAAapE,KAAKk0B,iBAEtB,GAAIl0B,KAAKu0B,OAAO56B,EAAU2B,cAAc,IAChC0E,KAAKu0B,OAAO56B,EAAU4C,aAAa,GAAO,CAC1C,IAAI0uB,EAAYjrB,KAAKi1B,YACjBxV,EAAUzf,KAAK+1B,uBAInB,OAFA/1B,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAE7B,CACH,CACI4D,KAAMzG,EAAU4B,UAChByI,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACTwL,UAAWA,EACX7mB,WAAYA,IAM5B,MAAO,GAIX,mBACI,OAAIpE,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU6D,QAC3BwC,KAAK6e,GAAG,GAAG/K,IAAMna,EAAUI,aACxBiG,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU8D,SAAWuC,KAAK6e,GAAG,GAAG/K,IAAMna,EAAUiF,QAI5E,iCAGI,GACKoB,KAAK8T,IAAMna,EAAUI,YAAciG,KAAK8T,IAAMna,EAAUwC,cACxD6D,KAAK6e,GAAG,GAAG/K,IAAMna,EAAUI,YACrBiG,KAAK6e,GAAG,GAAG/K,IAAMna,EAAUkD,yBAC9BmD,KAAKi2B,mBAeT,MAAO,CAACj2B,KAAKi1B,aAbf,CACE,IAAIZ,EAAiB,GACjBj0B,EAAiB,KACrB,EAAG,CACa,MAARA,GAAcJ,KAAKu0B,OAAO56B,EAAUiF,OAAO,GAC/C,IAAIs3B,EAAKl2B,KAAKm2B,yBAAyB/1B,GACvCi0B,EAAItwB,KAAKmyB,GACT91B,EAAO81B,aAAE,EAAFA,EAAIzL,mBAENzqB,KAAK8T,IAAMna,EAAUiF,OAE9B,OAAOy1B,GAOf,YACI,OAAOr0B,KAAKo2B,gBAAgB,GAGhC,gBAAgBC,GAEZ,IAAIC,EAEAA,EADAD,EAAa,EAAO3C,mBAAmB1xB,OAAS,EACzChC,KAAKo2B,gBAAgBC,EAAa,GAElCr2B,KAAKu2B,0BAGhB,IAAIC,EAAY,EAAO9C,mBAAmB2C,GAE1C,GAAY,MAARC,GAAgBE,EAAU7xB,QAAQ3E,KAAK8T,IAAM,EAC7C,OAAOwiB,EAGX,IAAIG,GAAQ,EAEZ,GAAIz2B,KAAK8T,IAAMna,EAAU+E,MACrB,OAAO43B,EAGX,KAAOG,GAASD,EAAU7xB,QAAQ3E,KAAK8T,KAAO,GAAG,CAE7C,IAAIkR,EAAsBhlB,KAAK8T,GAE/B2iB,GAAQ,EACR,IA4BIC,EA5BA1yB,EAAWhE,KAAK2zB,qBAEpB3zB,KAAKoZ,YAEL,IAAK,IAAIud,IAAU,CAAC,CAAElD,GAAI95B,EAAU6D,MAAOo5B,MAAO,KAAMF,MAAO,KAAMG,UAAWl9B,EAAU+D,cACtE,CAAE+1B,GAAI95B,EAAU8D,QAASm5B,MAAO,KAAMF,MAAO,KAAMG,UAAWl9B,EAAUgE,iBACxF,GAAIqnB,GAAYrrB,EAAUmE,YAAckC,KAAK8T,IAAM6iB,EAAOlD,GAAI,CAC1D,IAAIqD,EAAY92B,KAAK2zB,qBACrB3zB,KAAKqU,UAAU,gBAAgBsiB,EAAOC,4CAA4CD,EAAOD,QAAS,QAC9Fr+B,OAAOgtB,OAAO,GAAIrhB,EAAU,CAAEhC,OAAQ,IAAM,CAC5C0G,MAAO,GAAGiuB,EAAOC,eAAeD,EAAOD,iBACvC3U,cAAgBC,GACL,CACH,CACIC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CAAE2O,gBAAiB/S,EAASoF,KAAM6N,YAAajT,EAASqF,OAAQyN,cAAe9S,EAASoF,KAAM4N,UAAW8f,EAAUztB,OAASytB,EAAU90B,QAC7I+S,KAAM4hB,EAAOD,WAMjC12B,KAAKoZ,YACL4L,EAAW2R,EAAOE,UAW1B,GALIH,EADAL,EAAa,EAAO3C,mBAAmB1xB,OAAS,EACxChC,KAAKo2B,gBAAgBC,EAAa,GAElCr2B,KAAKu2B,0BAGJ,MAATG,EAAe,CAEf,IAAIK,GAAkB,EACtB,GAAI/2B,KAAKg3B,WAAWV,IAASt2B,KAAKg3B,WAAWN,GAAQ,CACjD,IAAIO,EAAuBX,EACvBY,EAAwBR,EACxB/sB,EAAW+I,EAAuBukB,EAAO7F,cACzCxnB,EAAY8I,EAAuBwkB,EAAQ9F,cAC3CS,EAAaloB,EAASqF,cAAcgW,EAAUpb,GAClD,GAAkB,MAAdioB,EAAoB,CACpBkF,GAAkB,EAClB,IAAII,EAASxtB,EAAS2G,QAAQ0U,EAAU,CAAE5kB,KAAMuJ,EAAU/Q,MAAOq+B,EAAO1xB,UACpE,CAAEnF,KAAMwJ,EAAWhR,MAAOs+B,EAAQ3xB,WACtC0xB,EAAO7F,aAA+BS,EAAYuF,cAClDH,EAAO1xB,SAAW4xB,EAClBF,EAAOjzB,SAAShC,OAASk1B,EAAQlzB,SAASqF,OAAS6tB,EAAQlzB,SAAShC,OAASi1B,EAAOjzB,SAASqF,QAIhG0tB,IACDT,EAAO,CACHl2B,KAAMzG,EAAUorB,SAChB/gB,SAAUA,EACVghB,SAAUA,EACVxiB,aAAc8zB,EACd7zB,cAAei0B,KAQ/B,OAAOJ,EAIX,WAAWjyB,GAEP,OAAgB,MAARA,GAAgBA,EAAKjE,MAAQzG,EAAU0tB,aAInD,0BAEI,IAAIK,EAAsC,KACtC1jB,EAAW,KAEXhE,KAAK+zB,WAAW,CAACp6B,EAAU4D,WAAY5D,EAAU2D,gBACjDoqB,EAA2B1nB,KAAK8T,GAChC9P,EAAWhE,KAAK2zB,qBAChB3zB,KAAKoZ,aAGT,IAAIvgB,EAAcmH,KAAKq3B,aAqBvB,OAnBgC,MAA5B3P,IACA7uB,EAAI,CACAuH,KAAMzG,EAAU+tB,yBAChB1jB,SAAUA,EACVghB,SAAU0C,EACVwI,QAASr3B,IAIbmH,KAAK+zB,WAAW,CAACp6B,EAAU4D,WAAY5D,EAAU2D,gBACjDzE,EAAI,CACAuH,KAAMzG,EAAUguB,wBAChB3jB,SAAUhE,KAAK2zB,qBACf3O,SAAUhlB,KAAK8T,GACfoc,QAASr3B,GAEbmH,KAAKoZ,aAGFvgB,EAKX,aAEI,IAAImyB,EACAhnB,EAAyBhE,KAAK2zB,qBAElC,OAAQ3zB,KAAK8T,IACT,KAAKna,EAAU4C,YACX,OAAOyD,KAAKs3B,sBAAsBt3B,KAAKu3B,oBAC3C,KAAK59B,EAAUoD,MACf,KAAKpD,EAAU4E,IACXyF,EAAWA,EACX,IAAIwzB,EAAMx3B,KAAK8T,GAIf,GAHA9T,KAAKoZ,YACL4R,EAAOhrB,KAAKq3B,aAERr3B,KAAKg3B,WAAWhM,GAAO,CACvB,IAAIyM,EAAuBzM,EACvB0M,EAAWhlB,EAAuB+kB,EAAOrG,cACzCS,EAAa6F,EAAS1oB,cAAcwoB,GACxC,GAAkB,MAAd3F,EAAoB,CACpB,IAAIsF,EAASO,EAASpnB,QAAQknB,EAAK,CAAEp3B,KAAMs3B,EAAU9+B,MAAO6+B,EAAOlyB,WAInE,OAHAkyB,EAAOrG,aAA+BS,EAAYuF,cAClDK,EAAOlyB,SAAW4xB,EAClBnzB,EAAShC,OAASy1B,EAAOzzB,SAASqF,OAASrF,EAASqF,OAAS,EACtDouB,GAIf,MAAO,CACHr3B,KAAMzG,EAAUwtB,QAChBnjB,SAAUA,EACVksB,QAASlF,EACThG,SAAUwS,GAElB,KAAK79B,EAAUc,aACX,GAAIuF,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU4C,YAAa,CACxCyD,KAAKoZ,YACL,IAAItX,EAAa9B,KAAKu1B,4BAQtB,OAPAvK,EAAO,CACH5qB,KAAMzG,EAAU4oB,qBAChBve,SAAUA,EACVgsB,SAAUluB,EAAWmjB,MACrBzE,eAAgB1e,EAAW0e,eAC3BC,qBAAsB3e,EAAW2e,sBAE9BuK,EAQX,OANIA,EAAO,CACH5qB,KAAMzG,EAAUc,aAChBuJ,SAAUA,GAGlBhE,KAAKoZ,YACEpZ,KAAKs3B,sBAAsBtM,GACtC,KAAKrxB,EAAUa,YAMX,OALAwwB,EAAO,CACH5qB,KAAMzG,EAAUa,YAChBwJ,SAAUA,GAEdhE,KAAKoZ,YACEpZ,KAAKs3B,sBAAsBtM,GACtC,KAAKrxB,EAAUe,WACX,OAAOsF,KAAKs3B,sBAAsBt3B,KAAK23B,YAC3C,KAAKh+B,EAAUK,gBACf,KAAKL,EAAUS,aACf,KAAKT,EAAUM,sBACf,KAAKN,EAAUQ,eACf,KAAKR,EAAUO,gBACX8wB,EAAO,CACH5qB,KAAMzG,EAAU0tB,aAChBrjB,SAAUhE,KAAK2zB,qBACfvC,aAAcpxB,KAAK8T,GACnBvO,SAAUvF,KAAKkzB,IAAIt6B,OAEvB,IAAIg/B,EAAmB53B,KAAK8T,IAAMna,EAAUQ,eAG5C,OAFA6F,KAAKoZ,YAEDwe,EAAyB53B,KAAKs3B,sBAAsBtM,GAEjDA,EACX,KAAKrxB,EAAUuC,YAQX,OAPA8uB,EAAO,CACH5qB,KAAMzG,EAAU0tB,aAChBrjB,SAAUhE,KAAK2zB,qBACfvC,aAAcz3B,EAAUuC,YACxBqJ,SAAU,MAEdvF,KAAKoZ,YACE4R,EACX,KAAKrxB,EAAUI,WAEX,IAAI89B,EAAsB73B,KAAKkzB,IAAIt6B,MAC/Bm8B,EAAY/0B,KAAK2zB,qBAIrB,GAFA3zB,KAAKoZ,YAEDpZ,KAAK8T,IAAMna,EAAU4C,YAAa,CAClC,IAAIuF,EAAa9B,KAAKu1B,4BAClB9U,EAAuB3e,EAAW2e,qBAEtCuK,EAAO,CACH5qB,KAAMzG,EAAU2nB,WAChBtd,SAAU+wB,EACVtU,qBAAsBA,EACtBuP,SAAUluB,EAAWmjB,MACrB5rB,OAAQ2xB,EACRjxB,WAAY89B,EACZrX,eAAgB1e,EAAW0e,qBAG/BwK,EAAO,CACH5qB,KAAMzG,EAAUI,WAChBA,WAAY89B,EACZ7zB,SAAUA,GAIlB,OAAOhE,KAAKs3B,sBAAsBtM,GACtC,QAEI,OADAhrB,KAAKqU,UAAU,yFAA2FrU,KAAKkzB,IAAIt6B,OAC5G,MAQnB,mBAEI,IAAIoL,EAAWhE,KAAK2zB,qBAIpB,GAFA3zB,KAAKoZ,YAEDpZ,KAAK8T,IAAMna,EAAUI,YAAciG,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU6C,cAC9DwD,KAAKyyB,sBAAsB9tB,QAAQ3E,KAAK6e,GAAG,GAAG/K,IAAM,EAAG,CAEvD,IAAIuV,EAAarpB,KAAKo1B,YAClBL,EAAY/0B,KAAK2zB,qBACrB3vB,EAAShC,OAAS+yB,EAAU1rB,OAASrF,EAASqF,OAAS,EAEvDrJ,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAEpC,IAAI4sB,EAAappB,KAAKu2B,0BAEtB,MAAO,CACHn2B,KAAMzG,EAAUwnB,UAChBnd,SAAUA,EACVqlB,WAAYA,EACZD,WAAYA,GAIb,CAEH,IAAI4B,EAAOhrB,KAAKi1B,YACZxU,EAAuBzgB,KAAK2zB,qBAGhC,OAFA3zB,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAEhCwD,KAAKg3B,WAAWhM,GACTA,EAGsB,CAC7BhnB,SAAUyc,EACVrgB,KAAMzG,EAAU6C,aAChBysB,mBAAoB+B,IAUhC,WAEIhrB,KAAKoZ,YACL,IAAIpV,EAAWhE,KAAK2zB,qBAEpB,GAAI3zB,KAAKu0B,OAAO56B,EAAUI,YAAY,GAAQ,CAC1C,IAAIA,EAAqBiG,KAAKkzB,IAAIt6B,MAC9Bk/B,EAAqB93B,KAAK2zB,qBAC9B3zB,KAAKoZ,YAGL,IAAI2e,EAAoC,KAExC,GAAI/3B,KAAK8T,IAAMna,EAAU6D,MAAO,CAE5Bu6B,EAAwB,GACxB,IAAItB,GAAiB,EAIrB,IAHAz2B,KAAKoZ,YAGGqd,GAASz2B,KAAK8T,IAAMna,EAAUI,aAAiB08B,GAASz2B,KAAK8T,IAAMna,EAAUiF,OAE5E63B,GAAOz2B,KAAKoZ,YAEjBqd,GAAQ,EAERsB,EAAsBh0B,KAAK/D,KAAKo1B,aAIpCp1B,KAAKu0B,OAAO56B,EAAU8D,SACc,GAAhCs6B,EAAsB/1B,SAAa+1B,EAAwB,MAGnE,GAAI/3B,KAAK8T,IAAMna,EAAU8C,mBAAqBuD,KAAK8T,IAAMna,EAAUkD,uBAAwB,CAEvF,IAAIm7B,EAAqB,CACrB53B,KAAMzG,EAAUyG,KAChB4D,SAAUA,EACVi0B,eAAgB,EAChBl+B,WAAYA,EACZg+B,sBAAuBA,GAE3B/3B,KAAK0yB,UAAU3uB,KAAKi0B,GAEpB,IAAIlO,EAA2B,GAE/B,KAAO9pB,KAAK8T,IAAMna,EAAU8C,mBAAqBuD,KAAK8T,IAAMna,EAAUkD,wBAClEm7B,EAASC,iBAGLj4B,KAAK8T,IAAMna,EAAUkD,wBACrBitB,EAAa/lB,KAAK,MAClB/D,KAAKoZ,cAELpZ,KAAKoZ,YACL0Q,EAAa/lB,KAAK/D,KAAKi1B,aACvBj1B,KAAKu0B,OAAO56B,EAAU+C,oBAAoB,IAKlD,IAAIijB,EAAiB,KAcrB,OAZI3f,KAAK8T,IAAMna,EAAUgD,mBACrBgjB,EAAiB3f,KAAKk4B,kBAAkBF,IAGX,CAC7B53B,KAAMzG,EAAUgvB,SAChB3kB,SAAUA,EACVgmB,UAAWgO,EACXlO,aAAcA,EACdnK,eAAgBA,GAMjB,GAAI3f,KAAK8T,IAAMna,EAAU4C,YAAa,CACzC,IAAIuF,EAAa9B,KAAKu1B,4BAElB/G,EAAsB,CACtBpuB,KAAMzG,EAAUyG,KAChB4D,SAAU8zB,EACVG,eAAgB,EAChBl+B,WAAYA,EACZg+B,sBAAuBA,GAK3B,OAFA/3B,KAAK0yB,UAAU3uB,KAAKyqB,GAEb,CACHpuB,KAAMzG,EAAUouB,UAChB/jB,SAAUA,EACVwqB,UAAWA,EACXK,oBAAqB/sB,EAAWmjB,MAChCxE,qBAAsB3e,EAAW2e,qBACjCD,eAAgB1e,EAAW0e,gBAG/BxgB,KAAKqU,UAAU,oGAAqG,QAASrU,KAAK2zB,sBAI1I,OAAO,KAGX,kBAAkB3J,GAGd,IAAI/E,EAAgD,GAChDjhB,EAAWhE,KAAK2zB,qBAChB/J,EAAY,KAGhB,GADA5pB,KAAKu0B,OAAO56B,EAAUgD,kBAAkB,GACpCqD,KAAK8T,IAAMna,EAAUiD,kBAAmB,CAExC,IAAI65B,GAAQ,EACZ,KAAOA,GAASz2B,KAAK8T,IAAMna,EAAUiF,OAAO,CACxC,IAOIu5B,EAPApD,EAAY/0B,KAAK2zB,qBAQrB,GANK8C,GACDz2B,KAAKoZ,YAETqd,GAAQ,EAGJz2B,KAAK8T,IAAMna,EAAUgD,iBAAkB,CACvC,IAAIykB,EAAoB,CACpBhhB,KAAMzG,EAAUyG,KAChB4D,SAAUhE,KAAK2zB,qBACfsE,eAAgBjO,EAAUiO,eAAiB,EAC3Cl+B,WAAYiwB,EAAUjwB,YAE1BiG,KAAK0yB,UAAU3uB,KAAKqd,GACpB,IAAIgX,EAAKp4B,KAAKk4B,kBAAkB9W,GAChC+W,EAAeC,EAAGxO,UAAY,EAC9B3E,EAAMlhB,KAAKq0B,QAEXnT,EAAMlhB,KAAK/D,KAAKi1B,aAChBkD,EAAe,EAGF,MAAbvO,GACIA,GAAauO,GACbn4B,KAAKqU,UAAU,yCAA2C8jB,EAAe,GAAK,iEAAmEvO,EAAY,GAAK,KAAM,QAASmL,GAGzLnL,EAAYuO,GAgBpB,OAVAn4B,KAAKu0B,OAAO56B,EAAUiD,mBAAmB,GAEN,CAC/BwD,KAAMzG,EAAU8uB,oBAChBzkB,SAAUA,EACVgmB,UAAWA,EACXJ,UAAWA,EACX3E,MAAOA,GAOf,4BAGI,GADAjlB,KAAKoZ,YACDpZ,KAAK8T,IAAMna,EAAU6C,aAAc,CACnC,IAAIikB,EAAuBzgB,KAAK2zB,qBAEhC,OADA3zB,KAAKoZ,YACE,CAAEqH,qBAAsBA,EAAsBwE,MAAO,GAAIzE,eAAgB,IAGpF,IAAI1e,EAAyB,GACzB0e,EAAiC,GAErC,OAAa,CACT,IAAIrN,EAAMnT,KAAKmT,IAEXklB,EAAYr4B,KAAKi1B,YAKrB,GAJiB,MAAboD,GACAv2B,EAAWiC,KAAKs0B,GAGhBr4B,KAAK8T,IAAMna,EAAUiF,MACrB,MAEA4hB,EAAezc,KAAK/D,KAAK2zB,sBACzB3zB,KAAKoZ,YAILpZ,KAAKmT,KAAOA,GACZnT,KAAKoZ,YAKb,IAAIpV,EAAWhE,KAAK2zB,qBAGpB,MAAO,CAAElT,qBAFezgB,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAETwH,EAAW,KAAMihB,MAAOnjB,EAAY0e,eAAgBA,GAI3G,sBAAsBwK,GAElB,GAAY,MAARA,EAAc,OAAO,KAEzB,KAAOhrB,KAAK+zB,WAAW,CAACp6B,EAAUmD,IAAKnD,EAAU8C,qBAC7C,GAAIuD,KAAK8T,IAAMna,EAAUmD,IAAK,CAI1B,GAFAkD,KAAKoZ,YAEDpZ,KAAK8T,IAAMna,EAAUI,WAErB,OADAiG,KAAKqU,UAAU,oFAAsFrU,KAAKkzB,IAAIt6B,OACvGoyB,EAGX,IAAIjxB,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoL,EAAWhE,KAAK2zB,qBAGpB,GAFA3zB,KAAKoZ,YAEDpZ,KAAK8T,IAAMna,EAAU4C,YAAa,CAClC,IAAIuF,EAAa9B,KAAKu1B,4BACtBvK,EAAO,CACH5qB,KAAMzG,EAAU2nB,WAChBtd,SAAUA,EACVyc,qBAAsB3e,EAAW2e,qBACjCuP,SAAUluB,EAAWmjB,MACrB5rB,OAAQ2xB,EACRjxB,WAAYA,EACZymB,eAAgB1e,EAAW0e,qBAG/BwK,EAAO,CACH5qB,KAAMzG,EAAU6pB,cAChBxf,SAAUA,EACVjK,WAAYA,EACZV,OAAQ2xB,OAIb,CAEH,IAAIhnB,EAAWgnB,EAAKhnB,SACpBhE,KAAKoZ,YACL,IAAIlX,EAAQlC,KAAKi1B,YACbqD,EAAct4B,KAAK2zB,qBACnBoB,EAA0B18B,OAAOgtB,OAAO,GAAIrhB,GAChDhE,KAAKu0B,OAAO56B,EAAU+C,oBAAoB,GACtC47B,EAAYlvB,MAAQpF,EAASoF,KAC7B2rB,EAAU/yB,OAASs2B,EAAYjvB,OAASivB,EAAYt2B,OAAS+yB,EAAU1rB,OAEvE0rB,EAAYuD,EAEhBtN,EAAO,CACH5qB,KAAMzG,EAAU8tB,mBAChBzjB,SAAU+wB,EACV7yB,MAAOA,EACP7I,OAAQ2xB,GAMpB,OAAOA,EAGX,yBAAyB5qB,GAErB,IAAIU,GAAU,EAUd,GATId,KAAK8T,IAAMna,EAAUwC,eACrB2E,GAAU,EACVd,KAAKoZ,aAGG,MAARhZ,IACAA,EAAOJ,KAAKo1B,aAGbp1B,KAAK8T,IAAMna,EAAUI,WAEpB,OADAiG,KAAKqU,UAAU,2DAA4D,QAASrU,KAAK2zB,sBAClF,KAGX,IAAI55B,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoL,EAAWhE,KAAK2zB,qBACpB3zB,KAAKoZ,YAEL,IAAIuG,EAA2B,KAc/B,OAXI3f,KAAK8T,IAAMna,EAAUmE,aACrBkC,KAAKoZ,YAGDuG,EADAvf,EAAK63B,eAAiB,GAAKj4B,KAAK8T,IAAMna,EAAUgD,iBAC/BqD,KAAKk4B,kBAAkB93B,GAEvBJ,KAAKi1B,aAK1Bj1B,KAAK8T,IAAMna,EAAUyF,iBAA2B,MAARgB,GAA8B,MAAdrG,EAA2B,KAEhF,CACHqG,KAAMzG,EAAU6uB,yBAChBxkB,SAAUA,EACVjK,WAAYA,EACZ0wB,aAAcrqB,EACduf,eAAgBA,EAChB7e,QAASA,GAKjB,YAMI,IAAI/G,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoL,EAAWhE,KAAK2zB,qBACpB3zB,KAAKoZ,YAEL,IAAI2e,EAAoC,KAExC,GAAI/3B,KAAK8T,IAAMna,EAAU6D,MAAO,CAE5Bu6B,EAAwB,GACxB,IAAItB,GAAiB,EAIrB,IAHAz2B,KAAKoZ,YAGGqd,GAASz2B,KAAK8T,IAAMna,EAAUI,aAAiB08B,GAASz2B,KAAK8T,IAAMna,EAAUiF,OAE5E63B,GAAOz2B,KAAKoZ,YAEjBqd,GAAQ,EAERsB,EAAsBh0B,KAAK/D,KAAKo1B,aAIpCp1B,KAAKu0B,OAAO56B,EAAU8D,SAI1B,IAAIw6B,EAAiB,EACrB,KAAOj4B,KAAK8T,IAAMna,EAAUkD,wBACxBo7B,IACAj0B,EAAShC,QAAU,EACnBhC,KAAKoZ,YAGT,IAAI4e,EAAqB,CACrB53B,KAAMzG,EAAUyG,KAChB4D,SAAUA,EACVi0B,eAAgBA,EAChBl+B,WAAYA,EACZg+B,sBAAuBA,GAK3B,OAFA/3B,KAAK0yB,UAAU3uB,KAAKi0B,GAEbA,EAKX,uBAEI,IAAI/E,EAAgBjzB,KAAKkzB,IAAID,cACzBsF,EAAYv4B,KAAKw4B,mBAErB,IAAKx4B,KAAK+zB,WAAW,EAAO0E,aAExB,OADAz4B,KAAKqU,UAAU,6DAA+DrU,KAAKkzB,IAAIt6B,OAChF,KAGX,IAAI41B,EAAYxuB,KAAK8T,GAGrB,GAFA9T,KAAKoZ,YAEDpZ,KAAKu0B,OAAO56B,EAAUI,YAAY,GAAQ,CAE1C,IAAIA,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoL,EAAWhE,KAAK2zB,qBACpB3zB,KAAKoZ,YAEL,IAAIsf,EAAsC,GAEtC14B,KAAK8T,IAAMna,EAAU6D,QACrBk7B,EAAiB14B,KAAK24B,gCAG1B,IAAIC,EAAoB54B,KAAK64B,uBAAuBrK,GAAa70B,EAAUgB,kBAE3E,GAAI6zB,GAAa70B,EAAUiB,YACvB,OAAOoF,KAAK84B,UAAU/+B,EAAY6+B,EAAmB50B,EAAUu0B,EAAU13B,WAAYoyB,GAGzF,IAAIzT,EAAYxf,KAAK2zB,qBACrB,GAAI3zB,KAAKu0B,OAAO56B,EAAUgD,kBAAkB,GAAO,CAE/C,IAAIo8B,EAAuB/4B,KAAKg5B,eAAexK,EAAWz0B,GACtD0lB,EAAUzf,KAAK+1B,uBAEnB,OADA/1B,KAAKu0B,OAAO56B,EAAUiD,mBAAmB,GACjC4xB,GAEJ,KAAK70B,EAAUY,aAAc,MAAO,CAChC6F,KAAMzG,EAAUY,aAChByJ,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACT1lB,WAAYA,EACZwJ,WAAYw1B,EAAqBx1B,WACjCwC,QAASgzB,EAAqBhzB,QAC9B5E,WAAYo3B,EAAUp3B,WACtBN,WAAY03B,EAAU13B,WACtBgM,QAAS+rB,EAAkB/rB,QAC3BjH,WAAYgzB,EAAkBhzB,WAC9B8yB,eAAgBA,EAChBzF,cAAeA,GAGnB,KAAKt5B,EAAUgB,iBAAkB,MAAO,CACpCyF,KAAMzG,EAAUgB,iBAChBqJ,SAAUA,EACVjK,WAAYA,EACZylB,UAAWA,EACXC,QAASA,EACT1Z,QAASgzB,EAAqBhzB,QAC9B2yB,eAAgBA,EAChB7rB,QAAS+rB,EAAkBhzB,WAC3BqtB,cAAeA,MAWnC,+BAEI,IAAIyF,EAAsC,GAEtCO,EAAgB,GAEpBj5B,KAAKu0B,OAAO56B,EAAU6D,OAAO,GAC7B,IAAIi5B,GAAiB,EAErB,KAAQA,GAASz2B,KAAK8T,IAAMna,EAAUI,aAAiB08B,GAASz2B,KAAK8T,IAAMna,EAAUiF,OAAQ,CAEpF63B,GAAOz2B,KAAKu0B,OAAO56B,EAAUiF,OAAO,GAEzC,IAAIs6B,EAAwB,CACxB94B,KAAMzG,EAAUw/B,cAChBn1B,SAAUhE,KAAK2zB,qBACf55B,WAAoBiG,KAAKkzB,IAAIt6B,MAC7BiU,QAAS,KACTjH,WAAY,MAGoB,MAAhCqzB,EAAcC,EAAGn/B,aACjBiG,KAAKqU,UAAU,8DAGnB4kB,EAAcC,EAAGn/B,aAAc,EAE/BiG,KAAKoZ,YAEL,IAAIwf,EAAoB54B,KAAKo5B,2BAE7BF,EAAGrsB,QAAU+rB,EAAkB/rB,QAEb,MAAdqsB,EAAGrsB,SAAmBqsB,EAAGrsB,QAAQorB,eAAiB,GAClDj4B,KAAKqU,UAAU,kCAAoC6kB,EAAGn/B,WAAa,0BAGvEm/B,EAAGtzB,WAAagzB,EAAkBhzB,WAElCszB,EAAGtzB,WAAWmJ,QAASsqB,IACfA,EAAGpB,eAAiB,GACpBj4B,KAAKqU,UAAU,kCAAoC6kB,EAAGn/B,WAAa,4BAI3E08B,GAAQ,EAERiC,EAAe30B,KAAKm1B,GAMxB,OAFAl5B,KAAKu0B,OAAO56B,EAAU8D,SAAS,GAExBi7B,EAGX,UAAU3+B,EAAoB6+B,EAG3B50B,EAAwBnD,EAAwBoyB,GAEd,MAA7B2F,EAAkB/rB,SAClB7M,KAAKqU,UAAU,qDAEfukB,EAAkBhzB,WAAW5D,OAAS,GACtChC,KAAKqU,UAAU,gDAGnB,IAAImL,EAAYxf,KAAK2zB,qBACrB,GAAI3zB,KAAKu0B,OAAO56B,EAAUgD,kBAAkB,GAAO,CAE/C,IAAI0T,EAA0BrQ,KAAKs5B,kBAE/BP,EAAuB/4B,KAAKg5B,eAAer/B,EAAUiB,YAAab,GAElE0lB,EAAUzf,KAAK+1B,uBAKnB,OAHA/1B,KAAKu0B,OAAO56B,EAAUiD,mBAAmB,GAGlC,CACHwD,KAAMzG,EAAUiB,YAChBoJ,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACTlc,WAAYw1B,EAAqBx1B,WACjCwC,QAASgzB,EAAqBhzB,QAC9BhM,WAAYA,EACZsW,OAAQA,EACRxP,WAAYA,EACZoyB,cAAeA,GAKvB,OAAO,KAIX,kBAEI,IAAI5iB,EAA0B,GAE1B8C,EAAc,EACdsjB,GAAiB,EAErB,KAAQA,GAASz2B,KAAK8T,IAAMna,EAAUI,YAAeiG,KAAK8T,IAAMna,EAAUiF,OAAO,CAK7E,GAJAuU,EAAMnT,KAAKmT,IACNsjB,GAAOz2B,KAAKoZ,YACjBqd,GAAQ,EAEJz2B,KAAKu0B,OAAO56B,EAAUI,YAAY,GAAQ,CAE1C,IAAIA,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoL,EAAWhE,KAAK2zB,qBACpB3zB,KAAKoZ,YACL,IAAIiH,EAAoC,KAEpCG,EAAiC,GACjCC,EAAqC,KAEzC,GAAIzgB,KAAK8T,IAAMna,EAAU4C,YAAa,CAClC,IAAI+4B,EAAMt1B,KAAKu1B,4BACflV,EAAwBiV,EAAIrQ,MAC5BzE,EAAiB8U,EAAI9U,eACrBC,EAAuB6U,EAAI7U,qBAG/BpQ,EAAOtM,KAAK,CACR3D,KAAMzG,EAAU2mB,cAChBD,sBAAuBA,EACvBtmB,WAAYA,EACZiK,SAAUA,EACVwc,eAAgBA,EAChBC,qBAAsBA,IAK1BzgB,KAAKmT,KAAOA,GACZnT,KAAKoZ,YAQb,OAJIpZ,KAAK8T,IAAMna,EAAU8E,WACrBuB,KAAKoZ,YAGF/I,EAIX,eAAeme,EAAsB+K,GAIjC,IAAIxzB,EAAmC,GACnCxC,EAAyC,GAE7C,KAEQvD,KAAK8T,IAAMna,EAAUiD,mBAAqBoD,KAAK8T,IAAMna,EAAUyF,iBAF1D,CAMT,IAAI6zB,EAAuBjzB,KAAKkzB,IAAID,cAEhCuG,EAAa,KACdx5B,KAAK8T,IAAMna,EAAUmF,KACpB06B,EAAax5B,KAAKkzB,IAAIt6B,OAE1B,IAAI2/B,EAAYv4B,KAAKw4B,mBAEjBp3B,GAAgB,EAChB4C,EAAWhE,KAAK2zB,qBAEhB3zB,KAAK8T,IAAMna,EAAUI,YAAsBiG,KAAKkzB,IAAIt6B,OAAS2gC,GAAav5B,KAAK6e,GAAG,GAAG/K,IAAMna,EAAU4C,cACrG6E,GAAgB,GAGpB,IAAIhB,EAAOJ,KAAKo1B,YAEhB,GAAIh0B,GAAiBpB,KAAKu0B,OAAO56B,EAAUI,YAAY,GAAQ,CAE3D,IAAIA,EAAaw/B,EASjB,GAPKn4B,IACD4C,EAAWhE,KAAK2zB,qBAEhB55B,EAAqBiG,KAAKkzB,IAAIt6B,MAC9BoH,KAAKoZ,aAGLpZ,KAAK8T,IAAMna,EAAU4C,YAAa,CAE9B6E,GAAiBotB,GAAa70B,EAAUiB,aAAe29B,EAAU13B,YAAcjH,EAAWwS,SAC1FpM,KAAKqU,UAAU,8CAA+C,QAASrQ,GAG3E,IAEII,EAFAtC,EAA8B9B,KAAKy5B,mCAGnCja,EAA0Bxf,KAAK2zB,qBAC/BlU,EAAwBD,EAE5B,GAAI+Y,EAAUp3B,WACVnB,KAAKu0B,OAAO56B,EAAU8E,WAAW,GAC7B2C,GACApB,KAAKqU,UAAU,4CAA6C,QAASrQ,GAEzEI,EAAa,QAKb,GAHAob,EAAYxf,KAAK2zB,qBACjBvvB,EAAapE,KAAKk0B,iBAClBzU,EAAUzf,KAAK+1B,uBACG,MAAd3xB,GAAsBA,EAAWpC,OAAS,GAAKoC,EAAW,GAAGhE,MAAQzG,EAAU0oB,UAAW,CAC1F,IAAIA,EAAuBje,EAAW,GACtCob,EAAY6C,EAAUre,SACtByb,EAAU4C,EAAUtI,WAK5BhU,EAAQhC,KAAK,CACT3D,KAAMzG,EAAU+/B,kBAChB3/B,WAAYA,EACZiK,SAAUA,EACVwb,UAAWA,EACXC,QAASA,EACT3d,WAAYA,EACZsC,WAAYA,EACZvD,WAAY03B,EAAU13B,WACtBM,WAAYo3B,EAAUp3B,YAAcqtB,GAAa70B,EAAUgB,iBAC3DiG,SAAU23B,EAAU33B,SACpBQ,cAAeA,EACfH,WAAYb,EACZo5B,WAAYA,EACZG,YAAapB,EAAUoB,YACvB1G,cAAeA,QAGhB,CAECl5B,GAAcw/B,GACdv5B,KAAKqU,UAAU,gBAAkBklB,EAAY,yDAA0D,QAASv1B,GAGpH,IAAI2b,EAA2B,KAE3B3f,KAAK8T,IAAMna,EAAUmE,aACrBkC,KAAKoZ,YAGDuG,EADAvf,EAAK63B,eAAiB,GAAKj4B,KAAK8T,IAAMna,EAAUgD,iBAC/BqD,KAAKk4B,kBAAkB93B,GAEvBJ,KAAKi1B,aAI9Bj1B,KAAKu0B,OAAO56B,EAAU8E,WAEtB8E,EAAWQ,KAAK,CACZ3D,KAAMzG,EAAUigC,qBAChB7/B,WAAYA,EACZiK,SAAUA,EACV4f,cAAexjB,EACfQ,SAAU23B,EAAU33B,SACpBE,QAASy3B,EAAUz3B,QACnBD,WAAY03B,EAAU13B,WACtB8e,eAAgBA,EAChB6Z,WAAYA,EACZG,YAAapB,EAAUoB,YACvB1G,cAAeA,IAGfzE,GAAa70B,EAAUgB,kBACvBqF,KAAKqU,UAAU,+CAAgD,QAASrQ,KAWxF,MAAO,CAAE+B,QAASA,EAASxC,WAAYA,GAI3C,mCAGI,IAAIzB,EAA8B,GAGlC,GAFA9B,KAAKoZ,YAEDpZ,KAAK8T,IAAMna,EAAU6C,aAErB,OADAwD,KAAKoZ,YACE,GAGX,IAAIza,GAAW,EAEf,OAAa,CACLA,GACAqB,KAAKqU,UAAU,sEAEnB,IAAIvT,EAAUd,KAAK8T,IAAMna,EAAUwC,aAE/B2E,GAASd,KAAKoZ,YAElB,IAAIhZ,EAAiBJ,KAAKo1B,YAQ1B,GANAz2B,EAAWqB,KAAK8T,IAAMna,EAAUgF,SAC5BA,IACAqB,KAAKoZ,YACLhZ,EAAK63B,kBAGLj4B,KAAKu0B,OAAO56B,EAAUI,YAAY,GAAQ,CAC1C,IAAIA,EAAqBiG,KAAKkzB,IAAIt6B,MAClCkJ,EAAWiC,KAAK,CACZ3D,KAAMzG,EAAUkgC,qBAChB71B,SAAUhE,KAAK2zB,qBACf55B,WAAYA,EACZ+/B,cAAe15B,EACfU,QAASA,EACTmB,WAAYtD,IAEhBqB,KAAKoZ,YAET,GAAIpZ,KAAK8T,IAAMna,EAAUiF,MACrB,MAEJoB,KAAKoZ,YAKT,OAFApZ,KAAKu0B,OAAO56B,EAAU6C,cAAc,GAE7BsF,EAIX,uBAAuBi4B,GAEnB,IAAIC,EAAqB,KACrBC,EAA0B,GAE9B,KAAMj6B,KAAK+zB,WAAW,CAACp6B,EAAUyB,eAAgBzB,EAAU0B,qBAYvD,GAXI2E,KAAK+zB,WAAWp6B,EAAUyB,kBAAoB2+B,IAC/B,MAAZC,GACCh6B,KAAKqU,UAAU,uHAAwH,QAAS2lB,EAASh2B,UAE7JhE,KAAKoZ,YACL4gB,EAAWh6B,KAAKo1B,YACA,MAAZ4E,GAAoBA,EAAS/B,eAAiB,GAC9Cj4B,KAAKqU,UAAU,qDAAsD,QAAS2lB,EAASh2B,YAIzF+1B,GAAe/5B,KAAK+zB,WAAWp6B,EAAU0B,oBAAwB0+B,GAAe/5B,KAAK+zB,WAAWp6B,EAAUyB,gBAAkB,CAC3H6+B,EAAYj4B,OAAS,GACpBhC,KAAKqU,UAAU,gIAAiI,WAEpJrU,KAAKoZ,YACL,IAAIqd,GAAQ,EACZ,KAAQA,GAASz2B,KAAK8T,IAAMna,EAAUI,aAAiB08B,GAASz2B,KAAK8T,IAAMna,EAAUiF,OAC5E63B,GAAOz2B,KAAKoZ,YACjBqd,GAAQ,EACRwD,EAAYl2B,KAAK/D,KAAKo1B,aAWlC,OANA6E,EAAYlrB,QAASsqB,IACbA,EAAGpB,eAAiB,GACpBj4B,KAAKqU,UAAUglB,EAAGt/B,WAAa,yFAIhC,CACH8S,QAASmtB,EAAUp0B,WAAYq0B,GAIvC,2BAEI,IAAID,EAAqB,KACrBC,EAA0B,GAO9B,IALIj6B,KAAK+zB,WAAWp6B,EAAUyB,kBAC1B4E,KAAKoZ,YACL4gB,EAAWh6B,KAAKo1B,aAGbp1B,KAAK+zB,WAAWp6B,EAAUyE,YAC7B4B,KAAKoZ,YACL6gB,EAAYl2B,KAAK/D,KAAKo1B,aAG1B,MAAO,CACHvoB,QAASmtB,EAAUp0B,WAAYq0B,GAKvC,mBAEI,IAAIp5B,EAAajH,EAAWsM,OACxB/E,GAAa,EACbP,GAAW,EACXE,GAAU,EACV64B,GAAc,EAEdO,GAAO,EAEX,MAAQA,GAEJ,OAAQl6B,KAAK8T,IACT,KAAKna,EAAUoB,cACX8F,EAAajH,EAAWsM,OACxBlG,KAAKoZ,YACL,MACJ,KAAKzf,EAAUsB,eACX4F,EAAajH,EAAWwS,QACxBpM,KAAKoZ,YACL,MACJ,KAAKzf,EAAUqB,iBACX6F,EAAajH,EAAWqQ,UACxBjK,KAAKoZ,YACL,MACJ,KAAKzf,EAAUwB,cACXyF,GAAW,EACXZ,KAAKoZ,YACL,MACJ,KAAKzf,EAAUmB,gBACXqG,GAAa,EACbnB,KAAKoZ,YACL,MACJ,KAAKzf,EAAUwC,aACX2E,GAAU,EACVd,KAAKoZ,YACL,MACJ,KAAKzf,EAAUuB,iBACXy+B,GAAc,EACd35B,KAAKoZ,YACL,MACJ,QAAS8gB,GAAO,EAKxB,MAAO,CAAE/4B,WAAYA,EAAYP,SAAUA,EAAUC,WAAYA,EAAYC,QAASA,EAAS64B,YAAaA,IAxiEzG,EAAApI,oBAAsB,CAAC53B,EAAUmE,WAAYnE,EAAUoE,eAAgBpE,EAAUqE,gBAAiBrE,EAAUsE,yBAA0BtE,EAAUuE,mBAAoBvE,EAAUwE,kBAE9K,EAAAu1B,mBAAoC,CAAC,EAAOnC,oBACnD,CAAC53B,EAAU6E,iBAAkB,CAAC7E,EAAU+E,OACxC,CAAC/E,EAAU2E,IAAK,CAAC3E,EAAU0E,KAC3B,CAAC1E,EAAUyC,kBAAmBzC,EAAU6D,MAAO7D,EAAU+D,aAAc/D,EAAU8D,QAAS9D,EAAUgE,eAAgBhE,EAAUiE,MAAOjE,EAAUkE,UAC/I,CAAClE,EAAUsD,KAAMtD,EAAUoD,OAAQ,CAACpD,EAAUuD,eAAgBvD,EAAUwD,SAAUxD,EAAUqD,SAGrF,EAAAm9B,yBAA2B,CAC9B,CAACxgC,EAAUoB,eAAgBnB,EAAWsM,OACtC,CAACvM,EAAUsB,gBAAiBrB,EAAWwS,QACvC,CAACzS,EAAUqB,kBAAmBpB,EAAWqQ,WAGtC,EAAAmwB,qBAAuB,CAACzgC,EAAUoB,cAAepB,EAAUsB,eAAgBtB,EAAUqB,iBAAkBrB,EAAUkB,YACxHlB,EAAUI,WAAYJ,EAAUiD,kBAAmBjD,EAAUwB,cAAexB,EAAUmB,gBACtFnB,EAAUY,aAAcZ,EAAUiB,YAAajB,EAAUgB,kBAuPlD,EAAA89B,YAA2B,CAAC9+B,EAAUY,aAAcZ,EAAUiB,YAAajB,EAAUgB,kBACrF,EAAA0/B,iBAAgC,CAAC1gC,EAAUsB,eAAgBtB,EAAUqB,iBAAkBrB,EAAUoB,eACjG,EAAAi5B,4BAA2C,EAAOyE,YAAYlxB,OAAO,EAAO8yB,kBAAkB9yB,OAAO5N,EAAUmB,iBAAiByM,OAAO,EAAOkxB,aC1QnJ,MAAO,GAST,OAAO7/B,GACHoH,KAAKs6B,iBAAmB,IAAIx6B,IAC5BE,KAAKu6B,UAAY,EACjB,IAAIC,EAAOC,KAAKC,UAAU16B,KAAK26B,UAAU/hC,IAEzC,OADAoH,KAAKs6B,iBAAmB,KACjBE,EAGX,UAAU5hC,GACN,IAAIwH,EAAOxH,EAAMwH,KACboD,EAAI5K,EAAMA,MACd,GAAS,MAAL4K,EAAW,OAAO,KAEtB,IAAKpD,aAAgB,GAASA,aAAgB,IAAiC,UAAnBA,EAAKrG,WAAwB,CAErF,GAAIqG,aAAgB,EAAM,CAEtB,OADiCoD,EAClB8Y,UAAUQ,QAG7B,IAAI8d,EAAqBp3B,EACzB,OAAOxD,KAAK66B,gBAAgBD,GACzB,GAAIx6B,aAAgB,EAAW,CAElC,OAD2BoD,EACRZ,IAAIhK,GAASoH,KAAK26B,UAAU/hC,IAG/C,OAAOA,EAAMA,MAIrB,gBAAgBgiC,GAEZ,IAAI14B,EAAQlC,KAAKs6B,iBAAiB9hC,IAAIoiC,GACtC,GAAa,MAAT14B,EACA,MAAO,CAAE,KAAMA,GAGnBA,EAAQlC,KAAKu6B,YACbv6B,KAAKs6B,iBAAiBj3B,IAAIu3B,EAAK14B,GAC/B,IAAIa,EAAsB63B,EAAI13B,MAG9B,GAAGH,EAAMrL,OAAOmP,gBAAmE,MAAjD9D,EAAM+hB,qBAAqB,mBACzD,OAAO,KAGX,IAAIgW,EAAqC,CAAE,KAAM/3B,EAAMhJ,WAAY,KAAMmI,GACzE,KAAgB,MAATa,GAAe,CAClB,IAAIE,EAAkB23B,EAAI33B,gBAAgBzK,IAAIuK,EAAMhJ,YACpD,GAAuB,MAAnBkJ,EAAyB,CACzB,IACI83B,EADAtE,GAAiB,EAErB,IAAK,IAAI7uB,KAAa7E,EAAMQ,WACnBqE,EAAUhH,UAAagH,EAAU+xB,cAC9BlD,IACAA,GAAQ,EACRsE,EAAuB,GACvBD,EAAiB/3B,EAAMhJ,YAAcghC,GAEzCA,EAAqBnzB,EAAU7N,YAAciG,KAAK26B,UAAU13B,EAAgBzK,IAAIoP,EAAU7N,cAKtGgJ,EAAQA,EAAMK,UAGlB,OAAO03B,EAGX,SAASE,EAAoB56B,EAAYqd,EAA0Bwd,GAC/Dj7B,KAAKk7B,iBAAmB,GACxBl7B,KAAKm7B,gBAAkB,GAEvB,IAAIC,EAAWX,KAAKY,MAAML,GACtB3G,EAAMr0B,KAAKs7B,YAAYF,EAAKh7B,EAAMqd,EAAawd,GAEnD,IAAI,IAAIM,KAAOv7B,KAAKm7B,gBAAgB,CAChC,IAAIviC,EAAQoH,KAAKk7B,iBAAiBK,EAAI5jC,GAC1B,MAATiB,IACC2iC,EAAI/3B,EAAEpD,KAAOxH,EAAMwH,KACnBm7B,EAAI/3B,EAAE5K,MAAQA,EAAMA,OAM5B,OAFAoH,KAAKk7B,iBAAmB,KACxBl7B,KAAKm7B,gBAAkB,KAChB9G,EAAIz7B,MAGf,YAAYwiC,EAAUh7B,EAAYqd,EAA0Bwd,GACxD,GAAW,MAAPG,EAAa,MAAO,CAAEh7B,KAAMA,EAAMxH,MAAO,MAE7C,IAAKwH,aAAgB,GAASA,aAAgB,IAAiC,UAAnBA,EAAKrG,WAAwB,CAErF,GAAIqG,aAAgB,EAChB,MAAO,CACHA,KAAMA,EACNxH,MAAOwH,EAAKsc,eAAe0e,GAAK/hC,QAIxC,IAAIyhC,EAAqCM,EACzC,OAAOp7B,KAAKw7B,kBAAkBV,EAAkB16B,EAAMqd,EAAawd,GAEhE,GAAI76B,aAAgB,EAAW,CAElC,MAAO,CACHA,KAAMA,EACNxH,MAHmBwiC,EAGFx4B,IAAIY,GAAKxD,KAAKs7B,YAAY93B,EAAGpD,EAAKiC,YAAaob,EAAawd,KAIjF,MAAO,CAAE76B,KAAMA,EAAMxH,MAAOwiC,GAKpC,kBAAkBN,EAAoC16B,EAAyBqd,EAC3Ewd,GAEA,IAAIlhC,EAAqB+gC,EAAiB,MACtC54B,EAAQ44B,EAAiB,MAC7B,GAAkB,MAAd/gC,EAAoB,CAEpB,IAAI0hC,EAAuBhe,EAAYF,QAAQxjB,GAAYqG,KACvD2C,EAAQ04B,EAERb,EAAqBK,EAAYS,6BAA6B34B,GAElE,KAAgB,MAATA,GAAe,CAClB,IAAIE,EAAkB23B,EAAI33B,gBAAgBzK,IAAIuK,EAAMhJ,YAChDghC,EAAuBD,EAAiB/3B,EAAMhJ,YAClD,GAAuB,MAAnBkJ,GAA+C,MAApB63B,EAC3B,IAAK,IAAIlzB,KAAa7E,EAAMQ,WACnBqE,EAAUhH,UAAagH,EAAU+xB,aAClC12B,EAAgBI,IAAIuE,EAAU7N,WAAYiG,KAAKs7B,YAAYP,EAAqBnzB,EAAU7N,YAAa6N,EAAUxH,KAAMqd,EAAawd,IAKhJl4B,EAAQA,EAAMK,UAGlB,IAAIxK,EAAe,CAACwH,KAAMq7B,EAAQ7iC,MAAOgiC,GAEzC,OADA56B,KAAKk7B,iBAAiBh5B,GAAStJ,EACxBA,EAEJ,CACH,IAAIsJ,EAAQ44B,EAAiB,MACzBliC,EAAQoH,KAAKk7B,iBAAiBh5B,GAClC,OAAa,MAATtJ,GACAA,EAAQ,CAAEwH,KAAMA,EAAMxH,MAAO,MAC7BoH,KAAKm7B,gBAAgBp3B,KAAK,CAAEP,EAAG5K,EAAOjB,EAAGuK,IAClCtJ,GAEA,CAAEwH,KAAMxH,EAAMwH,KAAMxH,MAAOA,EAAMA,SC7JlD,MAAO,GAiBT,YAAoB06B,GAAA,KAAAA,OATpB,KAAAqI,6BAA4D,IAAI77B,IAIhE,KAAA87B,aAAgC,GAChC,KAAAC,+BAAkD,GAElD,KAAAC,kBAAyC,GAMzC,MAAMre,GAEFzd,KAAK+7B,QAAU,GACf/7B,KAAKg8B,WAAa,GAClBh8B,KAAKi8B,MAAQ,GACbj8B,KAAKk8B,gBAAkB,IAAIp8B,IAE3BE,KAAKyd,YAAcA,EAEnBzd,KAAKm8B,wBAELn8B,KAAKo8B,4BAEL,IAAIC,EAAkCr8B,KAAKs8B,uBAE3Ct8B,KAAKu8B,wBAAuB,GAE5Bv8B,KAAKw8B,oBAAoBH,GAEzBr8B,KAAKy8B,2BAEL,IAAIC,EAAyB18B,KAAKw8B,oBAAoBx8B,KAAK47B,cAE3D57B,KAAKu8B,wBAAuB,GAE5Bv8B,KAAKw8B,oBAAoBE,GAEzB18B,KAAK28B,4BAEL38B,KAAK48B,kCAEL58B,KAAK68B,oCAMT,oCAEI,IAAK,IAAIC,KAAM98B,KAAK47B,aAAc,CAC9B,GAAyC,MAArCkB,EAAGjc,SAASkX,sBAA+B,SAE/C,IAAIgF,EAA6BD,EAAGjc,SAAS/B,aAE7C,GAA+B,MAA3Bie,EAAGx2B,qBAEP,GAAIw2B,EAAGt3B,cAAczD,QAAU+6B,EAAGx2B,qBAAqBd,cAAczD,OAArE,CASA,IAAK,IAAIrK,EAAI,EAAGA,EAAIolC,EAAGt3B,cAAczD,OAAQrK,IAAK,CAE9C,IAAIqT,EAAgB,KAEhBgyB,EAAaD,EAAGt3B,cAAc9N,GAC9BslC,EAAYF,EAAGx2B,qBAAqBd,cAAc9N,GAClDulC,EAAuBJ,EAAGjc,SAASkX,sBAAsBpgC,GAC7DqlC,EAAWxd,UAAYyd,EAAUzd,UACjCwd,EAAWvd,QAAUwd,EAAUxd,QAC/Bud,EAAWjjC,WAAakjC,EAAUljC,WAElCiR,EAAQ,GACHgyB,EAAW58B,KAAKiO,gBAAgB4uB,EAAU78B,QAC3C4K,GAAS,cAAgBgyB,EAAW58B,KAAKrG,WAAa,8BAAgCkjC,EAAU78B,KAAKrG,WAAa,yCAA2CkjC,EAAUljC,WAAa,eAAiBgjC,EAAGx2B,qBAAqBxM,WAAa,MAG9O,IAAIojC,EAAmB,GACvB,IAAK,IAAIC,KAAeH,EAAU78B,KAAKwF,WAC9Bo3B,EAAW58B,KAAKi9B,oBAAoBD,IACrCD,EAAOp5B,KAAKq5B,EAAYrjC,YAI5BojC,EAAOn7B,OAAS,IAChBgJ,GAAS,cAAgBgyB,EAAWjjC,WAAa,uCAAyCojC,EAAOr6B,KAAK,OAG7F,IAATkI,GACA8xB,EAAGplC,OAAO4b,OAAO,GAAGvP,KAAK,CACrBC,SAAUk5B,EAAqBl5B,SAC/B+Q,KAAM,qEAAuE/J,EAC7EiK,MAAO,UAMnBjV,KAAKs9B,2CAA2CP,QA7C5CD,EAAGplC,OAAO4b,OAAO,GAAGvP,KAAK,CACrBC,SAAU84B,EAAGjc,SAAS7c,SACtB+Q,KAAM,sBAAwBgoB,EAAGx2B,qBAAqBxM,WAAa,QAAUgjC,EAAGx2B,qBAAqBd,cAAczD,OAAS,mCAAqC+6B,EAAGt3B,cAAczD,OAAS,cAC3LiT,MAAO,WAgDvB,2CAA2CsoB,GAEvC,GAAwB,MAApBA,GAAqE,MAAzCA,EAAiBh3B,sBAAyE,GAAzCg3B,EAAiB93B,cAAczD,OAAa,CAEzH,IAAIw7B,GAA6B,EAC7BC,EAA0B,GAC9B,IAAK,IAAI1lC,KAAKwlC,EAAiBx3B,QAAS,CACpC,IAAI23B,EAAY19B,KAAK29B,kBAAkB5lC,EAAGwlC,EAAiB93B,eAC3D+3B,EAAoBA,GAAqBE,EAAUE,QACnDH,EAAc15B,KAAK25B,EAAUA,WAKjC,GAFIF,IAAmBD,EAAiBx3B,QAAU03B,GAE9CF,aAA4B,EAAO,CAEnC,IAAIM,EAA6B,GAC7BC,EAA0C,IAAIh+B,IAC9Ci+B,GAA6B,EAEjC,IAAK,IAAIn2B,KAAa21B,EAAiBh6B,WAAY,CAC/C,IAAIy6B,EAAeh+B,KAAKi+B,qBAAqBr2B,EAAW21B,EAAiB93B,eACzEs4B,EAAoBA,GAAqBC,EAAaJ,QACtDC,EAAc95B,KAAKi6B,EAAaA,cAChCF,EAAgBz6B,IAAIuE,EAAU7N,WAAYikC,EAAaA,cAGvDD,IACAR,EAAiBh6B,WAAas6B,EAC9BN,EAAiBt3B,aAAe63B,GAGpC99B,KAAKs9B,2CAA2CC,EAAiBn6B,gBAMjE,IAAK,IAAI86B,KAAOX,EAAiB1wB,QAC7B7M,KAAKs9B,2CAA2CY,IAOhE,qBAAqBt2B,EAAsBnC,GAEvC,IAAI04B,EAAKn+B,KAAKo+B,gBAAgBx2B,EAAUxH,KAAMqF,GAAe,GAC7D,GAAI04B,EAAGP,QAAS,CACZ,IAAI12B,EAAe7O,OAAOY,OAAO2O,GAEjC,OADAV,EAAE9G,KAAO+9B,EAAG/c,QACL,CAAEwc,SAAS,EAAMI,aAAc92B,GAEtC,MAAO,CAAE02B,SAAS,EAAOI,aAAcp2B,GAK/C,kBAAkBjG,EAAgB8D,GAE9B,IAAI44B,EAAMr+B,KAAKo+B,gBAAgBz8B,EAAOV,WAAYwE,GAAe,GAE7D64B,GAA4B,EAC5BC,EAA4B,GAChC,IAAK,IAAI9kC,KAAKkI,EAAOX,cAAcc,WAAY,CAC3C,IAAIq8B,EAAKn+B,KAAKo+B,gBAAgB3kC,EAAE2G,KAAMqF,GAAe,GACrD,GAAI04B,EAAGP,QAAS,CACZU,GAAmB,EACnB,IAAIE,EAAiBnmC,OAAOY,OAAOQ,GACnC+kC,EAAKp+B,KAAO+9B,EAAG/c,QACfmd,EAAcx6B,KAAKy6B,QAEnBD,EAAcx6B,KAAKtK,GAI3B,GAAI4kC,EAAIT,SAAWU,EAAkB,CACjC,IAAIZ,EAAoBrlC,OAAOY,OAAO0I,GAKtC,OAJI08B,EAAIT,UAASF,EAAUz8B,WAAao9B,EAAIjd,SACxCkd,IACAZ,EAAU18B,cAAgB,IAAI0B,EAAc67B,IAEzC,CAAEX,SAAS,EAAMF,UAAWA,GAEnC,MAAO,CAAEE,SAAS,EAAOF,UAAW/7B,GAK5C,gBAAgBvB,EAAYqF,EAA+Bg5B,GAEvD,GAAY,MAARr+B,EAAc,MAAO,CAAEw9B,SAAS,EAAOxc,QAAShhB,GAEpD,GAA8B,GAA1BA,EAAI,eAA4B,CAChC,IAAK,IAAIyC,KAAM4C,EACX,GAAI5C,EAAG9I,YAAcqG,EAAKrG,WACtB,MAAO,CAAE6jC,SAAS,EAAMxc,QAASve,EAAGzC,MAG5C,MAAO,CAAEw9B,SAAS,EAAOxc,QAAShhB,GAGtC,IAAKA,aAAgB,GAASA,aAAgB,IAAcA,EAAKqF,cAAczD,OAAS,EAAG,CACvF,IAAI08B,EAAmC,GACnCd,GAAmB,EACvB,IAAK,IAAI/6B,KAAMzC,EAAKqF,cAAe,CAC/B,IAAI04B,EAAKn+B,KAAKo+B,gBAAgBv7B,EAAGzC,KAAMqF,GAAe,GAClD04B,EAAGP,SACHc,EAAiB36B,KAAK,CAClBhK,WAAY8I,EAAG9I,WACfylB,UAAW3c,EAAG2c,UACdC,QAAS5c,EAAG4c,QACZrf,KAAa+9B,EAAG/c,UAEpBwc,GAAU,GAEVc,EAAiB36B,KAAKlB,GAG9B,GAAI+6B,EAAS,CACT,IAAIe,EAAoBv+B,EAAKw+B,QAG7B,OAFAD,EAAkBl5B,cAAgBi5B,EAC9BD,GAAqCz+B,KAAKs9B,2CAA2CqB,GAClF,CAAEf,SAAS,EAAMxc,QAASud,GAEjC,MAAO,CAAEf,SAAS,EAAOxc,QAAShhB,GAI1C,GAAGA,aAAgB,EAAU,CACzB,IAAI+9B,EAAKn+B,KAAKo+B,gBAAgBh+B,EAAKiC,YAAaoD,EAAeg5B,GAC/D,MAAO,CACHb,QAASO,EAAGP,QACZxc,QAAS+c,EAAGP,QAAU,IAAI,EAAUO,EAAG/c,SAAWhhB,GAI1D,MAAO,CAAEw9B,SAAS,EAAOxc,QAAShhB,GAGtC,oBAAoBw7B,GAChB,IAAI1B,GAAgB,EAChB2E,EAA4BjD,EAAapvB,MAAM,GACnD,MAAQ0tB,GAAM,CACVA,GAAO,EACP,IAAK,IAAIviC,EAAI,EAAGA,EAAIknC,EAAS78B,OAAQrK,IAAK,CACtC,IAAImlC,EAAK+B,EAASlnC,GAEdqI,KAAK8+B,mBAAmBhC,KACxB5C,GAAO,GAE8B,MAArC4C,EAAGjc,SAASkX,uBAA8E,MAA7C+E,EAAGjc,SAASke,gCACzDF,EAAS3nB,OAAO2nB,EAASl6B,QAAQm4B,GAAK,GACtCnlC,MAMZ,OAAOknC,EAIX,mBAAmB/B,GAEf,GAAiD,MAA7CA,EAAGjc,SAASke,8BAAuC,OAAO,EAC9D,GAAyC,MAArCjC,EAAGjc,SAASkX,sBAA+B,OAAO,EAOtD,IAAIgF,EAA6BD,EAAGjc,SAAS/B,aAC7C,GAAU,MAANie,KAAgBA,aAAc,GAAaA,aAAc,GAEzD,OADAD,EAAGjc,SAASkX,sBAAwB,MAC7B,EAGX,IAAKgF,EAAGp3B,mBAAoB,OAAO,EAEnC,IAAI4E,EAAwC,GAC5C,IAAK,IAAI5S,EAAI,EAAGA,EAAImlC,EAAGjc,SAASkX,sBAAsB/1B,OAAQrK,IAAK,CAC/D,IAAIulC,EAAuBJ,EAAGjc,SAASkX,sBAAsBpgC,GACzDmnB,EAAeoe,EAAqBpe,aAExC,GAAoB,MAAhBA,EACA,OAAO,EAGX,GAAkD,MAA9Coe,EAAqBnF,uBAAuF,MAAtDmF,EAAqB6B,8BAC3E,OAAO,EAGX,KAAMjgB,aAAwB,GAAaA,aAAwB,GAO/D,OANAge,EAAGplC,OAAO4b,OAAO,GAAGvP,KAAK,CACrBC,SAAUk5B,EAAqBl5B,SAC/B+Q,KAAM,8DAAgEmoB,EAAqBnjC,WAAa,oBACxGkb,MAAO,UAEX6nB,EAAGjc,SAASkX,sBAAwB,MAC7B,EAGXxtB,EAAexG,KAAUm5B,EAAqBpe,cAIlD,IAAIkgB,EAA8C,IAAIl/B,IAEtD,GAAIi9B,EAAGt3B,cAAczD,QAAUuI,EAAevI,OAO1C,OANA86B,EAAGplC,OAAO4b,OAAO,GAAGvP,KAAK,CACrBC,SAAU84B,EAAGjc,SAAS7c,SACtB+Q,MAAOgoB,aAAc,EAAQ,cAAgB,kBAAoBA,EAAGhjC,WAAa,QAAUgjC,EAAGt3B,cAAczD,OAAS,iCAAmCuI,EAAevI,OAAS,cAChLiT,MAAO,UAEX6nB,EAAGjc,SAASkX,sBAAwB,MAC7B,EAGX,IAAIpgC,EAAI,EACR,IAAK,IAAIyI,KAAQmK,EAAgB,CAE7B,IAAI00B,EAAkBlC,EAAGt3B,cAAc9N,GAEvC,GAAIyI,aAAgB,EAAW,CAC3B,IAAI+M,EAAQ,EAAWyxB,QACvBzxB,EAAMvH,WAAW7B,KAAK3D,GACtBA,EAAO+M,EAGX,IAAI+xB,EAAkB,CAClBnlC,WAAYklC,EAAgBllC,WAC5BylB,UAAWyf,EAAgBzf,UAC3BC,QAASwf,EAAgBxf,QACzBrf,KAAMA,GAGV4+B,EAAyB37B,IAAI05B,EAAGt3B,cAAc9N,GAAGyI,KAAM8+B,EAAgB9+B,MACvEzI,IAGJ,IAAIwnC,EACAn/B,KAAKo/B,4DAA4DrC,EAAIiC,GAKzE,OAHAlC,EAAGjc,SAAS/B,aAAeqgB,EAC3BrC,EAAGjc,SAASke,+BAAgC,GAErC,EAGX,4DAA4DxB,EACxDyB,GAEA,GAAIzB,aAA4B,EAAO,CACnC,IAAI8B,EAAkB9B,EAAiBqB,QAEvCS,EAAS55B,cAAgB,GACzB,IAAK,IAAI5C,KAAM06B,EAAiB93B,cAAe,CAC3C,IAAI2b,EAAU4d,EAAyBxmC,IAAIqK,EAAGzC,MAC1Ck/B,EAAMz8B,EACK,MAAXue,IACAke,EAAM,CACFvlC,WAAY8I,EAAG9I,WACfylB,UAAW3c,EAAG2c,UACdC,QAAS5c,EAAG4c,QACZrf,KAAMghB,IAGdie,EAAS55B,cAAc1B,KAAKu7B,GAGhC,IAAIC,EAAYhC,EAAiBn6B,UAChB,MAAbm8B,GAAuD,MAAlCA,EAAUh5B,sBAE/B84B,EAAShiB,aAAoBrd,KAAKo/B,4DAA4DG,EAAWP,IAI7GK,EAASz5B,WAAa,GACtB,IAAK,IAAI45B,KAAQjC,EAAiB33B,WACG,MAA7B45B,EAAKj5B,qBACL84B,EAASz5B,WAAW7B,KAAKy7B,GAEzBH,EAASz5B,WAAW7B,KAAgB/D,KAAKo/B,4DAA4DI,EAAMR,IAInH,OAAOK,EAEJ,CACH,IAAIryB,EAA0BuwB,EAAiBqB,QAE/C5xB,EAAavH,cAAgB,GAC7B,IAAK,IAAI5C,KAAM06B,EAAiB93B,cAAe,CAC3C,IAAI2b,EAAU4d,EAAyBxmC,IAAIqK,EAAGzC,MAC1Ck/B,EAAMz8B,EACK,MAAXue,IACAke,EAAM,CACFvlC,WAAY8I,EAAG9I,WACfylB,UAAW3c,EAAG2c,UACdC,QAAS5c,EAAG4c,QACZrf,KAAMghB,IAGdpU,EAAavH,cAAc1B,KAAKu7B,GAGpCtyB,EAAaH,QAAU,GACvB,IAAK,IAAI2yB,KAAQjC,EAAiB1wB,QACG,MAA7B2yB,EAAKj5B,qBACLyG,EAAaH,QAAQ9I,KAAKy7B,GAE1BxyB,EAAaH,QAAQ9I,KAAgB/D,KAAKo/B,4DAA4DI,EAAMR,IAIpH,OAAOhyB,GAMf,kCACI,IAAIyyB,EAA2C,IAAI3/B,IAEnD,IAAK,IAAIpI,KAAUsI,KAAKyd,YAAY2F,YAAW,GAC3C,IAAK,IAAIhjB,KAAQ1I,EAAO4lB,UAAU+F,SAAU,CACxC,IAAIqc,EAAcD,EAAoBjnC,IAAI4H,EAAKrG,YAC/C,GAAmB,MAAf2lC,EAAqB,CACrBhoC,EAAO4b,OAAO,GAAGvP,KAAK,CAClBgR,KAAM,qBAAuB3U,EAAKrG,WAAa,qDAC3CrC,EAAOioC,KAAKznC,KAAO,QAAUwnC,EAAYC,KAAKznC,KAAO,IACzD8L,SAAU5D,EAAK+O,YAAYnL,SAC3BiR,MAAO,UAEX,IAAI2qB,EAAYF,EAAYpiB,UAAUC,QAAQnd,EAAKrG,YAClC,MAAb6lC,GACAF,EAAYpsB,OAAO,GAAGvP,KAAK,CACvBgR,KAAM,qBAAuB3U,EAAKrG,WAAa,qDAC3C2lC,EAAYC,KAAKznC,KAAO,QAAUR,EAAOioC,KAAKznC,KAAO,IACzD8L,SAAU47B,EAAUzwB,YAAYnL,SAChCiR,MAAO,eAIfwqB,EAAoBp8B,IAAIjD,EAAKrG,WAAYrC,GAKrD,IAAImoC,EAAa7/B,KAAKyd,YAAYqiB,gBAElC,IAAK,IAAI5G,KAAMl5B,KAAK87B,kBAAmB,CACnC,IAAIpkC,EAASwhC,EAAG6D,GAAGrlC,OACfgoC,EAAcD,EAAoBjnC,IAAI0gC,EAAG6G,IAAIhmC,YACjD,GAAmB,MAAf2lC,EAAqB,CAEH,MADDG,EAAWviB,UAAUC,QAAQ2b,EAAG6G,IAAIhmC,cAC7B2lC,EAAcG,GAE1C,GAAmB,MAAfH,EAAqB,CACrBhoC,EAAO4b,OAAO,GAAGvP,KAAK,CAClBgR,KAAM,qBAAuBmkB,EAAG6G,IAAIhmC,WAAa,qDAC7CrC,EAAOioC,KAAKznC,KAAO,QAAUwnC,EAAYC,KAAKznC,KAAO,IACzD8L,SAAUk1B,EAAG6G,IAAI/7B,SACjBiR,MAAO,UAEX,IAAI2qB,EAAYF,EAAYpiB,UAAUC,QAAQ2b,EAAG6G,IAAIhmC,YACpC,MAAb6lC,GAAqBF,GAAeG,GACpCH,EAAYpsB,OAAO,GAAGvP,KAAK,CACvBgR,KAAM,qBAAuBmkB,EAAG6G,IAAIhmC,WAAa,qDAC7C2lC,EAAYC,KAAKznC,KAAO,QAAUR,EAAOioC,KAAKznC,KAAO,IACzD8L,SAAU47B,EAAUzwB,YAAYnL,SAChCiR,MAAO,YAU3B,uBAAuB+qB,GACnB,IAAK,IAAItoC,KAAUsI,KAAKyd,YAAY2F,YAAW,GAC3C1rB,EAAOuoC,iBAAmB,IAAIngC,IAGlC,IAAK,IAAIpI,KAAUsI,KAAKyd,YAAY2F,YAAW,GAAQ,CACnD,IAAI8c,EAAKlgC,KAAKk8B,gBAAgB1jC,IAAId,GAC9ByoC,EAAoB,GACxB,IAAK,IAAI//B,KAAQ8/B,EACRlgC,KAAKogC,YAAYhgC,EAAM1I,EAAQsoC,IAChCG,EAAMp8B,KAAK3D,GAGnBJ,KAAKk8B,gBAAgB74B,IAAI3L,EAAQyoC,IAIzC,kBAAkBp9B,GACd,IAAIk4B,EAAcj7B,KAAKszB,KAAK+M,iBAC5Bt9B,EAAMyG,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,aAAcqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACzGiC,EACCjB,IACG,IAAI04B,EAAe14B,EAAW,GAAGlJ,MACjC,OAAO,IAAI,IAAW0nC,SAAS9F,EAAMz3B,EAAO/C,KAAKyd,YAAawd,KAC/D,GAAO,EAAM,6CAA6Cl4B,EAAMhJ,mQAAmQ,IAI9U,gBAAgBgJ,GACZA,EAAMyG,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAAK4I,EACvDxJ,IACU,IAAI,IAAWy+B,OAAOz+B,EAAW,KACzC,GAAO,EAAO,0NAKzB,4BAEI,IAAI0+B,EAAiE,GACrEA,EAAiBA,EAAej5B,OAAOvH,KAAK+7B,SAC5CyE,EAAiBA,EAAej5B,OAAOvH,KAAKi8B,OAE5C,IAAK,IAAIwE,KAAMD,EAAgB,CAC3B,IAAK,IAAIE,KAAMD,EAAG16B,QAAS,CACvB,IAAIhO,EAAYiI,KAAK2gC,YAAYD,EAAID,EAAG3hB,aAAapnB,OAAQ+oC,EAAG3hB,cACzC,MAApB4hB,EAAGzN,gBAAuBl7B,EAAEgI,cAAgB,GAAK2gC,EAAGzN,cAAcr6B,OAC5D,MAALb,GACA0oC,EAAG3hB,aAAatV,UAAUzR,GAIlCiI,KAAK4gC,kBAAkBH,EAAG3hB,cAC1B9e,KAAK6gC,gBAAgBJ,EAAG3hB,cAExB,IAAK,IAAIxb,KAAOm9B,EAAGl9B,WAAY,CAE3BvD,KAAKogC,YAAY98B,EAAIsgB,cAAe6c,EAAG3hB,aAAapnB,QAAQ,GAC5D,IAAI0I,EAAOkD,EAAIsgB,cAAc9E,aAC7B,GAAY,MAAR1e,EACA,SAGJ,IAAIwH,EAAuB,IAAIlH,EAAU4C,EAAIvJ,WAAYqG,EAAM,KAAMkD,EAAI1C,SAAU0C,EAAIzC,WAAYyC,EAAIxC,SAC/E,MAArBwC,EAAI2vB,gBAAuBrrB,EAAU7H,cAAgB,GAAKuD,EAAI2vB,cAAcr6B,OAC/EgP,EAAU4xB,WAAal2B,EAAIk2B,WAC3B5xB,EAAU+xB,YAAcr2B,EAAIq2B,YACkC,MAA1D8G,EAAG3hB,aAAa7Y,aAAazN,IAAIoP,EAAU7N,aAC3C0mC,EAAG3hB,aAAapnB,OAAO4b,OAAO,GAAGvP,KAAK,CAClCgR,KAAM,6DAA+DnN,EAAU7N,WAAa,gCAC5FiK,SAAUV,EAAIU,SAAUiR,MAAO,UAGvCwrB,EAAG3hB,aAAarV,aAAa7B,GAE7B5H,KAAK2qB,kBAAkB8V,EAAG3hB,aAAapnB,OAAQ4L,EAAIU,SAAU4D,GAC7DA,EAAUuH,YAAc,CAAEzX,OAAQ+oC,EAAG3hB,aAAapnB,OAAQsM,SAAUV,EAAIU,WAKhF,IAAK,IAAI88B,KAAM9gC,KAAKg8B,WAChB,IAAK,IAAI0E,KAAMI,EAAG/6B,QAAS,CACvB,IAAIoE,EAAanK,KAAK2gC,YAAYD,EAAII,EAAGhiB,aAAapnB,OAAQopC,EAAGhiB,cACvD,MAAN3U,GACA22B,EAAGhiB,aAAatV,UAAUW,IAO1C,YAAYu2B,EAA2B3oC,EAAWC,GAE9C,IAAI+oC,GAAU,EAEdA,EAAUA,GAAW/gC,KAAKogC,YAAYM,EAAGz/B,WAAYlJ,GAAG,GAExD,IAAI+J,EAAyB,GAC7B,IAAK,IAAIk/B,KAAON,EAAG5+B,WAEf,GADAi/B,EAAUA,GAAW/gC,KAAKogC,YAAYY,EAAIlH,cAAe/hC,GAAG,GACxDgpC,EAAS,CACT,IAAI1I,EAAY,CACZ4I,WAAYD,EAAIh9B,SAChBjK,WAAYinC,EAAIjnC,WAChB8F,eAAgB,IAAIC,IACpBM,KAAM4gC,EAAIlH,cAAchb,aACxB3P,YAAa,CAAEzX,OAAQK,EAAGiM,SAAUg9B,EAAIh9B,UACxClD,QAASkgC,EAAIlgC,QACbmB,WAAY++B,EAAI/+B,YAEpBH,EAAWiC,KAAKs0B,GAChBr4B,KAAK2qB,kBAAkB5yB,EAAGipC,EAAIh9B,SAAUq0B,GAMhD,IAAI6I,EAAoB,IAAIx+B,EAAcZ,GAE1C,GAAIi/B,EAAS,CACT,IAAIp/B,EAAS,IAAIZ,EAAO2/B,EAAG3mC,WAAYmnC,EAAIR,EAAGz/B,WAAW6d,aAAc,KAAM4hB,EAAGv/B,WAAYu/B,EAAG9/B,UAa/F,OAZAe,EAAOP,cAAgBs/B,EAAG3mC,YAAc/B,EAAE+B,WAC1C4H,EAAOd,WAAa6/B,EAAG7/B,WACvBc,EAAOP,cAAgBs/B,EAAGt/B,cAC1Bs/B,EAAG5hB,aAAend,EAClBA,EAAO63B,WAAakH,EAAGlH,WAEvBx5B,KAAK2qB,kBAAkB5yB,EAAG2oC,EAAG18B,SAAUrC,GACvCA,EAAOwN,YAAc,CACjBzX,OAAQK,EACRiM,SAAU08B,EAAG18B,UAGVrC,EAGX,OAAO,KAGX,kBAAkB5J,EAAWiM,EAAwB2rB,GAIjD,GAFA53B,EAAE63B,sBAAsB5rB,EAAU2rB,GAE9BA,aAAmB1vB,EACnB,OAGJ,IAAIowB,EAA+BV,EAAQ9vB,eAAerH,IAAIT,GAC1C,MAAhBs4B,IACAA,EAAe,GACfV,EAAQ9vB,eAAewD,IAAItL,EAAGs4B,IAGlCA,EAAatsB,KAAKC,GAItB,YAAY84B,EAAc/kC,EAAWioC,GACjC,GAAuB,MAAnBlD,EAAGhe,aAAsB,CACzB,IAAIqiB,EAAanhC,KAAKyd,YAAYF,QAAQuf,EAAG/iC,YAC7C,GAAkB,MAAdonC,EAAoB,CACpB,IAAI/gC,EAAO+gC,EAAW/gC,KAMtB,OALArI,EAAEkoC,iBAAiB58B,IAAI89B,EAAWzpC,QAAQ,GAC1CsI,KAAK2qB,kBAAkB5yB,EAAG+kC,EAAG94B,SAAU5D,GACvCA,EAAOghC,GAAahhC,EAAM08B,EAAG7E,gBAC7Bj4B,KAAKqhC,oBAAoBvE,EAAI/kC,GAAG,GAChC+kC,EAAGhe,aAAe1e,GACX,EAGX,IAAI07B,EAAoB97B,KAAK27B,6BAA6BnjC,IAAIT,GAC9D,GAAyB,MAArB+jC,EACA,IAAK,IAAIwF,KAAMxF,EACX,GAAIwF,EAAGvnC,YAAc+iC,EAAG/iC,WAAY,CAChC,IAAIiK,EAAW84B,EAAG94B,SAClB,IAAIA,EAASoF,KAAOk4B,EAAG9hB,UAAUpW,MAAQpF,EAASoF,MAAQk4B,EAAG9hB,UAAUpW,MAAQpF,EAASqF,QAAUi4B,EAAG9hB,UAAUnW,UACvGrF,EAASoF,KAAOk4B,EAAG7hB,QAAQrW,MAAQpF,EAASoF,MAAQk4B,EAAG7hB,QAAQrW,MAAQpF,EAASqF,QAAUi4B,EAAG7hB,QAAQpW,QAGrG,OAFArJ,KAAK2qB,kBAAkB5yB,EAAG+kC,EAAG94B,SAAUs9B,EAAGlhC,MAC1C08B,EAAGhe,aAAewiB,EAAGlhC,MACd,EAO3B,GAAI4/B,EAAU,CAEV,IAAIuB,EAAazE,EAAG/iC,WAAWiI,OAAS,GAAK86B,EAAG/iC,WAAW,GAAGynC,eAAiB1E,EAAG/iC,WAAW,GAAM,aAAe,UAElHhC,EAAEub,OAAO,GAAGvP,KAAK,CACbC,SAAU84B,EAAG94B,SACb+Q,KAAMwsB,EAAY,IAAMzE,EAAG/iC,WAAa,kCAClB,UAAjB+iC,EAAG/iC,WAAyB,yCAA2C,IAC5Ekb,MAAO,QACPuN,SAA4B,UAAjBsa,EAAG/iC,WAA0B,CACpC2O,MAAO,wBACPqZ,cAAgBC,GACL,CACH,CACIC,SAAUD,EACVE,KAAM,CACF9Z,MAAO,CAAE2O,gBAAiB+lB,EAAG94B,SAASoF,KAAM6N,YAAa6lB,EAAG94B,SAASqF,OAAS,EAAGyN,cAAegmB,EAAG94B,SAASoF,KAAM4N,UAAW8lB,EAAG94B,SAASqF,OAAS,GAClJ0L,KAAM,aAMtB,OAIZ,OADA+nB,EAAGhe,aAAe,MACX,EAGX,OAAO,EAGX,2BACI,IAAK,IAAI2hB,KAAMzgC,KAAK+7B,QAAS,CAEzB,IAAI/jC,EAAIyoC,EAAG3hB,aACX,IAAK,IAAI2iB,KAAShB,EAAG76B,WAAY,CAC7B5F,KAAKogC,YAAYqB,EAAOzpC,EAAEN,QAAQ,GAClC,IAAIgqC,EAAQD,EAAM3iB,aACL,MAAT4iB,IAGEA,aAAiB,GAQvB1pC,EAAE4N,WAAW7B,KAAgB29B,GAC7BD,EAAM3iB,aAAe4iB,GARjB1pC,EAAEN,OAAO4b,OAAO,GAAGvP,KAAK,CACpBC,SAAUy9B,EAAMz9B,SAChB+Q,KAAM,WAAa0sB,EAAM1nC,WAAa,iEACtCkb,MAAO,WAQnB,GAAkB,MAAdwrB,EAAG5zB,QAAiB,CACpB7M,KAAKogC,YAAYK,EAAG5zB,QAAS7U,EAAEN,QAAQ,GACvC,IAAIiqC,EAAQlB,EAAG5zB,QAAQiS,aACvB,GAAa,MAAT6iB,KAAmBA,aAAiB,GAAQ,CAC5C3pC,EAAEN,OAAO4b,OAAO,GAAGvP,KAAK,CACpBC,SAAUy8B,EAAG5zB,QAAQ7I,SACrB+Q,KAAM,WAAa0rB,EAAG5zB,QAAQ9S,WAAa,4DAC3Ckb,MAAO,UAEX,SAGJjd,EAAEqlB,aAAoBskB,GACtBlB,EAAG5zB,QAAQiS,aAAe6iB,OAE1B3pC,EAAEqlB,aAAoBrd,KAAKyd,YAAYF,QAAQ,UAAUnd,MAIjE,IAAK,IAAI4G,KAAUhH,KAAKg8B,WAAY,CAEhC,IAAIhkC,EAAIgP,EAAO8X,aACf,IAAK,IAAI2iB,KAASz6B,EAAO6F,QAAS,CAC9B7M,KAAKogC,YAAYqB,EAAOzpC,EAAEN,QAAQ,GAClC,IAAIgqC,EAAQD,EAAM3iB,aACL,MAAT4iB,IAGEA,aAAiB,GAQvB1pC,EAAE6U,QAAQ9I,KAAgB29B,GAC1BD,EAAM3iB,aAAe4iB,GARjB1pC,EAAEN,OAAO4b,OAAO,GAAGvP,KAAK,CACpBC,SAAUy9B,EAAMz9B,SAChB+Q,KAAM,WAAa0sB,EAAM1nC,WAAa,8DACtCkb,MAAO,aAW3B,4BACI,IAAK,IAAIld,KAAKiI,KAAKyd,YAAY2F,YAAW,GACtC,GAA6B,MAAzBrrB,EAAE6mB,oBACF,IAAK,IAAIgjB,KAAO7pC,EAAE6mB,oBACd,OAAQgjB,EAAIxhC,MACR,KAAKzG,EAAUY,aACXyF,KAAK+7B,QAAQh4B,KAAK69B,GAClB,IAAI5pC,EAAI,IAAI,EAAM4pC,EAAI7nC,WAAYhC,GAUlC,GATwB,MAArB6pC,EAAI3O,gBAAuBj7B,EAAE+H,cAAgB,GAAK6hC,EAAI3O,cAAcr6B,OACvEgpC,EAAI9iB,aAAe9mB,EACnBA,EAAE6I,WAAa+gC,EAAI/gC,WACnB7I,EAAEmJ,WAAaygC,EAAIzgC,WACnBpJ,EAAEulB,UAAUukB,QAAQ7pC,GACpBgI,KAAK2qB,kBAAkB5yB,EAAG6pC,EAAI59B,SAAUhM,GACxCA,EAAEmX,YAAc,CAAEzX,OAAQK,EAAGiM,SAAU49B,EAAI59B,UAC3ChE,KAAK8hC,sBAAsBF,EAAK5pC,GACb,MAAf4pC,EAAI/0B,SAAiB7M,KAAKqhC,oBAAoBO,EAAI/0B,QAAS9U,GAAG,GAC5C,MAAlB6pC,EAAIh8B,WACJ,IAAK,IAAIyzB,KAAMuI,EAAIh8B,WAAY5F,KAAKqhC,oBAAoBhI,EAAIthC,GAAG,GAEnE,MACJ,KAAK4B,EAAUiB,YACXoF,KAAKi8B,MAAMl4B,KAAK69B,GAChB,IAAIhrB,EAAI,IAAI,EAAKgrB,EAAI7nC,WAAYhC,EAAG6pC,EAAIvxB,QAChB,MAArBuxB,EAAI3O,gBAAuBrc,EAAE7W,cAAgB,GAAK6hC,EAAI3O,cAAcr6B,OACvEgpC,EAAI9iB,aAAelI,EACnBA,EAAE/V,WAAa+gC,EAAI/gC,WACnB9I,EAAEulB,UAAUukB,QAAQjrB,GACpB5W,KAAK2qB,kBAAkB5yB,EAAG6pC,EAAI59B,SAAU4S,GACxCA,EAAEzH,YAAc,CAAEzX,OAAQK,EAAGiM,SAAU49B,EAAI59B,UAC3C,MACJ,KAAKrK,EAAUgB,iBACXqF,KAAKg8B,WAAWj4B,KAAK69B,GACrB,IAAIjqC,EAAI,IAAI,EAAUiqC,EAAI7nC,WAAYhC,GAOtC,GANwB,MAArB6pC,EAAI3O,gBAAuBt7B,EAAEoI,cAAgB,GAAK6hC,EAAI3O,cAAcr6B,OACvEgpC,EAAI9iB,aAAennB,EACnBI,EAAEulB,UAAUukB,QAAQlqC,GACpBqI,KAAK2qB,kBAAkB5yB,EAAG6pC,EAAI59B,SAAUrM,GACxCA,EAAEwX,YAAc,CAAEzX,OAAQK,EAAGiM,SAAU49B,EAAI59B,UAC3ChE,KAAK8hC,sBAAsBF,EAAKjqC,GACb,MAAfiqC,EAAI/0B,QACJ,IAAK,IAAIwsB,KAAMuI,EAAI/0B,QAAS7M,KAAKqhC,oBAAoBhI,EAAIthC,GAAG,IAUxF,uBAEI,IAAI8mC,EAAW7+B,KAAK87B,kBAAkBtvB,MAAM,GACxC0tB,GAAO,EAEPwC,EAA0C18B,KAAK67B,+BAA+BrvB,MAAM,GAExF,MAAQ0tB,GAAM,CACVl6B,KAAKu8B,wBAAuB,GAC5BG,EAAyB18B,KAAKw8B,oBAAoBE,GAElDxC,GAAO,EACP,IAAK,IAAIviC,EAAI,EAAGA,EAAIknC,EAAS78B,OAAQrK,IAAK,CACtC,IAAIkL,EAAKg8B,EAASlnC,GACdoqC,GAAiB,EACjB7D,EAAoC,MAAlBr7B,EAAGk9B,IAAIlzB,QAAkB,GAAK,CAAChK,EAAGk9B,IAAIlzB,SACnC,MAArBhK,EAAGk9B,IAAIn6B,aAAoBs4B,EAAMA,EAAI32B,OAAO1E,EAAGk9B,IAAIn6B,aACvD,IAAK,IAAIo8B,KAAW9D,EACqB,MAAjC8D,EAAQjK,uBAA4E,GAAzCiK,EAAQjD,gCACnDgD,GAAQ,GAIZA,IACA/hC,KAAKiiC,oBAAoBp/B,GACzBg8B,EAAS3nB,OAAO2nB,EAASl6B,QAAQ9B,GAAK,GACtClL,IACAuiC,GAAO,IAOnB,OAAOwC,EAIX,oBAAoBxD,GAGhB,IAAIgJ,EAgBJ,GAdIA,EADkB,MAAlBhJ,EAAG6G,IAAIlzB,SAAkD,MAA/BqsB,EAAG6G,IAAIlzB,QAAQiS,aACZoa,EAAG6G,IAAIlzB,QAAQiS,aAAc8f,QAErC,EAAWA,QAGpCsD,EAAmBnoC,WAAam/B,EAAG6G,IAAIhmC,WACvCmoC,EAAmBx8B,gBAAiB,EAEpCw8B,EAAmB/yB,YAAc,CAC7BzX,OAAQwhC,EAAG6D,GAAGrlC,OACdsM,SAAUk1B,EAAG6G,IAAI/7B,UAII,MAArBk1B,EAAG6G,IAAIn6B,WACP,IAAK,IAAI45B,KAAQtG,EAAG6G,IAAIn6B,WAChBs8B,EAAmBt8B,WAAWjB,QAAmB66B,EAAK1gB,cAAgB,GACtEojB,EAAmBt8B,WAAW7B,KAAgBy7B,EAAK1gB,cAK/D,IAAIqjB,EAAoB,CACpBpoC,WAAYm/B,EAAG6G,IAAIhmC,WACnBqG,KAAM8hC,EACN1iB,UAAW0Z,EAAG0I,IAAI59B,SAClByb,QAASyZ,EAAG0I,IAAIniB,SAGpByZ,EAAG6D,GAAGt3B,cAAcyzB,EAAGh3B,OAASigC,EAChCjJ,EAAG6D,GAAGp3B,oBAAqB,EAC3B,IAAK,IAAI9C,KAAMq2B,EAAG6D,GAAGt3B,cAAyB,MAAN5C,IAAYq2B,EAAG6D,GAAGp3B,oBAAqB,GAE/E,IAAIm2B,EAAoB97B,KAAK27B,6BAA6BnjC,IAAI0gC,EAAG6D,GAAGrlC,QAC3C,MAArBokC,IACAA,EAAoB,GACpB97B,KAAK27B,6BAA6Bt4B,IAAI61B,EAAG6D,GAAGrlC,OAAQokC,IAGxDA,EAAkB/3B,KAAKo+B,GAEvBniC,KAAK2qB,kBAAkBuO,EAAG6D,GAAGrlC,OAAQwhC,EAAG6G,IAAI/7B,SAAUk+B,GAI1D,sBAAsBN,EAAsDrE,GACxE,IAAIr7B,EAAQ,EACZ,IAAK,IAAIi3B,KAAiByI,EAAIlJ,eAAgB,CAE1C,GAD6B,MAAzBS,EAActsB,SAAiB7M,KAAKqhC,oBAAoBlI,EAActsB,QAAS0wB,EAAiB7lC,QAAQ,GAC5E,MAA5ByhC,EAAcvzB,WACd,IAAK,IAAIyzB,KAAMF,EAAcvzB,WACzB5F,KAAKqhC,oBAAoBhI,EAAIkE,EAAiB7lC,QAAQ,GAI9D6lC,EAAiB53B,oBAAqB,EACtC43B,EAAiB93B,cAAc1B,KAAK,MAEpC/D,KAAK87B,kBAAkB/3B,KAAK,CACxBg8B,IAAK5G,EAAeD,GAAI,CACpBn/B,WAAYo/B,EAAcp/B,WAC1BqG,KAAM,KACNof,UAAWoiB,EAAI59B,SACfyb,QAASmiB,EAAIniB,SACdsd,GAAIQ,EAAkBqE,IAAKA,EAC9B1/B,MAAOA,OAKnB,wBACI,IAAK,IAAInK,KAAKiI,KAAKyd,YAAY2F,YAAW,GAAQ,CAC9C,IAAI8c,EAAiB,GACrBlgC,KAAKk8B,gBAAgB74B,IAAItL,EAAGmoC,GAC5B,IAAK,IAAIpD,KAAM/kC,EAAE26B,UACb,GAAuB,MAAnBoK,EAAGhe,aAAsB,CACzB,IAAIqiB,EAAanhC,KAAKyd,YAAYF,QAAQuf,EAAG/iC,YAC7C,GAAkB,MAAdonC,EAAoB,CACpB,IAAI/gC,EAAO+gC,EAAW/gC,KACtBJ,KAAK2qB,kBAAkB5yB,EAAG+kC,EAAG94B,SAAU5D,GACvC08B,EAAGhe,aAAesiB,GAAahhC,EAAM08B,EAAG7E,gBACxCj4B,KAAKqhC,oBAAoBvE,EAAI/kC,GAAG,QAEhCmoC,EAAGn8B,KAAK+4B,KAO5B,oBAAoBjc,EAAoBnpB,EAAgB0qC,GACpD,GAAsC,MAAlCvhB,EAASkX,sBACLqK,EACApiC,KAAK67B,+BAA+B93B,KAAK,CAAE8c,SAAUA,EAAUnpB,OAAQA,IAEvEsI,KAAK47B,aAAa73B,KAAK,CAAE8c,SAAUA,EAAUnpB,OAAQA,QAEtD,CAEH,IAAI0I,EAAOygB,EAAS/B,aACpB,GAAY,MAAR1e,GAAgBA,aAAgB,GAASA,EAAKqF,cAAczD,OAAS,EAAG,CACxE,IAAImL,EAAe/M,EAAKw+B,QACxBzxB,EAAM1H,cAAgB,GACtBob,EAAS/B,aAAe3R,KAOlC,SAAUi0B,GAAahhC,EAAY63B,GACrC,KAAOA,EAAiB,GACpB73B,EAAO,IAAI,EAAUA,GACrB63B,IAEJ,OAAO73B,GTj/BX,SAAYuS,GACR,6BAAW,qBAAO,yDAAyB,+BAD/C,CAAYA,MAAc,KAIpB,MAAO,GAMT,YAAoB2gB,GAAA,KAAAA,OAJpB,KAAA+O,eAAiC1vB,EAAe2vB,wBAOhD,QAAQ7kB,GAEJzd,KAAKqiC,eAAiB1vB,EAAe4vB,UAErC,IAAIC,EAAKC,YAAYC,MAErBjlB,EAAYpW,sBAEZ,IAAIs7B,EAAQ,IAAI,EAGhB,IAAK,IAAI5qC,KAAK0lB,EAAY2F,YAAW,GAAQ,CACzCrrB,EAAE4nC,KAAKiD,OAAQ,EACf7qC,EAAE8qC,QAEF,IAAIC,EAAQH,EAAMlrB,IAAI1f,EAAEgrC,iCACxBhrC,EAAEub,OAAO,GAAKwvB,EAAMxvB,OACpBvb,EAAEgb,UAAY+vB,EAAMzvB,OACpBtb,EAAEkb,aAAe6vB,EAAM7vB,aACpBlb,EAAE4nC,KAAKznC,MAAQ8H,KAAKszB,KAAK0P,2BAA2BrD,KAAKznC,MACzB,MAA5B8H,KAAKszB,KAAK2P,gBAAwBjjC,KAAKszB,KAAK2P,eAAeC,aAAaC,uBAAuBL,EAAM7vB,cAMhHjT,KAAKszB,KAAKC,oBAAoB6P,mBAE9B,IAAIC,EAAiB,IAAI,GAAO,GAEhC,IAAK,IAAItrC,KAAK0lB,EAAY2F,YAAW,GACjCigB,EAAOhI,MAAMtjC,GAKgB,IAAI,GAAaiI,KAAKszB,MAI1CgQ,MAAM7lB,GAKnB,IAAIxZ,EAAgB,IAAI,EAExB,IAAK,IAAIlM,KAAK0lB,EAAY2F,YAAW,GACjCnf,EAAcq/B,MAAMvrC,EAAG0lB,GAG3B,IAAI8lB,GAAY,EAChB,IAAK,IAAIxrC,KAAK0lB,EAAY2F,YAAW,GACjCrrB,EAAEyrC,2BAA6BzrC,EAAE0rC,YAC9B1rC,EAAEyrC,6BAA4BD,GAAY,GAGjD,IAAIrJ,GAAO,EACX,MAAOA,GAAK,CACRA,GAAO,EACP,IAAK,IAAIniC,KAAK0lB,EAAY2F,YAAW,GACjC,IAAIrrB,EAAEyrC,2BACN,IAAK,IAAIr5B,KAAMsT,EAAY2F,YAAW,GAClC,GAAGrrB,EAAEkoC,iBAAiBznC,IAAI2R,IAAOA,EAAGq5B,2BAA2B,CAC3DzrC,EAAEyrC,4BAA6B,EAC/BtJ,GAAO,EACP,OAMhBl6B,KAAK0jC,6BAA8B,EACnC,IAAK,IAAI3rC,KAAK0lB,EAAY2F,YAAW,GACjCrrB,EAAE4rC,YAAc5rC,EAAEisB,mBAAqBjsB,EAAEyrC,2BACtCzrC,EAAE4rC,cACD3jC,KAAK0jC,6BAA8B,GAElC1jC,KAAKszB,gBAAgB,KAAiBtzB,KAAKszB,KAAKsQ,OAAOC,cACxD9rC,EAAE+rC,oBAIN9jC,KAAK0jC,4BAEL1jC,KAAKqiC,eAAiB1vB,EAAeoxB,WAIrC/jC,KAAKqiC,eAAiBkB,EAAY5wB,EAAe3H,MAAQ2H,EAAe2vB,wBAI5E,IAAI0B,EAAKvB,YAAYC,MAAQF,EAC7BwB,EAAKz4B,KAAK04B,MAAW,IAALD,GAAY,IAE5B,IAAIr4B,EAAU,eAAiBq4B,EAAK,OAMpC,OAJAhkC,KAAKszB,KAAK4Q,sBAAsBC,gBAAkBx4B,EAElD3L,KAAKszB,KAAKC,oBAAoB6Q,iBAEvB,MUpHT,MAAO,WAA8B,EAEd,mBAACC,EAAwBpJ,EAA0BvjC,EAAgBoQ,GAExF,IAAI/E,EAAerL,EAAO4lB,UAAUC,QAAQ,oBACxC0F,EAAoB,IAAI,EAAclgB,GAG1C,OAFAkgB,EAAGjgB,cAAH,eAAqC,IAAIshC,GAAeD,EAAYpJ,EAAanzB,GAE1E,CACHlP,MAAOqqB,EACP7iB,KAAM2C,GAId,YAAYrL,GAER2J,MAAM,mBAAoB3J,GAE1B,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAIo2B,EAAuBp2B,EAAYywB,QACvC2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIC,EAAgC/sC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QAC1E6F,EAAkBh/B,cAAgB,CAAC++B,GAEnCxkC,KAAK4F,WAAW7B,KAAK0gC,GAErBzkC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACVoK,cAAF,eAEf0hC,WAGd,GAAO,EAAO,4GAElB1kC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6hC,EACCziC,GAE0BA,EAAW,GAAGlJ,MACVoK,cAAF,eAEfmR,QAGd,GAAO,EAAO,oDAElBnU,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACVoK,cAAF,eAEf2hC,UAGd,GAAO,EAAO,sJAO1B,MAAML,GAIF,YAAoBD,EAAgCpJ,EAAkCnzB,GAClF,OADgB,KAAAu8B,aAAgC,KAAApJ,cAAkC,KAAAnzB,OAC1EA,GACJ,IAAK,YAAa9H,KAAK4kC,QAAU,EAAG,MACpC,IAAK,aAAc5kC,KAAK4kC,QAAUP,EAAWQ,YAAY7iC,OAAS,GAI1E,SACI,OAAQhC,KAAK8H,MACT,IAAK,YACmB,GAAhB9H,KAAK4kC,QACL5kC,KAAKi7B,YAAY6J,eAAe,iGACzB9kC,KAAK4kC,QAAU5kC,KAAKqkC,WAAWQ,YAAY7iC,OAAS,EAC3DhC,KAAKi7B,YAAY6J,eAAe,0IAEhC9kC,KAAKqkC,WAAWU,WAAW7tB,OAAOlX,KAAK4kC,QAAU,EAAG,GACpD5kC,KAAKqkC,WAAWQ,YAAY3tB,OAAOlX,KAAK4kC,QAAU,EAAG,GACrD5kC,KAAK4kC,SAAW,GAEpB,MACJ,IAAK,aACG5kC,KAAK4kC,SAAW5kC,KAAKqkC,WAAWQ,YAAY7iC,OAAS,EACrDhC,KAAKi7B,YAAY6J,eAAe,iGACzB9kC,KAAK4kC,QAAU,EACtB5kC,KAAKi7B,YAAY6J,eAAe,0IAEhC9kC,KAAKqkC,WAAWU,WAAW7tB,OAAOlX,KAAK4kC,QAAU,EAAG,GACpD5kC,KAAKqkC,WAAWQ,YAAY3tB,OAAOlX,KAAK4kC,QAAU,EAAG,GACrD5kC,KAAK4kC,SAAW,IAMhC,OACI,OAAQ5kC,KAAK8H,MACT,IAAK,YACD,OAAI9H,KAAK4kC,QAAU5kC,KAAKqkC,WAAWQ,YAAY7iC,OAAS,GACpDhC,KAAKi7B,YAAY6J,eAAe,uIACzB,MAEJ9kC,KAAKqkC,WAAWQ,YAAY7kC,KAAK4kC,WAC5C,IAAK,aACD,OAAI5kC,KAAK4kC,QAAU,GACf5kC,KAAKi7B,YAAY6J,eAAe,uIACzB,MAEJ9kC,KAAKqkC,WAAWQ,YAAY7kC,KAAK4kC,YAIpD,UACI,OAAQ5kC,KAAK8H,MACT,IAAK,YACD,OAAO9H,KAAK4kC,QAAU5kC,KAAKqkC,WAAWQ,YAAY7iC,OACtD,IAAK,aACD,OAAOhC,KAAK4kC,SAAW,IC3IjC,MAAO,WAAuB,EAEhC,YAAYltC,GAER2J,MAAM,YAAa3J,EAAQ,qHAE3B,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAI62B,EAAuB72B,EAAYywB,QACvCoG,EAAMjrC,WAAa,IACnBirC,EAAMt/B,gBAAiB,EAEvB,IAAIu/B,EAAoB,CACpBlrC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAM4kC,GAGVhlC,KAAKyF,cAAc1B,KAAKkhC,GAExB,IAAIC,EAA4BxtC,EAAO4lB,UAAUC,QAAQ,QAASqhB,QAClEsG,EAAcz/B,cAAgB,CAACw/B,GAE/BjlC,KAAK4F,WAAW7B,KAAKmhC,GAErB,IAAIC,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAACw/B,GAE9BjlC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IAErD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCwsC,EAAK,IAAI,GAAWhtC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACzDU,EAAE4K,cAAF,WAAgCoiC,IAEjC,GAAO,EAAO,mCAAmC,IAExDplC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACdoK,cAAF,WAErB,OAAO,GAAsBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,aAAakB,QAEnF,GAAM,EAAO,oEAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAG1B,OAFqB1J,EAAE4K,cAAF,WAEXsiC,IAAI7sC,KAEf,GAAO,EAAO,yHAErBuH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAC9BH,EAAWqJ,EAAW,GAG1B,OAFqB1J,EAAE4K,cAAF,WAEXsiC,IAAI7sC,EAAGyJ,KAElB,GAAO,EAAO,0GAErBlC,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGkkC,EACCljC,I,MAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAGlC,OAAoB,QAApB,EAFqBR,EAAE4K,cAAF,WAEXxK,IAAI0J,UAAM,eAAEtJ,QAEvB,GAAO,EAAO,4CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAKlC,OAJqBR,EAAE4K,cAAF,WAElB2hC,OAAOziC,GAEH,OAER,GAAM,EAAO,qHAEpBlC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFyN,EACCzM,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEX2B,QAAQtL,KAEnB,GAAM,EAAO,oLAEpB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAwByI,EAAW,GAAGlJ,MAG1C,OAFqBR,EAAE4K,cAAF,WAEXuiC,MAAMlsC,KAGpB,GAAM,EAAO,sDAEjB2G,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX6/B,SAGd,GAAM,EAAO,iDAEjB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXwiC,SAASnsC,KAGvB,GAAM,EAAO,mDAEjB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXyiC,aAAapsC,KAG3B,GAAM,EAAO,kHAEjB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX0iC,WAGd,GAAM,EAAO,4CAEjB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX2iC,QAGd,GAAM,EAAO,wDAEjB3lC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX4iC,aAEX,GAAO,KAMhB,MAAO,GAKT,YAAoBC,EAAqC5K,EAAkCvjC,GAAvE,KAAAmuC,gBAAqC,KAAA5K,cAAkC,KAAAvjC,SAH3F,KAAAqtC,WAAsB,GACtB,KAAAF,YAAqB,GAKrB,uBACI,IAAK,IAAIrhC,KAAKxD,KAAK+kC,WACf,KAAMvhC,EAAEpD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAa0E,QAAQnB,EAAEpD,KAAKrG,aAAe,GAC5H,OAAO,EAIf,OAAO,EAGX,YAEI,GAAIiG,KAAK8lC,uBACL,MAAO,IAAM9lC,KAAK6kC,YAAYjiC,IAAIxK,GAAK,GAAKA,GAAG0K,KAAK,MAAQ,IAGhE,IAAIkB,EAAyB,CACzBoF,KAAM,EACNC,OAAQ,EACRrH,OAAQ,GAGRoC,EAA0B,CAC1B,CACIhE,KAAMzG,EAAUoL,KAChBf,SAAUA,EACVM,cAAc,GAElB,CACIlE,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAIlByhC,EAAqB,IAAIrjC,EAAc,IAE3C,IAAK,IAAI/K,EAAI,EAAGA,EAAIqI,KAAK+kC,WAAW/iC,OAAQrK,IAAK,CAC7C,IAAIiB,EAAQoH,KAAK+kC,WAAWptC,GACT,MAAfiB,EAAMA,OAAiBA,EAAMwH,gBAAgBH,GAAiBrH,EAAMwH,gBAAgB,EACpFgE,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAsB,MAAfA,EAAMA,MAAgB,OAASA,EAAMwH,KAAKwO,OAAOhW,EAAO0S,GAAqB1S,MACpFoL,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAUz4B,EAAMwH,KAChBxH,MAAOA,EAAMA,MACb0L,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU2nB,WAChB3f,OAAmC/I,EAAMwH,KAAM6K,UAAU,WAAY86B,GACrExkB,aAAa,EACbC,iBAAkB,EAClBld,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAGVrM,EAAIqI,KAAK+kC,WAAW/iC,OAAS,IAC7BoC,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,KACPoL,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUkgB,OAChBiG,iCAAiC,EACjCC,wBAAwB,EACxBzb,cAAc,EACdN,SAAUA,EACVgiC,mBAAmB,IAGvB,IAAItkC,EAAmB,CACnBhK,OAAQsI,KAAKtI,OACb0M,WAAYA,EACZiC,aAAc,MAGd1E,EAAiB,IAAIZ,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EAAqB5J,GAAS,GAAO,GAGxG,OAFA1B,KAAKi7B,YAAYgL,SAAStkC,EAAQ,GAAI,QAAU,GAEzC,GAGX,MAAMtI,GAEF,IAAI+rC,EAAiB/rC,EAAO2J,cAAP,WAMrB,OALU,MAANoiC,IACAplC,KAAK+kC,WAAa/kC,KAAK+kC,WAAWx9B,OAAO69B,EAAGL,YAC5C/kC,KAAK6kC,YAAc7kC,KAAK6kC,YAAYt9B,OAAO69B,EAAGP,eAG3C,EAIX,IAAI3iC,GACA,OAAIA,GAAS,GAAKA,EAAQlC,KAAK+kC,WAAW/iC,OAC/BhC,KAAK+kC,WAAW7iC,IAE3BlC,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,MACxH,MAGX,OAAOE,GAEH,OAAIA,GAAS,GAAKA,EAAQlC,KAAK+kC,WAAW/iC,QACtChC,KAAK+kC,WAAW7tB,OAAOhV,EAAO,GAC9BlC,KAAK6kC,YAAY3tB,OAAOhV,EAAO,GACxB,OAGXlC,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,MAExH,MAGX,IAAIvJ,EAAUyJ,GAYV,OAXY,MAATA,GACClC,KAAK+kC,WAAWhhC,KAAKtL,GACrBuH,KAAK6kC,YAAY9gC,KAAKtL,EAAEG,QAErBsJ,EAAQlC,KAAK6kC,YAAY7iC,QAAUE,GAAS,GAC3ClC,KAAK+kC,WAAW7iC,GAASzJ,EACzBuH,KAAK6kC,YAAY3iC,GAASzJ,EAAEG,OAE5BoH,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,OAGhI,EAGX,MACI,OAA+B,GAA3BhC,KAAK6kC,YAAY7iC,QACjBhC,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,MACxH,OAEPhC,KAAK+kC,WAAWpxB,MACT3T,KAAK6kC,YAAYlxB,OAIhC,OACI,OAA+B,GAA3B3T,KAAK6kC,YAAY7iC,QACjBhC,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,MACxH,MAEAhC,KAAK6kC,YAAY7kC,KAAK6kC,YAAY7iC,OAAS,GAI1D,QAAQ5J,GACJ,OAAO4H,KAAK6kC,YAAYlgC,QAAQvM,EAAEQ,OAGtC,OACI,OAAOoH,KAAK6kC,YAAY7iC,OAG5B,UACI,OAAiC,GAA1BhC,KAAK+kC,WAAW/iC,OAG3B,aAAa3I,GACT,IAAI6I,EAAQlC,KAAK6kC,YAAYlgC,QAAQtL,EAAOT,OACxCsJ,GAAS,IACTlC,KAAK6kC,YAAY3tB,OAAOhV,EAAO,GAC/BlC,KAAK+kC,WAAW7tB,OAAOhV,EAAO,IAItC,SAAS7I,GACL,OAAO2G,KAAK6kC,YAAYlgC,QAAQtL,EAAOT,QAAU,EAGrD,QACIoH,KAAK+kC,WAAa,GAClB/kC,KAAK6kC,YAAc,GAGvB,oBACI,OAA+B,GAA3B7kC,KAAK6kC,YAAY7iC,OACV,KAEAhC,KAAK6kC,YAAY7kC,KAAK6kC,YAAY7iC,OAAS,GAG1D,qBACI,OAA+B,GAA3BhC,KAAK6kC,YAAY7iC,OACV,KAEAhC,KAAK6kC,YAAY,GAIhC,sBACI,OAA+B,GAA3B7kC,KAAK6kC,YAAY7iC,OACV,MAEPhC,KAAK+kC,WAAWpxB,MACT3T,KAAK6kC,YAAYlxB,OAIhC,QAAQta,GAGJ,OAFA2G,KAAK+kC,WAAWhhC,KAAK1K,GACrB2G,KAAK6kC,YAAY9gC,KAAK1K,EAAOT,QACtB,EAEX,SAASS,GAGL,OAFA2G,KAAK+kC,WAAW7tB,OAAO,EAAG,EAAG7d,GAC7B2G,KAAK6kC,YAAY3tB,OAAO,EAAG,EAAG7d,EAAOT,QAC9B,EAEX,sBAAsBS,GAClB,IAAI6I,EAAQlC,KAAK6kC,YAAYlgC,QAAQtL,EAAOT,OAC5C,OAAGsJ,GAAS,IACRlC,KAAK+kC,WAAW7tB,OAAOhV,EAAO,GAC9BlC,KAAK6kC,YAAY3tB,OAAOhV,EAAO,IACxB,GAKf,eACI,OAA+B,GAA3BlC,KAAK6kC,YAAY7iC,OACV,KAEAhC,KAAK6kC,YAAY7kC,KAAK6kC,YAAY7iC,OAAS,GAI1D,eACI,OAA+B,GAA3BhC,KAAK6kC,YAAY7iC,OACV,MAEPhC,KAAK+kC,WAAWpxB,MACT3T,KAAK6kC,YAAYlxB,OAIhC,uBACI,GAA8B,GAA3B3T,KAAK6kC,YAAY7iC,OAEb,CACH,IAAI3I,EAAS2G,KAAK6kC,YAAY,GAG9B,OAFA7kC,KAAK6kC,YAAY3tB,OAAO,EAAG,GAC3BlX,KAAK+kC,WAAW7tB,OAAO,EAAG,GACnB7d,EALP2G,KAAKi7B,YAAY6J,eAAe,+DAAiE9kC,KAAK+kC,WAAW/iC,OAAS,GAAK,OClhBrI,MAAO,WAAwB,EAEjC,YAAYtK,GAER2J,MAAM,aAAc3J,EAAQ,+IAE5B,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAEtCgnB,EAAuBp2B,EAAYywB,QACvC2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACxCyd,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACtC5B,KAAMmkC,GAEVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAI0B,EAAgCxuC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QAC1EsH,EAAkBzgC,cAAgB,CAAC++B,GAEnCxkC,KAAK6M,QAAQ9I,KAAKmiC,GAGlBlmC,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACA,MACA,GAAM,EAAO,mIAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACA,MACA,GAAM,EAAO,sDASjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACA,MACA,GAAM,EAAO,iDAEjB1C,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM+N,EAAYgB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvFoO,EACA,MACA,GAAM,EAAO,mDAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM+N,EAAYgB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvFoO,EACA,MACA,GAAM,EAAO,kHAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACA,MACA,GAAM,EAAO,4CAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACA,MACA,GAAM,EAAO,yDCtEnB,MAAO,WAAsB,EAE/B,YAAY7W,GAER2J,MAAM,WAAY3J,EAAQ,gFAE1B,IAAI6sC,EAAuB7sC,EAAO4lB,UAAUC,QAAQ,UAAWqhB,QAC/D2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACxCyd,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACtC5B,KAAMmkC,GAEVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIW,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAAC++B,GAG9BxkC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACA,MACA,GAAM,EAAO,qECzBnB,MAAO,WAAsB,EAE/B,YAAYztC,GAER2J,MAAM,WAAY3J,GAElB,IAAIstC,EAAuBttC,EAAO4lB,UAAUC,QAAQ,UAAWqhB,QAC/DoG,EAAMjrC,WAAa,IACnBirC,EAAMt/B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACxCyd,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACtC5B,KAAM4kC,GAGVhlC,KAAKyF,cAAc1B,KAAKygC,GAGxBxkC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACA,MACA,GAAM,EAAO,4GAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAEhDsiC,EACA,MACA,GAAM,EAAO,oDAEjBhlC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAElD,KACA,MACA,GAAM,EAAO,sJCnCnB,MAAO,WAAkB,EAE3B,YAAYhL,GAER2J,MAAM,OAAQ3J,EAAQ,+EAEtB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAEtCgnB,EAAuB7sC,EAAO4lB,UAAUC,QAAQ,UAAWqhB,QAC/D2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAACpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACxCyd,QAAS,CAACrW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACtC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAI2B,EAAkCzuC,EAAO4lB,UAAUC,QAAQ,cAAeqhB,QAC9EuH,EAAoB1gC,cAAgB,CAAC++B,GAErCxkC,KAAK6M,QAAQ9I,KAAKoiC,GAElBnmC,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyjC,EACA,MACA,GAAM,EAAO,kIAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACA,MACA,GAAM,EAAO,qHAEbd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM+N,EAAYgB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvFyN,EACA,MACA,GAAM,EAAO,qLCxCnB,MAAO,WAAmB,EAE5B,YAAY7W,GAER2J,MAAM,QAAS3J,EAAQ,0BAENA,EAAO4lB,UAAUC,QAAQ,UAA1C,IACI6oB,EAAoB1uC,EAAO4lB,UAAUC,QAAQ,UAEjDvd,KAAKqd,aAAa+oB,GAClBpmC,KAAKyF,cAAgB2gC,EAAW3gC,cAChC,IAAI8+B,EAAQvkC,KAAKyF,cAAc,GAAGrF,KAElCJ,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFyjC,EACCziC,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAK1B,OAJqB1J,EAAE4K,cAAF,WAElBsiC,IAAI7sC,GAEAA,EAAEG,QAEV,GAAO,EAAO,oFAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAC/C6hC,EACCziC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX2Q,OAEX,GAAO,EAAO,4DAEjB3T,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IACpD6hC,EACCziC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXqjC,QAEX,GAAO,EAAO,wFAErBrmC,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX0iC,WAGd,GAAM,EAAO,4CAEjB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFyN,EACCzM,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GACtBsjC,EAAiBhtC,EAAE4K,cAAF,WAEjBd,EAAQkjC,EAAGzgC,QAAQlM,GACvB,OAAiB,GAAVyJ,EAAcA,EAAQkjC,EAAGP,YAAY7iC,OAASE,IAGzD,GAAM,EAAO,qNCxEnB,MAAO,WAAoB,EAE7B,YAAYxK,GAER2J,MAAM,SAAU3J,EAAQ,6DAExB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAI62B,EAAuB72B,EAAYywB,QACvCoG,EAAMjrC,WAAa,IACnBirC,EAAMt/B,gBAAiB,EAEvB,IAAIu/B,EAAoB,CACpBlrC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAM4kC,GAGVhlC,KAAKyF,cAAc1B,KAAKkhC,GAExB,IAAIC,EAA4BxtC,EAAO4lB,UAAUC,QAAQ,QAASqhB,QAClEsG,EAAcz/B,cAAgB,CAACw/B,GAE/BjlC,KAAK4F,WAAW7B,KAAKmhC,GAErB,IAAIC,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAACw/B,GAE9BjlC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAElD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCwsC,EAAK,IAAI,GAAWhtC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACzDU,EAAE4K,cAAF,WAAgCoiC,IAEjC,GAAO,EAAO,uCAAuC,IAExDplC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACdoK,cAAF,WAErB,OAAO,GAAsBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,aAAakB,QAEnF,GAAO,EAAO,oEAGzBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAG1B,OAFqB1J,EAAE4K,cAAF,WAEXsiC,IAAI7sC,KAEf,GAAO,EAAO,yHAErBuH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGkkC,EACCljC,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAGlC,OAFqBR,EAAE4K,cAAF,WAEXxK,IAAI0J,GAAOtJ,QAEtB,GAAO,EAAO,4CAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAKlC,OAJqBR,EAAE4K,cAAF,WAElB2hC,OAAOziC,GAAOtJ,MAEV,OAER,GAAO,EAAO,qHAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFyN,EACCzM,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEX2B,QAAQtL,KAEnB,GAAO,EAAO,oLAErB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAwByI,EAAW,GAAGlJ,MAG1C,OAFqBR,EAAE4K,cAAF,WAEXuiC,MAAMlsC,KAGpB,GAAO,EAAO,sDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX6/B,SAGd,GAAO,EAAO,iDAElB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXwiC,SAASnsC,KAGvB,GAAO,EAAO,mDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXyiC,aAAapsC,KAG3B,GAAO,EAAO,kHAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX0iC,WAGd,GAAO,EAAO,4CAElB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX2iC,QAGd,GAAO,EAAO,yDC9LpB,MAAO,WAAiB,EAE1B,YAAYjuC,GAER2J,MAAM,MAAO3J,EAAQ,gGAErB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAEtCgnB,EAAuB7sC,EAAO4lB,UAAUC,QAAQ,UAAWqhB,QAC/D2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAI2B,EAAkCzuC,EAAO4lB,UAAUC,QAAQ,cAAeqhB,QAC9EuH,EAAoB1gC,cAAgB,CAAC++B,GAErCxkC,KAAK6M,QAAQ9I,KAAKoiC,GAElBnmC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM+N,EAAYgB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvFoO,EACA,MACA,GAAM,EAAO,oEAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM+lC,EAAqBh3B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGoO,EACA,MACA,GAAM,EAAO,iGC/BnB,MAAO,WAA6B,EAEb,mBAACo3B,EAAsBrL,EAA0BvjC,EAAgBoQ,GAEtF,IAAI/E,EAAerL,EAAO4lB,UAAUC,QAAQ,mBACxC0F,EAAoB,IAAI,EAAclgB,GAG1C,OAFAkgB,EAAGjgB,cAAH,kBAAwC,IAAIujC,GAAkBD,EAAWrL,EAAanzB,GAE/E,CACHlP,MAAOqqB,EACP7iB,KAAM2C,GAId,YAAYrL,GAER2J,MAAM,kBAAmB3J,GAEzB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAIo2B,EAAuBp2B,EAAYywB,QACvC2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIC,EAAgC/sC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QAC1E6F,EAAkBh/B,cAAgB,CAAC++B,GAEnCxkC,KAAK4F,WAAW7B,KAAK0gC,GAErBzkC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACPoK,cAAF,kBAElB0hC,WAGd,GAAO,EAAO,4GAElB1kC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6hC,EACCziC,GAE0BA,EAAW,GAAGlJ,MACPoK,cAAF,kBAElBmR,QAGd,GAAO,EAAO,oDAElBnU,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACPoK,cAAF,kBAElB2hC,UAGd,GAAO,EAAO,sJAO1B,MAAM4B,GAIF,YAAoBD,EAA8BrL,EAAkCnzB,GAChF,OADgB,KAAAw+B,YAA8B,KAAArL,cAAkC,KAAAnzB,OACxEA,GACJ,IAAK,YAAa9H,KAAK4kC,QAAU,EAAG,MACpC,IAAK,aAAc5kC,KAAK4kC,QAAU0B,EAAUvB,WAAW/iC,OAAS,GAIxE,SACI,OAAQhC,KAAK8H,MACT,IAAK,YACmB,GAAhB9H,KAAK4kC,QACL5kC,KAAKi7B,YAAY6J,eAAe,iGACzB9kC,KAAK4kC,QAAU5kC,KAAKsmC,UAAUvB,WAAW/iC,OAAS,EACzDhC,KAAKi7B,YAAY6J,eAAe,0IAEhC9kC,KAAKsmC,UAAUb,aAAazlC,KAAKsmC,UAAUvB,WAAW/kC,KAAK4kC,QAAU,GAAGhsC,OACxEoH,KAAK4kC,SAAW,GAEpB,MACJ,IAAK,aACG5kC,KAAK4kC,SAAW5kC,KAAKsmC,UAAUvB,WAAW/iC,OAAS,EACnDhC,KAAKi7B,YAAY6J,eAAe,iGACzB9kC,KAAK4kC,QAAU,EACtB5kC,KAAKi7B,YAAY6J,eAAe,0IAEhC9kC,KAAKsmC,UAAUb,aAAazlC,KAAKsmC,UAAUvB,WAAW/kC,KAAK4kC,QAAU,GAAGhsC,OACxEoH,KAAK4kC,SAAW,IAMhC,OACI,OAAQ5kC,KAAK8H,MACT,IAAK,YACD,OAAI9H,KAAK4kC,QAAU5kC,KAAKsmC,UAAUvB,WAAW/iC,OAAS,GAClDhC,KAAKi7B,YAAY6J,eAAe,uIACzB,MAEJ9kC,KAAKsmC,UAAUvB,WAAW/kC,KAAK4kC,WAC1C,IAAK,aACD,OAAI5kC,KAAK4kC,QAAU,GACf5kC,KAAKi7B,YAAY6J,eAAe,uIACzB,MAEJ9kC,KAAKsmC,UAAUvB,WAAW/kC,KAAK4kC,YAIlD,UACI,OAAQ5kC,KAAK8H,MACT,IAAK,YACD,OAAO9H,KAAK4kC,QAAU5kC,KAAKsmC,UAAUvB,WAAW/iC,OACpD,IAAK,aACD,OAAOhC,KAAK4kC,SAAW,ICzIjC,MAAO,GAMT,YAAoBiB,EAAqC5K,EAAkCvjC,GAAvE,KAAAmuC,gBAAqC,KAAA5K,cAAkC,KAAAvjC,SAJ3F,KAAAqtC,WAAsB,GAEtB,KAAAniC,IAAyB,IAAI9C,IAK7B,uBACI,IAAK,IAAI0D,KAAKxD,KAAK+kC,WACf,KAAMvhC,EAAEpD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAa0E,QAAQnB,EAAEpD,KAAKrG,aAAe,GAC5H,OAAO,EAGf,OAAO,EAGX,YAEI,GAAIiG,KAAK8lC,uBACL,MAAO,IAAM9lC,KAAK+kC,WAAWniC,IAAIxK,GAAK,GAAKA,EAAEQ,OAAOkK,KAAK,MAAQ,IAGrE,IAAIkB,EAAyB,CACzBoF,KAAM,EACNC,OAAQ,EACRrH,OAAQ,GAGRoC,EAA0B,CAC1B,CACIhE,KAAMzG,EAAUoL,KAChBf,SAAUA,EACVM,cAAc,GAElB,CACIlE,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAIlByhC,EAAqB,IAAIrjC,EAAc,IAE3C,IAAK,IAAI/K,EAAI,EAAGA,EAAIqI,KAAK+kC,WAAW/iC,OAAQrK,IAAK,CAE7C,IAAIuB,EAAM8G,KAAK+kC,WAAWptC,GACtBuB,EAAIkH,gBAAgBH,GAAiB/G,EAAIkH,gBAAgB,EACzDgE,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAOM,EAAIkH,KAAKwO,OAAO1V,EAAKoS,GAAqB1S,MACjDoL,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAUn4B,EAAIkH,KACdxH,MAAOM,EAAIN,MACX0L,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU2nB,WAChB3f,OAAmCzI,EAAIkH,KAAM6K,UAAU,WAAY86B,GACnExkB,aAAa,EACbC,iBAAkB,EAClBld,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAGdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAGVrM,EAAIqI,KAAK+kC,WAAW/iC,OAAS,IAC7BoC,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,KACPoL,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUkgB,OAChBiG,iCAAiC,EACjCC,wBAAwB,EACxBzb,cAAc,EACdN,SAAUA,EACVgiC,mBAAmB,IAGvB,IAAItkC,EAAmB,CACnBhK,OAAQsI,KAAKtI,OACb0M,WAAYA,EACZiC,aAAc,MAGd1E,EAAiB,IAAIZ,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EAAqB5J,GAAS,GAAO,GAGxG,OAFA1B,KAAKi7B,YAAYgL,SAAStkC,EAAQ,GAAI,IAAM6kC,QAAQC,IAAI,0BAA0B,GAE3E,GAIX,MAAMptC,GAEF,IAAIg7B,GAAe,EACf+Q,EAA6B/rC,EAAO2J,cAAP,WACjC,GAAU,MAANoiC,EACA,IAAK,IAAIxsC,KAASwsC,EAAGL,WACjB1Q,EAAMA,GAAOr0B,KAAK0mC,SAAS9tC,GAInC,OAAOy7B,EAGX,SAAS57B,GACL,OAAIuH,KAAKwlC,SAAS/sC,KAElBuH,KAAK+kC,WAAWhhC,KAAKtL,GACrBuH,KAAK4C,IAAIS,IAAI5K,EAAEG,OAAO,IACf,GAGX,OACI,OAAOoH,KAAK+kC,WAAW/iC,OAG3B,UACI,OAAiC,GAA1BhC,KAAK+kC,WAAW/iC,OAG3B,aAAa3I,GAET,GAAiC,MAA9B2G,KAAK4C,IAAIpK,IAAIa,EAAOT,OAAgB,OAAO,EAE9C,IAAI,IAAIjB,EAAI,EAAGA,EAAIqI,KAAK+kC,WAAW/iC,OAAQrK,IACpCqI,KAAK+kC,WAAWptC,GAAGiB,OAASS,EAAOT,OAClCoH,KAAK+kC,WAAW7tB,OAAOvf,EAAG,GAIlCqI,KAAK4C,IAAI+jC,OAAOttC,EAAOT,OAG3B,SAASS,GACL,OAAqC,MAA9B2G,KAAK4C,IAAIpK,IAAIa,EAAOT,OAG/B,QACIoH,KAAK+kC,WAAa,GAClB/kC,KAAK4C,IAAIigC,SCnNX,MAAO,WAAqB,EAE9B,YAAYnrC,GAER2J,MAAM,UAAW3J,EAAQ,iEAEzB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAIo2B,EAAuBp2B,EAAYywB,QACvC2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIoC,EAA2BlvC,EAAO4lB,UAAUC,QAAQ,OAAQqhB,QAChEgI,EAAanhC,cAAgB,CAAC++B,GAE9BxkC,KAAK4F,WAAW7B,KAAK6iC,GAErB,IAAIzB,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAAC++B,GAE9BxkC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IAEnD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCiuC,EAAK,IAAI,GAAUzuC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACxDU,EAAE4K,cAAF,WAAgC6jC,IAEjC,GAAO,EAAO,iCAAiC,IAEtD7mC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACfoK,cAAF,WAEpB,OAAO,GAAqBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,aAAakB,QAElF,GAAO,EAAO,oEAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAG1B,OAFoB1J,EAAE4K,cAAF,WAEV0jC,SAASjuC,KAEpB,GAAO,EAAO,yHAErBuH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAwByI,EAAW,GAAGlJ,MAG1C,OAFoBR,EAAE4K,cAAF,WAEVuiC,MAAMlsC,KAGpB,GAAO,EAAO,sDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV6/B,SAGd,GAAO,EAAO,iDAElB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFoB1J,EAAE4K,cAAF,WAEVwiC,SAASnsC,KAGvB,GAAO,EAAO,mDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFoB1J,EAAE4K,cAAF,WAEVyiC,aAAapsC,KAG3B,GAAO,EAAO,kHAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV0iC,WAGd,GAAO,EAAO,4CAElB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV2iC,QAGd,GAAO,EAAO,wDAElB3lC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV4iC,aAEX,GAAO,KCzJhB,MAAO,WAA2B,EAEpC,YAAYluC,GAER2J,MAAM,gBAAiB3J,EAAQ,gEAE/B,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAIo2B,EAAuBp2B,EAAYywB,QACvC2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIoC,EAA2BlvC,EAAO4lB,UAAUC,QAAQ,OAAQqhB,QAChEgI,EAAanhC,cAAgB,CAAC++B,GAE9BxkC,KAAK4F,WAAW7B,KAAK6iC,GAErB,IAAIzB,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAAC++B,GAE9BxkC,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IAEzD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCiuC,EAAK,IAAI,GAAUzuC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACxDU,EAAE4K,cAAF,UAA+B6jC,IAEhC,GAAO,EAAO,uCAAuC,IAE5D7mC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACfoK,cAAF,WAEpB,OAAO,GAAqBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,aAAakB,QAElF,GAAO,EAAO,oEAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAG1B,OAFoB1J,EAAE4K,cAAF,WAEV0jC,SAASjuC,KAEpB,GAAO,EAAO,yHAErBuH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAwByI,EAAW,GAAGlJ,MAG1C,OAFoBR,EAAE4K,cAAF,WAEVuiC,MAAMlsC,KAGpB,GAAO,EAAO,sDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV6/B,SAGd,GAAO,EAAO,iDAElB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFoB1J,EAAE4K,cAAF,WAEVwiC,SAASnsC,KAGvB,GAAO,EAAO,mDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFoB1J,EAAE4K,cAAF,WAEVyiC,aAAapsC,KAG3B,GAAO,EAAO,kHAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV0iC,WAGd,GAAO,EAAO,4CAElB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV2iC,QAGd,GAAO,EAAO,wDAElB3lC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,WAEV4iC,aAEX,GAAO,KC5JhB,MAAO,WAAmB,EAE5B,YAAYluC,GAER2J,MAAM,QAAS3J,GAEf,IAEI6sC,EAFoB7sC,EAAO4lB,UAAUC,QAAQ,UAEnBqhB,QAC9B2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAI2B,EAAkCzuC,EAAO4lB,UAAUC,QAAQ,cAAeqhB,QAC9EuH,EAAoB1gC,cAAgB,CAAC++B,GAErCxkC,KAAK6M,QAAQ9I,KAAKoiC,GAGlBnmC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD6hC,EACA,MACA,GAAM,EAAO,0GAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFyjC,EACA,MACA,GAAM,EAAO,0GAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6hC,EACA,MACA,GAAM,EAAO,kHCzCnB,MAAO,WAAmB,EAE5B,YAAY7sC,GAER2J,MAAM,QAAS3J,EAAQ,uFAEvB,IAEI6sC,EAFoB7sC,EAAO4lB,UAAUC,QAAQ,UAEnBqhB,QAC9B2F,EAAMxqC,WAAa,IACnBwqC,EAAM7+B,gBAAiB,EAEvB,IAAI8+B,EAAoB,CACpBzqC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMmkC,GAGVvkC,KAAKyF,cAAc1B,KAAKygC,GAExB,IAAIsC,EAA6BpvC,EAAO4lB,UAAUC,QAAQ,SAAUqhB,QACpEkI,EAAerhC,cAAgB,CAAC++B,GAEhCxkC,KAAK6M,QAAQ9I,KAAK+iC,GAGlB9mC,KAAKwJ,UAAU,IAAIzI,EAAO,wBAAyB,IAAI2B,EAAc,CACjE,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACA,MACA,GAAM,EAAO,sGAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,uBAAwB,IAAI2B,EAAc,CAChE,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACA,MACA,GAAM,EAAO,uGAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,gDAEjBd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,8CAEjBd,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvD6hC,EACA,MACA,GAAM,EAAO,4GAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD6hC,EACA,MACA,GAAM,EAAO,0GAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD6hC,EACA,MACA,GAAM,EAAO,mHAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6hC,EACA,MACA,GAAM,EAAO,iHAEjBvkC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,UAAWqG,KAAMmkC,EAAOp1B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACA,MACA,GAAM,EAAO,8CAEjBd,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAC/C6hC,EACA,MACA,GAAM,EAAO,4HAEjB,IAAIY,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAAC++B,GAE9BxkC,KAAKwJ,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,IAC9DyiC,EACA,MACA,GAAM,EAAO,2IChFnB,MAAO,WAAwB,EAEjC,YAAYztC,GAER2J,MAAM,aAAc3J,EAAQ,oBAE5B,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAI62B,EAAuB72B,EAAYywB,QACvCoG,EAAMjrC,WAAa,IACnBirC,EAAMt/B,gBAAiB,EAEvB,IAAIu/B,EAAoB,CACpBlrC,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAM4kC,GAGVhlC,KAAKyF,cAAc1B,KAAKkhC,GAExB,IAAI8B,EAA6BrvC,EAAO4lB,UAAUC,QAAQ,SAAUqhB,QACpEmI,EAAethC,cAAgB,CAACw/B,GAEhCjlC,KAAK4F,WAAW7B,KAAKgjC,GAErB,IAAI5B,EAAuBztC,EAAO4lB,UAAUC,QAAQ,YAAaqhB,QACjEuG,EAAa1/B,cAAgB,CAACw/B,GAE9BjlC,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCwsC,EAAK,IAAI,GAAWhtC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACzDU,EAAE4K,cAAF,WAAgCoiC,IAEjC,GAAO,EAAO,oCAAoC,IAEzDplC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACdoK,cAAF,WAErB,OAAO,GAAsBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,aAAakB,QAEnF,GAAO,EAAO,oEAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,IAC9DyiC,EACCrjC,IAEG,IACIsjC,EADmBtjC,EAAW,GAAGlJ,MACdoK,cAAF,WAErB,OAAO,GAAsBqiC,YAAYD,EAAIA,EAAGnK,YAAavjC,EAAQ,cAAckB,QAEpF,GAAO,EAAO,0IAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAWqJ,EAAW,GAG1B,OAFqB1J,EAAE4K,cAAF,WAEXsiC,IAAI7sC,KAEf,GAAO,EAAO,iIAErBuH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAwByI,EAAW,GAAGlJ,MAG1C,OAFqBR,EAAE4K,cAAF,WAEXuiC,MAAMlsC,KAGpB,GAAO,EAAO,sDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX6/B,SAGd,GAAO,EAAO,iDAElB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXwiC,SAASnsC,KAGvB,GAAO,EAAO,mDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXyiC,aAAapsC,KAG3B,GAAO,EAAO,kHAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX0iC,WAGd,GAAO,EAAO,4CAElB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX2iC,QAGd,GAAO,EAAO,wDAElB3lC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX4iC,aAEX,GAAO,IAGd5lC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXgkC,wBAGd,GAAO,EAAO,0GAElBhnC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChDsiC,EACCljC,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjBkJ,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXikC,iBAGd,GAAO,EAAO,0GAElBjnC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXkkC,gBAGd,GAAO,EAAO,iHAElBlnC,KAAKwJ,UAAU,IAAIzI,EAAO,wBAAyB,IAAI2B,EAAc,CACjE,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXmkC,sBAAsB9tC,KAGpC,GAAO,EAAO,sGAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,uBAAwB,IAAI2B,EAAc,CAChE,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXmkC,sBAAsB9tC,KAGpC,GAAO,EAAO,uGAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXokC,SAAS/tC,KAGvB,GAAO,EAAO,gDAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXqkC,QAAQhuC,KAGtB,GAAO,EAAO,8CAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXgkC,wBAGd,GAAO,EAAO,4GAElBhnC,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXskC,uBAGd,GAAO,EAAO,0GAElBtnC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXukC,sBAGd,GAAO,EAAO,mHAElBvnC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEXwkC,qBAGd,GAAO,EAAO,iHAElBxnC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,UAAWqG,KAAM4kC,EAAO71B,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxF,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCS,EAAgByI,EAAW,GAG/B,OAFqB1J,EAAE4K,cAAF,WAEXsiC,IAAIjsC,KAGlB,GAAO,EAAO,8CAElB2G,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAC/CsiC,EACCljC,GAE0BA,EAAW,GAAGlJ,MACdoK,cAAF,WAEX2Q,OAGd,GAAO,EAAO,6HClVpB,MAAO,WAAqB,EAE9B,YAAYjc,GACR2J,MAAM,UAAW3J,EAAQ,0CAEzBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKwJ,UAAW,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAAC,CAAC3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAAU,KACxJgB,I,MAE6B,QAA1B,EAAApK,EAAO47B,KAAK2P,sBAAc,SAAEuD,QAAQiB,YAAYhY,KAAK,mBAAmBiY,OAAO,QAAmB5lC,EAAW,GAAGlJ,MAAS,YAC1H,GAAO,KCTpB,MAAO+uC,GAmBT,YAAoBC,EAAsCtU,GAAtC,KAAAsU,UAAsC,KAAAtU,OAjB1D,KAAA5J,MAAgB,GAChB,KAAAme,SAAmB,GAMnB,KAAAC,SAAmB,IACnB,KAAAC,OAAgC,GAEhC,KAAAC,SAAmB,EAEnB,KAAAC,cAAgC,GAEhC,KAAAC,kBAA4B,EAC5B,KAAAC,kBAA4B,EAGxBC,OAAO,KACHpoC,KAAKqoC,WAAaT,EAAQnY,KAAK,cAC/BzvB,KAAK6iC,QAEL,IAAI7lB,EAAOhd,KAEP5G,EAAY,EAEZwpC,GAAQ,EACR0F,EAAe7F,YAAYC,MAE/B6F,YAAY,KACJvrB,EAAKirB,cAAcjmC,OAAS,IAC5Bgb,EAAKwrB,aACD/F,YAAYC,MAAQ4F,EAAe,IACnCtrB,EAAKqrB,WAAW,GAAGI,UAAYzrB,EAAKqrB,WAAW,GAAGK,aAElD9F,GAAQ,EAEZ0F,EAAe7F,YAAYC,OAG3BtpC,IAAM,IAAM,GAAKwpC,GACjB+F,WAAW,KACP3rB,EAAKqrB,WAAW,GAAGI,UAAYzrB,EAAKqrB,WAAW,GAAGK,aAClD9F,GAAQ,GACT,MAGR,MAMX,iBACI,OAAO5iC,KAAK4nC,QAAQnY,KAAK,gBAG7B,iBACI,IAAImZ,EAAiB5oC,KAAK4nC,QAAQnY,KAAK,sBACvCmZ,EAAeC,OACfD,EAAeE,SAAS,mBACxBH,WAAW,KACPC,EAAeG,YAAY,mBAC3BH,EAAeI,QAChB,KAGP,aAII,GAAIhpC,KAAKgoC,UAAYhoC,KAAK8nC,SAAU,CAEhC9nC,KAAKqoC,WAAW1e,QAEhB,IAAIhyB,EAAIqI,KAAKioC,cAAcjmC,OAAS,EAChCinC,EAAK,EAET,KAAOtxC,GAAK,GAAG,CAEX,GAAIqI,KAAKioC,cAActwC,GAAGuxC,UACtBD,IACIA,GAAMjpC,KAAK8nC,UAAU,CACrB9nC,KAAKioC,cAAc/wB,OAAO,EAAGvf,EAAI,GACjC,MAGRA,KAKRqI,KAAKgoC,SAAW,EAGK,MAAlBhoC,KAAKmpC,YACJnpC,KAAKmpC,UAAUxE,SACZ3kC,KAAK6nC,SAASr4B,SAAS,aAAYxP,KAAK6nC,SAAW7nC,KAAK6nC,SAASj4B,UAAU,EAAG5P,KAAK6nC,SAAS7lC,OAAS,KAI5G,IAAK,IAAIonC,KAAMppC,KAAKioC,cAAe,CAM/B,GAAIjoC,KAAKmoC,kBAAoBiB,EAAGr0B,KAAKtF,WAAW,KAAM,CACtC25B,EAAGr0B,KAAKvC,MAAM,cAChB,GAAGxQ,OAAS,IAAGhC,KAAKmoC,kBAAmB,QAE7CiB,EAAGr0B,KAAK/S,OAAS,IAAGhC,KAAKmoC,kBAAmB,GAoBpD,GAjBAiB,EAAGr0B,KAAOq0B,EAAGr0B,KAAKhF,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAEtC,MAAZq5B,EAAG1f,QAAe0f,EAAG1f,MAAQ,6BAEZ,IAAjB1pB,KAAK6nC,UAAkB7nC,KAAK0pB,OAAS0f,EAAG1f,QACnB,IAAjB1pB,KAAK6nC,WAAgB7nC,KAAK6nC,UAAY,WAC1C7nC,KAAK6nC,UAAY,uBAAyBuB,EAAG1f,MAAQ,KAClD0f,EAAGF,SAAsB,IAAXE,EAAGr0B,OAAY/U,KAAK6nC,UAAY,KACjD7nC,KAAK0pB,MAAQ0f,EAAG1f,OAGhB1pB,KAAKkoC,mBAAqB,MAC1BloC,KAAK6nC,UAAYuB,EAAGr0B,KACpB/U,KAAKkoC,mBAAqBkB,EAAGr0B,KAAK/S,QAIlConC,EAAGF,QAAS,CACZlpC,KAAKmoC,kBAAmB,EACnBnoC,KAAK6nC,SAASr4B,SAAS,aAAYxP,KAAK6nC,UAAY,WACzD7nC,KAAKmpC,UAAYf,OAAOpoC,KAAK6nC,UAC7B7nC,KAAKqpC,SAAS3B,OAAO1nC,KAAKmpC,WAE1BnpC,KAAK6nC,SAAW,GAChB7nC,KAAKmpC,UAAY,KAEjBnpC,KAAKqpC,SAAWjB,OAAO,eAEvB,IAAIkB,EAAStpC,KAAKszB,KAAK+M,iBAAiBkJ,aAAaD,OACxC,MAAVA,EACCtpC,KAAKqpC,SAASG,aAAaF,GAE3BtpC,KAAKqoC,WAAWX,OAAO1nC,KAAKqpC,UAGhCrpC,KAAK+nC,OAAOhkC,KAAK/D,KAAKqpC,UACtBrpC,KAAKkoC,kBAAoB,GAWjC,GANqB,IAAjBloC,KAAK6nC,WACA7nC,KAAK6nC,SAASr4B,SAAS,aAAYxP,KAAK6nC,UAAY,WACzD7nC,KAAKmpC,UAAYf,OAAOpoC,KAAK6nC,UAC7B7nC,KAAKqpC,SAAS3B,OAAO1nC,KAAKmpC,YAG1BnpC,KAAK+nC,OAAO/lC,OAAyB,IAAhBhC,KAAK8nC,SAAgB,CAC1C,IAAI9qB,EAAOhd,KACPypC,EAAgBzsB,EAAK+qB,OAAO/lC,OAASgb,EAAK8qB,SAE1C4B,EAAiB1sB,EAAK+qB,OAAO7wB,OAAO,EAAGuyB,GAE3C,IAAK,IAAIE,KAASD,EACdC,EAAMhF,SAKd3kC,KAAKioC,cAAgB,GAGzB,QACIjoC,KAAKqoC,WAAW1e,QAChB3pB,KAAKqpC,SAAWjB,OAAO,eACvBpoC,KAAK+nC,OAAOhkC,KAAK/D,KAAKqpC,UACtBrpC,KAAKqoC,WAAWX,OAAO1nC,KAAKqpC,UAC5BrpC,KAAKkoC,kBAAoB,EACzBloC,KAAK0pB,MAAQ,GACb1pB,KAAK6nC,SAAW,GAChB7nC,KAAKioC,cAAgB,GAGzB,MAAMlzB,EAAqB2U,GACvB,GAAY,MAAR3U,EAAJ,CAEA,GAAmB,iBAAT2U,EAAkB,CAExB,IADAA,EAAQA,EAAM9X,SAAS,IACjB8X,EAAM1nB,OAAS,GAAG0nB,EAAQ,IAAMA,EACtCA,EAAQ,IAAMA,EAIlB,IADA3U,EAAOA,EAAKnD,YACHjN,QAAQ,OAAS,EAAG,CACzB,IAAIilC,EAAQ70B,EAAK3E,MAAM,MACvB,IAAK,IAAIzY,EAAI,EAAGA,EAAIiyC,EAAM5nC,OAAQrK,IAAK,CACnC,IAAIkB,EAAI+wC,EAAMjyC,GACVuxC,EAAUvxC,EAAIiyC,EAAM5nC,OAAS,EACxB,IAALnJ,GAAWlB,GAAKiyC,EAAM5nC,OAAS,IACnChC,KAAKioC,cAAclkC,KAAK,CACpBgR,KAAMlc,EACN6wB,MAAOA,EACPwf,QAASA,IAETA,GAASlpC,KAAKgoC,kBAGtBhoC,KAAKioC,cAAclkC,KAAK,CACpBgR,KAAMA,EACN2U,MAAOA,EACPwf,SAAS,KAKrB,QAAQn0B,EAAqB2U,GACb,MAAR3U,IAAcA,EAAO,IACzB/U,KAAKupB,MAAMxU,EAAO,KAAM2U,IClO1B,MAAO,GAIT,YAAoBke,EAAsCtU,GAAtC,KAAAsU,UAAsC,KAAAtU,OAInD,UAAU3xB,EAAgBG,EAAqB+nC,GAElD,IAAI5oC,EAAaU,EAAOuhB,gBACpBvX,EAAU7J,EAAW,GAAGlJ,MACxBkxC,EAAoC,GAArBhoC,EAAWE,OAAcF,EAAW,GAAGlJ,MAAQ,KAE9DmxC,EAA6B/pC,KAAKszB,KAAK+M,iBAAiB0J,aAC9C,MAAXp+B,GAA8B,IAAXA,IAClBo+B,EAAa5B,kBAAmB,EAChC4B,EAAavgB,QAAQ,KAAO7d,GAC5Bo+B,EAAavB,cAGjBxoC,KAAKspC,OAASlB,OAAO,4CAEX2B,EAAa1B,WACnBX,OAAO1nC,KAAKspC,QAEhB,IAAIU,EAAsB,MAAhBF,EAAuB,GAAKA,EACtC9pC,KAAKspC,OAAOW,IAAID,GAEhB,IAAIhtB,EAAOhd,KAOXA,KAAKspC,OAAOY,GAAG,UAAYtzB,IACX,SAATA,EAAE1d,KACD8jB,EAAKmtB,SAASlpC,EAAY4oC,KAIlClB,WAAW,KACP3rB,EAAKssB,OAAOc,SACb,KAEHL,EAAa1B,WAAW6B,GAAG,yBAA2BtzB,IAClD+xB,WAAW,KACP3rB,EAAKssB,OAAOc,SACb,OAKX,SAAShqC,EAAYypC,GACjB,IAAIrmC,EAAqBxD,KAAKspC,OAAOW,MACjCF,EAAe/pC,KAAKszB,KAAK+M,iBAAiB0J,aAE1CM,EAAgBrqC,KAAKq7B,MAAM73B,EAAGpD,GAElC,GAA0B,MAAvBiqC,EAAcr/B,MAQb,OANAhL,KAAKspC,OAAOgB,SACZP,EAAavgB,QAAQ6gB,EAAcr/B,MAAO,WAC1C++B,EAAavB,aACbuB,EAAa1B,WAAWX,OAAO1nC,KAAKspC,QACpCtpC,KAAKspC,OAAO,GAAGiB,sBACfvqC,KAAKspC,OAAOc,QAIhBL,EAAa1B,WAAWmC,IAAI,0BAC5BT,EAAavgB,QAAQhmB,GACrBxD,KAAKspC,OAAOkB,IAAI,WAChBxqC,KAAKgpC,OAELa,EAASQ,EAAczxC,OAI3B,MAAM4K,EAAWpD,GAEb,GAAGA,GAAQkL,EACP,MAAO,CACHN,MAAO,KACPpS,MAAO,CAACA,MAAO4K,EAAGpD,KAAMA,IAIhC,GAAGA,GAAQgP,EACP,OAAe,GAAZ5L,EAAExB,OAAoB,CAACgJ,MAAO,4CAA6CpS,MAAO,MAClF4K,EAAExB,OAAS,EAAU,CAACgJ,MAAO,+CAAgDpS,MAAO,MAChF,CACHoS,MAAO,KACPpS,MAAO,CAACA,MAAO4K,EAAGpD,KAAMA,IAIhC,GAAGA,GAAQgP,EACP,MAAQ,QAAL5L,GAAoB,SAALA,EAAqB,CAACwH,MAAO,iCAAkCpS,MAAO,MACjF,CACHoS,MAAO,KACPpS,MAAO,CAACA,MAAY,QAAL4K,EAAapD,KAAMA,IAI1CoD,EAAIA,EAAEuM,QAAQ,IAAK,KAEnB,IAAI3W,EAAIgY,OAAO5N,GAEf,OAAQ,MAALpK,EACQ,CAAC4R,MAAO,2BAA4BpS,MAAO,MAGnDwH,GAAQmO,EACJnV,GAAKmS,KAAK04B,MAAM7qC,GAAW,CAAC4R,MAAO,iCAAkCpS,MAAO,MACxE,CACHoS,MAAO,KACPpS,MAAO,CAACA,MAAO2S,KAAK04B,MAAM7qC,GAAIgH,KAAMA,IAIrC,CACH4K,MAAO,KACPpS,MAAO,CAACA,MAAOQ,EAAGgH,KAAMA,IAMhC,OAEsB,MAAfJ,KAAKspC,SACJtpC,KAAKspC,OAAO3E,SACZ3kC,KAAKspC,OAAS,OCtIpB,SAAUmB,GAAKC,EAAaC,EAAcC,EAC5CC,GACAC,IAAgB,GAChBC,EAAEN,KAAK,CACHrqC,KAAM,OACN4qC,OAAO,EACPC,KAAMxQ,KAAKC,UAAUiQ,GACrBO,YAAa,mBACbR,IAAKA,EACLS,QAAS,SAAUC,GAEf,GADAN,IAAgB,GACQ,MAApBM,EAASD,SAAuC,GAApBC,EAASD,SAAyC,iBAAbC,GAAqC,IAAZA,EAAgB,CAC1G,IAAIpgC,EAAQ,yCACY,MAApBogC,EAASz/B,UAAiBX,EAAQogC,EAASz/B,SAO3Ck/B,GAAeA,EAAc7/B,QAEjC4/B,EAAgBQ,IAKxBpgC,MAAO,SAAUqgC,EAAO1/B,GAEpB,GADAm/B,IAAgB,GACZD,EAAe,CACf,IAAIS,EAAa,2BAKjB,OAJoB,GAAhBD,EAAME,SACND,EAAa,GAAKD,EAAME,aAE5BV,EAAcl/B,EAAU,KAAO2/B,OAOzC,SAAUR,GAAgBU,GACxBA,EACApD,OAAO,oBAAoBS,OAE3BT,OAAO,oBAAoBY,OC5C7B,MAAO,GAcT,YAAoB1V,EAAoBmY,GAApB,KAAAnY,OAAoB,KAAAmY,kBAVxC,KAAAC,4BAAsC,GACtC,KAAAC,gCAA0C,EAE1C,KAAAC,yBAAmC,GACnC,KAAAC,kBAA4B,EAC5B,KAAAC,sBAAgC9rC,KAAK4rC,yBACrC,KAAAG,eAAyB,EAQzB,kBAEI,IAAI/uB,EAAOhd,KACXA,KAAKyrC,gBAAgBhc,KAAK,OAAOuc,KAAK,QAAShvB,EAAK4uB,0BAEhC,MAAjB5rC,KAAKisC,UAAkBC,cAAclsC,KAAKisC,UAE7C,IAAIE,EAAkCnsC,KAAK6rC,kBAE3C7rC,KAAKisC,SAAW1D,YAAY,KAExB,GAAqB,MAAlBvrB,EAAKsW,KAAK8Y,KAAc,OAI3B,GAFApvB,EAAK8uB,wBAEF9uB,EAAK8uB,sBAAwB,EAAG,CAC/B9uB,EAAK8uB,sBAAwB9uB,EAAK4uB,yBAClCO,IACA,IAAIE,EAAyC,GAA3BF,EACfE,IAAaF,EAA0BnsC,KAAK6rC,mBAC/C7uB,EAAKsvB,YAAY,OAAUD,GAG/B,IAAIE,EAAQvsC,KAAKyrC,gBAAgBhc,KAAK,uBAEtC8c,EAAMP,KAAK,QAAShvB,EAAK8uB,sBAAwB,MAE9C9uB,EAAK+uB,eACJQ,EAAMC,IAAI,OAAQ,WAClBxsC,KAAKyrC,gBAAgBO,KAAK,QAAQ,oEAElCO,EAAMC,IAAI,OAAQ,WAClBxsC,KAAKyrC,gBAAgBO,KAAK,QAAQhvB,EAAK8uB,sBAAwB,0CAGpE,KAIP,YAAYjC,EAAqB4C,GAAgC,G,MAE7D,GAAqB,MAAlBzsC,KAAKszB,KAAK8Y,KAAc,OAE3BpsC,KAAKszB,KAAKoZ,gBAAgBC,wBAE1B,IAAIC,EAAiC,QAArB,EAAG5sC,KAAKszB,KAAKuZ,gBAAQ,eAAED,aACnCE,EAAe9sC,KAAKszB,KAAK8Y,KAAKW,WAE/BH,aAAY,EAAZA,EAAchK,QAAS5iC,KAAKszB,KAAK0Z,iBAChChtC,KAAKszB,KAAK0Z,eAAgB,EAC1BF,EAAaF,aAAeA,aAAY,EAAZA,EAAcK,YAC1CjtC,KAAKktC,uBAAuB,SAGhCN,EAAahK,OAAQ,EAErB,IAAIuK,EAA0B,GAC1BC,EAAqB,GAEzB,IAAI,IAAIC,KAAMrtC,KAAKszB,KAAKga,cAAc,CAE9BD,EAAGE,QACHJ,EAAOppC,KAAKspC,EAAGG,kBAAiB,IAChCH,EAAGE,OAAQ,GAGf,IAAI,IAAIx1C,KAAKs1C,EAAG5vB,YAAY2F,YAAW,GAC/BrrB,EAAE4nC,KAAK4N,QACPx1C,EAAE4nC,KAAK5qB,KAAOhd,EAAEgrC,gCAChBqK,EAAOrpC,KAAKhM,EAAE01C,YAAYJ,IAE1Bt1C,EAAE4nC,KAAK4N,OAAQ,GAK3B,IAAI5C,EAA8B,CAC9B+C,uBAAwBP,EACxBQ,MAAOP,EACPQ,SAAU5tC,KAAKszB,KAAKua,kBACpBC,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGvBmb,EAAOhd,KACX,GAAGmtC,EAAOnrC,OAAS,GAAKorC,EAAOprC,OAAS,GAAKyqC,EACzChC,GAAK,cAAeE,EAAUS,IAC1BpuB,EAAK+uB,eAAiBX,EAASD,QAC3BnuB,EAAK+uB,gBAEL/uB,EAAK+wB,iBAAiBpD,EAASS,GAEhB,MAAZvB,IACCA,KAIT,KACC7sB,EAAK+uB,eAAgB,SAGzB,GAAe,MAAZlC,EAEC,YADAA,IAOZ,oBAAoBmE,EAAcJ,EAAkB/D,GAWhDY,GAAK,gCAR+C,CAChDrqC,KAAM,SACN6tC,OAAQ,YACRhD,KAJoB+C,EAAER,kBAAiB,GAKvCI,SAAUA,EACVE,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGqBupC,IAC5C4C,EAAEnsC,GAAKupC,EAASvpC,GAChBgoC,EAAS,OACVA,GAIP,eAAe9xC,EAAWs1C,EAAeO,EAAkB/D,GAWvDY,GAAK,gCAR+C,CAChDrqC,KAAM,SACN6tC,OAAQ,OACRhD,KAJelzC,EAAE01C,YAAYJ,GAK7BO,SAAUA,EACVE,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGqBupC,IAC5CrzC,EAAE4nC,KAAK99B,GAAKupC,EAASvpC,GACrBgoC,EAAS,OACVA,GAIP,uBAAuBwD,EAAexD,GAMlCY,GAAK,qBAJoC,CACrCyD,aAAcb,EAAGxrC,IAGgBupC,IACjCvB,EAASuB,EAASz/B,QAASy/B,EAAS+C,YACrCtE,GAIP,wBAAwBwD,EAAee,EAAmBC,EAAuBxE,GAE7E7pC,KAAKssC,YAAY,KAQb7B,GAAK,sBANqC,CACtCyD,aAAcb,EAAGxrC,GACjBysC,SAAUF,aAAM,EAANA,EAAQvsC,GAClBwsC,YAAaA,GAGqBjD,IAClCvB,EAASuB,EAASz/B,UACnBk+B,KAEJ,GAKP,qBAAqBwD,EAAekB,EAAoBC,EAAkBC,EAAyB5E,GAE/F7pC,KAAKssC,YAAY,KASb7B,GAAK,mBAPS,CACVyD,aAAcb,EAAGxrC,GACjB0sC,WAAYA,EACZr2C,KAAMs2C,EACNruC,YAAasuC,GAGkBrD,IAC/BiC,EAAG5vB,YAAY2F,YAAW,GAAOrU,QAAQhX,IACrCA,EAAE4nC,KAAK+O,cAAgB32C,EAAE4nC,KAAK99B,GAC9B9J,EAAE4nC,KAAKgP,wBAA0B,IAErCtB,EAAGuB,cAAgBxD,EAASwD,cAC5BvB,EAAGwB,oCAAqC,EACxChF,EAASuB,EAASz/B,QAASy/B,EAASwD,gBACrC/E,KAEJ,GAKP,0BAA0BzpC,EAA4ByB,EAAYgoC,GAS9DY,GAAK,gCAP+C,CAChDrqC,KAAM,SACN6tC,OAAQ7tC,EACRyB,GAAIA,EACJisC,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGqBupC,IACzCA,EAASD,QACRtB,EAAS,MAETA,EAAS,oBAEdA,GAIP,uBAAuBA,GAOnBY,GAAK,qBALoC,CACrCsC,SAAU/sC,KAAKszB,KAAK8Y,KAAKW,SACzBe,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGUupC,IAC9BA,EAASD,QACRtB,EAAS,MAETA,EAAS,oBAEdA,GAKP,iBAAiBiF,EAAwCC,GAErD,IAAIC,EAAyD,IAAIlvC,IAE7DmvC,EAAgB,GACpBH,EAAmBnB,MAAM5+B,QAAQ4wB,GAAQsP,EAAclrC,KAAK47B,EAAK99B,KAEjEktC,EAAoBG,WAAWA,WAAWngC,QAAQogC,GAAMH,EAA2B3rC,IAAI8rC,EAAGttC,GAAIstC,IAE9F,IAAIC,EAA8B,GAElC,IAAK,IAAIC,KAAmBN,EAAoBG,WAAWA,WAAY,CAKrC,GAHRlvC,KAAKszB,KAAKga,cAAcvjC,OAAOsjC,GAAMA,EAAGxrC,IAAMwtC,EAAgBxtC,IAGhEG,SAChBotC,EAAkBrrC,KAAKsrC,EAAgBn3C,MACvC8H,KAAKsvC,oCAAoCD,IAOjD,IAAI,IAAIlB,KAAanuC,KAAKszB,KAAKga,cAAc,CACzC,IAAI+B,EAAiCL,EAA2Bx2C,IAAI21C,EAAUtsC,IAC9E,GAAsB,MAAnBwtC,EAAwB,CACvB,IAAIE,EAA+C,IAAIzvC,IACvDuvC,EAAgB1B,MAAM5+B,QAAQygC,GAAMD,EAAsBlsC,IAAImsC,EAAG3tC,GAAI2tC,IAErE,IAAIC,EAAqC,IAAI3vC,IAE7C,IAAI,IAAIpI,KAAUy2C,EAAU1wB,YAAY2F,YAAW,GAAO,CACtD,IAAIssB,EAASh4C,EAAOioC,KAAK99B,GACzB4tC,EAAcpsC,IAAIqsC,EAAQh4C,GAC1B,IAAIi4C,EAAiBJ,EAAsB/2C,IAAIk3C,GAC1B,MAAlBC,GACC3vC,KAAKszB,KAAKoZ,gBAAgBkD,cAAcC,cAAcn4C,GACtDsI,KAAKszB,KAAKwc,iBAAiBryB,YAAYsyB,aAAar4C,IAC9Ci4C,EAAeK,QAAUt4C,EAAOioC,KAAKqQ,WACxCf,EAActqC,QAAQ+qC,GAAU,GAAKC,EAAetD,eACnD30C,EAAOioC,KAAK5qB,KAAO46B,EAAe56B,KAClCrd,EAAO0e,MAAM65B,SAASN,EAAe56B,MAErCrd,EAAOioC,KAAK4N,OAAQ,EACpB71C,EAAOw4C,mBAAqBx4C,EAAO0e,MAAM+5B,2BAE7Cz4C,EAAOioC,KAAKqQ,QAAUL,EAAeK,SAK7C,IAAI,IAAII,KAAcf,EAAgB1B,MACK,MAApC8B,EAAcj3C,IAAI43C,EAAWvuC,KAC5B7B,KAAKqwC,WAAWlC,EAAWiC,IAM3C,GAAGhB,EAAkBptC,OAAS,EAAE,CAC5B,IAAI2J,EAAkByjC,EAAkBptC,OAAS,EAAI,yDAA2D,yDAChH2J,GAAWyjC,EAAkBtsC,KAAK,MAClCwtC,MAAM3kC,GAGV3L,KAAKszB,KAAKoZ,gBAAgB6D,mBAAmBC,eAC7CxwC,KAAKszB,KAAKoZ,gBAAgBkD,cAAcY,eAIrC,oCAAoCnB,EAAgCoB,GAAoB,GAC3F,IAAIzC,EAAIhuC,KAAKszB,KAAKod,mBAAmBrB,EAAgBn3C,KAAMm3C,EAAgBzB,UAC3EI,EAAEnsC,GAAKwtC,EAAgBxtC,GACvBmsC,EAAEY,cAAgBS,EAAgBT,cAClCZ,EAAEa,mCAAqCQ,EAAgBR,mCAEvD7uC,KAAKszB,KAAKga,cAAcvpC,KAAKiqC,GAC7BhuC,KAAKszB,KAAKoZ,gBAAgB6D,mBAAmBI,WAAW,CACpDz4C,KAAMm3C,EAAgBn3C,KACtB04C,gBAAiB5C,EACjB6C,UAA4C,MAAjCxB,EAAgBT,cAAwB,YAAc,eAGrE,IAAK,IAAIkC,KAAYzB,EAAgB1B,MACjC3tC,KAAKqwC,WAAWrC,EAAG8C,GAGpBL,IACCzwC,KAAKszB,KAAKoZ,gBAAgB6D,mBAAmBC,eAC7CxwC,KAAKszB,KAAKoZ,gBAAgBkD,cAAcY,gBAIhD,WAAWrC,EAAsBiC,GAC7B,IAAIW,EAAU,KACV5C,GAAanuC,KAAKszB,KAAKwc,mBACvBiB,EAAK,CACD74C,KAAMk4C,EAAWl4C,KACjB04C,gBAAiB,MAGrB5wC,KAAKszB,KAAKoZ,gBAAgBkD,cAAce,WAAWI,IAGvD,IAAIC,EAAS,CACTnvC,GAAIuuC,EAAWvuC,GACf3J,KAAMk4C,EAAWl4C,KACjB0qC,OAAO,EACP2K,OAAO,EACPx4B,KAAMq7B,EAAWr7B,KACjBi7B,QAASI,EAAWJ,QACpBtB,cAAe0B,EAAW1B,cAC1BC,wBAAyByB,EAAWzB,wBACpCsC,iCAAiC,EACjC/C,aAAcC,EAAUtsC,GACxBqvC,aAAcH,GAEdh5C,EAAIiI,KAAKszB,KAAKoZ,gBAAgByE,aAAaH,GACrC,MAAND,IAAYA,EAAGH,gBAAkB74C,GACpBo2C,EAAU1wB,YAChB2zB,UAAUr5C,ICxXvB,MAAO,GAmBT,YAAYs5C,EAAiBh2B,EAAyBthB,EAAoBnB,EAAcwH,EAAYqb,GAbpG,KAAA61B,SAA8B,GAG9B,KAAAC,QAAkB,EAWdvxC,KAAKqxC,QAAUA,EACfrxC,KAAKqb,OAASA,EACA,MAAVA,GACAA,EAAOi2B,SAASvtC,KAAK/D,MAEzBA,KAAKpH,MAAQA,EACboH,KAAKI,KAAOA,EACZJ,KAAKyb,SAAWA,EAChBzb,KAAKjG,WAAaA,EAGtB,WACI,OAAsB,MAAfiG,KAAKqb,OAAiB,EAAIrb,KAAKqb,OAAOm2B,WAAa,EAG9D,YAEI,OAA0B,GAAnBxxC,KAAKwxC,WAAkB,EAAI,GAGtC,SAEI,GAA6B,MAAzBxxC,KAAKyxC,iBAA0B,CAC/BzxC,KAAKyxC,iBAAmBrJ,OAAO,SAC/BpoC,KAAKyxC,iBAAiB3I,SAAS,sBAC/B9oC,KAAKyxC,iBAAiBjF,IAAI,cAAoBxsC,KAAK0xC,YAAc,MAEjE,IAAIC,EAAevJ,OAAO,6DACtBpoC,KAAKjG,WAAa,wDAEtBiG,KAAKyxC,iBAAiB/J,OAAOiK,IAGzB3xC,KAAKI,gBAAgB,GACpBJ,KAAKI,gBAAgB,KAAWJ,KAAKI,gBAAgB,IAAWJ,KAAKI,MAAQkL,GAC3EtL,KAAKI,gBAAgB,GACrBJ,KAAKI,gBAAgB,KAExBJ,KAAK4xC,SAAU,EACf5xC,KAAKyxC,iBAAiB3I,SAAS,cAC/B9oC,KAAKyxC,iBAAiB/J,OAAOU,OAAO,4CAEpCpoC,KAAKyxC,iBAAiBhiB,KAAK,mBAAmBya,GAAG,YAAc2H,IACzC,MAAd7xC,KAAKpH,OAAqC,MAApBoH,KAAKpH,MAAMA,OACL,GAAxBoH,KAAKsxC,SAAStvC,QACdhC,KAAK8xC,iBAET9xC,KAAKyxC,iBAAiBM,YAAY,eAClC/xC,KAAKuxC,QAAUvxC,KAAKuxC,QAEpBvxC,KAAKsxC,SAAW,GAGpBO,EAAMG,qBAOlBhyC,KAAKiyC,cAIT,iBAII,GAFAjyC,KAAKsxC,SAAW,GAEZtxC,KAAKI,gBAAgB,EAAO,CAE5B,IAAI8xC,EAAoBlyC,KAAKpH,MAAMA,MAC/ByrC,EAA6C,MAApB6N,EAAGlvC,cAAwB,KAAOkvC,EAAGlvC,cAAH,WAC/D,GAAkB,MAAdqhC,EACArkC,KAAKmyC,mBAAmB9N,QAExB,IAAK,IAAIn9B,KAAalH,KAAKpH,MAAMwH,KAAMyH,cAAcjO,EAAWwS,SAAU,CACtE,IAAIgmC,EAAK,IAAI,GAAgB,KAAMpyC,KAAMkH,EAAEnN,WAAYm4C,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAE9G,KAAM,MAC1FgyC,EAAGC,SACHryC,KAAKyxC,iBAAiBhiB,KAAK,wBAAwBiY,OAAO0K,EAAGX,wBAKlE,GAAIzxC,KAAKI,gBAAgB,EAAW,CAEvC,IAAI8G,EAAalH,KAAKpH,MAAMA,MAExB05C,EAAkBtyC,KAAKyxC,iBAAiBhiB,KAAK,wBACjD,IAAK,IAAI93B,EAAI,EAAGA,EAAIuP,EAAElF,QAAUrK,EAAI,IAAKA,IAAK,CAE1C,IAAIy6C,EAAK,IAAI,GAAgB,KAAMpyC,KAAM,IAAMrI,EAAI,IAAKuP,EAAEvP,GAAIqI,KAAKI,KAAKiC,YAAa,MACrF+vC,EAAGC,SACHC,EAAgB5K,OAAO0K,EAAGX,wBAI3B,GAAIzxC,KAAKI,gBAAgB,EAE5B,IAAK,IAAI8G,KAAKlH,KAAKI,KAAKyH,cAAcjO,EAAWwS,SAAU,CACvD,IAAI8lC,EAAKlyC,KAAKI,KAAKqM,YACf2lC,EAAK,IAAI,GAAgB,KAAMpyC,KAAMkH,EAAEnN,WAAYm4C,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAE9G,KAAM,MAC1FgyC,EAAGC,SACHryC,KAAKyxC,iBAAiBhiB,KAAK,wBAAwBiY,OAAO0K,EAAGX,uBAG9D,GAAIzxC,KAAKI,gBAAgB,EAE5B,GAAwB,MAApBJ,KAAKpH,MAAMA,OAAiBoH,KAAKpH,MAAMA,iBAAiB,EAAe,CACvE,IAAIs5C,EAAoBlyC,KAAKpH,MAAMA,MAEnC,IAAK,IAAIsO,KAAagrC,EAAGhvC,MAAO2E,cAAcjO,EAAWwS,SAAU,CAC/D,IAAIgmC,EAAK,IAAI,GAAgB,KAAMpyC,KAAMkH,EAAEnN,WAAYm4C,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAE9G,KAAM,MAC1FgyC,EAAGC,SACHryC,KAAKyxC,iBAAiBhiB,KAAK,wBAAwBiY,OAAO0K,EAAGX,wBAIjEzxC,KAAKsxC,SAOjB,mBAAmBjN,GAEf,IAAIU,EAAaV,EAAWU,WAC5B,GAAI/kC,KAAKsxC,SAAStvC,OAAS+iC,EAAW/iC,OAAQ,CAC1C,IAAK,IAAIrK,EAAIotC,EAAW/iC,OAAQrK,EAAIqI,KAAKsxC,SAAStvC,OAAQrK,IAAK,CACxCqI,KAAKsxC,SAAS35C,GACpB85C,iBAAiB9M,SAElC3kC,KAAKsxC,SAASp6B,OAAO6tB,EAAW/iC,QAGpC,GAAIhC,KAAKsxC,SAAStvC,OAAS+iC,EAAW/iC,QAAUhC,KAAKsxC,SAAStvC,OAAS,IACnE,IAAK,IAAIrK,EAAIqI,KAAKsxC,SAAStvC,OAAQrK,EAAIotC,EAAW/iC,QAAUrK,GAAK,IAAKA,IAAK,CACvE,IAAI6L,EAAWuhC,EAAWptC,GACtB+Q,EAAQ,GAAK/Q,EACR,KAALA,IACA6L,EAAI,CAAEpD,KAAMkL,EAAqB1S,MAAayrC,EAAWU,WAAW/iC,OAAS,IAAO,eACpF0G,EAAQ,OAEZ,IAAI0pC,EAAK,IAAI,GAAgB,KAAMpyC,KAAM0I,EAAOlF,EAAGA,EAAEpD,KAAM,MAC3DgyC,EAAGC,SACHryC,KAAKyxC,iBAAiBhiB,KAAK,wBAAwBgH,QAAQiR,OAAO0K,EAAGX,mBAMjF,cACI,IAAI/3C,EACA8J,EAAIxD,KAAKpH,MAEb,GAAS,MAAL4K,EAAJ,CAMA,GADAxD,KAAKyxC,iBAAiB5I,OACP,MAAXrlC,EAAE5K,MACFc,EAAI,OACJsG,KAAKuyC,yBASL,GANqB,MAAjB/uC,EAAE7C,aACF6C,EAAE7C,YAAY6C,GAGlB9J,EAAI8J,EAAEpD,KAAKkM,YAAY9I,GAEnBxD,KAAKI,gBAAgB,EAAO,CAE5B,IAAI8xC,EAAoBlyC,KAAKpH,MAAMA,MAC/ByrC,EAA6C,MAApB6N,EAAGlvC,cAAwB,KAAOkvC,EAAGlvC,cAAH,WAC7C,MAAdqhC,IACArkC,KAAKmyC,mBAAmB9N,GACrBA,EAAWyB,wBACVpsC,EAAQ2qC,EAAWU,WAAW/iC,OAAS,QACvCtI,GAAK,IAAM2qC,EAAWQ,YAAYr4B,MAAM,EAAG,IAAI5J,IAAIxK,GAAK,GAAKA,GAAG0K,KAAK,MAAQ,KAE7EpJ,EAAI8J,EAAEpD,KAAKrG,WAAa,KAAMsqC,EAAWU,WAAW/iC,OAAS,cAO7EhC,KAAKyxC,iBAAiBhiB,KAAK,eAAegH,QAAQ+b,KAAK94C,GAGvD,IAAK,IAAI+4C,KAASzyC,KAAKsxC,SACnBmB,EAAMR,mBArCNjyC,KAAKyxC,iBAAiBzI,OAyC9B,oBACI,IAAK,IAAIoJ,KAAMpyC,KAAKsxC,SAChBc,EAAGX,iBAAiB9M,SAExB3kC,KAAKsxC,SAAW,IC1NlB,SAAUoB,GAAWC,GACzB,OAAOA,EACF5iC,QAAQ,SAAU,IACjBA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UAWtB,SAAS6iC,GAAOC,GACd,OAAGA,EAAI,GAAW,IAAMA,EACjB,GAAKA,EAkBR,SAAUC,GAAuBp5C,EAAWq5C,EAAwB,IACxE,IAAIC,EAAe,GAEnB,GAAoB,iBAAVD,EACRC,EAAeD,OAEf,IAAI,IAAIp7C,EAAI,EAAGA,EAAIo7C,EAAQp7C,IACzBq7C,GAAgB,IAOpB,OAHAt5C,EAjBI,SAAqBA,EAAWsI,GACpC,OAAOtI,EAAEqW,QACP,IAAIG,OAAO,eAAelO,iBAAsBA,SAAe,KAAM,QAenEixC,CAAWv5C,EAAG,KACbsI,OAAS,IAAGtI,EAAI,KAAOA,GAC5BA,EAAIs5C,EAAe,MAAQt5C,EAAEqW,QAAQ,MAAO,KAAOijC,EAAe,OAAS,KAAOA,EAAe,MC5D7F,SAAUE,GAAaC,EACzBC,EACAC,EAAkDC,EAAiD,MAE3E,MAApBF,IACAA,EAAmBD,GAGvB,IAAI7J,EAASlB,OAAO,mEACpBkB,EAAOkD,IAAI,CACP+G,MAAOH,EAAiB5G,IAAI,SAC5BgH,OAAQJ,EAAiB5G,IAAI,UAC7B9iB,MAAO0pB,EAAiB5G,IAAI,SAC5BxoC,SAAUovC,EAAiB5G,IAAI,YAC/B,mBAAoB4G,EAAiB5G,IAAI,oBACzC,YAAa4G,EAAiB5G,IAAI,aAClC,cAAe4G,EAAiB5G,IAAI,eACpC,aAAc,eAElBlD,EAAOW,IAAIkJ,EAAgBp+B,QAC3Bu0B,EAAOY,GAAG,YAActzB,IAAQA,EAAEo7B,oBAEZ,MAAlBsB,GACmBhK,EAAO,GAAImK,kBAAkBH,EAAehQ,MAAOgQ,EAAeI,KAGzFN,EAAiBO,MAAMrK,GACvB8J,EAAiBpK,OACjBL,WAAW,KACPW,EAAOc,SACR,KAEHd,EAAOY,GAAG,aAAertB,IACrB,GAAc,SAAVA,EAAG3jB,IASO,UAAV2jB,EAAG3jB,MACHowC,EAAOkB,IAAI,cACXlB,EAAOkB,IAAI,gBACXlB,EAAO3E,SACPyO,EAAiBvK,YAbrB,CACIS,EAAOkB,IAAI,cACXlB,EAAOkB,IAAI,gBACXlB,EAAO3E,SACPyO,EAAiBvK,OACjB,IAAI+K,EAAWlB,GAAmBpJ,EAAOW,OACzCoJ,EAAmBO,MAW3BtK,EAAOY,GAAG,cAAgBrtB,IACtBysB,EAAOkB,IAAI,cACX,IAAIoJ,EAAmBtK,EAAOW,MAC9BoJ,EAAmBO,GACnBR,EAAiBvK,OACjBS,EAAO3E,WAcT,SAAUkP,GAAgBC,EAA0BC,EAAWC,GAEjE,IAAIC,EAAe7L,OAAO,sCAEtB8L,EAAoC,KACpCC,EAAkC,KAEtC,IAAK,IAAIC,KAAMN,EAAO,CAClB,IAAIzC,EAAkB+C,EAAG/C,QACX,MAAX+C,EAAGC,OACFhD,EAAU,YAAY+C,EAAGC,6CAA6CD,EAAG/C,eAE7E,IAAIiD,EAAQlM,OAAO,QAAUiJ,GAAyB,MAAd+C,EAAGG,QAAkB,wDAA0D,IAAO,UAI9H,GAHgB,MAAZH,EAAG1qB,OACH4qB,EAAM9H,IAAI,QAAS4H,EAAG1qB,OAEZ,MAAX0qB,EAAGC,KACFC,EAAMpK,GAAG,wBAAyB,KAC9B9B,OAAO,mBAAmBzD,SAC1ByD,OAAO3tB,UAAU+vB,IAAI,yBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBACrB4J,EAAGvK,iBAEJ,CACSyK,EAAM7kB,KAAK,KACjBya,GAAG,YAAc2H,IACnBA,EAAMG,kBACNrJ,WAAW,KACP2L,EAAMtL,QACP,OAKXsL,EAAMpK,GAAG,wBAAyB,KAC3BkK,GAAMD,GAAkC,MAAhBD,IACvBA,EAAavP,SACbwP,EAAiB,KACjBD,EAAe,MAEF,MAAdE,EAAGG,UACFL,EAAeL,GAAgBO,EAAGG,QAASD,EAAM7vC,SAAS6xB,KAAOge,EAAMf,QAASe,EAAM7vC,SAAS+vC,QAIvGP,EAAavM,OAAO4M,GAGxBlM,OAAO3tB,UAAUyvB,GAAG,wBAAyB,KACzC9B,OAAO3tB,UAAU+vB,IAAI,yBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBACrBpC,OAAO,mBAAmBzD,WAG9ByD,OAAO3tB,UAAUyvB,GAAG,sBAAwBrtB,IAC1B,UAAVA,EAAG3jB,MACHkvC,OAAO3tB,UAAU+vB,IAAI,yBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBACrBpC,OAAO,mBAAmBzD,YAIlC,IAAI8P,EAAYV,EAAwB,GAApBW,OAAOC,WAAmB,QAAU,OACpDC,EAAKb,EAAwB,GAApBW,OAAOC,WAAmBD,OAAOC,WAAaZ,EAAIA,EAC3Dc,EAAYb,EAAyB,GAArBU,OAAOI,YAAoB,SAAW,MACtDC,EAAKf,EAAyB,GAArBU,OAAOI,YAAoBJ,OAAOI,YAAcd,EAAIA,EAE7DxH,EAAM,GAUV,OATAA,EAAIiI,GAAaG,EAAK,KACtBpI,EAAIqI,GAAaE,EAAK,KAEtBd,EAAazH,IAAIA,GAGjBpE,OAAO,QAAQV,OAAOuM,GACtBA,EAAapL,OAENoL,EAGL,SAAUe,GAASC,GACrB,IAAIC,EAAWD,EAAOxlB,KAAK,uBAAuBlxB,IAAI,iBAClD42C,EAAOF,EAAOxlB,KAAK,gBAEvBylB,EAAShL,GAAG,YAAcrtB,IACtB,IAAIu4B,EAAShN,OAAOvrB,EAAGu4B,QACvBF,EAASnM,YAAY,aACrBqM,EAAOtM,SAAS,aAChB,IAAI9pC,EAAMi2C,EAAOxlB,KAAK,IAAM2lB,EAAOnK,KAAK,WACxCkK,EAAKpM,YAAY,aACjBoM,EAAKE,QAAQ,UACbr2C,EAAI8pC,SAAS,aACb9pC,EAAIq2C,QAAQ,YAKd,SAAUC,GAAkBC,GAE9B,OADAA,EAAWA,EAASxlC,QAAQ,KAAM,IAAIF,OAC/BuB,OAAOI,SAAS+jC,GAGrB,SAAUC,GAAQ3zC,EAAYkB,EAAgB,GAAIgS,EAAe,GAAIy3B,GAEvE,IAAI9yC,EAAI,GACC,MAANmI,GAAoB,IAANA,IAAUnI,GAAK,QAAQmI,MAE5B,MAATkB,GAA0B,IAATA,IAAarJ,GAAK,WAAWqJ,MAEjD,IAAI0yC,EAAMrN,OAAO,OAAO1uC,YAUxB,OARW,MAAR8yC,GACCiJ,EAAIjJ,IAAIA,GAGD,MAARz3B,GAAwB,IAARA,GACf0gC,EAAI1gC,KAAKA,GAGD0gC,EC1KV,MAAO,GAiBT,YAAoBC,EAA8BrE,EAAyBsE,EAC/DC,EAAgCC,EAChCC,EAAkCC,GAF1B,KAAAL,YAA8B,KAAArE,UAAyB,KAAAsE,aAC/D,KAAAC,iBAAgC,KAAAC,iBAChC,KAAAC,mBAAkC,KAAAC,mBAjB9C,KAAAC,SAA+B,GAmB3BN,EAAUO,SAASj2C,MAIvB,SACIA,KAAKk2C,gBAAgBvR,SACrB3kC,KAAKm2C,aAAaxR,SAGtB,SAASyR,GACLp2C,KAAKo2C,MAAQA,EACTp2C,KAAKo2C,MACLp2C,KAAKk2C,gBAAgBpN,SAAS,YAE9B9oC,KAAKk2C,gBAAgBnN,YAAY,YAgBzC,gBAAgBsN,GACW,MAAnBr2C,KAAKs2C,aACDD,EACAr2C,KAAKs2C,WAAWzN,OAEhB7oC,KAAKs2C,WAAWtN,QAM5B,wBAAwBuN,GACpB,IAAIv5B,EAAOhd,KAEXA,KAAKk2C,gBAAkB9N,OAAO,+EACpBpoC,KAAKqxC,QAAU,+CAEE,MAAvBrxC,KAAK41C,iBACL51C,KAAKs2C,WAAalO,OAAO,mCAAqCpoC,KAAK41C,eAAiB,YAAc51C,KAAK61C,eAAiB,MACxH71C,KAAKk2C,gBAAgBzmB,KAAK,eAAeiY,OAAO1nC,KAAKs2C,YAErDt2C,KAAKs2C,WAAWpM,GAAG,YAAcrtB,IAE7B,GAAO25B,QACP35B,EAAGm1B,kBAEH,IAAIjB,EAAuB,CACvB74C,KAAM,OAGV8kB,EAAKg5B,SAASjyC,KAAKgtC,GAEnB,IAAI0F,EAAWz5B,EAAK05B,cAAc3F,GAClC/zB,EAAKm5B,aAAaQ,QAAQF,GAE1Bz5B,EAAKm5B,aAAa1N,UAAU,GAE5BzrB,EAAK45B,cAAc7F,EAAI,KAEnB/zB,EAAK65B,mBAAmB9F,EAAKH,IAEzBG,EAAGH,gBAAkBA,EAEK,MAAtBG,EAAG+F,iBACH/F,EAAG+F,gBAAgBC,YAAYN,GAGR,MAAvBz5B,EAAKg6B,gBAAwBh6B,EAAKi6B,OAAOlG,EAAGH,wBAUhE,IAAIsG,EAAa9O,OAAO,kFAClBpoC,KAAK21C,WAAa,uBAAyB31C,KAAK21C,WAAa,YACnE31C,KAAKm2C,aAAe/N,OAAO,mCAE3B8O,EAAWxP,OAAO1nC,KAAKm2C,cAEvBI,EAAc7O,OAAO1nC,KAAKk2C,iBAC1BK,EAAc7O,OAAOwP,GAErB,IAAIC,EAAMn3C,KAAKk2C,gBACXkB,EAAMp3C,KAAKm2C,aAAa96B,SAE5B87B,EAAIjN,GAAG,YAAcrtB,IACjB,GAAiB,GAAbA,EAAGw6B,SAIFr3C,KAAKo2C,MAAO,CACb,IAAIkB,EAAaF,EAAInM,KAAK,QACtBkM,EAAII,SAAS,eACTv6B,EAAK04B,UAAU8B,MAAMx1C,OAAS,GAC9Bo1C,EAAIK,QAAQ,CACR,YAAa,MACd,IAAM,KAAQN,EAAIpF,YAAY,kBAGrCoF,EAAIpF,YAAY,eAChBqF,EAAIK,QAAQ,CACR,YAAaH,GACd,SAQnB,WAAW3nB,GACP3vB,KAAKg2C,SAASjyC,KAAK4rB,GACnBA,EAAQ+nB,eAAiB13C,KAAK02C,cAAc/mB,GAC5C3vB,KAAKm2C,aAAaQ,QAAQhnB,EAAQ+nB,gBAGtC,eACI13C,KAAKg2C,SAAS2B,KAAK,CAACzwC,EAAG0wC,KACnB,IAAIC,EAAQ3wC,EAAE4wC,SAAW5wC,EAAE4wC,SAAW5wC,EAAEhP,KACpC6/C,EAAQH,EAAEE,SAAWF,EAAEE,SAAWF,EAAE1/C,KACxC,OAAQ2/C,EAAMvoC,cAAcyoC,KAEhC/3C,KAAKg2C,SAASjnC,QAAS4gB,IAAa3vB,KAAKm2C,aAAazO,OAAO/X,EAAQ+nB,kBAGzE,qBAAqB/nB,EAA2B5a,EAAcijC,GAC1D,IAAIC,EAAOtoB,EAAQ+nB,eAAejoB,KAAK,qBACvCwoB,EAAKnP,SAASkP,GACdC,EAAKzF,KAAKz9B,GAGd,UAAU0hC,GACNz2C,KAAKk2C,gBAAgBzmB,KAAK,eAAeknB,QAAQF,GAGrD,cAAc9mB,GAEV,IAAI3S,EAAOhd,KAaX,GAXyB,MAArB2vB,EAAQkhB,YAAmBlhB,EAAQkhB,UAAY7wC,KAAK81C,kBAExDnmB,EAAQ+nB,eAAiBtP,OAAO,0BAA0BzY,EAAQkhB,iFACP6B,GAAW/iB,EAAQz3B,+PAKzE8H,KAAK+1C,iBAAmB,+DAAiE,sBAGzD,MAAjC/1C,KAAKk4C,yBAAkC,CACvC,IAAIC,EAAiBn4C,KAAKk4C,yBAAyBvoB,GACnDA,EAAQ+nB,eAAehQ,OAAOyQ,GAyFlC,OAtFAxoB,EAAQ+nB,eAAexN,GAAG,YAAcrtB,IAEpC,GAAiB,GAAbA,EAAGw6B,QAAsC,MAAvBr6B,EAAKg6B,eAAwB,CAC/Ch6B,EAAKg6B,eAAernB,EAAQihB,iBAE5B,IAAK,IAAIG,KAAM/zB,EAAKg5B,SACZjF,GAAMphB,GAAWohB,EAAG2G,eAAeH,SAAS,cAC5CxG,EAAG2G,eAAe3O,YAAY,aAItCpZ,EAAQ+nB,eAAe5O,SAAS,gBAIxCnZ,EAAQ+nB,eAAe,GAAGU,iBAAiB,eAAe,SAAUvG,GAEhE,IAAIwG,EAAsC,GAU1C,GAT2B,MAAvBr7B,EAAKs7B,gBACLD,EAAiBt0C,KAAK,CAClBstC,QAAS,aACTxH,SAAU,KACN7sB,EAAK45B,cAAcjnB,MAKC,MAA5B3S,EAAKu7B,oBAEL,IAAK,IAAIC,KAAOx7B,EAAKu7B,oBAAoB5oB,GACrC0oB,EAAiBt0C,KAAK,CAClBstC,QAASmH,EAAInH,QACbxH,SAAU,KACN2O,EAAI3O,SAASla,IAEjBjG,MAAO8uB,EAAI9uB,MACX6qB,QAAwB,MAAfiE,EAAIjE,QAAkB,KAAOiE,EAAIjE,QAAQ3xC,IAAKwxC,IAC5C,CACH/C,QAAS+C,EAAG/C,QACZxH,SAAU,KACNuK,EAAGvK,SAASla,IAEhBjG,MAAO0qB,EAAG1qB,WAO1B2uB,EAAiBr2C,OAAS,IAC1B6vC,EAAM4G,iBACN5E,GAAgBwE,EAAkBxG,EAAM6G,MAAO7G,EAAM8G,WAE1D,GAEC37B,EAAK+4B,kBACLpmB,EAAQ+nB,eAAejoB,KAAK,cAAcya,GAAG,YAAcrtB,IACvDA,EAAG47B,iBACH5E,GAAgB,CAAC,CACbxC,QAAS,YACTxH,SAAU,QAGX,CACCwH,QAAS,+BACT3nB,MAAO,UACPmgB,SAAU,KACN7sB,EAAK47B,eAAejpB,EAAQihB,gBAAiB,KACzCjhB,EAAQ+nB,eAAe/S,SACQ,MAA3BhV,EAAQmnB,iBAAyBnnB,EAAQmnB,gBAAgBnS,SAC7D3nB,EAAKg5B,SAAS9+B,OAAO8F,EAAKg5B,SAASrxC,QAAQgrB,GAAU,GAE1B,MAAvB3S,EAAKg6B,iBACDh6B,EAAKg5B,SAASh0C,OAAS,EACvBgb,EAAKi6B,OAAOj6B,EAAKg5B,SAAS,GAAGpF,iBAE7B5zB,EAAKi6B,OAAO,YAK5Bp6B,EAAG67B,MAAQ,EAAG77B,EAAG87B,MAAQ,GAC7B97B,EAAGm1B,oBAIJriB,EAAQ+nB,eAInB,cAAc/nB,EAA2Bka,GACrC,IAAI7sB,EAAOhd,KACPi4C,EAAOtoB,EAAQ+nB,eAAejoB,KAAK,gBACnCopB,EAAWlpB,EAAQz3B,KAAKyM,QAAQ,KAEpCuuC,GAAa+E,EAAMA,EAAOa,IACS,MAA3BnpB,EAAQihB,kBAAyBkI,EAAU97B,EAAKs7B,eAAe3oB,EAAQihB,gBAAiBkI,IAC5FnpB,EAAQz3B,KAAO4gD,EACfb,EAAKzF,KAAK7iB,EAAQz3B,MACF,MAAZ2xC,GAAkBA,IACtB7sB,EAAKwzB,gBANmB,MAAZqI,EAAmB,KAAO,CAAEvV,MAAO,EAAGoQ,IAAKmF,IAU/D,OAAOjI,EAAsBmI,GAA0B,GAEnD,GAAuB,MAAnBnI,EACA,IAAK,IAAIoI,KAAOh5C,KAAKg2C,SACbgD,EAAItB,eAAeH,SAAS,cAAcyB,EAAItB,eAAe3O,YAAY,iBAE9E,CACH,IAAIgI,EAAK/wC,KAAKi5C,YAAYrI,GAE1B,GAAS,MAANG,EAAW,CACV,IAAK,IAAIiI,KAAOh5C,KAAKg2C,SACbgD,EAAItB,eAAeH,SAAS,cAAcyB,EAAItB,eAAe3O,YAAY,aAGjFgI,EAAG2G,eAAe5O,SAAS,cAK/BiQ,GAAyC,MAAvB/4C,KAAKg3C,gBAAwBh3C,KAAKg3C,eAAepG,GAI3E,gBAAgBjhB,EAA2BkhB,G,MACzB,MAAXlhB,IACuB,QAAtB,EAAAA,EAAQ+nB,sBAAc,SAAE3O,YAAY,MAAQpZ,EAAQkhB,WAAW/H,SAAS,MAAQ+H,GAChFlhB,EAAQkhB,UAAYA,GAK5B,YAAYD,GACR,IAAK,IAAIG,KAAM/wC,KAAKg2C,SAChB,GAAIjF,EAAGH,iBAAmBA,EACtB,OAAOG,EAIf,OAAO,KAIX,cAAcH,GACV,IAAK,IAAIG,KAAM/wC,KAAKg2C,SAChB,GAAIjF,EAAGH,iBAAmBA,EAYtB,OAXAG,EAAG2G,eAAe/S,SACQ,MAAtBoM,EAAG+F,iBAAyB/F,EAAG+F,gBAAgBnS,SACnD3kC,KAAKg2C,SAAS9+B,OAAOlX,KAAKg2C,SAASrxC,QAAQosC,GAAK,QAErB,MAAvB/wC,KAAKg3C,iBACDh3C,KAAKg2C,SAASh0C,OAAS,EACvBhC,KAAKi3C,OAAOj3C,KAAKg2C,SAAS,GAAGpF,iBAE7B5wC,KAAKi3C,OAAO,QAQhC,QACIj3C,KAAKm2C,aAAaxsB,QAClB3pB,KAAKg2C,SAAW,GAGpB,WAAWjhC,GACP/U,KAAKk2C,gBAAgBzmB,KAAK,QAAQ+iB,KAAKz9B,GAG3C,yBACI,IAAK,IAAIg8B,KAAM/wC,KAAKg2C,SAChB,GAAIjF,EAAG2G,eAAeH,SAAS,aAC3B,OAAOxG,EAGf,OAAO,MAMT,MAAOmI,GAKT,YAAYC,GAHZ,KAAA3B,MAA0B,GAItBx3C,KAAKm5C,MAAQA,EACbA,EAAMrQ,SAAS,qBAGnB,SAASsQ,GACLA,EAAMC,wBAAwBr5C,KAAKm5C,OACnCn5C,KAAKw3C,MAAMzzC,KAAKq1C,ICpZlB,MAAOE,GAET,YAAmBC,EAA2BC,EAClClmB,EAAwBmmB,EAA0CC,GAD3D,KAAAH,aAA2B,KAAAC,mBAClC,KAAAlmB,OAAwB,KAAAmmB,cAA0C,KAAAC,wBAI9E,SAAS1uC,GACLhL,KAAKy5C,YAAY9vB,QACjB3pB,KAAKy5C,YAAY/R,OAAOU,OAAO,4CAGnC,WAEI,IACIjR,EADYn3B,KAAKszB,KAAK4Q,sBAAsByV,UACzBC,SAAS55C,KAAKu5C,YACrC,GAAoB,MAAhBpiB,EAAOnsB,MACPhL,KAAK65C,SAAS1iB,EAAOnsB,WAClB,CAEH,IAAIxH,EAAI,MACY,MAAhB2zB,EAAOv+B,QACP4K,EAAI2zB,EAAOv+B,MAAMwH,KAAKkM,YAAY6qB,EAAOv+B,QAG7CoH,KAAKy5C,YAAY9vB,QACjB3pB,KAAK05C,sBAAsB/vB,QAE3B5hB,OAAOsP,OAAOyiC,SAASt2C,EAAG,SAAU,CAAEu2C,QAAS,IAAKC,KAAMvxC,IAEtD,IAAIwxC,EAAU7R,OAAO,iCAAmC3/B,EAAU,UAE9DzI,KAAKu5C,WAAWv3C,OAASwB,EAAExB,OAAS,GACpChC,KAAK05C,sBAAsBhS,OAAOuS,GAElCj6C,KAAKy5C,YAAY/R,OAAOuS,OCzBtC,MAAO,GAWT,YAAoB3mB,EAAwB4mB,EAA2CC,GAAnE,KAAA7mB,OAAwB,KAAA4mB,eAA2C,KAAAC,sBARvF,KAAAC,qBAA0C,GAUtCp6C,KAAK01C,UAAY,IAAIwD,GAAUgB,GAE/Bl6C,KAAKq6C,cAAgB,IAAI,GAAer6C,KAAK01C,UAAW,YAAa,IAAK,KAAM,KAAM,IAAI,GAC1F11C,KAAKq6C,cAAclE,aAAa3J,IAAI,cAAe,OAEnDxsC,KAAKs6C,WAAa,IAAI,GAAet6C,KAAK01C,UAAW,aAAc,IAC/D,eAAgB,8BAChB,WAAW,GACf11C,KAAKs6C,WAAWnE,aAAa3J,IAAI,cAAe,OAEhD,IAAIxvB,EAAOhd,KACXA,KAAKs6C,WAAWzD,mBAAqB,CAAC2C,EAAkBe,KACpDv9B,EAAKw9B,mBAAmBhB,GACxBe,EAAoBf,EAAiB5I,iBAC9B,MAGX5wC,KAAKs6C,WAAW1B,eAAiB,CAAC6B,EAAiBF,KAC/Cv9B,EAAK09B,sBAAsBD,GAC3BF,KAGJv6C,KAAKs6C,WAAWhC,eAAiB,CAACmC,EAAiBE,KAC/C39B,EAAK49B,sBAAsBH,EAAiBE,GACrCA,GAGX36C,KAAKk6C,aAAalR,OAGf,SAC6B,MAA5BhpC,KAAKm6C,qBACLn6C,KAAKm6C,oBAAoBnR,OAE7BhpC,KAAKk6C,aAAarR,OAClB7oC,KAAKk6C,aAAa7+B,SAASoU,KAAK,uBAAuBuZ,OAGpD,UAC6B,MAA5BhpC,KAAKm6C,qBACLn6C,KAAKm6C,oBAAoBtR,OAE7B7oC,KAAKk6C,aAAalR,OAClBhpC,KAAKk6C,aAAa7+B,SAASoU,KAAK,uBAAuBoZ,OAG3D,SAAS7qB,EAAyB7U,EAC9B0xC,EAAgBC,EAAoBn9B,GAEpC,GAAkC,MAA9BK,EAAetmB,OAAOioC,KAAc,OAExC,IAAIob,EAAgC,GAGhCr9B,EADSM,EAAetmB,OACHsjD,0BAA0B7xC,EAAaC,KAAMD,EAAaE,QAE/E4xC,EAAsBj7C,KAAKo6C,qBAE/Bp6C,KAAKo6C,qBAAuB,GAC5B,IAAIc,EAAgBl7C,KAAKq6C,cAAclE,aAEnC56B,EAAKmC,EAET,GAAuB,MAAnBnC,EAAGH,aAAsB,CAEzB,IAAI/hB,EAASwhD,EAAMC,GAEnB,GAAIG,EAAoBj5C,OAAS,GAAKi5C,EAAoB,GAAGriD,OAASS,GAA6C,MAAnC4hD,EAAoB,GAAGx/B,SAEnGzb,KAAKo6C,qBAAqBr2C,KAAKk3C,EAAoB,IACnDF,EAAeh3C,KAAK/D,KAAKo6C,qBAAqB,GAAG3I,iBAAiB,QAC/D,CAEH,IAAI0J,EAAc5/B,EAAGH,wBAAwB,EAAeG,EAAGH,aAAarhB,WAAa,OACrFq4C,EAAsB,IAAI,GAAgB,KAAM,KAAM+I,EAAY9hD,EAAQkiB,EAAGH,aAAc,MAC/Fpb,KAAKo6C,qBAAqBr2C,KAAKquC,IASvC,IAAIgJ,EAAyD,GAG7D,KAAa,MAAN7/B,GAEHA,EAAGJ,YAAYpM,QAAQ,CAAC0M,EAAU1hB,KAG9B,GAAgD,MAA5CqhD,EAAoB3/B,EAAS1hB,YAAqB,CAIlD,IAAIq4C,EAFJgJ,EAAoB3/B,EAAS1hB,aAAc,EAK3C,IAAK,IAAIshD,KAASJ,EACVI,EAAM5/B,UAAYA,IAClB22B,EAAKiJ,EACLN,EAAeh3C,KAAKquC,EAAGX,iBAAiB,IAExB,MAAZW,EAAGx5C,OAAgC,MAAfw5C,EAAG32B,WACvB22B,EAAGx5C,MAAQiiD,EAAMC,EAAa1I,EAAG32B,SAASC,YAOtD,GAAU,MAAN02B,EAAY,CACZ,IAAIx5C,EAAQiiD,EAAMC,EAAar/B,EAASC,UACxC02B,EAAK,IAAI,GAAgB,KAAM,KAAMr4C,EAAYnB,EAAO6iB,EAASrb,KAAMqb,GAG3Ezb,KAAKo6C,qBAAqBr2C,KAAKquC,KAIpCpyC,MAGHub,EAAKA,EAAGF,OAIZ,GAAgC,MAA5BqC,EAAYtC,aACZ,IAAK,IAAIrhB,KAAc4jB,EAAM,CAEzB,IAAIlC,EAAWkC,EAAK5jB,GAEpB,GAAgD,GAA5CqhD,EAAoB3/B,EAAS1hB,YAAqB,CAIlD,IAAIq4C,EAFJgJ,EAAoB3/B,EAAS1hB,aAAc,EAI3C,IAAK,IAAIshD,KAASJ,EACVI,EAAM5/B,UAAYA,IAClB22B,EAAKiJ,EACLN,EAAeh3C,KAAKquC,EAAGX,iBAAiB,IAExCW,EAAGx5C,MAAQw5C,EAAG32B,SAAS7iB,OAK/B,GAAU,MAANw5C,EAAY,CACZ,IAAIx5C,EAAQ6iB,EAAS7iB,MACrBw5C,EAAK,IAAI,GAAgB,KAAM,KAAMr4C,EAAYnB,EAAO6iB,EAASrb,KAAMqb,GAG3Ezb,KAAKo6C,qBAAqBr2C,KAAKquC,IAO3C,IAAK,IAAIK,KAASyI,EAAc5J,WACtByJ,EAAep2C,QAAQ8tC,IAAU,GACnCA,EAAM9N,SAKd,IAAK,IAAIyN,KAAMpyC,KAAKo6C,qBAEG,MAAfhI,EAAG32B,WACyB,MAAxB22B,EAAG32B,SAASC,SACZ02B,EAAGx5C,MAAQiiD,EAAMC,EAAa1I,EAAG32B,SAASC,UAE1C02B,EAAGx5C,MAAQw5C,EAAG32B,SAAS7iB,OAI/Bw5C,EAAGC,SAIC0I,EAAep2C,QAAQytC,EAAGX,iBAAiB,IAAM,GACjDyJ,EAAcxT,OAAO0K,EAAGX,kBAIhCzxC,KAAKs7C,gBAAkB59B,EAGvB1d,KAAKu7C,6BAIT,sBAAsBC,EAAgCb,GAClDa,EAAejC,WAAaoB,EAE5B5yC,OAAOsP,OAAOyiC,SAASa,EAAS,SAAU,CAAEZ,QAAS,IAAKC,KAAMvxC,IAE5D,IAAIwvC,EAAOuD,EAAehC,iBAAiB9B,eAAejoB,KAAK,gBAC/DhnB,EAAU,sCAAwCA,EAAU,UAC5DwvC,EAAKzF,KAAK/pC,GACVwvC,EAAKjM,KAAK,QAASwP,EAAejC,cAIlCv5C,KAAKszB,KAAK+M,iBAAiBob,OAASC,GAAiBC,QACrDH,EAAe5B,WAMvB,sBAAsBa,IAItB,mBAAmBjB,GAEfA,EAAiB1C,gBAAkB1O,OAAO,eAC1C,IAAIwT,EAA0BpC,EAAiB9B,eAAer8B,SAASoU,KAAK,qBAAqBgH,QAE7FolB,EAAK,IAAIvC,GAAeE,EAAiBthD,KAAMshD,EAC/Cx5C,KAAKszB,KAAMkmB,EAAiB1C,gBAAiB8E,GAEjDpC,EAAiB5I,gBAAkBiL,EAEnC9zC,OAAOsP,OAAOyiC,SAASN,EAAiBthD,KAAM,SAAU,CAAE6hD,QAAS,IAAKC,KAAMvxC,IAE1E,IAAIwvC,EAAOuB,EAAiB9B,eAAejoB,KAAK,gBAChDhnB,EAAU,sCAAwCA,EAAU,UAC5DwvC,EAAKzF,KAAK/pC,GACVwvC,EAAKjM,KAAK,QAASwN,EAAiB5I,gBAAgB2I,cAIxDsC,EAAGjC,WAIP,6BAEI,IAAK,IAAI7I,KAAM/wC,KAAKs6C,WAAWtE,SAAU,CACZjF,EAAGH,gBACzBgJ,aC5PT,MAAO,GAQT,YAAoBtmB,GAAA,KAAAA,OAChBtzB,KAAKyd,YAAc,IAAI,GAAYzd,KAAKszB,MAAM,GAC9CtzB,KAAK2iC,MAAQ,IAAI,EACjB3iC,KAAKqjC,OAAS,IAAI,GAAO,GACzBrjC,KAAKiE,cAAgB,IAAI,EACzBjE,KAAKtI,OAAS,IAAI,GAAO,KAAM47B,GAGnC,QAAQwoB,EAAcr+B,EAA0BE,EAAYD,GAExD,IAAI8kB,EAAKC,YAAYC,MAEjBpvB,EAAkB,GAEtBtT,KAAKtI,OAAOmrC,QACO,MAAfnlB,GACAA,EAAc,IAAI,EAAY,KAAM,CAAErU,OAAQ,EAAGD,KAAM,EAAGpH,OAAQ,GAAK,CAAEqH,OAAQ,EAAGD,KAAM,IAAKpH,OAAQ,KAC3FiZ,qBAAsB,EAElCyC,EAAcA,EAAYq+B,eAI9B,IAAIjZ,EAAQ9iC,KAAK2iC,MAAMlrB,IAAIqkC,GAC3BxoC,EAASwvB,EAAMxvB,OACftT,KAAKtI,OAAOqb,UAAY+vB,EAAMzvB,OAIT,IAAI,GAAO,GACzBgoB,MAAMr7B,KAAKtI,QAClB4b,EAASA,EAAO/L,OAAOvH,KAAKtI,OAAO4b,OAAO,IAI1C,IAAK,IAAI0kB,KAAYh4B,KAAKtI,OAAOg7B,UAC7B,GAA6B,MAAzBsF,EAASlZ,aAAsB,CAC/B,IAAIk9B,EAAwBv+B,EAAYF,QAAQya,EAASj+B,YAC5B,MAAzBiiD,EACA1oC,EAAOvP,KAAK,CACRgR,KAAM,gBAAkBijB,EAASj+B,WAAa,sBAC9CiK,SAAUg0B,EAASh0B,SACnBiR,MAAO,UAGX+iB,EAASlZ,aAAesiB,GAAa4a,EAAsB57C,KAAM43B,EAASC,gBAStF,IAAIgkB,EAAsBj8C,KAAKiE,cAC1Bi4C,sBAAsBl8C,KAAKtI,OAAQ+lB,EAAaC,EAAaC,GAKlE,GAJArK,EAASA,EAAO/L,OAAO00C,GAIF,GAAjB3oC,EAAOtR,OAAa,CAEpB,IAAIoC,EAAapE,KAAKtI,OAAO8mB,YAAYpa,WACzC,IAAK,IAAIqhB,KAAarhB,EAClBqhB,EAAUnhB,cAAe,EAGzBF,EAAWpC,OAAS,GAAKoC,EAAWA,EAAWpC,OAAS,GAAG5B,MAAQzG,EAAU+mB,YAC7Etc,EAAW8S,OAAO9S,EAAWpC,OAAS,EAAG,GAKjD,IAAIgiC,EAAKvB,YAAYC,MAAQF,EAG7B,OAFAwB,EAAKz4B,KAAK04B,MAAW,IAALD,GAAY,IAErB,CACHtiC,QAAS1B,KAAKtI,OAAO8mB,YACrBlL,OAAQA,EACRoK,YAAaA,IClGnB,MAAO,GAKT,YAAoBywB,EAA8B7a,GAA9B,KAAA6a,YAA8B,KAAA7a,OAH1C,KAAA6oB,WAAgD,IAAIr8C,IAIxDE,KAAKo8C,SAAW,IAAI,GAAc9oB,GAGtC,QAAQimB,EAAoB77B,GAExB,GAAkB,MAAfA,EAAqB,OAExB,IAAI2+B,EAAUr8C,KAAKm8C,WAAW3jD,IAAI+gD,GAClC,GAAc,MAAX8C,EAAgB,CACf,IAAI36C,EAAU26C,EAAQ7jD,IAAIklB,EAAY7b,IACtC,GAAc,MAAXH,EACC,MAAO,CAACsJ,MAAO,KAAMtJ,QAASA,QAGlC26C,EAAU,IAAIv8C,IACdE,KAAKm8C,WAAW94C,IAAIk2C,EAAY8C,GAGpC,IAAI5+B,EAAczd,KAAKmuC,UAAU1wB,YAC7BE,EAAa3d,KAAKszB,KAAK+M,iBAAiB1iB,KAE5C,GAAI47B,EAAWv3C,OAAS,GAAoB,MAAfyb,EAAqB,CAE9C,IAAI6+B,EAAct8C,KAAKo8C,SAASG,QAAQhD,EAAY97B,EAAaE,EAAMD,GAEvE,OAAI4+B,EAAYhpC,OAAOtR,OAAS,EACrB,CAAEgJ,MAAOsxC,EAAYhpC,OAAO,GAAGyB,KAAMrT,QAAS,OAGrD26C,EAAQh5C,IAAIqa,EAAY7b,GAAIy6C,EAAY56C,SAEjC,CAACsJ,MAAO,KAAMtJ,QAAS46C,EAAY56C,UAI9C,MAAO,CAACsJ,MAAO,kBAAmBtJ,QAAS,MAInD,SAAS63C,EAAoB77B,GAEP,MAAfA,IAAqBA,EAAc1d,KAAKszB,KAAKkpB,cAAclB,iBAE9D,IAAItjD,EAAIgI,KAAKu8C,QAAQhD,EAAY77B,GAEjC,OAAe,OAAZ1lB,aAAC,EAADA,EAAGgT,OACK,CAAEA,MAAOhT,EAAEgT,MAAOpS,MAAO,MAG5B,MAALZ,EACQ,CAAEgT,MAAO,0BAA2BpS,MAAO,MAGpCoH,KAAKszB,KAAK+M,iBAETuZ,SAAS5hD,EAAE0J,UC7DhC,MAAO,GAsBT,YAAYxJ,EAAsBo7B,EAAgBsa,GAAhB,KAAAta,OANlC,KAAAia,OAAiB,EAObvtC,KAAK9H,KAAOA,EACZ8H,KAAK4tC,SAAWA,EAChB5tC,KAAKyd,YAAc,IAAI,GAAY6V,GACnCtzB,KAAK25C,UAAY,IAAI,GAAU35C,KAAMszB,GAGzC,iBAAiBmpB,GACb,IAAItN,EAAoB,CACpBj3C,KAAM8H,KAAK9H,KACX2J,GAAI7B,KAAK6B,GACT+rC,SAAU5tC,KAAK4tC,SACf8O,cAA2C,MAA5B18C,KAAK28C,oBAA8B,KAAO38C,KAAK28C,oBAAoBhd,KAAK99B,GACvF8rC,MAAO,GACPqC,QAAShwC,KAAKgwC,QACdpB,cAAe5uC,KAAK4uC,cACpBC,mCAAoC7uC,KAAK6uC,oCAG7C,GAAG4N,EACC,IAAI,IAAI1kD,KAAKiI,KAAKyd,YAAY2F,YAAW,GAErC+rB,EAAGxB,MAAM5pC,KAAKhM,EAAE01C,YAAYztC,OAKpC,OAAOmvC,EAIX,wBAAwB+B,G,MACpB,IAAI0L,EAAyC,QAA/B,EAAG1L,aAAY,EAAZA,EAAcwG,sBAAc,eAAEjoB,KAAK,kCACpD,GAAkB,MAAdmtB,EAAoB,OAExB,IACIC,EAAqB78C,KAAKszB,KAE9B,GAA0B,MAAtBtzB,KAAK4uC,eAAyB5uC,KAAK4tC,UAAYiP,EAAOzQ,KAAKvqC,GAAI,CAC/D,IAAIi7C,EAAU1U,OAAO,2HACrBwU,EAAWlV,OAAOoV,GAClB,IAAI9/B,EAAOhd,KACX88C,EAAQ5S,GAAG,YAActzB,GAAMA,EAAEo7B,mBACjC8K,EAAQ5S,GAAG,QAAUtzB,IACjBA,EAAEo7B,kBAEFh1B,EAAK+/B,mCAKTH,EAAWntB,KAAK,mBAAmBkV,SAI3C,4BACI,IAAIkY,EAAqB78C,KAAKszB,KACL,MAAtBtzB,KAAK4uC,eAAyB5uC,KAAK4tC,UAAYiP,EAAOzQ,KAAKvqC,IAC1Dg7C,EAAOG,eAAe1Q,YAAY,KAC9BuQ,EAAOI,uBAAuBC,yBAAyBl9C,QACxD,GAIW,uBAACqtC,EAAmB/Z,GAEtC,IAAI0a,EAAI,IAAI,GAAUX,EAAGn1C,KAAMo7B,EAAM+Z,EAAGO,UACxCI,EAAEnsC,GAAKwrC,EAAGxrC,GACVmsC,EAAEJ,SAAWP,EAAGO,SAChBI,EAAEgC,QAAU3C,EAAG2C,QACfhC,EAAEY,cAAgBvB,EAAGuB,cACrBZ,EAAEa,mCAAqCxB,EAAGwB,mCAE1C,IAAI,IAAImC,KAAK3D,EAAGM,MAAM,CAElB,IAAI51C,EAAY,GAAOolD,gBAAgBnM,EAAG1d,GAC1C0a,EAAEvwB,YAAY2zB,UAAUr5C,GAErBi5C,EAAEnvC,IAAMwrC,EAAGqP,gBACV1O,EAAE2O,oBAAsB5kD,GAKhC,OAAOi2C,EAIX,YAEI,OAAOhuC,KAAKyd,YAAYgmB,YAI5B,uBAAuBrtB,GACnB,IAAI,IAAIre,KAAKiI,KAAKyd,YAAY2F,YAAW,GACrC,GAAGrrB,EAAEqe,OAASA,EACV,OAAOre,EAIf,OAAO,MC5HT,MAAOqlD,GAuFS,cAEd,IAAI,IAAIC,KAASD,GAAWE,OACxBD,EAAME,OAAS,IAAIC,KAAK,CAACC,IAAK,CAACJ,EAAM3S,KAAMgT,SAAS,IACpDN,GAAWO,SAASt6C,IAAIg6C,EAAMnlD,KAAMmlD,GAK1B,YAACnlD,GACf,IAAIqjB,EAAgB6hC,GAAWO,SAASnlD,IAAIN,GACnC,MAANqjB,GACCA,EAAGgiC,OAAOK,QAjGX,GAAAN,OAAsB,CACzB,CACI5S,IAAK,8CACLxyC,KAAM,+BACNiI,YAAa,8CAEjB,CACIuqC,IAAK,kCACLxyC,KAAM,mBACNiI,YAAa,kBAEjB,CACIuqC,IAAK,0BACLxyC,KAAM,WACNiI,YAAa,+BAEjB,CACIuqC,IAAK,6BACLxyC,KAAM,cACNiI,YAAa,2BAEjB,CACIuqC,IAAK,+BACLxyC,KAAM,gBACNiI,YAAa,mBAEjB,CACIuqC,IAAK,6BACLxyC,KAAM,cACNiI,YAAa,4CAEjB,CACIuqC,IAAK,4BACLxyC,KAAM,aACNiI,YAAa,+CAEjB,CACIuqC,IAAK,8BACLxyC,KAAM,eACNiI,YAAa,iBAEjB,CACIuqC,IAAK,yBACLxyC,KAAM,UACNiI,YAAa,+BAEjB,CACIuqC,IAAK,+BACLxyC,KAAM,gBACNiI,YAAa,sCAEjB,CACIuqC,IAAK,uBACLxyC,KAAM,QACNiI,YAAa,kBAEjB,CACIuqC,IAAK,6BACLxyC,KAAM,cACNiI,YAAa,qBAEjB,CACIuqC,IAAK,sBACLxyC,KAAM,OACNiI,YAAa,eAEjB,CACIuqC,IAAK,yBACLxyC,KAAM,UACNiI,YAAa,sDAEjB,CACIuqC,IAAK,yBACLxyC,KAAM,SACNiI,YAAa,mBAEjB,CACIuqC,IAAK,yBACLxyC,KAAM,SACNiI,YAAa,mBAId,GAAAw9C,SAAmC,IAAI79C,IC5E5C,MAAO,GAQT,YAAoB+9C,EAA2CvqB,GAA3C,KAAAuqB,eAA2C,KAAAvqB,OAN/D,KAAAwqB,QAAuD,GAEvD,KAAAC,WAA+C,GAE/C,KAAAC,QAAiE,GAM1D,OAEH,IAAIvH,EAAuBz2C,KAAK69C,aAEjB,MAAZpH,IAAkBA,EAAWrO,OAAO3tB,WAEvC,IAAIuC,EAAOhd,KACXy2C,EAASvM,GAAG,WAAW,SAAU2H,GACjB,MAATA,GACH70B,EAAKihC,oBAAoBpM,MAKjC,QAAQqM,GACJ,IAAInN,EAAK/wC,KAAK89C,QAAQI,GACb,MAANnN,GACCA,EAAGoN,OAAOD,EAAkB,KAAM,IAKnC,eAAenkD,EAAoB4gB,EAAgBwjC,EAAgBppC,EAAe,GAAIsiC,GACzF,IAAItG,EAAkB,CAClBoN,OAAQA,EACRpkD,WAAYA,EACZ4gB,KAAMA,EACN5F,KAAMA,EACNqpC,QAAQ,GAGZp+C,KAAK89C,QAAQ/jD,GAAcg3C,EAE3B,IAAI,IAAI73C,KAAOyhB,EAC8B,MAAtC3a,KAAK+9C,WAAW7kD,EAAIqW,iBACnBvP,KAAK+9C,WAAW7kD,EAAIqW,eAAiB,IAEzCvP,KAAK+9C,WAAW7kD,EAAIqW,eAAexL,KAAKgtC,GAG5C,GAAa,MAAVsG,EAAe,CACiB,MAA5Br3C,KAAKg+C,QAAQjkD,KACZiG,KAAKg+C,QAAQjkD,GAAc,IAE/BiG,KAAKg+C,QAAQjkD,GAAYgK,KAAKszC,GAE9B,IAAIx+C,EAAIkc,EACL4F,EAAK3Y,OAAS,IACbnJ,GAAK,KAAO8hB,EAAK7X,KAAK,MAAQ,KAGlCu0C,EAAOrL,KAAK,QAASnzC,GAErBw+C,EAAOnN,GAAG,YAAa,KAChB6G,EAAGqN,QACFD,EAAOpkD,EAAY,KAAM,aAEZ,qBAAdA,GAAqCiG,KAAKszB,KAAK+qB,cAC9CjB,GAAWkB,UAQpB,SAASJ,GAEZ,IAAInN,EAAkB/wC,KAAK89C,QAAQI,GAEnC,OAAS,MAANnN,GAEIA,EAAGqN,OAIP,UAAUF,EAA0BE,GACvC,IAAIrN,EAAkB/wC,KAAK89C,QAAQI,GAE1B,MAANnN,IACCA,EAAGqN,OAASA,GAGhB,IAAIJ,EAAUh+C,KAAKg+C,QAAQE,GAC3B,GAAc,MAAXF,EACC,IAAI,IAAI3G,KAAU2G,EACXI,EACC/G,EAAOvO,SAAS,aAEhBuO,EAAOtO,YAAY,aAO5B,oBAAoB8I,GAEvB,GAAmD,SAAhDp3B,SAAS8jC,cAAcC,QAAQjvC,cAC9B,OAGJ,GAAIsiC,EAAM4M,SAAW,IAAM5M,EAAM4M,SAAW,GACxC,OAGJ,IAAIvlD,EAAc,GAEd24C,EAAM6M,UACNxlD,GAAO,SAGP24C,EAAM8M,WACNzlD,GAAO,UAGP24C,EAAM+M,SACN1lD,GAAO,QAGK,MAAb24C,EAAM34C,MACLA,GAAO24C,EAAM34C,IAAIqW,eAGrB,IAAIsvC,EAAgB7+C,KAAK+9C,WAAW7kD,GAEpC,GAAoB,MAAjB2lD,EACC,IAAI,IAAIC,KAAeD,EACnB,GAAIC,EAAYV,OAAQ,CACpBvM,EAAMG,kBACNH,EAAM4G,iBACNqG,EAAYX,OAAOW,EAAY/kD,WAAY,KAAMb,GACjD,QCnJd,MAAO,GAMT,YAAoBo6B,EAAwByrB,GAAxB,KAAAzrB,OAAwB,KAAAyrB,aACxC/+C,KAAKg/C,UAAYh/C,KAAK++C,WAAWtvB,KAAK,yBAI1C,SAASprB,GAEL,IAAIrE,KAAKg/C,UAAUzH,SAAS,aAAc,OAE1Bv3C,KAAK++C,WAAWtvB,KAAK,yBAC3BA,KAAK,OAAOsZ,YAAY,2BAClC,IAAIkP,EAA2B5zC,EAAI,KACnC,GAAW,MAAR4zC,EAAa,CACZA,EAAKnP,SAAS,2BACd,IAAI31B,EAAM8kC,EAAKj0C,WAAWwwC,IAAMx0C,KAAKg/C,UAAUvW,YAC/Ct1B,GAAOnT,KAAKg/C,UAAUxL,SAAS,EAC/BxzC,KAAKg/C,UAAUvW,UAAUt1B,IAMjC,UACInT,KAAKg/C,UAAU9U,GAAG,SAAU,KACxBlqC,KAAKszB,KAAK2rB,iBAKlB,uBAAuB9Q,EAAsBp2C,GAEzC,GAAQ,MAALA,EAAW,OAEd,IAAIiI,KAAKg/C,UAAUzH,SAAS,aAAc,OAE1C,IAAI2H,EAASl/C,KAAK++C,WAAWtvB,KAAK,yBAElCyvB,EAAO1M,KAAK,IACZ0M,EAAOxX,OAAO1nC,KAAKm/C,YAAYpnD,IAEf,MAAbo2C,GAAkD,MAA7BA,EAAUhK,iBAC9B+a,EAAOvI,QAAQ,QAAUxI,EAAUhK,gBAAkB,UAIzD+a,EAAOzvB,KAAK,yBAAyBya,GAAG,QAAUrtB,IAC9C,IAAI5X,EAAOmjC,OAAOvrB,EAAGu4B,QAAQnK,KAAK,eAIlC,GAHW,MAARhmC,IACCA,EAAOmjC,OAAOvrB,EAAGu4B,QAAQ/5B,SAAS4vB,KAAK,gBAEhC,MAARhmC,EAAa,CACAjF,KAAKg/C,UAAUvvB,KAAK,IAAMxqB,GAChC,GAAGslC,oBAOrB,YAAYxyC,GAER,GAAS,MAALA,EACA,MAAO,CAACqwC,OAAO,gBAGnB,IAAI1uC,EAA2B,GAO/B,GALqB,MAAjB3B,EAAEymB,cACF9kB,EAAEqK,KAAKqkC,OAAO,4BACd1uC,EAAIA,EAAE6N,OAAOvH,KAAKupB,MAAMxxB,EAAEymB,YAAYpa,cAGvB,MAAfrM,EAAEulB,WAA6C,MAAxBvlB,EAAEulB,UAAU+F,SAEnC,IAAK,IAAIrrB,KAAKD,EAAEulB,UAAU+F,SACtB,GAAIrrB,aAAa,EAAO,CACpB0B,EAAEqK,KAAKqkC,OAAO,aAAepwC,EAAE+B,WAAa,WAEzC/B,EAAEoO,+BAA+BhC,WAAWpC,OAAS,IACpDtI,EAAEqK,KAAKqkC,OAAO,uCACd1uC,EAAIA,EAAE6N,OAAOvH,KAAKupB,MAAMvxB,EAAEoO,+BAA+BhC,cAG7D,IAAK,IAAIrM,KAAKC,EAAE+N,QACK,MAAbhO,EAAE2J,UACFhI,EAAEqK,KAAKqkC,OAAO,cAAgBrwC,EAAE6J,UAAY,WAC5ClI,EAAIA,EAAE6N,OAAOvH,KAAKupB,MAAMxxB,EAAE2J,QAAQ0C,cAG1C,IAAK,IAAIrM,KAAKC,EAAEmO,YAAYJ,QACP,MAAbhO,EAAE2J,UACFhI,EAAEqK,KAAKqkC,OAAO,qBAAuBrwC,EAAE6J,UAAY,WACnDlI,EAAIA,EAAE6N,OAAOvH,KAAKupB,MAAMxxB,EAAE2J,QAAQ0C,cAQtD,OAAO1K,EAIX,MAAM0K,EAAyB2uC,EAAiB,IAE5C,IAAIqM,EAA6B,IAAIt/C,IACjCu/C,EAA0B,EAE9B,IAAI,IAAI55B,KAAarhB,EAAW,CAC5B,GAAGqhB,EAAUrlB,MAAQzG,EAAUgsB,YAAcF,EAAUrlB,MAAQzG,EAAU2sB,aACrEb,EAAUrlB,MAAQzG,EAAU0sB,YAAcZ,EAAUrlB,MAAQzG,EAAU4sB,4BACtEd,EAAUrlB,MAAQzG,EAAU6sB,2BAA6Bf,EAAUrlB,MAAOzG,EAAUw0B,yCAA0C,CAC9H,IAAIlpB,EAAOwgB,EAAUvgB,YAET,MADAk6C,EAAO5mD,IAAIyM,IAEnBm6C,EAAO/7C,IAAI4B,EAAM,CACbq6C,OAAQD,MAIpB,GAAG55B,EAAUrlB,MAAQzG,EAAU8B,cAAc,CACzC,IAAI,IAAI7C,KAAS6sB,EAAUngB,eAAe,CACtC,IAAIL,EAAOwgB,EAAUngB,eAAe1M,GAExB,MADAwmD,EAAO5mD,IAAIyM,IAEnBm6C,EAAO/7C,IAAI4B,EAAM,CACbq6C,OAAQD,MAIpB,GAAmC,MAAhC55B,EAAUjgB,mBAA2B,CAExB,MADA45C,EAAO5mD,IAAIitB,EAAUjgB,qBAE7B45C,EAAO/7C,IAAIoiB,EAAUjgB,mBAAoB,CACrC85C,OAAQD,QAO5B,IAAI3lD,EAA2B,GAC3B/B,EAAI,EAER,IAAK,IAAI8tB,KAAarhB,EAClB1K,EAAEqK,KAAK/D,KAAKu/C,UAAU95B,EAAWstB,EAAQp7C,EAAGynD,IAC5CznD,IAGJ,OAAO+B,EAGX,UAAU2K,EAAiB0uC,EAAgB35C,EAAWgmD,GAElD,IAAI1lD,EAAIq5C,EAEJ5wC,EAAQi9C,EAAO5mD,IAAIY,GACX,MAAT+I,IACCzI,GAAK,+CAAiDyI,EAAMm9C,OAAS,2CAA6Cn9C,EAAMm9C,OAAS,uBAGhH,MAAjBj7C,EAAKL,SACLtK,GAAK,KAAOsG,KAAKw/C,QAAQn7C,EAAKL,SAASoF,MAAQ,WAAapJ,KAAKw/C,QAAQn7C,EAAKL,SAASqF,QAAU,MAEjG3P,GAAK,iCAGTA,GAAK,kDAAoDC,EAAU0K,EAAKjE,MAAQ,gBAEhF,IAAIyO,EAAa,GACjB,OAAQxK,EAAKjE,MACT,KAAKzG,EAAU6uB,yBAGf,KAAK7uB,EAAUixB,wBACX/b,GAAM,MAAQ7O,KAAKy/C,cAAcp7C,EAAKoX,UAAY,+BAAiCpX,EAAKwmB,kCACxF,MACJ,KAAKlxB,EAAUq0B,yBACXnf,GAAM,aAAexK,EAAK+oB,mBAC1B,MACJ,KAAKzzB,EAAU42B,oBACX1hB,GAAM,MAAQxK,EAAKtK,WACvB,MACA,KAAKJ,EAAU6pB,cACX3U,GAAM,eAAiBxK,EAAKkf,oBAAsB,sBAAwBlf,EAAKof,cAC/E,MACJ,KAAK9pB,EAAUmE,WACf,KAAKnE,EAAUoE,eACf,KAAKpE,EAAUqE,gBACf,KAAKrE,EAAUsE,yBACf,KAAKtE,EAAUuE,mBACX2Q,GAAM,mBAAqB/U,EAAkBuK,EAAKjE,MAAQ,eACvDiE,EAAKjE,MAAQzG,EAAUmE,aACtB+Q,GAAM,wBAA0BxK,EAAKwf,mBAGzC,MACJ,KAAKlqB,EAAUorB,SACf,KAAKprB,EAAUwtB,QACXtY,GAAM,aAAe/U,EAAkBuK,EAAK2gB,UAC5C,MACJ,KAAKrrB,EAAU0tB,aACXxY,GAAM,UAAYxK,EAAKzL,MACvB,MACJ,KAAKe,EAAUi3B,sBACX/hB,GAAM,iBAAmBxK,EAAKtB,MAAMhJ,WACpC,MACJ,KAAKJ,EAAUwnB,UACXtS,GAAM,aAAexK,EAAK+c,QAAQrnB,WAClC,MACJ,KAAKJ,EAAU8tB,mBACX,MACJ,KAAK9tB,EAAU2nB,WACXzS,GAAMxK,EAAK1C,OAAO5H,WAClB8U,GAAM,sBAAwBxK,EAAKmd,gBACnC,MACJ,KAAK7nB,EAAUsqB,qBACXpV,GAAM,UAAYxK,EAAKihB,SACvB,MACJ,KAAK3rB,EAAUkgB,OACXhL,GAAM,oCAAsCxK,EAAKyb,gCACjD,MACJ,KAAKnmB,EAAUw0B,yCACf,KAAKx0B,EAAUgsB,WACf,KAAKhsB,EAAU2sB,YACf,KAAK3sB,EAAU0sB,WACf,KAAK1sB,EAAU4sB,2BACf,KAAK5sB,EAAU6sB,0BACX,IAAI84B,EAAiBF,EAAO5mD,IAAI6L,EAAKa,aAAao6C,OAClDzwC,GAAM,oGAAsGywC,EAAS,2CAA6CA,EAAS,iBAC3K,MACJ,KAAK3lD,EAAU+tB,yBACf,KAAK/tB,EAAUguB,wBACX9Y,GAAM,WAAaxK,EAAK8rB,qBACxB,MACJ,KAAKx2B,EAAUuwB,WACXrb,GAAM,SAAWxK,EAAK2lB,UAAUjwB,WAChC,MACJ,KAAKJ,EAAU2wB,WACXzb,GAAM,UAAYxK,EAAKkmB,sBACvB,MACJ,KAAK5wB,EAAUowB,eACXlb,GAAM,SAAWxK,EAAK2lB,UAAUjwB,WAChC8U,GAAM,gBAAkBxK,EAAKulB,UAC7B,MACJ,KAAKjwB,EAAU8B,cACXoT,GAAM,oBACN,IAAI,IAAI3V,KAAOmL,EAAKiB,eAAe,CAC/B,IAAIg6C,EAAiBF,EAAO5mD,IAAI6L,EAAKiB,eAAepM,IAAMomD,OAC1DzwC,GAAM3V,EAAM,yFAA2FomD,EAAS,2CAA6CA,EAAvJpmD,mBAMV,GAHG2V,EAAGW,SAAS,QAAOX,EAAKA,EAAGe,UAAU,EAAGf,EAAG7M,OAAS,IAEvD6M,GAAM,IACwB,MAA3BxK,EAAKmB,mBAA2B,CAC/B,IAAI85C,EAASF,EAAO5mD,IAAI6L,EAAKmB,oBAAoB85C,OACjDzwC,GAAM,6GAA+GywC,EAAS,2CAA6CA,EAAS,iBAExL,MACJ,KAAK3lD,EAAU2pB,oBACM,MAAdjf,EAAKtB,QACR8L,GAAM,UAAYxK,EAAKtB,MAAMhJ,WAAa,gBAAkBsK,EAAKkf,qBACjE,MACJ,KAAK5pB,EAAUouB,UACXlZ,GAAM,UAAYxK,EAAKnB,MAAMnJ,WAK5B,IAAN8U,IAAUnV,GAAK,KAAKmV,MAEE,GAArBxK,EAAKC,eACL5K,GAAK,MAGTA,EAAI,QAAUA,EAAI,SAElB,IAAIu+C,EAAO7P,OAAO1uC,GAIlB,OAFA2K,EAAI,KAAW4zC,EAERA,EAGX,cAAcz0C,GACV,OAAOA,EAAEpD,KAAKrG,WAAa,IAAMyJ,EAAEzJ,YAA4B,MAAdyJ,EAAEkY,SAAmB,GAAI,SAAWlY,EAAEkY,SAAW,KAGtG,QAAQtiB,GACJ,OAAGA,GAAK,IAAY,GAAKA,EACtBA,GAAK,GAAW,SAAWA,EACvB,eAAiBA,GCjT1B,MAAO,GAgBT,YAAYi4C,EAAqCz4C,EAAcmB,EAAoBshB,EACvEqkC,EAAmCh2B,EAAgB,MAAnD,KAAAg2B,mBAAmC,KAAAh2B,QAR/C,KAAA6nB,QAAkB,EASdvxC,KAAKqxC,QAAUA,EACfrxC,KAAKqb,OAASA,EACA,MAAVA,GACAA,EAAOi2B,SAASvtC,KAAK/D,MAEzBA,KAAKpH,MAAQA,EAEboH,KAAKjG,WAAaA,EAElBiG,KAAKqyC,SAGT,WACI,OAAsB,MAAfryC,KAAKqb,OAAiB,EAAIrb,KAAKqb,OAAOm2B,WAAa,EAG9D,YAEI,OAA0B,GAAnBxxC,KAAKwxC,WAAkB,EAAI,GAGtC,SAEIxxC,KAAK2/C,cAAgBvX,OAAO,SAC5BpoC,KAAK2/C,cAAc7W,SAAS,mBAC5B9oC,KAAK2/C,cAAcnT,IAAI,cAAoBxsC,KAAK0xC,YAAc,MAE7C,MAAd1xC,KAAK0pB,OACJ1pB,KAAK2/C,cAAcnT,IAAI,mBAAoBxsC,KAAK0pB,OAGjD1pB,KAAK0/C,kBACJ1/C,KAAK2/C,cAAc7W,SAAS,iBAGhC,IAAI6I,EAAevJ,OAAO,sCAE1BpoC,KAAK2/C,cAAcjY,OAAOiK,GAGR,MAAd3xC,KAAKpH,OAAoC,MAAnBoH,KAAKpH,MAAMwH,OAAiBJ,KAAKpH,MAAMwH,gBAAgB,GAC5EJ,KAAKpH,MAAMwH,gBAAgB,KAAWJ,KAAKpH,MAAMwH,gBAAgB,IAAWJ,KAAKpH,MAAMwH,MAAQkL,GAC7FtL,KAAKpH,MAAMwH,gBAAgB,IAE9BJ,KAAK4xC,SAAU,EACf5xC,KAAK2/C,cAAc7W,SAAS,cAC5B9oC,KAAK2/C,cAAcjY,OAAOU,OAAO,4CAEjCpoC,KAAK2/C,cAAclwB,KAAK,mBAAmBya,GAAG,YAAc2H,IACtC,MAAd7xC,KAAKpH,OAAqC,MAApBoH,KAAKpH,MAAMA,OACZ,MAAjBoH,KAAKsxC,UACLtxC,KAAK8xC,iBAET9xC,KAAK2/C,cAAc5N,YAAY,eAC/B/xC,KAAKuxC,QAAUvxC,KAAKuxC,QAEpBvxC,KAAKsxC,SAAW,KAGpBO,EAAMG,qBAKS,MAAhBhyC,KAAKqxC,SAAsC,GAAnBrxC,KAAKwxC,YAC5BxxC,KAAK2/C,cAAc7W,SAAS,iBAIpC9oC,KAAKiyC,cAIT,iBAEIjyC,KAAKsxC,SAAW,GAEhB,IAAIlxC,EAAOJ,KAAKpH,MAAMwH,KAEtB,GAAIA,aAAgB,EAEhB,IAAK,IAAI8G,KAAalH,KAAKpH,MAAMwH,KAAMyH,cAAcjO,EAAWwS,SAAU,CACtE,IAAI8lC,EAAoBlyC,KAAKpH,MAAMA,MAC/Bw5C,EAAK,IAAI,GAAa,KAAMF,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAEnN,WAAYiG,MAAM,GAC/EoyC,EAAGC,SACHryC,KAAK2/C,cAAclwB,KAAK,wBAAwBiY,OAAO0K,EAAGuN,oBAG3D,GAAIv/C,aAAgB,EAAW,CAElC,IAAI8G,EAAalH,KAAKpH,MAAMA,MAExB05C,EAAkBtyC,KAAK2/C,cAAclwB,KAAK,wBAC9C,IAAK,IAAI93B,EAAI,EAAGA,EAAIuP,EAAElF,QAAUrK,EAAI,IAAKA,IAAK,CAE1C,IAAIy6C,EAAK,IAAI,GAAa,KAAMlrC,EAAEvP,GAAI,IAAMA,EAAI,IAAKqI,MAAM,GAC3DoyC,EAAGC,SACHC,EAAgB5K,OAAO0K,EAAGuN,qBAI3B,GAAIv/C,aAAgB,EAAa,CAEpC,IAAIkyC,EAAkBtyC,KAAK2/C,cAAclwB,KAAK,wBAC9C,IAAK,IAAIvoB,KAAK9G,EAAKyH,cAAcjO,EAAWwS,SAAU,CAClD,IAAI8lC,EAAK9xC,EAAKqM,YACV2lC,EAAK,IAAI,GAAa,KAAMF,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAEnN,WAAYiG,MAAM,GAC/EoyC,EAAGC,SACHC,EAAgB5K,OAAO0K,EAAGuN,qBAG3B,GAAIv/C,aAAgB,EAEvB,GAAuB,MAApBJ,KAAKpH,MAAMA,OAAiBoH,KAAKpH,MAAMA,iBAAiB,EAAc,CAErE,IAAI05C,EAAkBtyC,KAAK2/C,cAAclwB,KAAK,wBAE1CyiB,EAAoBlyC,KAAKpH,MAAMA,MAEnC,IAAK,IAAIsO,KAAagrC,EAAGhvC,MAAO2E,cAAcjO,EAAWwS,SAAU,CAC/D,IAAIgmC,EAAK,IAAI,GAAa,KAAMF,EAAG7lC,SAASnF,EAAEnN,YAAamN,EAAEnN,WAAYiG,MAAM,GAC/EoyC,EAAGC,SACHC,EAAgB5K,OAAO0K,EAAGuN,qBAI9B3/C,KAAKsxC,SAOjB,cAEI,IAAIsO,EAAa5/C,KAAK2/C,cAAclwB,KAAK,mBAErCjsB,EAAIxD,KAAKpH,MAEb,GAAS,MAAL4K,EAAW,CACX,GAAmB,MAAhBxD,KAAKqxC,QACJ,GAA0B,iBAAhBrxC,KAAKqxC,QACXuO,EAAWlY,OAAOU,OAAO,8BAAgCpoC,KAAKqxC,QAAU,gBACrE,CACH,IAAIwO,EAAOzX,OAAO,sCAClByX,EAAKnY,OAAO1nC,KAAKqxC,SACjBuO,EAAWlY,OAAOmY,QAGtBD,EAAWlY,OAAOU,OAAO,+DAE7B,OAGJ,IAAI0X,EAAc,GAEdA,EADW,MAAXt8C,EAAE5K,MACY,OAEA4K,EAAEpD,KAAKkM,YAAY9I,EAAG,KAGlB,MAAnBxD,KAAKjG,YACJ6lD,EAAWlY,OAAOU,OAAO,iCAAmCpoC,KAAKjG,WAAa,mBAElF6lD,EAAWlY,OAAOU,OAAO,4BAA8B0X,EAAc,YAGzE,cACI9/C,KAAKpH,WAAQyP,EACbrI,KAAK2/C,cAAc5W,YAAY,cACT,GAAnB/oC,KAAKwxC,YAAmC,MAAhBxxC,KAAKqxC,SAC5BrxC,KAAK2/C,cAAc7W,SAAS,kBCxLlC,MAAO,GAkBT,YAAoBxV,EAAuByrB,GAAvB,KAAAzrB,OAAuB,KAAAyrB,aAf3C,KAAAgB,QAAoB,GACpB,KAAAC,WAAqB,EAGrB,KAAAC,SAAmB,EACnB,KAAAC,gBAA0B,EAI1B,KAAAC,eAAiC,GAEjC,KAAAC,gBAA4B,GAKP,MAAdrB,IAEH/+C,KAAKqgD,mBAAqBtB,EAAWtvB,KAAK,mCAC1CzvB,KAAKynC,YAAcsX,EAAWtvB,KAAK,4BAGvC,yBAEI,IAAIzS,EAAOhd,KAEPsgD,EAAgBtgD,KAAKqgD,mBAAmBhlC,SAASoU,KAAK,qBAE1DzvB,KAAKynC,YAAYyC,GAAG,SAAU,KAC1BoW,EAAczX,OACd7rB,EAAK3F,OAAOkpC,WAGhBvgD,KAAKynC,YAAYyC,GAAG,SAAU,KAC1BoW,EAActX,SAGlBsX,EAAcpW,GAAG,YAActzB,IAC3BA,EAAEo7B,kBACFh1B,EAAK6lB,UAKb,UAEI,GAAsB,MAAnB7iC,KAAK++C,WAAoB,OAE5B/+C,KAAKwgD,yBAEL,IAAIC,EAAazgD,KAAKynC,YAAYhY,KAAK,mBAEvCzvB,KAAKqX,OAAStP,OAAOsP,OAAOpe,OAAOwnD,EAAW,GAAI,CAC9C7nD,MAAO,CACH,IACFkK,KAAK,MACP49C,iBAAiB,EACjBC,oBAAqB,OACrBC,oBAAoB,EACpBC,mBAAoB,EACpBC,YAAa,MACbC,aAAa,EACbC,SAAS,EAETC,qBAAsB,EACtBC,oBAAqB,EACrBC,sBAAsB,EACtBC,SAAU,SAEVC,SAAU,GACVC,WAAY,cACZC,WAAY,MACZC,kBAAkB,EAClBC,sBAAsB,EACtBC,QAAS,CACLC,eAAe,EACfC,iCAAiC,GAErCC,QAAS,CACLxL,SAAS,GAEbyL,UAAW,CACPC,SAAU,SACVC,WAAY,UAEhB5nC,MAAO,sBAKXpa,KAAKqX,OAAOkpC,SAEZ,IAAIvjC,EAAOhd,KAEXA,KAAKqX,OAAO4qC,WAAWl6C,OAAOm6C,QAAQC,MAAO,KAIzC,GAFAnlC,EAAKolC,iBAEDplC,EAAKkjC,eAAgB,CACrB,IAAIz3C,EAAUuU,EAAK3F,OAAOgrC,WAAWh2C,SAAStE,OAAOsP,OAAOC,oBAAoBC,IAAI,GAEpF,GAAc,IAAX9O,EACC,OAGJuU,EAAK+iC,QAAQh8C,KAAK0E,GAClBuU,EAAKgjC,WAAa,EAElBhjC,EAAKslC,UAELtlC,EAAK3F,OAAO44B,SAAS,MAO1B,yBAEHjwC,KAAKqX,OAAO4qC,WAAWl6C,OAAOm6C,QAAQK,QAAS,KAE3C,IAAIC,EAAiBxlC,EAAK+iC,QAAQ/9C,QAAUgb,EAAKgjC,WAAa,GAC9D,GAAIwC,GAAkB,EAAG,CACrBxlC,EAAKgjC,aACL,IAAIjrC,EAAOiI,EAAK+iC,QAAQyC,GACxBxlC,EAAK3F,OAAO44B,SAASl7B,GACrBiI,EAAK3F,OAAOorC,YAAY,CACpBC,WAAY,EACZr5C,OAAQ0L,EAAK/S,OAAS,MAI/B,yBAEHhC,KAAKqX,OAAO4qC,WAAWl6C,OAAOm6C,QAAQS,UAAW,KAE7C,IAAIH,EAAiBxlC,EAAK+iC,QAAQ/9C,QAAUgb,EAAKgjC,WAAa,GAC9D,GAAIwC,GAAkBxlC,EAAK+iC,QAAQ/9C,OAAS,EAAG,CAC3Cgb,EAAKgjC,aACL,IAAIjrC,EAAOiI,EAAK+iC,QAAQyC,GACxBxlC,EAAK3F,OAAO44B,SAASl7B,GACrBiI,EAAK3F,OAAOorC,YAAY,CACpBC,WAAY,EACZr5C,OAAQ0L,EAAK/S,OAAS,SAG1Bgb,EAAK3F,OAAO44B,SAAS,IACrBjzB,EAAKgjC,WAAa,GAGvB,yBAEHhgD,KAAKo8C,SAAW,IAAI,GAAcp8C,KAAKszB,MAEvC,IAAIld,EAAQpW,KAAKqX,OAAOgrC,WACpBO,EAAgB,EAEpBxsC,EAAMysC,mBAAmB,KACrB,IAAIC,EAAY1sC,EAAM+5B,0BAElB2S,GAAaF,IACb5lC,EAAKijC,SAAU,EACf2C,EAAgBE,KAIxB9iD,KAAK+iD,aAEL/iD,KAAKqgD,mBAAmBnW,GAAG,YAAa,KACpC,GAAO8Y,WAAW,gBAAiBhjD,KAAKszB,MAExCqV,WAAW,KACP3rB,EAAK3F,OAAO+yB,SACb,OAKX,aACIpqC,KAAKijD,YAEL,IAAIjmC,EAAOhd,KACXA,KAAKkjD,YAAc3a,YAAY,KAE3BvrB,EAAKolC,kBAEN,KAIP,YAC4B,MAApBpiD,KAAKkjD,cACLhX,cAAclsC,KAAKkjD,aACnBljD,KAAKkjD,YAAc,MAM3B,iBAEI,GAAIljD,KAAKigD,QAAS,CAEd,IAAIx3C,EAAUzI,KAAKqX,OAAOgrC,WAAWh2C,SAAStE,OAAOsP,OAAOC,oBAAoBC,IAAI,GAChFkG,EAAczd,KAAKszB,KAAK4Q,sBAAsBzmB,YAC9CC,EAAc1d,KAAKszB,KAAKkpB,cAAclB,gBACtC39B,EAAO3d,KAAKszB,KAAK+M,iBAAiB1iB,KAEtC,GAAIlV,EAAQzG,OAAS,GAAoB,MAAfyb,EAAqB,CAE3C,IAAI6+B,EAAct8C,KAAKo8C,SAASG,QAAQ9zC,EAASgV,EAAaE,EAAMD,GAEpE1d,KAAKkgD,eAA8C,GAA7B5D,EAAYhpC,OAAOtR,OAEzChC,KAAKmjD,WAAW7G,EAAYhpC,QAE5BtT,KAAKigD,SAAU,OAGfjgD,KAAKmjD,WAAW,KAO5B,WAAW7vC,GAEP,IAAI8vC,EAAuC,GAE3C,IAAK,IAAIp4C,KAASsI,EACd8vC,EAAQr/C,KAAK,CACTgT,gBAAiB/L,EAAMhH,SAASoF,KAChC6N,YAAajM,EAAMhH,SAASqF,OAC5ByN,cAAe9L,EAAMhH,SAASoF,KAC9B4N,UAAWhM,EAAMhH,SAASqF,OAAS2B,EAAMhH,SAAShC,OAClD2J,QAASX,EAAM+J,KACf2N,SAAU3a,OAAO4a,eAAeC,QAKxC7a,OAAOsP,OAAOgsC,gBAAgBrjD,KAAKqX,OAAOgrC,WAAY,SAAUe,GAIpE,UAEI,IAAInoB,EAAcj7B,KAAKszB,KAAK+M,iBACxB3oC,EAASsI,KAAKo8C,SAAS1kD,OACvB+Q,EAAUzI,KAAKqX,OAAOgrC,WAAWh2C,SAAStE,OAAOsP,OAAOC,oBAAoBC,IAAI,GAChF7V,EAAUhK,EAAO8mB,YAErBzW,OAAOsP,OAAOyiC,SAASrxC,EAAS,SAAU,CAAEsxC,QAAS,IAAKC,KAAMvxC,IAKxDzI,KAAKsjD,eAAeroB,EAAav5B,EAAS+G,KAMtD,sBAAsB/G,GAElB,IAAI,IAAI+jB,KAAa/jB,EAAQ0C,WACzB,GAAGqhB,EAAUrlB,MAAQzG,EAAU2nB,YAAyC,MAA3BmE,EAAU9jB,OAAOF,OAC1D,OAAO,EAIf,OAAO,EAIX,kBAAkBw5B,EAA0Bv5B,EAAkB+G,GAE1DwyB,EAAYsoB,qBAEZtoB,EAAYjd,eAAiBtc,EAC7Bu5B,EAAYuoB,uBAAyB,EAErC,IAAIC,EAAkBxoB,EAAY4f,MAAM74C,OACpC0hD,EAAsBzoB,EAAYwgB,MAEtCxgB,EAAY0oB,SAASjI,GAAiBC,QAEtC1gB,EAAYqI,MAAM,KAEd,IAAIsgB,EACJ,GAAI3oB,EAAY4f,MAAM74C,OAASyhD,EAG3B,IAFAG,EAAW3oB,EAAY4f,MAAMlnC,MAEtBsnB,EAAY4f,MAAM74C,OAASyhD,GAC9BxoB,EAAY4f,MAAMlnC,MAK1B3T,KAAK6jD,kBAAkBp7C,EAASm7C,GAEhC3oB,EAAY0oB,SAASD,GACjBA,GAAuBhI,GAAiBC,QACxC1gB,EAAY6oB,mCAOxB,eAAe7oB,EAA0Bv5B,EAAkB+G,GAEvD,IAAI0uB,EAAS8D,EAAY2e,SAASl4C,GAElC,GAAmB,MAAhBy1B,EAAOnsB,MAENhL,KAAK6jD,kBAAkBp7C,EAAS0uB,EAAOv+B,WAEpC,CAEH,IAAImrD,EAAS3b,OAAO,aAAe3/B,EAAU,gBAC7Cs7C,EAAOrc,OAAOU,OAAO,kCAAoCjR,EAAOnsB,MAAQ,WAExEhL,KAAK6jD,kBAAkBE,EAAQ,OAOvC,UACI/jD,KAAKqgD,mBAAmBhL,QAAQ,aAGpC,kBAAkB5sC,EAAqCm7C,EAAiBl6B,EAAgB,MAEpF,IAAIs6B,EAAahkD,KAAKynC,YAAYhY,KAAK,mBAEnCw0B,EAAe,IAAI,GAAax7C,EAAS,KAAM,KAAM,KAAkB,MAAZm7C,EAAkBl6B,GAIjF,GAHA1pB,KAAKmgD,eAAep8C,KAAKkgD,GACzBD,EAAWtc,OAAOuc,EAAatE,eAEhB,MAAZiE,EAAiB,CAChB,IAAIM,EAAc,IAAI,GAAa,KAAMN,EAAU,KAAM,MAAM,EAAMl6B,GACrE1pB,KAAKmgD,eAAep8C,KAAKmgD,GACzBF,EAAWtc,OAAOwc,EAAYvE,eAGlC,IAAInM,EAASwQ,EAAW,GAAGtb,aAC3Bsb,EAAWvb,UAAU+K,GAIzB,QACqBxzC,KAAKynC,YAAYhY,KAAK,mBAC5B6hB,WAAW3M,SACtB3kC,KAAKmgD,eAAiB,GAG1B,eACI,IAAI,IAAIgE,KAAMnkD,KAAKmgD,eACfgE,EAAGC,cAIX,UAAUrsD,EAAWiM,G,UAEdhE,KAAKszB,gBAAgB,KACT,QAAP,EAAAv7B,aAAC,EAADA,EAAG4nC,YAAI,eAAEznC,QAAkE,QAA9D,EAAwD,QAAxD,EAAI8H,KAAKszB,KAAKoZ,gBAAgB1J,kCAA0B,eAAErD,YAAI,eAAEznC,QAC7E8H,KAAKszB,KAAKjc,OAAOgtC,uBACjBrkD,KAAKszB,KAAKoZ,gBAAgB4X,gBAAgBvsD,IAKlD,IAAIqQ,EAAQ,CACR6O,YAAajT,EAASqF,OAAQ0N,gBAAiB/S,EAASoF,KACxD4N,UAAWhT,EAASqF,OAASrF,EAAShC,OAAQ8U,cAAe9S,EAASoF,MAG1EpJ,KAAKszB,KAAKixB,kBAAkBC,oBAAoBp8C,GAChDpI,KAAKogD,gBAAkBpgD,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAKogD,gBAAiB,CACtF,CACIh4C,MAAOA,EACPkO,QAAS,CAAEijB,UAAW,mBAG1B,CACInxB,MAAOA,EACPkO,QAAS,CAAEijB,UAAW,0BAA2BmrB,aAAa,MAQ1E,cACI1kD,KAAKogD,gBAAkBpgD,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAKogD,gBAAiB,IAI9F,kBACI,GAAsB,MAAnBpgD,KAAK++C,WAAoB,OACV/+C,KAAKynC,YAAYhY,KAAK,mBAC5BA,KAAK,iBAAiBk1B,QAAQ,oBAAoBhgB,UC/ZhE,MAAO,GAYT,YAAoBrR,EAAwByrB,EAAyC6F,GAAjE,KAAAtxB,OAAwB,KAAAyrB,aAAyC,KAAA6F,WAVrF,KAAAC,eAA2B,GAC3B,KAAAC,oBAAgC,GAKhC,KAAAC,aAAwC,GAExC,KAAAC,6BAA8F,GAG1FhlD,KAAK+kD,aAAL,MAA6B,UAC7B/kD,KAAK+kD,aAAL,QAA+B,UAC/B/kD,KAAK+kD,aAAL,KAA4B,UAE5B/kD,KAAKilD,iBAAmBL,EAASn1B,KAAK,2BAEtCzvB,KAAKilD,iBAAiBjZ,KAAK,QAAS,iBACpChsC,KAAKilD,iBAAiB3T,WAAWtF,KAAK,QAAS,iBAE/C,IAAIhvB,EAAOhd,KACX4kD,EAASn1B,KAAK,eAAeya,GAAG,QAAS,KACxBltB,EAAKsW,KAAKixB,kBAChBlP,QAAQ,IAAK,OAAQ,MAC7BrJ,KAAK,QAAS,QAGrB,uBAAuBhhC,GACP,MAATA,GACChL,KAAKilD,iBAAiBzY,IAAI,aAAc,WACxCxsC,KAAKilD,iBAAiBx1B,KAAK,kBAAkB1a,KAAK/J,IAElDhL,KAAKilD,iBAAiBzY,IAAI,aAAc,UAIhD,WAAW2B,GAEPnuC,KAAKglD,6BAA+B,GAEpC,IAAIE,EAAqC,IAAIplD,IAE7CE,KAAKmlD,UAAYnlD,KAAK++C,WAAWtvB,KAAK,0BACtCzvB,KAAKmlD,UAAUx7B,QAEf,IAAI8Z,GAAY,EAEZ2hB,EAAKjX,EAAU1wB,YACfpG,EAA8CrX,KAAKszB,KAAKixB,kBAE5D,IAAK,IAAIxsD,KAAKqtD,EAAGhiC,YAAW,GAAQ,CAChC,IAAIggC,EAAuC,GACvCiC,EAAqD,GACrDC,EAAoC,GAEpChyC,EAASvb,EAAEwtD,6BACfL,EAAc7hD,IAAItL,EAAGA,EAAEytD,iBAEvB,IAAK,IAAIx6C,KAASsI,EAAQ,CAEtB,IAAImyC,EACAC,EAqCAhjC,EApCAqiC,EAAuB/kD,KAAK+kD,aAAa/5C,EAAMiK,OAEnD,OAAQjK,EAAMiK,OACV,IAAK,QAASwwC,EAA4B,qBAAsBC,EAAkB,qBAAsB,MACxG,IAAK,UAAWD,EAA4B,uBAAwBC,EAAkB,uBAAwB,MAC9G,IAAK,OAAQD,EAA4B,oBAAqBC,EAAkB,oBAGpF,GAAsB,MAAlB16C,EAAMwX,SAAkB,CACxB,IAAIA,EAAWxX,EAAMwX,SACjBmjC,EAAiB,MAAQp6C,KAAKuF,MAAsB,IAAhBvF,KAAKq6C,UAC7CH,EAA4B,sBAAwBC,EAAkB,IAAMC,EAE5E3lD,KAAKglD,6BAA6BjhD,KAAK,CAACb,MAAO,IAAMyiD,EACrDE,gBAAiB,KAEb,IAAIrvC,EAAQgM,EAAST,cAAchqB,EAAEqe,MAAM4L,KAC3C3K,EAAOyuC,aAAa,GAAItvC,EAAM5T,IAAKsf,IAC/B,IAAIzpB,EAAIypB,EAAKA,KAAK9Z,MAClB,MAAO,CACHA,MAAO,IAAIL,OAAOg+C,MAAMttD,EAAEse,gBAAiBte,EAAEwe,YAAaxe,EAAEqe,cAAere,EAAEue,WAC7EjC,KAAMmN,EAAKA,KAAKnN,KAChBixC,kBAAkB,OAM9Bt9C,MAAO8Z,EAAS9Z,QASpB,OAHA1I,KAAKimD,aAAaj7C,EAAOjT,EAAGutD,GAGpBt6C,EAAMiK,OACV,IAAK,QAASyN,EAAW3a,OAAO4a,eAAeC,MAAO,MACtD,IAAK,UAAWF,EAAW3a,OAAO4a,eAAeujC,QAAS,MAC1D,IAAK,OAAQxjC,EAAW3a,OAAO4a,eAAewjC,KAGlD/C,EAAQr/C,KAAK,CACTgT,gBAAiB/L,EAAMhH,SAASoF,KAChC6N,YAAajM,EAAMhH,SAASqF,OAC5ByN,cAAe9L,EAAMhH,SAASoF,KAC9B4N,UAAWhM,EAAMhH,SAASqF,OAAS2B,EAAMhH,SAAShC,OAClD2J,QAASX,EAAM+J,KACf2N,SAAUA,EAEV0jC,mBAAoBp7C,EAAMwX,WAG9B6iC,EAAYthD,KAAK,CACbqE,MAAO,CACH2O,gBAAiB/L,EAAMhH,SAASoF,KAChC6N,YAAajM,EAAMhH,SAASqF,OAC5ByN,cAAe9L,EAAMhH,SAASoF,KAC9B4N,UAAWhM,EAAMhH,SAASqF,OAAS2B,EAAMhH,SAAShC,QAEtDsU,QAAS,CACLmvC,0BAA2BA,EAC3B5D,QAAS,CACL79C,SAAU+D,OAAOsP,OAAOgvC,gBAAgBC,OACxC58B,MAAOq7B,MAgBvB,GAPAh9C,OAAOsP,OAAOgsC,gBAAgBtrD,EAAEqe,MAAO,OAAQgtC,GAC/CrrD,EAAE+sD,oBAAsB/sD,EAAEqe,MAAMquC,iBAAiB1sD,EAAE+sD,oBAAqBO,GAGxErlD,KAAK6kD,eAAiB7kD,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAK6kD,eAAgB,IAGpFS,EAAWtjD,OAAS,GAAKhC,KAAKmlD,UAAUnjD,OAAS,EAAG,CACpDyhC,GAAY,EACZ,IAAI8iB,EAAQne,OAAO,kCAAoCrwC,EAAE4nC,KAAKznC,KAAO,gBACrE8H,KAAKmlD,UAAUzd,OAAO6e,GACtB,IAAK,IAAIC,KAAUlB,EACftlD,KAAKmlD,UAAUzd,OAAO8e,IAYlC,OANK/iB,GAAazjC,KAAKmlD,UAAUnjD,OAAS,GACtChC,KAAKmlD,UAAUzd,OAAOU,OAAO,mEAGjCpoC,KAAKymD,oCAEEvB,EAIX,oCAEI,IAAIloC,EAAOhd,KACX2oC,WAAW,KACP,IAAI,IAAI+d,KAAQ1pC,EAAKgoC,6BACb5c,OAAOse,EAAKxjD,OAAOsnC,IAAI,QAASkc,EAAKb,iBACrCzd,OAAOse,EAAKxjD,OAAOgnC,GAAG,QAASwc,EAAKb,iBAAiB7Z,KAAK,QAAS0a,EAAKh+C,QAEjF,KAKP,aAAasC,EAAcjT,EAAW4uD,GAElC,IAAI1O,EAAO7P,OAAO,qCACdwe,EAAcxe,OAAO,uEAAyEp9B,EAAMhH,SAASoF,KAAxF,+CACqB4B,EAAMhH,SAASqF,OAAS,0BAClEw9C,EAAW,GACf,OAAQ77C,EAAMiK,OACV,IAAK,QAAS,MACd,IAAK,UAAW4xC,EAAW,qDAAsD,MACjF,IAAK,OAAQA,EAAW,+CAE5B,IAAIC,EAAW1e,OAAO,8BAAgCye,EAAW77C,EAAM+J,KAAO,UAE9EkjC,EAAKvQ,OAAOkf,GAAalf,OAAOof,GAEhC,IAAI9pC,EAAOhd,KACXi4C,EAAK/N,GAAG,YAAcrtB,IAClB7c,KAAKmlD,UAAU11B,KAAK,kBAAkBsZ,YAAY,aAClDkP,EAAKnP,SAAS,aACd9rB,EAAK+pC,UAAUhvD,EAAGiT,KAGtB27C,EAAW5iD,KAAKk0C,GAGpB,UAAUlgD,EAAWiT,GAEbhL,KAAKszB,gBAAgB,IACjBv7B,GAAKiI,KAAKszB,KAAKoZ,gBAAgB1J,6BAC/BhjC,KAAKszB,KAAKjc,OAAOgtC,uBACjBrkD,KAAKszB,KAAKoZ,gBAAgB4X,gBAAgBvsD,IAGlD,IAAIiM,EAAWgH,EAAMhH,SACjBoE,EAAQ,CACR6O,YAAajT,EAASqF,OAAQ0N,gBAAiB/S,EAASoF,KACxD4N,UAAWhT,EAASqF,OAASrF,EAAShC,OAAQ8U,cAAe9S,EAASoF,MAG1EpJ,KAAKszB,KAAKixB,kBAAkBC,oBAAoBp8C,GAEhD,IAAImxB,EAAoB,GACxB,OAAQvuB,EAAMiK,OACV,IAAK,QAASskB,EAAY,iBAAkB,MAC5C,IAAK,UAAWA,EAAY,mBAAoB,MAChD,IAAK,OAAQA,EAAY,gBAI7Bv5B,KAAK6kD,eAAiB7kD,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAK6kD,eAAgB,CACpF,CACIz8C,MAAOA,EACPkO,QAAS,CAAEijB,UAAWA,OC3NhC,MAAO,GAWT,YAAoBjG,EAAmByrB,GAAnB,KAAAzrB,OAAmB,KAAAyrB,aAJvC,KAAAiI,oBAA8B,EAK1BhnD,KAAKinD,aAAelI,EAAWtvB,KAAK,4BAGxC,UACI,IAAIzS,EAAOhd,KACXA,KAAKinD,aAAavf,OAAO1nC,KAAKknD,iBAAmB1R,GAAQ,GAAI,qCAC7Dx1C,KAAKinD,aAAavf,OAAO1nC,KAAKmnD,kBAAoB3R,GAAQ,GAAI,sCAC9DpN,OAAO,cAAcuO,QAAQ32C,KAAKonD,oBAAsB5R,GAAQ,GAAI,gDAAiD,KACrHx1C,KAAKonD,oBAAoBld,GAAG,QAAS,KAC7BlqC,KAAKgnD,mBACLhnD,KAAKqnD,eAELrnD,KAAKsnD,aAAatqC,EAAKsW,KAAK0P,8BAGpChjC,KAAKonD,oBAAoBpe,OACzBZ,OAAO,eAAeY,OAG1B,6BACIhpC,KAAKonD,oBAAoBryC,KAAK/U,KAAKgnD,mBAAqB,gBAAkB,sBAC1EhnD,KAAKonD,oBAAoBve,OAG7B,6BACI7oC,KAAKonD,oBAAoBpe,OAG7B,aAAatxC,GAETA,EAAOioC,KAAK5qB,KAAOrd,EAAOqrC,gCAC1B,IAAIpD,EAAOjoC,EAAOioC,KAElByI,OAAO,WAAWY,OAClBZ,OAAO,eAAeS,OAEtB,IAAI0e,EAAgBx/C,OAAOsP,OAAOmwC,YAAY7nB,EAAK8nB,qBAAsB,UACrEC,EAAgB3/C,OAAOsP,OAAOmwC,YAAY7nB,EAAK5qB,KAAM,UAEzD/U,KAAK2nD,WAAa5/C,OAAOsP,OAAOuwC,iBAAiBntC,SAASotC,eAAe,cAAe,CAEpFC,yBAAyB,EACzBC,kBAAkB,EAClBC,UAAU,EAEVC,kBAAkB,IAGtBjoD,KAAK2nD,WAAWO,SAAS,CACrBC,SAAUZ,EACVa,SAAUV,IAGd1nD,KAAKgnD,oBAAqB,EAC1BhnD,KAAKqoD,6BAGT,eACQroD,KAAKgnD,qBAEL5e,OAAO,eAAeY,OACtBhpC,KAAK2nD,WAAWW,UAChBtoD,KAAK2nD,WAAa,KAClBvf,OAAO,WAAWS,OAElB7oC,KAAKgnD,oBAAqB,EAC1BhnD,KAAKqoD,8BAKb,mBAAmBnZ,GAEf,IAAIqZ,EAAoC,GACpC3lD,EAAyC,GAE7CssC,EAAWngC,QAAQs+B,IACfA,EAAG5vB,YAAY2F,YAAW,GAAOrU,QAAQrX,IAErC,IAAI8wD,EAAa9wD,EAAOioC,KAAK8oB,eAC7B,GAAkB,MAAdD,EAAoB,CAEpB,IAAIE,Ed9ElB,SAAuB3zC,GAE3B,IAAIvC,EAAQuC,EAAKvC,MAAM,gDAIvB,OAFiB,IAAIm2C,KAAKv3C,OAAOI,SAASgB,EAAM,IAAKpB,OAAOI,SAASgB,EAAM,IAAKpB,OAAOI,SAASgB,EAAM,IAAKpB,OAAOI,SAASgB,EAAM,IAAKpB,OAAOI,SAASgB,EAAM,Kc0EzHo2C,CAAaJ,GAC1BK,EdxFlB,SAAkCH,GACtC,MAAO,GAAG9V,GAAO8V,EAAKI,cAAclW,GAAO8V,EAAKK,eAAeL,EAAKM,gBcuF5BC,CAAwBP,GAC1CQ,EAAsBtmD,EAAIimD,GACnB,MAAPK,IACAA,EAAM,CACFR,KAAMA,EACNS,IAAKN,EACLhxD,QAAS,IAEb+K,EAAIimD,GAAmBK,EACvBX,EAAgBxkD,KAAKmlD,IAEzBA,EAAIrxD,QAAQkM,KAAK,CAACrM,OAAQA,EAAQy2C,UAAWd,SAQzDrtC,KAAKknD,iBAAiBv9B,QACtB3pB,KAAKmnD,kBAAkBx9B,QAEvB,IAAI3M,EAAOhd,KAEXA,KAAKknD,iBAAiBxf,OAAO8N,GAAQ,GAAI,qBAAsB,gBAG/D+S,EAAgB5Q,KAAK,CAACzwC,EAAG0wC,IACjB1wC,EAAEwhD,KAAKM,eAAiBpR,EAAE8Q,KAAKM,eAAuBz9C,KAAKoG,KAAKzK,EAAEwhD,KAAKM,cAAgBpR,EAAE8Q,KAAKM,eAC9F9hD,EAAEwhD,KAAKK,YAAcnR,EAAE8Q,KAAKK,YAAoBx9C,KAAKoG,KAAKzK,EAAEwhD,KAAKK,WAAanR,EAAE8Q,KAAKK,YACrF7hD,EAAEwhD,KAAKI,WAAalR,EAAE8Q,KAAKI,WAAmBv9C,KAAKoG,KAAKzK,EAAEwhD,KAAKI,UAAYlR,EAAE8Q,KAAKI,WAC/E,GAGX,IAAIryB,GAAiB,EAErB8xB,EAAgBx5C,QAAQm6C,IAEpBA,EAAIrxD,QAAQ8/C,KAAK,CAACxtC,EAAIi/C,IAAOj/C,EAAGzS,OAAOioC,KAAKznC,KAAKoX,cAAc85C,EAAG1xD,OAAOioC,KAAKznC,OAE9E,IAAI+/C,EAAOzC,GAAQ,GAAI,kBAAmB0T,EAAIC,KAC9CnpD,KAAKknD,iBAAiBxf,OAAOuQ,GAE7BA,EAAK/N,GAAG,QAAUtzB,IACd5W,KAAKknD,iBAAiBz3B,KAAK,oBAAoBsZ,YAAY,UAC3DkP,EAAKnP,SAAS,aACd9rB,EAAKi6B,OAAOiS,KAGZzyB,IACAA,GAAQ,EACRwhB,EAAKnP,SAAS,aACd9rB,EAAKi6B,OAAOiS,MAOxB,OAAOA,GACHlpD,KAAKmnD,kBAAkBx9B,QACvB3pB,KAAKmnD,kBAAkBzf,OAAO8N,GAAQ,GAAI,qBAAsB,wBAChE,IAAIx4B,EAAOhd,KACXkpD,EAAIrxD,QAAQkX,QAAQs6C,IAChB,IAAIpR,EAAO7P,OAAO,qGACRihB,EAAoBlb,UAAUj2C,2EAC9BmxD,EAAoB3xD,OAAOioC,KAAKznC,wBAAwBmxD,EAAoB3xD,OAAOioC,KAAK8oB,0BAClGzrC,EAAKmqC,kBAAkBzf,OAAOuQ,GAC9BA,EAAK/N,GAAG,QAAS,KACTltB,EAAKsW,KAAKoZ,gBAAgB4c,mBAAmBD,EAAoBlb,WACjEnxB,EAAKsW,KAAKoZ,gBAAgB4X,gBAAgB+E,EAAoB3xD,QAC9DslB,EAAKsW,KAAKoZ,gBAAgBkD,cAAcqH,OAAOoS,EAAoB3xD,QAAQ,QC5KzF,MAAO,GAOT,YAAoB47B,EAAuByrB,EAAwC6F,GAA/D,KAAAtxB,OAAuB,KAAAyrB,aAAwC,KAAA6F,WAE3E5kD,KAAK++C,WAAWtvB,KAAK,yBAAyBztB,OAAS,IACvDhC,KAAKupD,eAAiB,IAAI,GAAej2B,EAAMyrB,IAG/C/+C,KAAK++C,WAAWtvB,KAAK,mCAAmCztB,OAAS,EACjEhC,KAAKwmC,QAAU,IAAI,GAAUlT,EAAMyrB,GAEnC/+C,KAAKwmC,QAAU,IAAI,GAAUlT,EAAM,MAGnCtzB,KAAK++C,WAAWtvB,KAAK,0CAA0CztB,OAAS,IACxEhC,KAAKwpD,gBAAkB,IAAI,GAAsBl2B,EAAMyrB,IAG3D/+C,KAAKkjC,aAAe,IAAI,GAAa5P,EAAMyrB,EAAY6F,GAG3D,UACI5P,GAASh1C,KAAK++C,YACa,MAAvB/+C,KAAKupD,gBAAwBvpD,KAAKupD,eAAeE,UACjC,MAAhBzpD,KAAKwmC,SAAiBxmC,KAAKwmC,QAAQijB,UACZ,MAAxBzpD,KAAKwpD,iBAAyBxpD,KAAKwpD,gBAAgBC,UAEtDzpD,KAAK++C,WAAWtvB,KAAK,YAAY6hB,WAAW7a,QAAQ4e,QAAQ,SAE5D,IAAIr4B,EAAOhd,KACXooC,OAAO,gBAAgB8B,GAAG,SAAU,KAChCltB,EAAK0sC,iCAKb,+B,MACI,IAAIzuB,EAAcj7B,KAAKszB,KAAK+M,iBAC5B,GAAIpF,EAAYwgB,OAASC,GAAiBiO,SAAW1uB,EAAYwgB,OAASC,GAAiBC,OAAQ,CAC/F,IAAIjkD,EAAmC,QAA7B,EAAGujC,EAAYjd,sBAAc,eAAEtmB,OACzCsI,KAAK4pD,uBAAuB,KAAMlyD,IAI1C,uBAAuBo4C,EAA6Bp4C,GACrB,MAAvBsI,KAAKupD,gBAAwBvpD,KAAKupD,eAAeK,uBAAuB9Z,EAAkBp4C,GAIlG,kBAEI0wC,OAAO,0BAA0BoE,IAAI,aAAc,WACnDpE,OAAO,0BAA0BiN,QAAQ,aAI7C,kBAEIjN,OAAO,0BAA0BoE,IAAI,aAAc,UACnDpE,OAAO,mBAAmBkJ,WAAW7a,QAAQ4e,QAAQ,cClEvD,MAAO,GAMT,YAAoB/hB,GAAA,KAAAA,OAFb,KAAAu2B,kBAA8B,CAAC,IAAK,+DAAgE,KAK3G,KAAApzB,OAAiB,EACjB,uBAAuBrgB,EAAiCpS,EAA2B8lD,EAA6CvzC,G,kBAE5HoyB,WAAW,KAEP,IAAIxjC,EAAKnF,KAAKszB,KAAKixB,kBAAkBwF,gBAAgB,+BAA+BC,OAChFhqD,KAAKy2B,QACLtxB,EAAG8kD,gBACHjqD,KAAKy2B,OAAQ,IAMlB,KAEH,IAAIyzB,EAAwD,QAA5C,EAAoC,QAApC,EAA2B,QAA3B,EAAGlqD,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,eAAEnvB,cAAM,eAAEgrC,WAC9DriD,KAAKmqD,UAAY/zC,GAAS8zC,EAE1B,IAAIE,EAAeh0C,GAASpW,KAAKszB,KAAKixB,kBAAkBlC,WAExD,IAAMriD,KAAKmqD,YAAaC,EAAe,OAEvC,IAAI1yD,EAAiBsI,KAAKmqD,UAA6C,QAAlC,EAAyB,QAAzB,EAACnqD,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,eAAE4V,SAAS1kD,OAC9EsI,KAAKszB,KAAK4Q,sBAAsBmmB,uBAAuBj0C,GAE3D,GAAc,MAAV1e,EACA,OAAO,KAGX,GAAIsI,KAAKsqD,gBAAgB5yD,EAAQsM,GAAW,OAAO,KAEnD,IAAIumD,EAAoBn0C,EAAMo0C,gBAAgB,CAAEzzC,gBAAiB,EAAGE,YAAa,EAAGH,cAAe9S,EAAS0+C,WAAY1rC,UAAWhT,EAASqF,SACxIohD,EAAoBr0C,EAAMo0C,gBAAgB,CAAEzzC,gBAAiB/S,EAAS0+C,WAAYzrC,YAAajT,EAASqF,OAAQyN,cAAe9S,EAAS0+C,WAAa,EAAG1rC,UAAW,IAEvK,GAAgC,KAA5B8yC,EAAQY,iBAAyB,CAEjC,GAAgB,MADDH,EAAkB/3C,MAAM,aAEnC,OAAOxS,KAAK2qD,2BAA2BjzD,GAG3C,GAAkB,MADD6yD,EAAkB/3C,MAAM,8CACjB,CAEpB,IACIo4C,EAAa,EACbC,EAAe,EACnB,IAAK,IAAIlzD,EAHQ4yD,EAAkBz6C,YAAY,SAGtBnY,EAAI4yD,EAAkBvoD,OAAQrK,IAAK,CAExD,OADQ4yD,EAAkBl7C,OAAO1X,IAE7B,IAAK,IAAKizD,IAAc,MACxB,IAAK,IAAKC,KAIlB,OAAO7qD,KAAK8qD,6BAA6BpzD,EAAQkzD,EAAaC,EAAcJ,GAEhF,OAAO,KAGX,IAAIM,EAAUN,EAAkBj4C,MAAM,sBAClC/K,EAAkC,GACvB,MAAXsjD,GAAmBA,EAAQ/oD,OAAS,IACpCyF,EAAkCsjD,EAAQ,IAG9C,IAAIzoD,EAA0BmF,EAAgC+H,SAAS,KAGnEw7C,EAAWT,EAAkB/3C,MAAM,yBACvB,MAAZw4C,IACIhrD,KAAKmqD,UAC4B,QAAjC,EAAwB,QAAxB,EAAAnqD,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAE4b,iBAEnCpiD,KAAKszB,KAAK8uB,kBAIlB,IAAI1kC,EAAc1d,KAAKmqD,UAAYnqD,KAAKszB,KAAKkpB,cAAclB,gBAAkB5jD,EAAOsjD,0BAA0Bh3C,EAAS0+C,WAAY1+C,EAASqF,QACxI+R,EAA8B,MAAfsC,EAAsB,KAAOA,EAAYtC,aAG5D,GAAgB,MAAZ4vC,EACA,OAAOhrD,KAAKirD,2BAA2BD,EAAUhnD,EAAUtM,EACvD+P,EAAiC2T,EAAc9Y,GAGvD,IAAI4oD,EAAkBX,EAAkB/3C,MAAM,iCAM9C,OAJuB,MAAnB04C,IACAA,EAAkBX,EAAkB/3C,MAAM,qBAGvB,MAAnB04C,EAEOlrD,KAAKmrD,mCAAmCD,EAAiBlnD,EAAUtM,EACtE+P,EAAiC2T,EAAc9Y,EAAyBob,QAHhF,EAUJ,gBAAgBhmB,EAAgBsM,GAE5B,IAAI+O,EAAYrb,EAAOqb,UACvB,GAAiB,MAAbA,GAAyC,GAApBA,EAAU/Q,OAAa,OAAO,EAEvD,IAEImR,EAFAi4C,EAAS,EACTC,EAASt4C,EAAU/Q,OAAS,EAG5BspD,EAAW,IAEf,OAAa,CACT,IAAIC,EAASp4C,EAGb,GAFAA,EAAM5H,KAAK04B,OAAOonB,EAASD,GAAU,GAEjCG,GAAUp4C,EAAK,OAAO,EAG1B,GADAm4C,IACgB,GAAZA,EAAe,OAAO,EAE1B,IAAIzyD,EAAIka,EAAUI,GACd1Z,EAAIZ,EAAEmL,SAEV,GAAIvK,EAAE2P,KAAOpF,EAAS0+C,YAAcjpD,EAAE2P,MAAQpF,EAAS0+C,YAAcjpD,EAAE4P,OAAS5P,EAAEuI,OAASgC,EAASqF,OAChG+hD,EAASj4C,MADb,CAKA,KAAI1Z,EAAE2P,KAAOpF,EAAS0+C,YAAcjpD,EAAE2P,MAAQpF,EAAS0+C,YAAcjpD,EAAE4P,OAASrF,EAASqF,QAKzF,OAAOxQ,EAAEib,IAAMna,EAAUQ,eAJrBkxD,EAASl4C,IAUrB,2BAA2Bzb,GACvB,IAAIkkB,EAAqD,GAEzDA,EAAkBA,EAAgBrU,OAAOvH,KAAKszB,KAAK4Q,sBAAsBzmB,YAAY+tC,uBAAuB9zD,OAAQ2Q,IAEpH,IAAK,IAAI1Q,EAAI,EAAGA,EAAIikB,EAAgB5Z,OAAQrK,IAAK,CAC7C,IAAI8zD,EAAO7vC,EAAgBjkB,GACvB8zD,EAAKC,OAAOl5C,MAAM,aAClBoJ,EAAgB1E,OAAOvf,EAAG,GAC1BA,MAGA8zD,EAAI,QACJA,EAAKtjD,YAAc,SAEnBsjD,EAAKtjD,YAAc,OAEvBsjD,EAAK5iD,gBAAkBd,OAAOC,UAAUc,6BAA6BC,gBACrE0iD,EAAKhjD,QAAU,CACX5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,KAKnB,OAAO+N,QAAQC,QAAQ,CACnBg1C,YAAa/vC,IAIrB,6BAA6BlkB,EAAgBk0D,EAA2CnB,GACpF,IAAI7uC,EAAqD,GAErDiwC,EAAgCpB,EAAkBqB,WAAWr8C,WAAW,KAyC5E,OAvCAmM,EAAkBA,EAAgBrU,OAAO,CACrC,CACIpF,MAAO,UACPgG,WAAY,cAAgByjD,GAAoCC,EAAuB,GAAK,eAC5FH,OAAQ,mBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,EACPI,QAAS,CACL5G,GAAI,+BACJ6G,MAAO,MACPC,UAAW,KAGnB,CACIxG,MAAO,aACPgG,WAAY,iBAAmByjD,GAAoCC,EAAuB,GAAK,eAC/FH,OAAQ,sBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,EACPI,QAAS,CACL5G,GAAI,+BACJ6G,MAAO,MACPC,UAAW,KAGnB,CACIxG,MAAO,KACPgG,WAAY,aACZujD,OAAQ,eACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,KAMRqO,QAAQC,QAAQ,CACnBg1C,YAAa/vC,IAIrB,mCAAmCsvC,EAAmClnD,EAA2BtM,EAAgB+P,EAAyC2T,EACtJ9Y,EAAkCob,G,MAClC,IAAI3I,EAAOm2C,EAAgB,GAEvBxjD,EACJ,CACIqP,gBAAiB/S,EAAS0+C,WAAYzrC,YAAajT,EAASqF,OAAS0L,EAAK/S,OAC1E8U,cAAe9S,EAAS0+C,WAAY1rC,UAAWhT,EAASqF,OAAS5B,EAAgCzF,QAKjG4Z,EAAqD,GAezD,GAbiC,OAA7B8B,aAAW,EAAXA,EAAatC,eAA+C,OAAvBsC,aAAW,EAAXA,EAAa/b,SAAkB+b,EAAYtC,wBAAwB,IACxGQ,EAAkBA,EAAgBrU,OAAOvH,KAAK+rD,gCAAgCruC,EAAYtC,gBAG3E,MAAfsC,IACA9B,EAAkBA,EAAgBrU,OAAOmW,EAAY3B,gCAAgCrU,GAAgB9E,IAAIm6B,IACrGA,EAAGivB,SAAW,MAAQjvB,EAAG56B,MAClB46B,MAIfnhB,EAAkBA,EAAgBrU,OAAOvH,KAAKszB,KAAK4Q,sBAAsBzmB,YAAY+tC,uBAAuB9zD,EAAQgQ,IAEhG,MAAhB0T,GAA+C,OAAvBsC,aAAW,EAAXA,EAAa/b,QACrCia,EAAkBA,EAAgBrU,OAC9B6T,EAAapS,mBAAmBpP,EAAWwS,QAAS9J,EAAyBmF,EAAiCC,GAC7G9E,IAAIm6B,IACDA,EAAGivB,SAAW,KAAOjvB,EAAG56B,MACjB46B,SAGZ,CAEH,IAAI7kC,EAAkB,QAAd,EAAGR,EAAOioC,YAAI,eAAEznC,KACxB,GAAY,MAARA,EAAc,CACVA,EAAKsX,SAAS,WAAUtX,EAAOA,EAAKkf,OAAO,EAAGlf,EAAKyM,QAAQ,WAC/D,IAAI5M,EAAIG,EAAKsa,MAAM,mBACsB,GAArC9a,EAAOknB,oBAAoB5c,QAAoB,MAALjK,GAAaA,EAAEiK,OAAS,GAAKjK,EAAE,IAAMG,GAAQA,EAAK8J,OAAS,IACrG9J,EAAOA,EAAKmX,OAAO,GAAGmyB,cAAgBtpC,EAAK0X,UAAU,GACrDgM,EAAgB7X,KAAK,CACjB5B,MAAO,SAAWjK,EAClBsQ,WAAY,QACZL,WAAY,aAAejQ,EAAO,iBAClCwzD,OAAQ,yBAA2BxzD,EACnC2Q,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,MAYvB,OALAuT,EAAkBA,EAAgBrU,OAAOvH,KAAKisD,qBAAqBvuC,IAK5DhH,QAAQC,QAAQ,CACnBg1C,YAAa/vC,IAIrB,2BAA2BovC,EAA4BhnD,EAA2BtM,EAC9E+P,EAAyC2T,EACzC9Y,GACA,IAAI4pD,EAAelB,EAAS,GACxBmB,EAAYnoD,EAASqF,OAAS6iD,EAAalqD,OAAS,EACpDoqD,EAAU10D,EAAO20D,kBAAkBroD,EAAS0+C,WAAYyJ,GACxDzkD,EACJ,CACIqP,gBAAiB/S,EAAS0+C,WAAYzrC,YAAajT,EAASqF,OAAS6iD,EAAalqD,OAClF8U,cAAe9S,EAAS0+C,WAAY1rC,UAAWhT,EAASqF,OAAS5B,EAAgCzF,QAGrG,GAAe,MAAXoqD,EAAiB,OAAO,KAE5B,IAAI,KAAEhsD,EAAF,SAAQQ,GAAawrD,EAMzB,GAAIhsD,aAAgB,EAAO,CAEvB,IAAIoH,EAAiB0G,EAAkB9N,EAAMgb,GAE7C,OAAIxa,EACO8V,QAAQC,QAAQ,CACnBg1C,YAAavrD,EAAK+F,YAAY6C,mBAAmBxB,EAAgBlF,EAC7DmF,EAAiCC,KAGlCgP,QAAQC,QAAQ,CACnBg1C,YAAavrD,EAAK4I,mBAAmBxB,EAAgBlF,EACjDmF,EAAiCC,KAKjD,OAAItH,aAAgB,EACTsW,QAAQC,QAAQ,CACnBg1C,YAAavrD,EAAK4I,mBAAmB1G,EACjCmF,EAAiCC,KAIzCtH,aAAgB,EACTsW,QAAQC,QAAQ,CACnBg1C,YAAa,CACT,CACIxpD,MAAO,SACPqG,WAAY,SACZV,KAAMC,OAAOC,UAAUC,mBAAmBC,MAC1CC,WAAY,SACZC,MAAOV,EACP3H,cAAe,CACXnH,MAAO,sCAOpB,KAGX,qBAAqB8kB,GACjB,IAAI4uC,EAA4D,GA4NhE,OA3NKtsD,KAAKmqD,WAA2C,OAA7BzsC,aAAW,EAAXA,EAAatC,eAA+C,OAAvBsC,aAAW,EAAXA,EAAa/b,UACtE2qD,EAAyBA,EAAuB/kD,OAAO,CACnD,CACIpF,MAAO,gCACPupD,OAAQ,qBACRljD,WAAY,QAEZL,WAAY,sBACZM,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,UAEPgG,WAAY,gCACZujD,OAAQ,mBACRljD,WAAY,MAMZK,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,gCAEPgG,WAAY,4DACZujD,OAAQ,oBACRljD,WAAY,MAMZK,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,oBAEPgG,WAAY,wGACZujD,OAAQ,mBACRljD,WAAY,SACZC,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,SAEPgG,WAAY,mBACZujD,OAAQ,YACRljD,WAAY,KACZC,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,iBACPgG,WAAY,oCACZujD,OAAQ,wBACRljD,WAAY,KACZC,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,MAGc,OAA7BqV,aAAW,EAAXA,EAAatC,eAA+C,OAAvBsC,aAAW,EAAXA,EAAa/b,UAElD2qD,EAAyBA,EAAuB/kD,OAAO,CACnD,CACIpF,MAAO,aACPgG,WAAY,gBACZujD,OAAQ,sBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,QACPgG,WAAY,aACZujD,OAAQ,mDACRjjD,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,UACPgG,WAAY,eACZujD,OAAQ,qEACRjjD,QAAS,CACL5G,GAAI,sCACJ6G,MAAO,MACPC,UAAW,IAEfE,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,MAMdrI,KAAKmqD,WAA6B,MAAfzsC,GAAmD,MAA5BA,EAAYtC,aAsB/Cpb,KAAKmqD,WAAoC,OAAvBzsC,aAAW,EAAXA,EAAa/b,UACvC2qD,EAAyBA,EAAuB/kD,OAAO,CACnD,CACIpF,MAAO,SACPqG,WAAY,SACZL,WAAY,UACZujD,OAAQ,uBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,yBACPqG,WAAY,SACZL,WAAY,gEACZujD,OAAQ,qBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,YACPqG,WAAY,YACZL,WAAY,aACZujD,OAAQ,0BACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,SACPqG,WAAY,SACZL,WAAY,UACZujD,OAAQ,uBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,UACPqG,WAAY,UACZL,WAAY,WACZujD,OAAQ,wBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,MAlEfikD,EAAyBA,EAAuB/kD,OAAO,CACnD,CACIpF,MAAO,QACPqG,WAAY,QACZL,WAAY,qCACZujD,OAAQ,oBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,GAEX,CACIlG,MAAO,eACPqG,WAAY,eACZL,WAAY,4CACZujD,OAAQ,gCACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,KAsDA,MAAfqV,GAA6C,MAAtBA,EAAY/b,SACnC2qD,EAAyBA,EAAuB/kD,OAAO,CACnD,CACIpF,MAAO,SACPqG,WAAY,SACZL,WAAY,SACZujD,OAAQ,uBACR7iD,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,MAKZikD,EAIX,gCAAgClxC,GAE5B,IAAIkxC,EAA4D,GAE5DvmD,EAAoB,GACpB/N,EAAIojB,EAAahY,UACrB,KAAY,MAALpL,GACH+N,EAAUA,EAAQwB,OAAOvP,EAAE+N,QAAQgE,OAAQhS,MACnCA,EAAEoJ,YAA4B,MAAbpJ,EAAE2J,SAA+B,MAAZ3J,EAAE0J,UAKhDzJ,EAAIA,EAAEoL,UAGV,IAAK,IAAIzL,KAAKyjB,EAAaxV,WACvBG,EAAUA,EAAQwB,OAAO5P,EAAE2Q,cAG/B,IAAK,IAAIvQ,KAAKgO,EAAS,CAEnB,IAAIwmD,GAAqB,EACzB,IAAK,IAAIpiD,KAAMiR,EAAarV,QACxB,GAAIoE,EAAGvI,WAAa7J,EAAE6J,UAAW,CAC7B2qD,GAAqB,EACrB,MAIR,GAAIA,EAAoB,SAExB,IAAIpqD,GAAiBpK,EAAEoJ,WAAa,aAAe,aAAepJ,EAAEwQ,qBAChEC,EAAazQ,EAAEgC,WACfoO,EAAavO,EAAW7B,EAAE8I,YAAc,KAA4B,MAArB9I,EAAEmrB,gBAA0B,OAASnrB,EAAEmrB,gBAAgBnpB,YAAc,IACxHoO,GAAcpQ,EAAEgC,WAAa,IAC7B,IAAK,IAAIpC,EAAI,EAAGA,EAAII,EAAEqqB,mBAAmBtgB,WAAWE,OAAQrK,IAAK,CAC7D,IAAI8B,EAAI1B,EAAEqqB,mBAAmBtgB,WAAWnK,GACxCwQ,GAAcpQ,EAAE6V,iBAAiBjW,GAAGoC,WAAa,IAAMN,EAAEM,WACrDpC,EAAII,EAAE0V,oBAAsB,IAC5BtF,GAAc,MAGtBA,GAAc,eAEdmkD,EAAuBvoD,KACnB,CACI5B,MAAOA,EACPupD,QAAS3zD,EAAEoJ,WAAa,iBAAmB,iBAAmB,eAAiBgB,EAAQ,oBACvFqG,WAAYA,EACZL,WAAYA,EACZU,gBAAiBd,OAAOC,UAAUc,6BAA6BC,gBAC/DjB,KAAMC,OAAOC,UAAUC,mBAAmB4T,QAC1CzT,WAAOC,IAMnB,OAAOikD,GCzoBT,SAAUE,GAAuB78B,EACnCojB,EAAiB,GAAI0Z,GAAiB,GAEtC,GAAI98B,aAAmB,EAAO,CAE1B,GAAIA,EAAQjqB,eACR,OAoMZ,SAAoCiqB,GAChC,IAAIj2B,EAAYi2B,EAAQ51B,WAEpB41B,EAAQppB,sBAAwB,IAAY7M,GAAK,YAAc,GAAkBi2B,EAAQppB,uBAC7F,GAAIopB,EAAQ/pB,WAAW5D,OAAS,EAAG,CAC/B,IAAI0qD,EAAW/8B,EAAQ/pB,WAAWmE,OAAOy1B,GAAQ7P,EAAQppB,qBAAqBX,WAAWjB,QAAQ66B,GAAQ,GACpG58B,IAAI48B,GAAQ,GAAkBA,IAAO18B,KAAK,MAC/B,IAAZ4pD,IACAhzD,GAAK,eAAiBgzD,GAI9B,OAAOhzD,EAhNQizD,CAA2Bh9B,GAGtC,IAAIj2B,EAAI,GA2BR,GAzB6B,MAAzBi2B,EAAQ5vB,eAAkD,IAAzB4vB,EAAQ5vB,gBACtC4vB,EAAQ5vB,cAAc0P,WAAW,MAChC/V,IAAMq5C,EAASpjB,EAAQ5vB,eAAegQ,QAAQ,MAAO,KAAOgjC,GAAU,KAGtEr5C,GAAKo5C,GAAuBnjB,EAAQ5vB,cAAegzC,GAAU,MAI3C,MAAtBpjB,EAAQ9uB,aAAoBnH,GAAKE,EAAW+1B,EAAQ9uB,YAAc,KAClE8uB,EAAQxuB,aAAYzH,GAAK,aAC7BA,GAAK,SAAWi2B,EAAQ51B,WAAa,IAEjC41B,EAAQlqB,cAAczD,OAAS,IAC/BtI,GAAKkzD,GAA8Bj9B,IAId,MAArBA,EAAQvsB,WAAqD,UAAhCusB,EAAQvsB,UAAUrJ,aAC/CL,GAAK,WAAai2B,EAAQvsB,UAAUrJ,WAAa,IAC7C41B,EAAQvsB,UAAUqC,cAAczD,OAAS,IACzCtI,GAAKkzD,GAA8Bj9B,EAAQvsB,aAIzB,MAAtBusB,EAAQ/pB,YAAsB+pB,EAAQ/pB,WAAW5D,OAAS,EAAG,CAC7DtI,GAAK,cACL,IAAK,IAAI/B,EAAI,EAAGA,EAAIg4B,EAAQ/pB,WAAW5D,OAAQrK,IAC3C+B,GAAKi2B,EAAQ/pB,WAAWjO,GAAGoC,WACvB41B,EAAQ/pB,WAAWjO,GAAG8N,cAAczD,OAAS,IAC7CtI,GAAKkzD,GAA8Bj9B,EAAQ/pB,WAAWjO,KAEtDA,EAAIg4B,EAAQ/pB,WAAW5D,OAAS,IAChCtI,GAAK,MAKjB,GAAI+yD,EAAO,OAAO/yD,EAElBA,GAAKq5C,EAAS,QAEd,IAAK,IAAI7rC,KAAKyoB,EAAQ9nB,cAAcjO,EAAWqQ,WAC3CvQ,GAAKq5C,EAAS,KAAOyZ,GAAuBtlD,EAAG,MAAQ,MAG3D,GAA2B,MAAvByoB,EAAQxpB,YACR,IAAK,IAAIe,KAAKyoB,EAAQxpB,YAAY0B,cAAcjO,EAAWqQ,WACvDvQ,GAAKq5C,EAAS,KAAOyZ,GAAuBtlD,EAAG,MAAQ,MAI/D,IAAK,IAAInP,KAAK43B,EAAQrnB,WAAW1O,EAAWqQ,WACxCvQ,GAAKq5C,EAAS,KAAOyZ,GAAuBz0D,EAAG,MAAQ,MAG3D,GAA2B,MAAvB43B,EAAQxpB,YACR,IAAK,IAAIpO,KAAK43B,EAAQxpB,YAAYmC,WAAW1O,EAAWqQ,WACpDvQ,GAAKq5C,EAAS,KAAOyZ,GAAuBz0D,EAAG,MAAQ,MAO/D,OAFA2B,GAAK,MAEEA,EAIX,GAAIi2B,aAAmB,EAAW,CAE9B,IAAIk9B,EAAO,GAgBX,GAd6B,MAAzBl9B,EAAQ5vB,eAAkD,IAAzB4vB,EAAQ5vB,eAAwB0sD,IAC9D98B,EAAQ5vB,cAAc0P,WAAW,MAChCo9C,IAAS9Z,EAASpjB,EAAQ5vB,eAAegQ,QAAQ,MAAO,KAAOgjC,GAAU,KAEzE8Z,GAAQ/Z,GAAuBnjB,EAAQ5vB,cAAegzC,GAAU,MAIxE8Z,GAAQ9Z,EAAS,aAAepjB,EAAQ51B,WAEpC41B,EAAQlqB,cAAczD,OAAS,IAC/B6qD,GAAQD,GAA8Bj9B,IAGnB,MAAnBA,EAAQ9iB,SAAmB8iB,EAAQ9iB,QAAQ7K,OAAS,EAAG,CACvD6qD,GAAQ,WACR,IAAK,IAAIl1D,EAAI,EAAGA,EAAIg4B,EAAQ9iB,QAAQ7K,OAAQrK,IACxCk1D,GAAQl9B,EAAQ9iB,QAAQlV,GAAGoC,WACvB41B,EAAQ9iB,QAAQlV,GAAG8N,cAAczD,OAAS,IAC1C6qD,GAAQD,GAA8Bj9B,EAAQ9iB,QAAQlV,KAEtDA,EAAIg4B,EAAQ9iB,QAAQ7K,OAAS,IAC7B6qD,GAAQ,MAKpB,IAAKJ,EAAO,CAERI,GAAQ,MAER,IAAK,IAAI90D,KAAK43B,EAAQrnB,aAClBukD,GAAQ9Z,EAAS,KAAOyZ,GAAuBz0D,EAAG,MAAQ,MAG9D80D,GAAQ,MAGZ,OAAOA,EAIX,GAAIl9B,aAAmBjvB,EAAW,CAC9B,IAAIhH,EAAI,GAkBR,OAhB6B,MAAzBi2B,EAAQ5vB,eAAkD,IAAzB4vB,EAAQ5vB,eAAwB0sD,IAC9D98B,EAAQ5vB,cAAc0P,WAAW,MAChC/V,GAAKq5C,EAASpjB,EAAQ5vB,cAAcgQ,QAAQ,MAAO,KAAOgjC,GAAU,KAEpEr5C,GAAKo5C,GAAuBnjB,EAAQ5vB,cAAegzC,GAAU,MAIrEr5C,GAAKq5C,EAEqB,MAAtBpjB,EAAQ9uB,aAAoBnH,GAAKE,EAAW+1B,EAAQ9uB,YAAc,KAElE8uB,EAAQ/uB,WAAUlH,GAAK,WAE3BA,GAAK,GAAkBi2B,EAAQvvB,MAAQ,IAAMuvB,EAAQ51B,WAE9CL,EAGX,GAAIi2B,aAAmB5uB,EAAQ,CAE3B,IAAIrH,EAAI,GAEqB,MAAzBi2B,EAAQ5vB,eAAkD,IAAzB4vB,EAAQ5vB,eAAwB0sD,IAC9D98B,EAAQ5vB,cAAc0P,WAAW,MAChC/V,GAAKq5C,EAASpjB,EAAQ5vB,cAAcgQ,QAAQ,MAAO,KAAOgjC,GAAU,KAEpEr5C,GAAKo5C,GAAuBnjB,EAAQ5vB,cAAegzC,GAAU,MAIrEr5C,GAAKq5C,EAEqB,MAAtBpjB,EAAQ9uB,aAAoBnH,GAAKE,EAAW+1B,EAAQ9uB,YAAc,KAElE8uB,EAAQ/uB,WAAUlH,GAAK,WAEI,MAA3Bi2B,EAAQzM,gBACRxpB,GAAK,GAAkBi2B,EAAQzM,iBAAmB,IAElDxpB,GAAKi2B,EAAQvuB,cAAgB,GAAK,QAGtC1H,GAAKi2B,EAAQ51B,WAAa,IAE1B,IAAI+H,EAAa6tB,EAAQvN,mBAAmBtgB,WAC5C,IAAK,IAAInK,EAAI,EAAGA,EAAImK,EAAWE,OAAQrK,IAAK,CAExC,IAAI8B,EAAIqI,EAAWnK,GACfyI,EAAauvB,EAAQ/hB,iBAAiBjW,GAEtC8B,EAAEwI,aACF7B,EAAmBA,EAAMiC,aAG7B3I,GAAK,GAAkB0G,IAAS3G,EAAEwI,WAAa,MAAQ,IAAM,IAAMxI,EAAEM,WAEjEpC,EAAImK,EAAWE,OAAS,IACxBtI,GAAK,MAOb,OAFAA,GAAK,IAEEA,EAKX,MAAO,GAkBL,SAAU,GAAkB0G,G,QAC9B,IAAIA,aAAgB,GAASA,aAAgB,IACrCA,EAAKqF,cAAczD,OAAS,EAAG,CAC/B,IAAItI,GAAa0G,EAAI,eAAsBA,EAAKrG,WAAa,aAAuC,QAA5B,EAAGqG,EAAKmG,4BAAoB,eAAExM,YAAcqG,EAAKrG,YACnH,IAEN,OADAL,GAAK0G,EAAKqF,cAAc7C,IAAIC,GAAM,GAAkBA,EAAGzC,OAAO0C,KAAK,MAC5DpJ,EAAI,IAInB,OAAO0G,EAAI,eAAsBA,EAAKrG,WAAa,aAA0C,QAA/B,EAAGqG,EAAI,4BAAwB,eAAErG,YAAcqG,EAAKrG,WAGhH,SAAU6yD,GAA8Bj9B,GAE1C,IAAIj2B,EAAY,GAEhB,GAAIi2B,EAAQlqB,cAAczD,OAAS,EAAG,CAClCtI,EAAI,IAEJ,IAAI2pB,EAAqB,GACzB,IAAK,IAAIxgB,KAAM8sB,EAAQlqB,cAAe,CAClC,IAAI5M,EAAYgK,EAAGzC,KAAKrG,WACpBuM,EAAWzD,EAAGzC,KAIlB,GAH8B,MAA1BkG,EAAEC,sBAAqE,UAArCD,EAAEC,qBAAqBxM,aACzDlB,GAAK,YAAcyN,EAAEC,qBAAqBxM,YAE1B,MAAhBuM,EAAEV,WAAoB,CAEtB,IAAI8mD,EAAWpmD,EAAEV,WACa,MAA1BU,EAAEC,uBACFmmD,EAAWA,EAAS3iD,OAAOy1B,GAAQl5B,EAAEC,qBAAqBX,WAAWjB,QAAQ66B,GAAQ,IAGzF,IAAK,IAAInG,KAAMqzB,EACX7zD,GAAK,MAAQwgC,EAAGt/B,WAGxBspB,EAAStf,KAAKlL,GAGlBa,GAAK2pB,EAASvgB,KAAK,MACnBpJ,GAAK,KAGT,OAAOA,EChQL,MAAO,GAKT,YAAoB45B,GAAA,KAAAA,OAHpB,KAAAw5B,+BAAqD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC/E,KAAAC,iCAAuD,GAKvD,qBAAqB32C,EAAiCpS,EAClDuS,EACAuzC,G,UAGA,IAAIK,EAAa/zC,IAAkD,QAA7C,EAAqC,QAArC,EAA4B,QAA5B,EAAIpW,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,eAAEnvB,cAAM,eAAEgrC,YAErE,IAAK8H,GAAa/zC,GAASpW,KAAKszB,KAAKixB,kBAAkBlC,WACnD,OAGJ,IAAIrlC,EAAOhd,KAEX,OAAO,IAAI0W,QAAQ,CAACC,EAASq2C,KAEzBrkB,WAAW,K,QAEHwhB,EACiC,QAAjC,EAAwB,QAAxB,EAAAnqD,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAE4b,iBAEnCpiD,KAAKszB,KAAK8uB,iBAGdzrC,EAAQqG,EAAKiwC,0BAA0B72C,EAAOpS,EAAUuS,EAAOuzC,KAEhE,OAOX,0BAA0B1zC,EAAiCpS,EACvDuS,EACAuzC,G,QAGA,IAEIpyD,EAFa0e,GAASpW,KAAKszB,KAAKixB,kBAAkBlC,WAEY,QAAlC,EAAyB,QAAzB,EAACriD,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,eAAE4V,SAAS1kD,OACzEsI,KAAKszB,KAAK4Q,sBAAsBmmB,uBAAuBj0C,GAE3D,GAAc,MAAV1e,EACA,OAAO,KAMX,IAAIw1D,EAAsBx1D,EAAOw1D,oBAAoBlpD,EAAS0+C,YAE9D,GAA2B,MAAvBwK,EAA6B,OAAO,KAExC,IAAIC,EAAyC,KACzCC,GAA6B,EAEjC,IAAK,IAAIz1D,EAAIu1D,EAAoBlrD,OAAS,EAAGrK,GAAK,EAAGA,IAAK,CACtD,IAAI29B,EAAM43B,EAAoBv1D,GAC1B29B,EAAIwC,mBAAmBzuB,OAASisB,EAAIwC,mBAAmB91B,OAASgC,EAASqF,QACtEisB,EAAIwC,mBAAmBzuB,OAAS+jD,IACH,MAA5B93B,EAAI7U,sBACHzc,EAAS0+C,YAAcptB,EAAI7U,qBAAqBrX,MAAQpF,EAASqF,QAAUisB,EAAI7U,qBAAqBpX,QACjGrF,EAAS0+C,WAAaptB,EAAI7U,qBAAqBrX,QACnD+jD,EAAqB73B,EACrB83B,EAAoB93B,EAAIwC,mBAAmBzuB,QAKvD,OAA0B,MAAtB8jD,EAAmC,KAEhCntD,KAAKqtD,iBAAiBF,EAAoBnpD,GAMrD,iBAAiBmpD,EACbnpD,GAEA,IAAIspD,EAAyB,EAE7B,IAAK,IAAIC,KAAMJ,EAAmB3sC,gBAC1B+sC,EAAGnkD,KAAOpF,EAAS0+C,YAAe6K,EAAGnkD,MAAQpF,EAAS0+C,YAAc6K,EAAGlkD,OAASrF,EAASqF,SACzFikD,IAIR,IAAIE,EAAoE,GAExE,GAAmD,iBAAvCL,EAAmBM,gBAC3BD,EAA2BA,EAAyBjmD,OAAOvH,KAAK0tD,kCAA0CP,EAAmBM,gBAAiBH,SAE9I,IAAK,IAAI3rD,KAAUwrD,EAAmBM,gBAAiB,CACnD,IAAI11D,EAAY4J,EACZ5J,EAAE0V,oBAAsB6/C,IAExBE,EAA2BA,EAAyBjmD,OAAOvH,KAAK2tD,yBAAyB51D,KAMrG,OAAO2e,QAAQC,QAAQ,CACnB/d,MAAO,CACHg1D,gBAAiBN,EACjBO,gBAAiB,EACjBC,WAAYN,GAEhBlF,QAAS,SAIjB,kCAAkC3mD,EAAgB2rD,GAE9C,OAAQ3rD,GACJ,IAAK,QACD,MAAO,CACH,CACIQ,MAAO,kCACPpC,cAAe,iDACf+B,WAAY,CACR,CAAEK,MAAO,YAAapC,cAAe,mOAGrD,IAAK,KACD,MAAO,CACH,CACIoC,MAAO,sDACPpC,cAAe,mCACf+B,WAAY,CACR,CAAEK,MAAO,YAAapC,cAAe,yMAGrD,IAAK,SACD,MAAO,CACH,CACIoC,MAAO,2HACPpC,cAAe,mCACf+B,WAAY,CACR,CAAEK,MAAO,WAAYpC,cAAe,qRAGpD,IAAK,MACD,MAAO,CACH,CACIoC,MAAO,sFACPpC,cAAe,kCACf+B,WAAY,CACR,CAAEK,MAAO,iBAAkBpC,cAAe,uEAC1C,CAAEoC,MAAO,YAAapC,cAAe,gOACrC,CAAEoC,MAAO,uCAAwCpC,cAAe,wEAGhF,IAAK,QA2BD,MAzBI,CACI,CACIoC,MAAO,qCACPpC,cAAe,sCACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,0CACxC,CAAEoC,MAAO,gBAAiBpC,cAAe,0HAGjD,CACIoC,MAAO,kCACPpC,cAAe,sCACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,0CACxC,CAAEoC,MAAO,gBAAiBpC,cAAe,+CAGjD,CACIoC,MAAO,sBACPpC,cAAe,sCACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,6CAK5D,IAAK,UAED,MAAO,CACH,CACIoC,MAAO,uCACPpC,cAAe,kFACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,0CACxC,CAAEoC,MAAO,gBAAiBpC,cAAe,0HAGjD,CACIoC,MAAO,oCACPpC,cAAe,kFACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,0CACxC,CAAEoC,MAAO,aAAcpC,cAAe,iDAG9C,CACIoC,MAAO,wBACPpC,cAAe,kFACf+B,WAAY,CACR,CAAEK,MAAO,eAAgBpC,cAAe,8CAShE,yBAAyB4B,GAErB,IAAIQ,EAAgB,GAEU,MAA1BR,EAAOuhB,iBAA4BvhB,EAAOP,gBAC1Ce,GAAS,GAAkBR,EAAOuhB,iBAAmB,KAGzD/gB,GAASR,EAAO5H,WAAa,IAE7B,IAAIg0D,EAAoE,GAEpE7sB,EAAKv/B,EAAOygB,mBAAmBtgB,WAEnC,IAAK,IAAInK,EAAI,EAAGA,EAAIupC,EAAGl/B,OAAQrK,IAAK,CAEhC,IAAI8B,EAAIynC,EAAGvpC,GACPq2D,EAAU7rD,EAAMH,OAChB5B,EAAO3G,EAAE2G,KACT3G,EAAEwI,aACF7B,EAAmBA,EAAMiC,aAI7BF,GADa,GAAkB/B,IAAS3G,EAAEwI,WAAa,MAAQ,IAAM,IAAMxI,EAAEM,WAE7E,IAAIk0D,EAAQ9rD,EAAMH,OAEdrK,EAAIupC,EAAGl/B,OAAS,IAChBG,GAAS,MAGb,IAAI+rD,EAA4C,CAC5C/rD,MAAO,CAAC6rD,EAASC,GACjBluD,cAAe,IAGnBguD,EAAyBhqD,KAAKmqD,GAQlC,OAFA/rD,GAAS,IAEF,CAAC,CACJA,MAAOA,EACPL,WAAYisD,EACZhuD,cAAuC,MAAxB4B,EAAO5B,cAAwB,GAAK4B,EAAO5B,iBChRhE,MAAO,GAkCT,YAAoBsX,GAAA,KAAAA,SAIpB,aAAajB,EAAiCpS,EAA2BuS,G,QAGrE,IAAI43C,EAA8BnuD,KAAKqX,OAAOA,OAAO+2C,eAIrD,GAAgB,MAAbD,IACIA,EAAUp3C,iBAAmBo3C,EAAUr3C,eAAiBq3C,EAAUl3C,aAAek3C,EAAUn3C,aAErFm3C,EAAUp3C,gBAAkB/S,EAAS0+C,YAAcyL,EAAUp3C,iBAAmB/S,EAAS0+C,YAAcyL,EAAUl3C,aAAejT,EAASqF,UACzI8kD,EAAUr3C,cAAgB9S,EAAS0+C,YAAcyL,EAAUr3C,eAAiB9S,EAAS0+C,YAAcyL,EAAUn3C,WAAahT,EAASqF,QAEpI,OAKZ,IAAI3R,EAAuD,QAAjD,EAAWsI,KAAKqX,OAAOic,KAAK4Q,6BAAqB,eAAEmmB,uBAAuBj0C,GAEpF,GAAc,MAAV1e,EACA,OAAO,KAGX,IAAI,IAAIsb,KAAatb,EAAO4b,OACxB,IAAI,IAAItI,KAASgI,EACb,GAAGhI,EAAMhH,SAASoF,MAAQpF,EAAS0+C,YAC/B13C,EAAMhH,SAASqF,QAAUrF,EAASqF,QAClC2B,EAAMhH,SAASqF,OAAS2B,EAAMhH,SAAShC,QAAUgC,EAASqF,OACtD,OAAO,KAKvB,IAAIsmB,EAAUj4B,EAAO22D,qBAAqBrqD,EAAS0+C,WAAY1+C,EAASqF,QAEpEilD,EAAsB,GAE1B,GAAe,MAAX3+B,EACA,GAAIA,aAAmB,GAASA,aAAmB5uB,GAAU4uB,aAAmB,GACzEA,aAAmBjvB,EACtB4tD,EAAsB9B,GAAuB78B,OAC1C,IAAIA,aAAmB1vB,EAE1B,OADAquD,EAAsB,QAAU3+B,EAAQ51B,WAAa,iCAAmC41B,EAAQxvB,YACzF,CACHiI,MAAO,KACPmmD,SAAU,CAAC,CAAE31D,MAAO01D,KAErB,CAEH,IAAIE,EAAsC,QAAxB,EAAW7+B,aAAO,EAAPA,EAASvvB,YAAI,eAAErG,aACzC41B,aAAO,EAAPA,EAASvvB,gBAAgB,IAASuvB,aAAO,EAAPA,EAASvvB,gBAAgB,KAC1DouD,GAAkB,IAAM5B,GAA8Bj9B,EAAQvvB,OAG5C,MAAlBouD,EACAA,EAAiB,GAEjBA,GAAkB,IAGtBF,EAAsBE,GAAiB7+B,aAAO,EAAPA,EAAS51B,iBAEjD,CACH,IAAI00D,EAAOzuD,KAAK0uD,mBAAmBt4C,EAAOpS,GACtC2qD,EAAO,GAAgBC,oBAAoBH,GAC/C,GAAY,MAARE,EACA,MAAO,CACHvmD,MAAO,KACPmmD,SAAU,CAAC,CAAE31D,MAAO+1D,KAKhC,IAEI/1D,EAAgB,KAEpB,GAJYoH,KAAKqX,OAAOic,KAAK+M,iBAAiBob,OAIjCC,GAAiBC,OAAQ,CAClC,IAAIhC,EAAY35C,KAAKqX,OAAOic,KAAK4Q,sBAAsByV,UAEnD5/C,EAAqBiG,KAAK6uD,iBAAiBz4C,EAAOpS,EAAU2rB,aAAO,EAAPA,EAAS51B,YAEzE,GAAiB,MAAdA,EACC,OAAO,KAGX,IAAIo9B,EAASwiB,EAAUC,SAAS7/C,GACZ,MAAhBo9B,EAAOnsB,OAAiC,MAAhBmsB,EAAOv+B,QAC/BA,EAAQu+B,EAAOv+B,MAAMwH,KAAKkM,YAAY6qB,EAAOv+B,OAC7C01D,EAAsBv0D,GAK9B,IAAIw0D,EAAW,GAEf,GAAa,MAAT31D,GAA+C,GAA9B01D,EAAoBtsD,OACrC,OAAO,KAGE,MAATpJ,EACIA,EAAMoJ,OAASssD,EAAoBtsD,OAAS,IAC5CusD,EAASxqD,KAAK,CAAEnL,MAAO,QAAU01D,EAAsB,aACvDC,EAASxqD,KAAK,CAAEnL,MAAO,QAAUA,EAAMmX,QAAQ,UAAW,KAAO,WAEjEw+C,EAASxqD,KAAK,CAAEnL,MAAO,QAAU01D,EAAsB,OAAS11D,EAAMmX,QAAQ,UAAW,KAAO,UAGpGw+C,EAASxqD,KAAK,CAAEnL,MAAO,QAAU01D,EAAsB,UAK3D,MAAO,CACHlmD,MAHQ,KAIRmmD,SAAUA,GAKlB,mBAAmBn4C,EAAiCpS,GAGhD,IAAImP,EAAMiD,EAAM04C,sBAAsB,CAClC73C,YAAa,EACbF,gBAAiB,EACjBD,cAAe9S,EAAS0+C,WACxB1rC,UAAWhT,EAASqF,SAGpB0L,EAAOqB,EAAM/J,WAEboiD,EAAO,GAEP/a,EAAMvgC,EACV,KAAOugC,EAAM3+B,EAAK/S,QAAUhC,KAAK+uD,oCAAoCh6C,EAAK1F,OAAOqkC,KAC7EA,IAGJ,IAAIsb,EAAQ77C,EACZ,KAAO67C,EAAQ,GAAKhvD,KAAK+uD,oCAAoCh6C,EAAK1F,OAAO2/C,EAAQ,KAC7EA,IAGJ,GAAItb,EAAMsb,EAAQ,EACdP,EAAO15C,EAAKnF,UAAUo/C,EAAOtb,OAC1B,CAEH,IADAA,EAAMvgC,EACCugC,EAAM3+B,EAAK/S,QAAUhC,KAAKivD,iBAAiBl6C,EAAK1F,OAAOqkC,KAC1DA,IAIJ,IADAsb,EAAQ77C,EACD67C,EAAQ,GAAKhvD,KAAKivD,iBAAiBl6C,EAAK1F,OAAO2/C,EAAQ,KAC1DA,IAGAtb,EAAMsb,EAAQ,IACdP,EAAO15C,EAAKnF,UAAUo/C,EAAOtb,IAIrC,OAAO+a,EAIX,iBAAiBr4C,EAAiCpS,EAC9CjK,GAEA,IAAIoZ,EAAMiD,EAAM04C,sBAAsB,CAClC73C,YAAa,EACbF,gBAAiB,EACjBD,cAAe9S,EAAS0+C,WACxB1rC,UAAWhT,EAASqF,SAGpB0L,EAAOqB,EAAM/J,WAEbqnC,EAAMvgC,EACV,KAAOugC,EAAM3+B,EAAK/S,QAAUhC,KAAK+uD,oCAAoCh6C,EAAK1F,OAAOqkC,KAC7EA,IAGJ,IAAIsb,EAAQ77C,EACZ,KAAO67C,EAAQ,GAAKhvD,KAAKkvD,wBAAwBn6C,EAAK1F,OAAO2/C,EAAQ,KACjEA,IAGuC,OAAtBj1D,aAAU,EAAVA,EAAYiI,SAAqBjI,EAAWiI,OAEjE,OAAI0xC,EAAMsb,EAAQhtD,OACP+S,EAAKnF,UAAUo/C,EAAOtb,GAG1B35C,EAGX,wBAAwBlB,GAEpB,OAAOA,EAAE6W,oBAAoB8C,MAAM,wBAIvC,iBAAiB3Z,GAEb,OAAOA,EAAE6W,oBAAoB8C,MAAM,oBAIvC,oCAAoC3Z,GAEhC,OAAOA,EAAE6W,oBAAoB8C,MAAM,sBAxPxB,GAAAo8C,oBAAqD,CAChE,MAAS,wDACT,IAAO,2GACP,QAAW,0FACX,MAAS,6HACT,IAAO,6QAEP,GAAM,0RACN,KAAQ,qOACR,OAAU,uVACV,IAAK,mGACL,KAAM,gRACN,KAAM,4HACN,KAAM,2HACN,KAAM,uSACN,KAAM,2LACN,KAAM,+LACN,KAAM,mMACN,KAAM,iMACN,KAAM,6GACN,KAAM,gHACN,IAAK,wMACL,IAAK,qHACL,OAAU,yIACV,QAAW,mJACX,UAAa,mMACb,OAAU,wIACV,MAAS,kRCnCX,MAAOO,GAET,YAAoB77B,GAAA,KAAAA,OAIpB,mBAAmBld,EAAiChO,EAAqB0hD,EAA6CvzC,GAgBlH,MAAO,CACHunC,QAhBYgM,EAAQ1G,QAAQxgD,IAAIoI,IAChC,IAAIwX,EAA0BxX,EAAMo7C,mBACpC,OAAgB,MAAZ5jC,EAAyB,KAEiB,CAC1C9Z,MAAO8Z,EAAS9Z,MAChB0mD,YAAa,CAACpkD,GACdlD,KAAM,WACNoa,KAAM,CACF1L,MAAOgM,EAAST,cAAc3L,EAAM4L,MAExCqtC,aAAa,KAMjB/G,QAAS,SCvBf,MAAOgH,GAET,YAAoBh8B,GAAA,KAAAA,OAIpB,kBAAkBld,EAAiCpS,EAA2B8lD,EAA4CvzC,GAGtH,IAAI7e,EAAiBsI,KAAKszB,KAAK4Q,sBAAsBmmB,uBAAuBj0C,GAE5E,GAAc,MAAV1e,EAAgB,OAAO,KAE3B,IAAIi4B,EAAUj4B,EAAO22D,qBAAqBrqD,EAAS0+C,WAAY1+C,EAASqF,QACxE,GAAe,MAAXsmB,EACA,OAGJ,IAAI9vB,EAAiB8vB,EAAQ9vB,eAGzB0vD,EAAkD,GAetD,OAbA1vD,EAAekP,QAAQ,CAACygD,EAAmB93D,KACvC,GAAyB,MAArB83D,EACA,IAAK,IAAIC,KAAMD,EACXD,EAAmBxrD,KACf,CACIie,IAAKtqB,EAAOsqB,IACZ5Z,MAAO,CAAE6O,YAAaw4C,EAAGpmD,OAAQ0N,gBAAiB04C,EAAGrmD,KAAM0N,cAAe24C,EAAGrmD,KAAM4N,UAAWy4C,EAAGpmD,OAASomD,EAAGztD,YAO1HutD,GCjBT,MAAO,GAWT,YAAmBj8B,EAAwBo8B,EAA8BrR,GAAtD,KAAA/qB,OAAwB,KAAAo8B,cAA8B,KAAArR,aAPzE,KAAAsR,wBAAkC,EAElC,KAAAC,GAAmC,KAGnC,KAAAC,uBAAiC,EA6SjC,KAAAC,aAAuB,EA+DvB,KAAAC,SAAmB,EAoLnB,KAAAC,kBAA8B,GA3hB9B,QAAQvZ,ICjCN,WACF1uC,OAAOC,UAAUwrB,SAAS,CAAE3xB,GAAI,SAChCouD,WAAY,CAAC,gBAIb,IAAIC,EAA+C,CAC/CC,iBAAkB,CAEdC,sBAAuB,qBAEvBC,sBAAuB,iBAE3BC,aAAc,CACV,CAEIC,WAAY,qCACZC,UAAW,YACXrS,OAAQ,CAAEsS,aAAc1oD,OAAOC,UAAU0oD,aAAaC,cAAeC,WAAY,QAErF,CAEIL,WAAY,qCACZpS,OAAQ,CAAEsS,aAAc1oD,OAAOC,UAAU0oD,aAAaG,KAAMD,WAAY,QAE5E,CAEIL,WAAY,2CACZpS,OAAQ,CAAEsS,aAAc1oD,OAAOC,UAAU0oD,aAAaG,KAAMD,WAAY,OAE5E,CAEIL,WAAY,0BACZpS,OAAQ,CAAEsS,aAAc1oD,OAAOC,UAAU0oD,aAAaG,KAAMC,WAAY,IAE5E,CAEIP,WAAY,iCACZpS,OAAQ,CAAEsS,aAAc1oD,OAAOC,UAAU0oD,aAAaG,KAAMC,WAAY,KAIhFC,YAAa,qFACbC,SAAU,CACNC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEzBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAM7a,MAAO,MAEzB8a,iBAAkB,CACd,CAAED,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAK7a,MAAO,KACpB,CAAE6a,KAAM,IAAM7a,MAAO,KACrB,CAAE6a,KAAM,IAAK7a,MAAO,MAExBwK,QAAS,CACLoC,QAAS,CACL9f,MAAO,IAAIpzB,OAAO,sDAClBwjC,IAAK,IAAIxjC,OAAO,2DAwH5BnI,OAAOC,UAAUupD,yBAAyB,SAAUrB,GAEpDnoD,OAAOC,UAAUwpD,yBAAyB,SArH3B,CACXC,aAAc,GACdC,aAAc,QACdC,SAAU,CACN,WAAY,WAAY,MAAO,SAAU,SAAU,UACnD,OAAQ,UAAW,eAAgB,UACnC,OAAQ,aAAc,YAAa,QACnC,SAAU,SAAU,SAAU,OAAQ,aAAc,SACpD,YAAa,QAAS,UAAW,MAAO,QACxC,SAAU,UAAW,WACrB,WAAY,QAAS,SAAU,QAAS,OAAQ,QAAS,QAE7DpoC,MAAO,CAAC,QAAS,WACjBnlB,WAAY,CAAC,MAAO,QAAS,KAAM,OAAQ,OAAQ,KAAM,QAAS,YAClEwtD,MAAO,CAAC,MAAO,UAAW,OAAQ,QAAS,SAAU,OAAQ,OAAQ,OAAQ,QAC7E,QAAS,OAAQ,aACjBp7B,UAAW,CACP,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC9B,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAC1C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAC3C,KAAM,KAAM,MAAO,MAAO,QAG9Bq7B,QAAS,wBACTC,QAAS,wEACTC,OAAQ,cACRC,YAAa,oBACbC,aAAc,oBACdC,UAAW,iCAEXC,UAAW,CACP33C,KAAM,CAGF,CAAC,gCAAiC,CAC9B43C,MAAO,CACH,YAAa,CAAE77C,MAAO,cACtB,cAAe,CAAEA,MAAO,gBACxB,SAAU,CAAEA,MAAO,WACnB,SAAU,CAAEA,MAAO,YACnB,WAAY,YAGpB,CAAC,2BAA4B,CACzB67C,MAAO,CACH,YAAa,CAAE77C,MAAO,cACtB,cAAe,CAAEA,MAAO,gBACxB,SAAU,CAAEA,MAAO,WACnB,WAAY,gBAGpB,CAAC,yBAA0B,SAE3B,CAAE87C,QAAS,eAEX,CAAC,aAAc,aACf,CAAC,mBAAoB,aACrB,CAAC,WAAY,CACTD,MAAO,CACH,aAAc,YACd,WAAY,MAIpB,CAAC,yBAA0B,cAE3B,CAAC,yCAA0C,gBAC3C,CAAC,oDAAqD,gBACtD,CAAC,yBAA0B,cAC3B,CAAC,uBAAwB,gBACzB,CAAC,4BAA6B,iBAC9B,CAAC,kBAAmB,gBACpB,CAAC,iBAAkB,UAEnB,CAAC,QAAS,aAEV,CAAC,kBAAmB,kBACpB,CAAC,IAAK,SAAU,WAEhB,CAAC,WAAY,UACb,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,WACjD,CAAC,IAAK,mBAEVE,WAAY,CACR,CAAC,aAAc,IACf,CAAC,eAAgB,cAAe,YAChC,CAAC,OAAQ,UAAW,YACpB,CAAC,UAAW,YAEhBnzD,QAAS,CACL,CAAC,UAAW,WAGZ,CAAC,OAAQ,UAAW,QACpB,CAAC,QAAS,YAGdozD,QAAS,CACL,CAAC,UAAW,eAEZ,CAAC,OAAQ,uBACT,CAAC,OAAQ,cAAe,QACxB,CAAC,QAAS,gBAEdC,OAAQ,CACJ,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,SAAU,YDnJxBC,GAEA1qD,OAAOsP,OAAOq7C,YAAY,oBAAqB,CAC3Cx9C,KAAM,UACNy9C,SAAS,EACTC,MAAO,CACH,CAAEr8C,MAAO,SAAUs8C,WAAY,SAAUC,UAAW,UACpD,CAAEv8C,MAAO,QAASs8C,WAAY,SAAUC,UAAW,eACnD,CAAEv8C,MAAO,QAASs8C,WAAY,UAC9B,CAAEt8C,MAAO,SAAUs8C,WAAY,UAC/B,CAAEt8C,MAAO,OAAQs8C,WAAY,UAC7B,CAAEt8C,MAAO,aAAcs8C,WAAY,UACnC,CAAEt8C,MAAO,YAAas8C,WAAY,SAAUC,UAAW,QACvD,CAAEv8C,MAAO,UAAWs8C,WAAY,SAAUC,UAAW,SAGzDC,OAAQ,CACJ,oBAAqB,UACrB,mBAAsB,aAI9BhrD,OAAOsP,OAAOq7C,YAAY,qBAAsB,CAC5Cx9C,KAAM,KACNy9C,SAAS,EACTC,MAAO,CACH,CAAEr8C,MAAO,SAAUs8C,WAAY,SAAUC,UAAW,eACpD,CAAEv8C,MAAO,QAASs8C,WAAY,SAAUC,UAAW,eACnD,CAAEv8C,MAAO,QAASs8C,WAAY,UAC9B,CAAEt8C,MAAO,SAAUs8C,WAAY,UAC/B,CAAEt8C,MAAO,OAAQs8C,WAAY,SAAUC,UAAW,QAClD,CAAEv8C,MAAO,aAAcs8C,WAAY,UACnC,CAAEt8C,MAAO,YAAas8C,WAAY,SAAUC,UAAW,QACvD,CAAEv8C,MAAO,UAAWs8C,WAAY,SAAUC,UAAW,QACrD,CAAEv8C,MAAO,UAAWs8C,WAAY,SAAUC,UAAW,WAEzDC,OAAQ,CACJ,oBAAqB,UACrB,oBAAqB,UACrB,qCAAsC,UACtC,+BAAgC,UAChC,qCAAsC,UACtC,sCAAuC,YACvC,iCAAkC,UAClC,8BAA+B,UAC/B,0BAA2B,UAC3B,uBAAwB,UACxB,8BAA+B,UAC/B,+BAAgC,UAChC,2BAA4B,UAC5B,6BAA8B,UAC9B,iCAAkC,OAClC,iCAAkC,UAClC,mBAAsB,aAK9B/yD,KAAKqX,OAAStP,OAAOsP,OAAOpe,OAAOw9C,EAAS,GAAI,CAO5C2K,SAAU,SACV4R,UAAW,CACP3c,SAAS,GAKb4K,qBAAsB,EACtBgS,uBAAwB,OACxB9R,sBAAsB,EACtB+R,kBAAkB,EAClBC,sBAAuB,GACvB9R,SAAU,GACVC,WAAY,wBACZC,WAAY,MACZC,kBAAkB,EAClB4R,qBAAqB,EAErB1S,iBAAiB,EACjB2S,sBAAsB,EACtB5R,sBAAsB,EACtB6R,WAAY,OACZC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,gBAAiB,GACjBC,kBAAmB,GACnBjS,QAAS,CACLC,eAAe,GAGnBiS,eAAgB,CAAEvd,SAAS,EAAMwd,OAAO,GAMxCC,eAAgB9zD,KAAKq+C,WAErBwD,QAAS,CACLxL,QAASr2C,KAAK0vD,aAElB5N,UAAW,CACPC,SAAU,OACVC,WAAY,QAEhB5nC,MAAO,sBAOXpa,KAAKqX,OAAO08C,UAAWn9C,IACnB,IAAI6kC,EAAQz7C,KAAKszB,KAAK+M,iBAAiBob,MAEvC,GAAI,CAACC,GAAiBxhB,KAAMwhB,GAAiB1wC,MAAO0wC,GAAiBsY,iBAAiBrvD,QAAQ82C,GAAS,EAAG,CAEtG,GAAI7kC,EAAEklC,KAAKn3C,QAAQ,UAAY,GAAKiS,EAAEklC,KAAKn3C,QAAQ,SAAW,EAAG,OAEjE3E,KAAKszB,KAAK2gC,mBAAmB5e,QAAQ,uBAQ7C,IAAIr4B,EAAOhd,KAEPk0D,EAAsBriB,KACA,IAAlBA,EAAM6M,UAEN1hC,EAAKm3C,qBAAqB5oD,KAAKoG,KAAKkgC,EAAMuiB,SAAS,GAEnDviB,EAAM4G,mBAId,IAAKz4C,KAAKq+C,WAAY,CAElB,IAAIgW,EAAoBr0D,KAAKszB,KAE7B+gC,EAAMC,mBAAmBC,2BAA4B1iB,IACjD,IAAI2iB,EAA2C3iB,EAAM4J,MACrD,GAAkB,MAAf5J,EAAM4J,MAAe,OACxB,IAAItN,EAAuBkmB,EAAM/mB,cAAc7d,KAAM4d,GAAOA,EAAGxrC,IAAM2yD,EAAatmB,cAClF,GAAgB,MAAbC,EAAmB,OACtB,IAAIz2C,EAAiBy2C,EAAU1wB,YAAYg3C,eAAeD,EAAaE,WAC1D,MAAVh9D,IAIAy2C,GAAakmB,EAAMvkB,mBAElB9yB,EAAK6yC,yBACLwE,EAAM3nB,gBAAgB4c,mBAAmBnb,GACzCnxB,EAAK6yC,0BAENn4D,GAAU28D,EAAMrxB,6BACfhmB,EAAK6yC,yBACLwE,EAAM3nB,gBAAgB4X,gBAAgB5sD,GACtCslB,EAAK6yC,0BAET7yC,EAAK6yC,yBACL7yC,EAAK3F,OAAOorC,YAAY+R,EAAaxwD,UACrCgZ,EAAK3F,OAAOs9C,eAAeH,EAAaxwD,UACxCgZ,EAAK6yC,yBACL7yC,EAAK43C,kBAAiB,EAAMJ,MA4GpC,OAxGAx0D,KAAKqX,OAAOw9C,yBAA0BhjB,IAC9BA,EAAMijB,WAAW/sD,OAAOsP,OAAO09C,aAAaC,WAAah1D,KAAKq+C,YAE9Dr+C,KAAKszB,KAAK2P,eAAeC,aAAaujB,sCAK9CzmD,KAAKqX,OAAO49C,0BAA2BpjB,I,MAEnC,IAAIqjB,EAAiBl1D,KAAKszB,KAAK0P,2BAA2BrD,KAAK99B,IACzB,MAArB7B,KAAKmkB,cACC,OAAhB0tB,EAAMsjB,QACND,GAAkBl1D,KAAKmkB,aAAauwC,WACpCnpD,KAAK6pD,IAAIp1D,KAAKmkB,aAAangB,SAAS0+C,WAAa7Q,EAAM7tC,SAAS0+C,YAAc,KAErC,GAA/B1iD,KAAK6vD,uBAClB7vD,KAAK40D,kBAAiB,EAAO50D,KAAKq1D,yBAC5BH,IAA+B,QAAjB,EAAInV,QAAQtE,aAAK,eAAEiZ,YAEnC10D,KAAK40D,kBAAiB,EAAM50D,KAAKq1D,yBAGzCr4C,EAAKi4C,0BAA0BpjB,EAAM7tC,UAErCgZ,EAAKs4C,uBAAuBzjB,KAKhC7xC,KAAKqX,OAAOk+C,iBAAkB1jB,IAE1B,IAAIliB,EAA+B8mB,EAAShnB,KAAK,kBAAkB,GAInE,GAHAE,EAAQ6lC,oBAAoB,QAAStB,GACrCvkC,EAAQyoB,iBAAiB,QAAS8b,EAAoB,CAAEuB,SAAS,IAE1B,MAAnCz1D,KAAKszB,KAAK4Q,sBAA+B,OAE7C,IAAIxsC,EAASsI,KAAKszB,KAAK4Q,sBAAsBmmB,uBAAuBrqD,KAAKqX,OAAOgrC,YAChF,GAAIriD,KAAKszB,gBAAgB,IAAkB,MAAV57B,EAAgB,CAY7CsI,KAAKszB,KAAKoZ,gBAAgBgpB,+BAA+Bh+D,IAEnB,MAArBsI,KAAKmkB,cACfzsB,EAAOioC,KAAK99B,IAAM7B,KAAKmkB,aAAauwC,YAEK,GAA/B10D,KAAK6vD,wBAClB7vD,KAAK40D,kBAAiB,EAAO50D,KAAKq1D,4BAO9CttD,OAAOC,UAAU2tD,uBAAuB,SAAU31D,MAElD+H,OAAOC,UAAU4tD,2BAA2B,SAAU,CAClDC,kBAAmB,CAACz/C,EAAOpS,EAAU8xD,IAC1B94C,EAAK64C,kBAAkBz/C,EAAOpS,EAAU8xD,KAIvD/tD,OAAOC,UAAU+tD,sBAAsB,SAAU,IAAI,GAAgB/1D,OAErE+H,OAAOC,UAAUguD,+BAA+B,SAAU,IAAI,GAAyBh2D,KAAKszB,OAC5FvrB,OAAOC,UAAUiuD,2BAA2B,SAAU,IAAI9G,GAAqBnvD,KAAKszB,OACpFvrB,OAAOC,UAAUkuD,0BAA0B,SAAU,IAAI5G,GAAoBtvD,KAAKszB,OAGlFvrB,OAAOC,UAAUmuD,8BAA8B,SAAU,IAAI,GAAwBn2D,KAAKszB,OAE1FtzB,KAAKqX,OAAO++C,YAAax/C,IACrB,MAAMq0B,EAAOr0B,EAAEw+B,OAAOsW,OAClB90C,EAAEw+B,OAAOh1C,OAAS2H,OAAOsP,OAAOg/C,gBAAgBC,qBAChD1/C,EAAEw+B,OAAOh1C,OAAS2H,OAAOsP,OAAOg/C,gBAAgBE,qBAAuBtrB,EAAKurB,cAGhFx5C,EAAKy5C,kBAAkB7/C,EAAEw+B,OAAOpxC,SAAS0+C,cAQ7C/Z,WAAW,KACP5gC,OAAOsP,OAAOq/C,kBACf,KAEH12D,KAAK22D,aAGL32D,KAAKqX,OAAOu/C,UAAW7hD,IAAWiI,EAAK45C,UAAU7hD,KAE1C/U,KAAKqX,OAGhB,wBACI,MAAO,CACHrT,SAAUhE,KAAKqX,OAAOw/C,cACtB3oB,aAAcluC,KAAKszB,KAAK4Q,sBAAsBriC,GAC9C6yD,UAAW10D,KAAKszB,KAAK0P,2BAA2BrD,KAAK99B,IAK7D,iBAAiBkO,EAAkBykD,GAE/B,IAAGx0D,KAAKszB,KAAK+qB,aAAb,CAEA,GAAGtuC,EACCgwC,QAAQ+W,aAAatC,EAAc,QAEhC,CACH,IAAIuC,GAAO,IAAIpO,MAAOqO,UACnBD,EAAO/2D,KAAK8vD,aAAe,IAC1B/P,QAAQkX,UAAUzC,EAAc,IAEhCzU,QAAQ+W,aAAatC,EAAc,IAEvCx0D,KAAK8vD,aAAeiH,EAIxB/2D,KAAKmkB,aAAeqwC,GAGxB,UAAUz/C,GAGN,MAAMmiD,EAAqB,CAAC/jD,EAAKhL,EAAoB+gC,EAAiBiuB,KAClE,MAAM/uD,EAAQ,IAAIL,OAAOg+C,MACrB5yC,EAAIuvC,WACJvvC,EAAI9J,OACJ8J,EAAIuvC,WACJvvC,EAAI9J,QAERrJ,KAAKqX,OAAOyuC,aAAa,cAAe,CACpC,CAAE19C,QAAO2M,KAAM5M,KAInBnI,KAAKqX,OAAOorC,YAAY,CACpBC,WAAYxZ,EACZ7/B,OAAQ8tD,KAIhB,GAAa,OAATpiD,EAAe,CACf,MAAMqB,EAAQpW,KAAKqX,OAAOgrC,WACpBr+C,EAAWhE,KAAKqX,OAAOw/C,cACvBO,EAAWhhD,EAAMihD,eAAerzD,EAAS0+C,WAAa,GAC5D,GAAsC,IAAlC0U,EAASvnD,OAAOlL,QAAQ,QAAgByyD,EAASE,YAAY9nD,SAAS,MAAO,CAE7E,KADiBxL,EAAS0+C,WAAatsC,EAAMmhD,eAAiBnhD,EAAMihD,eAAerzD,EAAS0+C,WAAa,GAAK,IACjG7yC,OAAOJ,WAAW,KAAK,CAChC,IAAI+nD,EAAkCJ,EAAShgD,OAAO,EAAGggD,EAASp1D,OAASo1D,EAAStL,WAAW9pD,QACxD,IAAnCo1D,EAASvnD,OAAOlL,QAAQ,OACxBuyD,EAAmBlzD,EAAU,KAAOwzD,EAA0B,MAAOxzD,EAAS0+C,WAAY1+C,EAASqF,OAAS,EAAImuD,EAAwBx1D,QAExIk1D,EAAmBlzD,EAAU,QAAUwzD,EAA0B,MAAOxzD,EAAS0+C,WAAY1+C,EAASqF,OAAS,EAAImuD,EAAwBx1D,WAU/J,YAAYy1D,GAGR,IAAIV,GAAO,IAAIpO,MAAOqO,UACtB,GAAID,EAAO/2D,KAAK+vD,SAAW,IAAK,OAChC/vD,KAAK+vD,SAAWgH,EAEhB,IAAIW,EAAW13D,KAAKqX,OAAOsgD,aAAan/D,IAAIuP,OAAOsP,OAAO09C,aAAa1T,UAMvE,GAJIrhD,KAAKszB,gBAAgB,IACrBtzB,KAAKszB,KAAKskC,mBAAmBC,aAAaJ,GAG1CA,GAAcC,EAAU,CACxB13D,KAAKqX,OAAOygD,cAAc,CACtBzW,SAAUoW,IAKd,IACIM,EADc/3D,KAAKqX,OAAOsgD,aAAan/D,IAAIuP,OAAOsP,OAAO09C,aAAa1T,UAC/CoW,EAC3Bz3D,KAAKqX,OAAOygD,cAAc,CACtBzW,SAAUoW,EAAaM,IAG3B,IAAIC,EAAah4D,KAAKszB,KAAK2P,eACT,MAAd+0B,GAA4C,MAAtBA,EAAWxxB,SACjCwxB,EAAWxxB,QAAQnvB,OAAOygD,cAAc,CACpCzW,SAAUoW,EAAaM,IAMnC,IAAIE,EAAYj4D,KAAKszB,KAAK2P,eAC1B,GAAiB,MAAbg1B,GAA0C,MAArBA,EAAUzxB,QAAiB,CAC7ByxB,EAAUlZ,WAAWtvB,KAAK,mBAChC+c,IAAI,CACbgH,OAAsB,IAAbikB,EAAmB,EAAK,KACjC,cAA6B,IAAbA,EAAmB,EAAK,OAE5CQ,EAAUzxB,QAAQnvB,OAAOkpC,SAS7BnY,OAAO,sBAAsBoE,IAAI,YAAairB,EAAa,MAC3DrvB,OAAO,sBAAsBoE,IAAI,cAAgBirB,EAAa,EAAK,MAEnEh9C,SAASC,gBAAgBG,MAAMC,YAAY,oBAAqB28C,EAAa,MAC7Eh9C,SAASC,gBAAgBG,MAAMC,YAAY,sBAAuB28C,EAAa,EAAI,MAGnFz3D,KAAKszB,KAAK2P,eAAeC,aAAaujB,oCAI1C,qBAAqBtvC,EAAe+gD,GAAmB,GACnD,IAAIR,EAAW13D,KAAKqX,OAAOsgD,aAAan/D,IAAIuP,OAAOsP,OAAO09C,aAAa1T,UAEnE6W,IAEI/gD,GADAugD,EAAW,GACF,EACFA,EAAW,GACT,EAEA,GAIjB,IAAIS,EAAcT,EAAWvgD,EACzBghD,GAAe,GAAKA,GAAe,IACnCn4D,KAAKo4D,YAAYD,GAKzB,aACIn4D,KAAKqX,OAAOghD,UAAU,CAElBx2D,GAAI,eAGJM,MAAO,kCAGPm2D,YAAa,CACTvwD,OAAOwwD,OAAOC,QAAUzwD,OAAOm6C,QAAQuW,OAG3CC,aAAc,KAGdC,kBAAmB,KAEnBC,mBAAoB,aAEpBC,iBAAkB,IAIlBC,IAAK,SAAUC,GAEX,OADAA,EAAGC,UAAU,+BAA+BF,MACrC,QAOnB,uBAAuBjnB,GAEnB,IAAI70B,EAAOhd,KAOX,GALe,MAAXgd,EAAK4yC,KACL5yC,EAAK3F,OAAO4hD,oBAAoBj8C,EAAK4yC,IACrC5yC,EAAK4yC,GAAK,MAGV5yC,EAAKsW,KAAK+M,iBAAiBob,OAASC,GAAiBC,OAAQ,CAE7D,IACI5mC,EADQiI,EAAK3F,OAAOgrC,WACPmI,gBAAgBxtC,EAAK3F,OAAO+2C,gBAC7C,GAAY,MAARr5C,GAAgBA,EAAK/S,OAAS,EAAG,CACjC,IACIm1B,EADYn3B,KAAKszB,KAAK4Q,sBAAsByV,UACzBC,SAAS7kC,GAChC,GAAoB,MAAhBoiB,EAAOnsB,OAAiC,MAAhBmsB,EAAOv+B,MAAe,CAC9C,IAAI4K,EAAI2zB,EAAOv+B,MAAMwH,KAAKkM,YAAY6qB,EAAOv+B,OAE7CmP,OAAOsP,OAAOyiC,SAAS/kC,EAAO,KAAM,SAAU,CAAEglC,QAAS,IAAKC,KAAMjlC,IAC5DA,EAAKvF,SAAS,WAAUuF,EAAOA,EAAKqC,OAAO,EAAGrC,EAAK/S,OAAS,IAChEgb,EAAK4yC,GAAK,CACNsJ,MAAO,WACH,MAAO,qBAEXC,WAAY,WAER,OADS/wB,OAAO,6CAA+CrzB,EAAOvR,EAAI,UAChE,IAEdqzD,YAAa,WACT,MAAO,CACH7yD,SAAU6tC,EAAM7tC,SAChBo1D,WAAY,CAACrxD,OAAOsP,OAAOgiD,gCAAgCC,MAAOvxD,OAAOsP,OAAOgiD,gCAAgCE,UAI5Hv8C,EAAK3F,OAAOmiD,iBAAiBx8C,EAAK4yC,SAatD,kBAAkBlN,GACd,IAAIhrD,EAASsI,KAAKgjC,2BAClB,GAAc,MAAVtrC,IAIJA,EAAO+hE,iBAAiB/W,GAAY,GAEU,MAA1C1iD,KAAKszB,KAAK+M,iBAAiB5iB,aAAqB,CAChD,IAAIi8C,EAAgB15D,KAAKszB,KAAK+M,iBAAiB5iB,YAAYk8C,iBAAiBjiE,EAAOioC,MAC9D,MAAjB+5B,GAAuBA,EAAcD,iBAAiB/W,GAAY,IAM9E,0BAA0B1+C,GAEN,MAAZA,IAAkBA,EAAWhE,KAAKqX,OAAOw/C,eAE7C,IAAIn/D,EAASsI,KAAKgjC,2BAClB,GAAc,MAAVtrC,EAEA,YADAsI,KAAKgwD,kBAAoBhwD,KAAKqX,OAAOotC,iBAAiBzkD,KAAKgwD,kBAAmB,KAIlF,IAAIrgC,EAAUj4B,EAAO22D,qBAAqBrqD,EAAS0+C,WAAY1+C,EAASqF,QAEpEg8C,EAAqD,GAEzD,GAAe,MAAX11B,EAAiB,CACjB,IACI6/B,EADiB7/B,EAAQ9vB,eACUrH,IAAId,GAC3C,GAAyB,MAArB83D,EACA,IAAK,IAAIC,KAAMD,EACXnK,EAAYthD,KAAK,CACbqE,MAAO,CAAE6O,YAAaw4C,EAAGpmD,OAAQ0N,gBAAiB04C,EAAGrmD,KAAM4N,UAAWy4C,EAAGpmD,OAASomD,EAAGztD,OAAQ8U,cAAe24C,EAAGrmD,MAC/GkN,QAAS,CACLijB,UAAW,yBAA0BmrB,aAAa,EAAOkV,cAAe,CACpElwC,MAAO,CAAE7nB,GAAI,gCACbg4D,UAAW,CAAEh4D,GAAI,sCACjBmC,SAAU+D,OAAOsP,OAAOyiD,kBAAkBC,SAUlE,GAAI/5D,KAAK2vD,uBAAwB,CAE7B,IAAIhuD,EAASjK,EAAOsiE,+BAA+Bh2D,GACrC,MAAVrC,GACA0jD,EAAYthD,KAAK,CACbqE,MAAO,CAAE6O,YAAa,EAAGF,gBAAiBpV,EAAOqC,SAASoF,KAAM4N,UAAW,IAAKF,cAAenV,EAAO8d,QAAQrW,MAC9GkN,QAAS,CACLijB,UAAW,qBAAsBmrB,aAAa,EAAMkV,cAAe,CAC/DlwC,MAAO,CAAE7nB,GAAI,sBACbg4D,UAAW,CAAEh4D,GAAI,sBACjBmC,SAAU+D,OAAOsP,OAAOyiD,kBAAkBC,MAE9ClY,QAAS,CACLn4B,MAAO,CAAE7nB,GAAI,sBACbmC,SAAU+D,OAAOsP,OAAOgvC,gBAAgBC,QAE5C2T,QAAS,OAOzBj6D,KAAKgwD,kBAAoBhwD,KAAKqX,OAAOotC,iBAAiBzkD,KAAKgwD,kBAAmB3K,GAIlF,2BACI,OAAOrlD,KAAKszB,KAAK0P,2BAGrB,wBAIA,mBAAmB5sB,EAAiCpS,EAChD22C,EAAiBpkC,GAGjB,IAAI2jD,EAAwBl6D,KAAKgjC,2BACjC,GAA6B,MAAzBk3B,EACA,OAAO,KAGX,IAAIvqC,EAAUuqC,EAAsB7L,qBAAqBrqD,EAAS0+C,WAAY1+C,EAASqF,QACvF,GAAe,MAAXsmB,EACA,OAGJ,IAAI9vB,EAAiB8vB,EAAQ9vB,eAGzBs6D,EAAsD,GAyB1D,OAvBAt6D,EAAekP,QAAQ,CAACqrD,EAAwB1iE,KAC5C,GAA8B,MAA1B0iE,EAAgC,CAChC,IAAI5jD,EAAqC,GACzC,IAAK,IAAIi5C,KAAM2K,EACXD,EAAcp2D,KACV,CACIke,SAAUvqB,EAAOsqB,IAAKE,KACtB,CACI9Z,MAAO,CAAE6O,YAAaw4C,EAAGpmD,OAAQ0N,gBAAiB04C,EAAGrmD,KAAM0N,cAAe24C,EAAGrmD,KAAM4N,UAAWy4C,EAAGpmD,OAASomD,EAAGztD,QAC7G+S,KAAM4lC,KAIlBnkC,EAAMxU,OAAS,IACftK,EAAOioC,KAAKiD,OAAQ,EACpBlrC,EAAOioC,KAAK4N,OAAQ,EACpB71C,EAAOioC,KAAKsR,iCAAkC,MAOnD,CACHz6B,MAAO2jD,GAKf,kBAAkB/jD,EAAiCpS,EAA2B8xD,GAG1E,IAAIp+D,EAAiBsI,KAAKszB,KAAK4Q,sBAAsBmmB,uBAAuBj0C,GAE5E,GAAc,MAAV1e,EACA,OAAO,KAGX,IAAIi4B,EAAUj4B,EAAO22D,qBAAqBrqD,EAAS0+C,WAAY1+C,EAASqF,QACxE,GAAe,MAAXsmB,EAAiB,OAAO,KAE5B,IAAIk9B,EAAOl9B,EAAQxgB,YAEnB,OAAY,MAAR09C,EAEIl9B,aAAmB,GAASA,aAAmB,GAAQA,aAAmB,GAAaA,aAAmB5uB,GAAU4uB,aAAmBjvB,EAChIgW,QAAQC,QAAQ,CACnBvO,MAAO,CACH2O,gBAAiB/S,EAAS0+C,WAAY5rC,cAAe9S,EAAS0+C,WAC9DzrC,YAAajT,EAASqF,OAAQ2N,UAAWhT,EAASqF,OAASsmB,EAAQ51B,WAAWiI,QAElFggB,IAAKtqB,EAAOsqB,MAGT,KAIRtL,QAAQC,QAAQ,CACnBvO,MAAO,CACH2O,gBAAiB81C,EAAK7oD,SAASoF,KAAM0N,cAAe+1C,EAAK7oD,SAASoF,KAClE6N,YAAa41C,EAAK7oD,SAASqF,OAAQ2N,UAAW61C,EAAK7oD,SAASqF,OAASwjD,EAAK7oD,SAAShC,QAEvFggB,IAAK6qC,EAAKn1D,OAAOsqB,OEntBvB,MAAOq4C,GAKT,OACIr6D,KAAKs6D,QAAUlyB,OAAO,WACtBA,OAAO,SAASoE,IAAI,aAAc,UAClCxsC,KAAKs6D,QAAQ5yB,OAAOU,OAChB,0FAIJpoC,KAAKu6D,YAAcv6D,KAAKs6D,QAAQ7qC,KAAK,gBACrCzvB,KAAKs6D,QAAQ9tB,IAAI,aAAc,WAGnC,QAAQz3B,GACJ,IAAIkjC,EAAO7P,OAAO,+BAAiCrzB,EAAO,UAE1D,OADA/U,KAAKu6D,YAAY7yB,OAAOuQ,GACjBA,EAGX,YAAYljC,EAAc2U,GACtB,IACIuuB,EAAO7P,OAAO,mCADQ,MAAT1e,EAAgB,GAAK,iBAAiBA,QACY3U,WAEnE,OADA/U,KAAKu6D,YAAY7yB,OAAOuQ,GACjBA,EAGX,MAAM73C,EAAco6D,GAChB,IAAIviB,EAAO7P,OAAO,qCAAqChoC,mBAAsBo6D,eAE7E,OADAx6D,KAAKu6D,YAAY7yB,OAAOuQ,GACZA,EAGhB,QAAQ+F,GAEJ,IAAIyc,EAAaryB,OAAO,wCACxBpoC,KAAKu6D,YAAY7yB,OAAO+yB,GAExB,IAAI,IAAIpjB,KAAU2G,EAAQ,CAEtB,IAAIlB,EAAU1U,OAAO,oCAAoCiP,EAAO3tB,4BAA4B2tB,EAAOhG,oBACnGyL,EAAQ5S,GAAG,QAAS,KAAOmN,EAAOxN,aAClC4wB,EAAW/yB,OAAOoV,IAI1B,YAAY/nC,GAER,IAAI+xC,EAAW1e,OAAO,4BAA4BrzB,2EAGlD,OAFA/U,KAAKu6D,YAAY7yB,OAAOof,GAEhB51B,IACJ,IAAIrwB,EAAaqwB,EAAU,UAAY,SACvC41B,EAASta,IAAI,aAAc3rC,IAKnC,QACIb,KAAKs6D,QAAQ9tB,IAAI,aAAc,UAC/BxsC,KAAKs6D,QAAQ3wC,QACbye,OAAO,SAASoE,IAAI,aAAc,YCjEpC,MAAO,GAIT,YAAoBlZ,GAAA,KAAAA,OAIpB,OACI,IAAIonC,EAAsBtyB,OAAO,uBAC7BprB,EAAOhd,KAEX06D,EAAoBxwB,GAAG,QAAUtzB,IAa7Bi9B,GAX0C,CACtC,CACIxC,QAAS,qBACTxH,SAAU,KACgB,IAAI,GAAgB7sB,EAAKsW,MAC/BuV,UAMM6xB,EAAoBj2D,SAAS6xB,KAAMokC,EAAoBj2D,SAAS+vC,IAAMkmB,EAAoBlnB,aAUlI,MAAO,GAIT,YAAoBlgB,GAAA,KAAAA,OAEhBtzB,KAAK26D,OAAS,IAAIN,GAItB,OACIr6D,KAAK26D,OAAOrc,OACZt+C,KAAK26D,OAAOC,QAAQ,mBACpB56D,KAAK26D,OAAOx6D,YAAY,iNAExB,IAAI06D,EAAe76D,KAAK26D,OAAO7nD,MAAM,WAAY,kBAC7CgoD,EAAgB96D,KAAK26D,OAAO7nD,MAAM,WAAY,kBAC9CioD,EAAgB/6D,KAAK26D,OAAO7nD,MAAM,WAAY,8BAC9CqyC,EAAYnlD,KAAK26D,OAAOx6D,YAAY,GAAI,OACxC66D,EAAUh7D,KAAK26D,OAAOM,YAAY,mBAEtCj7D,KAAK26D,OAAO3c,QAAQ,CAChB,CACI3M,QAAS,YACT3nB,MAAO,UACPmgB,SAAU,KAAO7pC,KAAK26D,OAAOnkB,UAEjC,CACInF,QAAS,KACT3nB,MAAO,QACPmgB,SAAU,KACHixB,EAAc7wB,OAAS8wB,EAAc9wB,MACpCkb,EAAUpwC,KAAK,kEAEfimD,GAAQ,GACRvwB,GAAK,iBAAkB,CAACywB,YAAaL,EAAa5wB,MAAOkxB,YAAaL,EAAc7wB,OAAQ,KACxF+wB,GAAQ,GACR1qB,MAAM,4CACNtwC,KAAK26D,OAAOnkB,SACZ7qC,IACAqvD,GAAQ,GACR7V,EAAUpwC,KAAKpJ,WC7DrC,MAAO,GAET,YAAoB2nB,GAAA,KAAAA,OAKpB,KAAA8nC,eAA2D,GAC3D,KAAAC,yBAAmC,EAEnC,QAAQjvB,GAEJ,IAAIpvB,EAAOhd,KACPqX,EAASrX,KAAKszB,KAAKixB,kBAEnB+W,EAAiB,CACjBxnB,MAAO,CACH,CACI/5C,WAAY,QAASw6C,QACrB,CACIT,MAAO,CACH,CACI/5C,WAAY,wBACZokD,OAAQ,KAAQ/V,OAAO,iBAAiBiN,QAAQ,cAMhE,CACIt7C,WAAY,aAAcw6C,QAC1B,CACIT,MAAO,CACH,CAAE/5C,WAAY,wBAAyBokD,OAAQ,KAAQ9mC,EAAOg+B,QAAQ,IAAK,OAAQ,MACnF,CAAEt7C,WAAY,yBAA0BokD,OAAQ,KAAQ9mC,EAAOg+B,QAAQ,IAAK,OAAQ,MACpF,CAAEt7C,WAAY,KACd,CAAEA,WAAY,sBAAuBokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,qCAAqCF,QAC3G,CAAE/+D,WAAY,0BAA2BokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,oCAAoCF,QAC9G,CAAE/+D,WAAY,gDAAiDokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,mCAAmCF,QACnI,CAAE/+D,WAAY,mDAAoDokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,qCAAqCF,QACxI,CAAE/+D,WAAY,2CAA4CokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,mCAAmCF,QAC9H,CAAE/+D,WAAY,8CAA+CokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,qCAAqCF,QACnI,CAAE/+D,WAAY,KACd,CAAEA,WAAY,uBAAwBokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,gBAAgBF,QACvF,CAAE/+D,WAAY,yBAA0BokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,wCAAwCF,QACjH,CAAE/+D,WAAY,KACd,CAAEA,WAAY,kCAAmCokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,6BAA6BF,QAC/G,CAAE/+D,WAAY,yCAA0CokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,gCAAgCF,QACzH,CAAE/+D,WAAY,KACd,CAAEA,WAAY,sCAAuCokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,+BAA+BF,QACrH,CAAE/+D,WAAY,KACd,CAAEA,WAAY,uBAAwBokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,kBAAkBF,QACzF,CAAE/+D,WAAY,kBAAmBokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,oBAAoBF,QACtF,CAAE/+D,WAAY,KACd,CACIA,WAAY,wCAAyCokD,OAAQ,KACzD9mC,EAAO+yB,QACPzB,WAAW,KACPtxB,EAAO2hD,UAAU,gCAAgCF,OAClD,OAGX,CAAE/+D,WAAY,4CAA6CokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,uCAAuCF,QACnI,CACI/+D,WAAY,qCAAsCokD,OAAQ,KACtD9mC,EAAO+yB,QACPzB,WAAW,KACPtxB,EAAO2hD,UAAU,kCAAkCF,OACpD,UAOvB,CACI/+D,WAAY,UAAWw6C,QACvB,CACIT,MAAO,CACH,CACI/5C,WAAY,QACZw6C,QAAS,CACLT,MAAO,CACH,CACI/5C,WAAY,OACZokD,OAAQ,KACJnhC,EAAKu+C,YAAY,UAGzB,CACIxhE,WAAY,QACZokD,OAAQ,KACJnhC,EAAKu+C,YAAY,cAMrC,CAAExhE,WAAY,KACd,CAAEA,WAAY,mCAAoCokD,OAAQ,KAAQ9mC,EAAO2hD,UAAU,oCAAoCF,QAEvH,CAAE/+D,WAAY,KACd,CAAEA,WAAY,4BAA6BokD,OAAQ,KAAQn+C,KAAKszB,KAAKjc,OAAO88C,sBAAsB,KAClG,CAAEp6D,WAAY,cAAeokD,OAAQ,KAAQn+C,KAAKszB,KAAKjc,OAAO+gD,YAAY,MAC1E,CAAEr+D,WAAY,2BAA4BokD,OAAQ,KAAQn+C,KAAKszB,KAAKjc,OAAO88C,qBAAqB,QAK5G,CACIp6D,WAAY,aAAcw6C,QAAS,CAC/BT,MAAO,CACH,CACI/5C,WAAY,oCACZokD,OAAQ,KAAOn+C,KAAKszB,KAAKkoC,wBAAwB3yB,KAAK,QAE1D,CACI9uC,WAAY,oDACZokD,OAAQ,KAAOn+C,KAAKszB,KAAKmoC,0BAA0B5yB,KAAK,WAKxE,CACI9uC,WAAY,QAASw6C,QACrB,CACIT,MAAO,CACH,CACI/5C,WAAY,yBACZs6C,KAAM,sBAEV,CACIt6C,WAAY,oBACZs6C,KAAM,6DAGV,CACIt6C,WAAY,kBAEZs6C,KAAM,0BAEV,CACIt6C,WAAY,gCACZs6C,KAAM,kBAEV,CAAEt6C,WAAY,KACd,CACIA,WAAY,mDACZs6C,KAAM,kCAEV,CACIt6C,WAAY,wBACZs6C,KAAM,0DAEV,CACIt6C,WAAY,sBACZs6C,KAAM,wDAEV,CAAEt6C,WAAY,KACd,CACIA,WAAY,iBACZokD,OAAQ,KACJxV,WAAW,KACPtxB,EAAO2hD,UAAU,8BAA8BF,OAChD,OAGX,CAAE/+D,WAAY,KACd,CACIA,WAAY,qBACZokD,OAAQ,KACkB,IAAI,GAAgBnhC,EAAKsW,MAC/BuV,SAGxB,CAAE9uC,WAAY,KACd,CACIA,WAAY,yBACZs6C,KAAM,2DAsBlB,MAARjI,IAAiBA,EAAKsvB,UAAYtvB,EAAKuvB,gBAAkBvvB,EAAKwvB,aAC9DN,EAASxnB,MAAM,GAAGS,QAAQT,MAAM/vC,KACpB,CACIhK,WAAY,+BACZs6C,KAAM,2BAKd,MAARjI,GAAiBA,EAAKsvB,UACtBJ,EAASxnB,MAAM,GAAGS,QAAQT,MAAM/vC,KACpB,CACIhK,WAAY,uBACZs6C,KAAM,oBAK1BjM,OAAO,aAAaze,QACpB3pB,KAAK67D,SAASP,EAAU,GAG5B,YAAYlhD,GACRpa,KAAKszB,KAAKskC,mBAAmBt9C,SAASF,GAG1C,SAAS0hD,EAAY7mD,GAEjB6mD,EAAK7mD,MAAQA,EAEA,GAATA,EACA6mD,EAAKrlB,SAAWrO,OAAO,cAEvB0zB,EAAKrlB,SAAWrO,OAAO,kCACvBA,OAAO,QAAQV,OAAOo0B,EAAKrlB,WAG/BqlB,EAAKrlB,SAASxL,KAAK,QAAS6wB,GAC5B,IAAK,IAAI1nB,KAAM0nB,EAAKhoB,MAAO,CACvB,GAAqB,KAAjBM,EAAGr6C,WACHq6C,EAAGqC,SAAWrO,OAAO,8CAClB,CAEH,GADAgM,EAAGqC,SAAWrO,OAAO,QAAUgM,EAAGr6C,WAAa,UAChC,MAAXq6C,EAAGC,KAAc,CACjB,IAAI0nB,EAAQ3zB,OAAO,YAAcgM,EAAGC,KAAO,8CAC3C0nB,EAAM7xB,GAAG,YAAc2H,IACnBA,EAAMG,kBACNrJ,WAAW,KACPmzB,EAAKrlB,SAASzN,QACf,OAEP+yB,EAAMr0B,OAAO0M,EAAGqC,UAChBrC,EAAGqC,SAAWslB,EAEA,MAAd3nB,EAAGG,SACHv0C,KAAK67D,SAASznB,EAAGG,QAASt/B,EAAQ,GAEtCjV,KAAKg8D,sBAAsBF,EAAM1nB,GACpB,GAATn/B,GACAm/B,EAAGqC,SAAS3N,SAAS,mBAG7BgzB,EAAKrlB,SAAS/O,OAAO0M,EAAGqC,UACxBrC,EAAGqC,SAASxL,KAAK,QAASmJ,GAG9B,IAAIp3B,EAAOhd,KACXooC,OAAO3tB,UAAUyvB,GAAG,YAAa,KAC7B,IAAK,IAAIvyC,EAAI,EAAGA,EAAI,EAAGA,IACW,MAA1BqlB,EAAKo+C,eAAezjE,KACpBqlB,EAAKo+C,eAAezjE,GAAGqxC,OACvBhsB,EAAKo+C,eAAezjE,GAAK,MAGjCqlB,EAAKq+C,yBAA0B,IAKvC,sBAAsBS,EAAY1nB,GAC9B,IAAIp3B,EAAOhd,KAEM,MAAbo0C,EAAG+J,QACH/J,EAAGqC,SAASvM,GAAG,YAAcrtB,IAASu3B,EAAG+J,OAAO/J,EAAGr6C,cAGrC,MAAdq6C,EAAGG,SACHH,EAAGqC,SAASvM,GAAG,YAAcrtB,IACzBG,EAAKi/C,YAAY7nB,GACjBp3B,EAAKq+C,yBAA0B,EAC/Bx+C,EAAGm1B,oBAGPoC,EAAGqC,SAASvM,GAAG,qBAAsB,KAC7BltB,EAAKq+C,wBACLr+C,EAAKi/C,YAAY7nB,GAE0B,MAAvCp3B,EAAKo+C,eAAeU,EAAK7mD,MAAQ,KACjC+H,EAAKo+C,eAAeU,EAAK7mD,MAAQ,GAAG+zB,OACpChsB,EAAKo+C,eAAeU,EAAK7mD,MAAQ,GAAK,SAKlDm/B,EAAGqC,SAASvM,GAAG,qBAAsB,KACU,MAAvCltB,EAAKo+C,eAAeU,EAAK7mD,MAAQ,KACjC+H,EAAKo+C,eAAeU,EAAK7mD,MAAQ,GAAG+zB,OACpChsB,EAAKo+C,eAAeU,EAAK7mD,MAAQ,GAAK,QAOtD,YAAYm/B,GAER,IAEI9d,EACAke,EAHAD,EAAUH,EAAGG,QAII,GAAjBA,EAAQt/B,OACRqhB,EAAO8d,EAAGqC,SAASzyC,WAAWsyB,KAC9Bke,EAAM,KAENle,EAAO8d,EAAGqC,SAAShyC,SAAS6xB,KAAO8d,EAAGqC,SAASlD,QAC/CiB,EAAMJ,EAAGqC,SAAShyC,SAAS+vC,KAG/BD,EAAQkC,SAASjK,IAAI,CACjBgI,IAAUA,EAAM,KAChBle,KAAWA,EAAO,OAGoB,MAAtCt2B,KAAKo7D,eAAe7mB,EAAQt/B,QAC5BjV,KAAKo7D,eAAe7mB,EAAQt/B,OAAO+zB,OAGvCuL,EAAQkC,SAAS5N,OACjB7oC,KAAKo7D,eAAe7mB,EAAQt/B,OAASs/B,EAAQkC,UCjW/C,MAAO,GAsBT,YAAYylB,GApBZ,KAAAl4D,SAAmB,EAOnB,KAAAm4D,UAAoB,GACpB,KAAAC,aAAuB,IAcnBp8D,KAAKq8D,OAASj0B,OAAO,8FACrBpoC,KAAKs8D,KAAOl0B,OAAO,6DACnBpoC,KAAKu8D,MAAQn0B,OAAO,8DACpBpoC,KAAKw8D,SAAWp0B,OAAO,+EAEvBpoC,KAAKu8D,MAAM70B,OAAO1nC,KAAKw8D,UACvBx8D,KAAKq8D,OAAO30B,OAAO1nC,KAAKs8D,KAAMt8D,KAAKu8D,OAEnCL,EAAWx0B,OAAO1nC,KAAKq8D,QAI3B,eAAe1kE,GACXqI,KAAKi7B,YAActjC,EAGvB,UAEI,IAAI8kE,EACAC,EACA1/C,EAAOhd,KACXgd,EAAKo/C,aAAe9mB,GAAkBt1C,KAAKq8D,OAAO7vB,IAAI,UACtDxvB,EAAKm/C,UAAY7mB,GAAkBt4B,EAAKu/C,MAAM/vB,IAAI,UAClDxvB,EAAK2/C,KAAO3/C,EAAKo/C,aAAep/C,EAAKm/C,UAErCn/C,EAAKq/C,OAAOnyB,GAAG,YAActzB,IAIzB,IAAIm9B,EAAIn9B,EAAE8hC,MAAQ17B,EAAKq/C,OAAO53D,SAAS6xB,KAAO,EAC9CtZ,EAAK4/C,SAAS7oB,GACd/2B,EAAKu/C,MAAM/vB,IAAI,OAAQuH,EAAI,MAE3B/2B,EAAKu/C,MAAMlnB,QAAQ,YAAa,CAACz+B,EAAEimD,YAWvC78D,KAAKu8D,MAAMryB,GAAG,YAAa,CAACtzB,EAAGm9B,KACnB,MAALA,IAAWA,EAAIn9B,EAAEimD,SACpBJ,EAAa1oB,EACb2oB,EAAc1/C,EAAKhZ,SACnBokC,OAAO,yBAAyBoE,IAAI,UAAW,QAC/CxvB,EAAKw/C,SAAS3zB,OAEdT,OAAO3tB,UAAUyvB,GAAG,yBAA2BtzB,IAC3C,IAAIkmD,EAASlmD,EAAEimD,QAAUJ,EACzBz/C,EAAK4/C,SAASF,EAAcI,KAGhC10B,OAAO3tB,UAAUyvB,GAAG,uBAAwB,KACxC9B,OAAO3tB,UAAU+vB,IAAI,wBACrBpC,OAAO3tB,UAAU+vB,IAAI,0BACrBxtB,EAAKw/C,SAASxzB,OACdZ,OAAO,yBAAyBoE,IAAI,UAAW,OAGnD51B,EAAEo7B,oBAMV,SAAS+qB,GAEFA,EAAc,IACbA,EAAc,GAGfA,EAAc/8D,KAAK28D,OAClBI,EAAc/8D,KAAK28D,MAGvB38D,KAAKgE,SAAW+4D,EAEhB/8D,KAAKu8D,MAAM/vB,IAAI,OAAQuwB,EAAc,MAGrC,IAAIC,EAAkB,CAAC,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQh9D,KAAKi7B,YAAYgiC,mBAErEC,EAAgBl9D,KAAK28D,MAAQK,EAAgBh7D,OAAS,GACtDm7D,EAAgB5xD,KAAK6xD,MAAML,EAAYG,GACxCC,GAAiBH,EAAgBh7D,OAAS,GAAGm7D,IAChD,IAEIE,EAAcL,EAAgBG,GAG9BG,EAAQD,GAFML,EAAgBG,EAAgB,GAETE,KALbN,EAAcI,EAAcD,GAAeA,GAOvEl9D,KAAKi7B,YAAYsiC,eAAiBD,EAElCt9D,KAAKi7B,YAAYuiC,6BAEjB,IAAIC,EAAc,GAAKlyD,KAAKmyD,KAAKJ,GAC9BA,GAASt9D,KAAKi7B,YAAYgiC,kBAAoB,KAC7CQ,EAAc,4BAGlBz9D,KAAKw8D,SAAShqB,KAAKirB,EAAc,gBChHnC,MAAO,GA2BT,YAAoBE,EAAgDC,GAAhD,KAAAD,oBAAgD,KAAAC,mBAXpE,KAAAC,mBAA0D,CACtD,MAAS,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC1C,MAAS,EAAC,GAAO,GAAM,GAAO,GAAO,GAAO,GAC5C,KAAQ,EAAC,GAAO,GAAM,GAAM,GAAO,GAAO,GAC1C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,QAAW,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAC9C,QAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,IAM3C79D,KAAK89D,aAAe,IAAI,GAAaH,GACrC39D,KAAK89D,aAAarU,UAElBzpD,KAAK+9D,aAAe31B,OAAO,8DAC3BpoC,KAAKg+D,aAAe51B,OAAO,8DAC3BpoC,KAAKi+D,YAAc71B,OAAO,4DAC1BpoC,KAAKk+D,gBAAkB91B,OAAO,sEAC9BpoC,KAAKm+D,gBAAkB/1B,OAAO,sEAC9BpoC,KAAKo+D,eAAiBh2B,OAAO,oEAC7BpoC,KAAKq+D,eAAiBj2B,OAAO,kEAK7Bu1B,EAAkBj2B,OAAO1nC,KAAK+9D,aAAc/9D,KAAKg+D,aAAch+D,KAAKi+D,YAChEj+D,KAAKk+D,gBAAiBl+D,KAAKm+D,gBAAiBn+D,KAAKo+D,eAAgBp+D,KAAKq+D,gBAe9E,eAAe1mE,GACXqI,KAAKi7B,YAActjC,EACnBqI,KAAK89D,aAAaQ,eAAe3mE,GACjCqI,KAAK89D,aAAalB,SAAS,KC/E7B,MAAO2B,GAMT,YAAoBxiC,EAA8BoS,EAA8B7a,GAA5D,KAAAyI,UAA8B,KAAAoS,YAA8B,KAAA7a,OAFhF,KAAAkrC,aAAuB,EAGnBx+D,KAAKs+C,OAGD,OACJt+C,KAAKs6D,QAAUlyB,OAAO,WACtBA,OAAO,SAASoE,IAAI,aAAc,UAClCxsC,KAAKs6D,QAAQ5yB,OAAOU,OAChB,yOAE2FpoC,KAAKmuC,UAAUj2C,8iBAa9G,IAAIumE,EAAer2B,OAAO,uBACtBprB,EAAOhd,KAEX,IAAI,IAAI+C,KAAS/C,KAAK+7B,QAClB,IAAI,IAAI2iC,KAAW37D,EAAM47D,SAAS,CAC9B,IAAIC,EAAex2B,OAAO,oCACtBy2B,EAAgBz2B,OAAO,oCAAoCrlC,EAAM7K,cACjE4mE,EAAe12B,OAAO,mCAAmCs2B,EAAQK,WAAWL,EAAQM,sBACxFJ,EAAal3B,OAAOm3B,EAAeC,GACnCL,EAAa/2B,OAAOk3B,GACpBA,EAAa10B,GAAG,YAAa,KACzB00B,EAAa7sB,YAAY,aACxB/0B,EAAKwhD,cAAgBI,EAAarnB,SAAS,aAAe,GAAK,EAC/DnP,OAAO,2BAA2BrzB,KAAQiI,EAAKwhD,aAAR,gCAE5CI,EAAa3zB,KAAK,UAAWyzB,GAC7BE,EAAa3zB,KAAK,QAASloC,GAInCqlC,OAAO,0BAA0B8B,GAAG,QAAS,KACzC,IAAI1hC,EAAqB4/B,OAAO,0BAA0B6B,MACzC,MAAdzhC,GAAoC,IAAdA,EACrBuiC,EAAE,uBAAuBlC,OAEzBkC,EAAE,uBAAuBk0B,KAAK,CAAC/8D,EAAOytB,KAClC,IAAI8mB,EAAWrO,OAAOzY,GAClB5sB,EAAkB0zC,EAASxL,KAAK,SAChCyzB,EAAoBjoB,EAASxL,KAAK,YAC3BloC,EAAM7K,KAAO,IAAMwmE,EAAQK,QAAU,IAAML,EAAQM,cACtDr6D,QAAQ6D,IAAe,EAC3BiuC,EAAS5N,OAET4N,EAASzN,WASzBhpC,KAAKu6D,YAAcv6D,KAAKs6D,QAAQ7qC,KAAK,gBACrCzvB,KAAKs6D,QAAQ9tB,IAAI,aAAc,WAE/BpE,OAAO,wBAAwB8B,GAAG,QAAS,KAAQwK,OAAOqL,QAAQmf,SAClE92B,OAAO,4BAA4B8B,GAAG,QAAS,KAAOltB,EAAKmiD,wBAE3Dn/D,KAAKszB,KAAKghC,mBAAmB8K,kCAAkC,KAC3DpiD,EAAKw5B,UAKb,sBAEI,IAAInI,EAAwB,GAC5BtD,EAAE,uBAAuBk0B,KAAK,CAAC/8D,EAAOytB,KAClC,IAAI8mB,EAAWrO,OAAOzY,GACtB,GAAG8mB,EAASc,SAAS,aAAa,CAC9B,IAAImnB,EAAoBjoB,EAASxL,KAAK,WACtCoD,EAAYtqC,KAAK26D,EAAQ78D,OAIjC6yC,OAAOqL,QAAQmf,OAEfl/D,KAAKszB,KAAK0pB,eAAeqiB,wBAAwBr/D,KAAKmuC,UAAW,KAAME,EAAcrjC,IACjF,GAAa,MAATA,EAAe,CACf,IAAIgyC,EAAiBh9C,KAAKszB,KAAK0pB,eAC3BhZ,EAAKgZ,EAAepR,yBAA2BoR,EAAenR,kBAClEyE,MAAM,iBAAiBtwC,KAAKmuC,UAAUj2C,iBAAiBm2C,EAAYrsC,uDAAuDgiC,wCAE1HsM,MAAMtlC,KAOlB,QACIhL,KAAKs6D,QAAQ9tB,IAAI,aAAc,UAC/BxsC,KAAKs6D,QAAQ3wC,QACbye,OAAO,SAASoE,IAAI,aAAc,YCpGpC,MAAO,GAaT,YAAoBlZ,EAAoB6mB,GAApB,KAAA7mB,OAAoB,KAAA6mB,sBAXxC,KAAAmlB,qBAA+B,KAE/B,KAAAC,yBAAqC,GAshBrC,KAAAC,eAAyB,KAzgBzB,UAEIx/D,KAAK01C,UAAY,IAAIwD,GAAUl5C,KAAKm6C,qBAEpCn6C,KAAKy/D,oBAELz/D,KAAK0/D,yBAIT,oBAEI,IAAI1iD,EAAOhd,KAEXA,KAAK4vC,cAAgB,IAAI,GAAe5vC,KAAK01C,UAAW,yBAA0B,IAC9E,oBAAqB,gBAAiB,QAAQ,GAElD11C,KAAK4vC,cAAciH,mBAEf,CAAC2C,EAAkBmmB,KAEf,GAAkC,MAA9B3iD,EAAKsW,KAAKwc,iBAEV,OADAQ,MAAM,gDACC,KAGX,IAAIU,EAAU,CACV94C,KAAMshD,EAAiBthD,KACvB0qC,OAAO,EACP2K,OAAO,EACPx4B,KAAM,GACN0yC,qBAAsB,KACtBgB,eAAgB,KAChBmX,+BAA+B,EAC/B5vB,QAAS,EACTkB,aAAcsI,EACdvI,iCAAiC,GAEjCl5C,EAAI,IAAI,GAAOi5C,EAAGh0B,EAAKsW,MACVtW,EAAKsW,KAAKwc,iBAAiBryB,YACjC2zB,UAAUr5C,GACrBilB,EAAKsnC,gBAAgBvsD,GACrBilB,EAAKsW,KAAK0pB,eAAe6iB,eAAe9nE,EAAGilB,EAAKsW,KAAKwc,iBAAkB9yB,EAAKsW,KAAKua,kBAC5E7iC,IACgB,MAATA,EACA20D,EAAuC5nE,GAEvCu4C,MAAM,uCAO1BtwC,KAAK4vC,cAAc0I,eACf,CAAC5gD,EAAgBijD,KACbA,EAAUA,EAAQvjC,OAAO,EAAG,IAC5B,IAAIuoB,EAAOjoC,EAAOioC,KAKlB,OAHAA,EAAKznC,KAAOyiD,EACZhb,EAAK4N,OAAQ,EACbvwB,EAAKsW,KAAK0pB,eAAe1Q,cAClBqO,GAGf36C,KAAK4vC,cAAcgJ,eACf,CAAClhD,EAAgBooE,KACb9iD,EAAKsW,KAAK0pB,eAAe+iB,0BAA0B,OAAQroE,EAAOioC,KAAK99B,GAAKmJ,IAC3D,MAATA,GACAgS,EAAKsW,KAAKwc,iBAAiBryB,YAAYsyB,aAAar4C,GACpDooE,KAEAxvB,MAAM,uCAMlBtwC,KAAK4vC,cAAc2I,oBAAuBiB,IAEtC,IAAIwmB,EAAsC,GAE1C,KAAKhjD,EAAKsW,KAAK8Y,KAAKwvB,YAAc5+C,EAAKsW,KAAK8Y,KAAKsvB,UAAY1+C,EAAKsW,KAAK8Y,KAAKuvB,gBAAgB,CAI9D,MAHGniB,EAAiB5I,gBAC5BjR,KAEV8oB,eACJuX,EAAQj8D,KAAK,CACTstC,QAAS,4BACTxH,SAAWla,IAEP,IAAIgQ,EAAgBhQ,EAAQihB,gBAAiBjR,K9BxGvE,IAAuB+oB,E8ByGG/oB,EAAK8oB,e9BxG5B,GAAG7V,IADiB8V,E8ByGsC,IAAIC,M9BxG/CG,cAAclW,GAAO8V,EAAKK,WAAa,MAAML,EAAKM,kBAAkBpW,GAAO8V,EAAKuX,eAAertB,GAAO8V,EAAKwX,gB8ByGnGvgC,EAAK4N,OAAQ,EACbvwB,EAAKsW,KAAK0pB,eAAe1Q,YAAY,MAAM,GAC3CtvB,EAAKmjD,qBAAqBxgC,MAIlCqgC,EAAQj8D,KAAK,CACTstC,QAAS,mCACTxH,SAAWla,IAEP,IAAIgQ,EAAgBhQ,EAAQihB,gBAAiBjR,KAC7CA,EAAK8oB,eAAiB,KACtB9oB,EAAK4N,OAAQ,EACbvwB,EAAKsW,KAAK0pB,eAAe1Q,YAAY,MAAM,GAC3CtvB,EAAKmjD,qBAAqBxgC,MAQ1C,OAAOqgC,GAKfhgE,KAAK4vC,cAAcoH,eACdt/C,IACGslB,EAAKsnC,gBAAgB5sD,IAI7BsI,KAAKogE,mBAAqBh4B,OAAO,gIAEjCpoC,KAAKogE,mBAAmBl2B,GAAG,YAActzB,IAErC5W,KAAKszB,KAAK4Q,sBAAsB6Y,4BAEhCnmC,EAAEo7B,oBAGNhyC,KAAK4vC,cAAcyoB,UAAUr4D,KAAKogE,oBAClCpgE,KAAKogE,mBAAmBp3B,OAI5B,qBAAqBrJ,G,QACjB,IAAIid,EAA+C,QAArC,EAAqB,QAArB,EAAGjd,aAAI,EAAJA,EAAMuR,oBAAY,eAAEwG,sBAAc,eAAEjoB,KAAK,gCAC1D,GAAkB,MAAdmtB,EAAoB,OAExBA,EAAWntB,KAAK,sBAAsBkV,SAEtC,IAAI5hC,EAAgB,KAChB2F,EAAgB,GAUpB,GAT0B,MAAvBi3B,EAAK8oB,iBACJ1lD,EAAQ,eACR2F,EAAQ,oCAAsCi3B,EAAK8oB,eAChD9oB,EAAK8nB,uBACJ1kD,EAAQ,yBACR2F,EAAQ,yBAIH,MAAT3F,EAAe,CACf,IAAIs9D,EAAqBj4B,OAAO,iCAAiCrlC,aAAiB2F,aAClFk0C,EAAWjG,QAAQ0pB,GAChBt9D,EAAM4B,QAAQ,cAAgB,IAC7B07D,EAAmBn2B,GAAG,YAActzB,GAAMA,EAAEo7B,mBAC5CquB,EAAmBn2B,GAAG,QAAUtzB,IAC5BA,EAAEo7B,sBAUlB,yBAEI,IAAIh1B,EAAOhd,KAEXA,KAAKuwC,mBAAqB,IAAI,GAAevwC,KAAK01C,UAAW,aAAc,IACvE,yBAA0B,qBAAsB,aAAa,GAEjE11C,KAAKuwC,mBAAmBsG,mBAEpB,CAAC2C,EAAkBmmB,KAEf,IAAI/xB,EAAmB5wB,EAAKsW,KAAK8Y,KAAKvqC,GACJ,MAA/Bmb,EAAKsW,KAAKua,oBACTD,EAAW5wB,EAAKsW,KAAKua,mBAGzB,IAAIG,EAAe,IAAI,GAAUwL,EAAiBthD,KAAM8kB,EAAKsW,KAAMsa,GACnE5wB,EAAKsW,KAAKga,cAAcvpC,KAAKiqC,GAE7BhxB,EAAKsW,KAAK0pB,eAAesjB,oBAAoBtyB,EAAGhxB,EAAKsW,KAAKua,kBAAoB7iC,IAC7D,MAATA,GACAgS,EAAK4yB,cAAc2wB,iBAAgB,GACnCZ,EAAuC3xB,GACvChxB,EAAKssC,mBAAmBtb,GACxBA,EAAEwyB,wBAAwBhnB,IAE1BlJ,MAAM,uCAMtBtwC,KAAKuwC,mBAAmB+H,eACpB,CAACnK,EAAsBwM,KACnBA,EAAUA,EAAQvjC,OAAO,EAAG,IAC5B+2B,EAAUj2C,KAAOyiD,EACjBxM,EAAUZ,OAAQ,EAClBvwB,EAAKsW,KAAK0pB,eAAe1Q,cAClBqO,GAGf36C,KAAKuwC,mBAAmBqI,eACpB,CAACzK,EAAsBwxB,KACnB3iD,EAAKsW,KAAK0pB,eAAe+iB,0BAA0B,YAAa5xB,EAAUtsC,GAAKmJ,IAC9D,MAATA,GACAgS,EAAKsW,KAAKmtC,gBAAgBtyB,GAC1BnxB,EAAK4yB,cAAc2wB,gBAAgBvjD,EAAKsW,KAAKga,cAActrC,OAAS,GACpE29D,KAEArvB,MAAM,uCAMtBtwC,KAAKuwC,mBAAmByG,eACnB7I,IACGnxB,EAAKsW,KAAK0pB,eAAe1Q,YAAY,KACjCtvB,EAAKssC,mBAAmBnb,MAIpCnuC,KAAK0gE,YAAct4B,OAAO,uHAE1BpoC,KAAK0gE,YAAYx2B,GAAG,YAActzB,IAE9BoG,EAAKsW,KAAK0pB,eAAe1Q,YAAY,KACjCtvB,EAAK2jD,wBAGT3jD,EAAKsW,KAAK2kC,UAAU2I,kBAEpBhqD,EAAEo7B,oBAGNhyC,KAAKuwC,mBAAmB8nB,UAAUr4D,KAAK0gE,aACvC1gE,KAAK0gE,YAAY13B,OAEjBhpC,KAAKuwC,mBAAmBgI,oBAAuBsoB,IAE3C,IAAIb,EAAsC,GAuH1C,OArHAA,EAAQj8D,KAAK,CACTstC,QAAS,cACTxH,SAAWla,IACP3vB,KAAKszB,KAAK0pB,eAAe8jB,uBAAuBnxC,EAAQihB,gBACpD,CAAC5lC,EAAe+1D,KACZ,GAAa,MAAT/1D,GAAkC,MAAjB+1D,EAAuB,CACxC,IAAIC,EAA0B,GAAU7jB,gBAAgB4jB,EAAe/gE,KAAKszB,MAC5EtzB,KAAKszB,KAAKga,cAAcvpC,KAAKi9D,GAC7BA,EAAa9vB,aAAe,CACxBh5C,KAAM8oE,EAAa9oE,KACnB04C,gBAAiBowB,EACjBnwB,UAAyC,MAA9BmwB,EAAapyB,cAAwB,YAAc,cAGlE5uC,KAAKuwC,mBAAmBI,WAAWqwB,EAAa9vB,cAChDlxC,KAAKuwC,mBAAmBC,eAEf,MAATxlC,GACAslC,MAAMtlC,QAMvBhL,KAAKszB,KAAK8Y,KAAKwvB,YAAc57D,KAAKszB,KAAK2tC,gBAAgBC,WAAWlrB,SAASh0C,OAAS,GACnFg+D,EAAQj8D,KAAK,CACTstC,QAAS,yBACTxH,SAAWla,MACX4kB,QAASv0C,KAAKszB,KAAK2tC,gBAAgBC,WAAWlrB,SAASpzC,IAAKmuC,IACjD,CACHM,QAASN,EAAG74C,KACZ2xC,SAAWla,IACP,IAAIye,EAAc2C,EAAGH,gBAEjBzC,EAAuBxe,EAAQihB,gBAEnC5wC,KAAKszB,KAAK0pB,eAAeqiB,wBAAwBlxB,EAAWC,EAAQ,KAAOpjC,IACvE,GAAa,MAATA,EAAe,CACf,IAAIgyC,EAAiBh9C,KAAKszB,KAAK0pB,eAC3BhZ,EAAKgZ,EAAepR,yBAA2BoR,EAAenR,kBAClEyE,MAAM,iBAAmBnC,EAAUj2C,KAAO,wBAA0Bk2C,EAAOl2C,KAAO,mCACpE8rC,EAAK,uCAEnBsM,MAAMtlC,UAQ9B,CACIqmC,QAAS,yCACTxH,SAAWla,IACP,IAAIoM,EAAuB/7B,KAAKszB,KAAK2tC,gBAAgBC,WAAWlrB,SAASpzC,IAAImuC,GAAMA,EAAGH,iBAClFzC,EAAuBxe,EAAQihB,gBACnC,IAAI2tB,GAA2BxiC,EAASoS,EAAWnuC,KAAKszB,SAMhEtzB,KAAKszB,KAAK6tC,cAAgBnhE,KAAKszB,KAAKua,mBAAqB7tC,KAAKszB,KAAK8Y,KAAKvqC,KACT,MAA3Dg/D,EAA0BjwB,gBAAgBhC,cAC1CoxB,EAAQj8D,KAAK,CACTstC,QAAS,wBACTxH,SAAWla,IACP,IAAIwe,EAAuBxe,EAAQihB,gBAEnC5zB,EAAKsW,KAAK8tC,wBAAwBv4B,KAAKsF,IAE3CoG,QAAS,QAuBbyrB,EAAQj8D,KAAK,CACTstC,QAAS,iCACTxH,SAAWla,IACoBA,EAAQihB,gBACzBmM,+BAGlBijB,EAAQj8D,KAAK,CACTstC,QAAS,0BACT3nB,MAAO,UACPmgB,SAAWla,IACP,IAAIwe,EAAuBxe,EAAQihB,gBACnCzC,EAAUS,cAAgB,KAC1BT,EAAUZ,OAAQ,EAClBvtC,KAAKszB,KAAK0pB,eAAe1Q,YAAY,KACjCtvB,EAAKuzB,mBAAmB8wB,gBAAgB1xC,EAAS,aACjDwe,EAAUqyB,wBAAwB7wC,KACnC,QAMZqwC,GAKf,sBACIhgE,KAAKszB,KAAK2tC,gBAAgBK,uBAC1BthE,KAAKszB,KAAK0pB,eAAepR,yBAA2B5rC,KAAKszB,KAAK0pB,eAAetR,4BAC7E1rC,KAAK0gE,YAAY13B,OACjBhpC,KAAK4vC,cAAc2wB,gBAAgBvgE,KAAKszB,KAAKga,cAActrC,OAAS,GAGxE,YAAYmsC,GAER,IAAIj2C,EAAoB,MAAbi2C,EAAoB,2BAA6BA,EAAUj2C,KAKtE,GAHA8H,KAAK4vC,cAAc2xB,WAAWrpE,GAC9B8H,KAAK4vC,cAAc/M,QAEoB,MAAnC7iC,KAAKszB,KAAK4Q,sBACV,IAAK,IAAIxsC,KAAUsI,KAAKszB,KAAK4Q,sBAAsBzmB,YAAY2F,YAAW,GACtE1rB,EAAOioC,KAAKuR,aAAe,KAInC,GAAiB,MAAb/C,EAAmB,CACnB,IAAIqzB,EAAuB,GAE3B,IAAK,IAAIzpE,KAAKo2C,EAAU1wB,YAAY2F,YAAW,GAC3Co+C,EAAWz9D,KAAKhM,GAGpBypE,EAAW7pB,KAAK,CAACzwC,EAAG0wC,IAAe1wC,EAAEy4B,KAAKznC,KAAO0/C,EAAEjY,KAAKznC,KAAO,EAAIgP,EAAEy4B,KAAKznC,KAAO0/C,EAAEjY,KAAKznC,MAAQ,EAAI,GAEpG,IAAK,IAAIH,KAAKypE,EAEVzpE,EAAE4nC,KAAKuR,aAAe,CAClBh5C,KAAMH,EAAE4nC,KAAKznC,KACb04C,gBAAiB74C,GAGrBiI,KAAK4vC,cAAce,WAAW54C,EAAE4nC,KAAKuR,cACrClxC,KAAKmgE,qBAAqBpoE,EAAE4nC,MAGhC3/B,KAAK4vC,cAAcY,gBAK3B,iBAAiBlD,GAEbttC,KAAK4vC,cAAc/M,QACnB7iC,KAAKuwC,mBAAmB1N,QAExB,IAAK,IAAImL,KAAKV,EACVU,EAAEkD,aAAe,CACbh5C,KAAM81C,EAAE91C,KACR04C,gBAAiB5C,EACjB6C,UAA8B,MAAnB7C,EAAEY,cAAwB,YAAc,cAGvD5uC,KAAKuwC,mBAAmBI,WAAW3C,EAAEkD,cAErClD,EAAEwyB,wBAAwBxyB,EAAEkD,cAGhClxC,KAAKuwC,mBAAmBC,eACxBxwC,KAAK4vC,cAAc2wB,gBAAgBjzB,EAActrC,OAAS,GAM9D,iBAAiBmsC,EAAsB+W,GACnC,GAAqB,MAAjBA,EACJ,IAAK,IAAIntD,KAAKo2C,EAAU1wB,YAAY2F,YAAW,GAAQ,CACnD,IAAIq+C,EAAqBvc,EAAc1sD,IAAIT,GACvC2pE,EAAsC,MAAdD,GAAoC,GAAdA,EAAmB,GAAK,IAAMA,EAAa,IAE7FzhE,KAAK4vC,cAAc+xB,qBAAqB5pE,EAAE4nC,KAAKuR,aAAcwwB,EAAa,kBAIlF,6BAA6B1zB,GACH,MAAnBA,EAAEY,eAAyBZ,EAAEJ,UAAY5tC,KAAKszB,KAAK8Y,KAAKvqC,IACvD7B,KAAKogE,mBAAmBv3B,OAEnB7oC,KAAKszB,KAAK8Y,KAAKW,SAAS60B,cAAcC,sBAEvC,GAAO7e,WAAW,mBAAoBhjD,KAAKszB,KAAMtzB,KAAKogE,qBAO1DpgE,KAAKogE,mBAAmBp3B,OAIhC,mBAAmBgF,GAWf,GATAhuC,KAAKuwC,mBAAmB0G,OAAOjJ,GAAG,GAE9BhuC,KAAKszB,KAAK2H,YAAYwgB,OAASC,GAAiBiO,SAChD3pD,KAAKszB,KAAK2H,YAAY6mC,OAG1B9hE,KAAKszB,KAAKwc,iBAAmB9B,EAC7BhuC,KAAK+hE,YAAY/zB,GAER,MAALA,EAAW,CACX,IAAIg0B,EAAmBh0B,EAAEvwB,YAAY2F,YAAW,GAEnB,MAAzB4qB,EAAE2O,oBACF38C,KAAKskD,gBAAgBtW,EAAE2O,qBAChBqlB,EAAiBhgE,OAAS,EACjChC,KAAKskD,gBAAgB0d,EAAiB,IAEtChiE,KAAKskD,gBAAgB,MAGzB,IAAK,IAAIvsD,KAAKiqE,EACVjqE,EAAE4nC,KAAKiD,OAAQ,EAGY,GAA3Bo/B,EAAiBhgE,QAAgBhC,KAAKszB,KAAK8Y,KAAKW,SAAS60B,cAAcK,mBAEvE,GAAOjf,WAAW,gBAAiBhjD,KAAKszB,KAAMtzB,KAAK4vC,cAAcsG,iBAIrEl2C,KAAKkiE,6BAA6Bl0B,QAGlChuC,KAAKskD,gBAAgB,MAM7B,wBACI,IAAI6d,EAAMniE,KAAKgjC,2BACJ,MAAPm/B,IACAA,EAAIxiC,KAAK5qB,KAAOotD,EAAIp/B,iCAK5B,gBAAgBhrC,GAEZiI,KAAKszB,KAAK2kC,UAAUzO,gBAAgBnC,eAET,MAAvBrnD,KAAKw/D,iBACLx/D,KAAKw/D,eAAe4C,mCACpBpiE,KAAKw/D,eAAe7/B,KAAK5qB,KAAO/U,KAAKw/D,eAAez8B,gCACpD/iC,KAAKw/D,eAAe6C,YAAcriE,KAAKszB,KAAKixB,kBAAkB+d,iBAGzD,MAALvqE,GACAiI,KAAKszB,KAAKixB,kBAAkB2D,SAASngD,OAAOsP,OAAOmwC,YAAY,yBAA0B,SACzFxnD,KAAKszB,KAAKixB,kBAAkBuT,cAAc,CAAE9P,UAAU,MAEtDhoD,KAAKszB,KAAKixB,kBAAkBuT,cAAc,CAAE9P,UAAU,IACtDhoD,KAAKszB,KAAKixB,kBAAkB2D,SAASnwD,EAAEqe,OACR,MAA5BpW,KAAKszB,KAAK2P,gBAAwBjjC,KAAKszB,KAAK2P,eAAeC,aAAaC,uBAAuBprC,EAAEkb,cAElE,MAA/Blb,EAAE4nC,KAAK8nB,qBACNznD,KAAKszB,KAAK2kC,UAAUzO,gBAAgBnB,6BAEpCroD,KAAKszB,KAAK2kC,UAAUzO,gBAAgB+Y,8BAOhD,+BAA+BxqE,GAC3BiI,KAAK4vC,cAAcqH,OAAOl/C,GAAG,GAE7BiI,KAAKw/D,eAAiBznE,EAED,MAAjBA,EAAEsqE,cACFriE,KAAKszB,KAAKjc,OAAOw4C,yBACjB7vD,KAAKszB,KAAKixB,kBAAkBie,iBAAiBzqE,EAAEsqE,aAC/CriE,KAAKszB,KAAKjc,OAAOw4C,0BAGrB93D,EAAE0qE,6BAEFziE,KAAK0iE,yBAAyB3qE,GAE9BiI,KAAK2iE,qBAELh6B,WAAW,KACF3oC,KAAKszB,KAAKixB,kBAAkBoT,aAAan/D,IAAIuP,OAAOsP,OAAO09C,aAAa/M,WACzEhoD,KAAKszB,KAAKixB,kBAAkBna,SAEjC,KAKC,qBAEJ,GAAIpqC,KAAKs/D,sBAAwBt/D,KAAKgjC,4BAAiE,MAAnChjC,KAAKgjC,2BAAoC,CACzG,IAAIh/B,EAAWhE,KAAK4iE,uBAChBx6D,EAAQ,CACR6O,YAAajT,EAASqF,OAAQ0N,gBAAiB/S,EAASoF,KACxD4N,UAAWhT,EAASqF,OAASrF,EAAShC,OAAQ8U,cAAe9S,EAASoF,MAG1EpJ,KAAKszB,KAAKixB,kBAAkBse,qCAAqCz6D,GACjEpI,KAAKu/D,yBAA2Bv/D,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAKu/D,yBAA0B,CACxG,CACIn3D,MAAOA,EACPkO,QAAS,CACLijB,UAAW,0BAA2BmrB,aAAa,EACnDkV,cAAe,CACXlwC,MAAO,UACP1lB,SAAU+D,OAAOsP,OAAOyiD,kBAAkBgJ,QAE9CjhB,QAAS,CACLn4B,MAAO,UACP1lB,SAAU+D,OAAOsP,OAAOgvC,gBAAgBC,UAIpD,CACIl+C,MAAOA,EACPkO,QAAS,CAAEysD,uBAAwB,qCAOnD,2BAA2BpjC,EAAY37B,GAGnC,GAAY,MAAR27B,EACA,OAGJ,IAAIjoC,EAASsI,KAAKszB,KAAKwc,iBAAiBryB,YAAYk8C,iBAAiBh6B,GACvD,MAAVjoC,IAIJsI,KAAKs/D,qBAAuB5nE,EAC5BsI,KAAK4iE,uBAAyB5+D,EAE1BtM,GAAUsI,KAAKgjC,2BACfhjC,KAAKskD,gBAAgB5sD,GAErBsI,KAAK2iE,sBAKb,6BACQ3iE,KAAKgjC,4BAA8BhjC,KAAKs/D,sBACxCt/D,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAKu/D,yBAA0B,IAEhFv/D,KAAKs/D,qBAAuB,KAC5Bt/D,KAAKu/D,yBAA2B,GAGpC,2BACI,IAAIlyB,EAAKrtC,KAAKszB,KAAKwc,iBACnB,OAAU,MAANzC,EAAmB,KAEhBA,EAAGsP,oBAGd,yBAAyB5kD,GACrB,GAAS,MAALA,EAAW,OACf,IAAIs1C,EAAKrtC,KAAKszB,KAAKwc,iBACfzC,EAAGsP,qBAAuB5kD,IAC1Bs1C,EAAGsP,oBAAsB5kD,EACzBs1C,EAAGE,OAAQ,EACXx1C,EAAE4nC,KAAKiD,OAAQ,GAIvB,iBAAiBlZ,GACb,IAAI2nB,EAES,MAAT3nB,GACAA,EAAQ,cACR2nB,EAAU,oBAEVA,EAAU,qBAGdrxC,KAAK4vC,cAAcuG,aAAa96B,SAASmxB,IAAI,mBAAoB9iB,GACjE1pB,KAAKuwC,mBAAmB4F,aAAa96B,SAASmxB,IAAI,mBAAoB9iB,GAEtE1pB,KAAKuwC,mBAAmBgxB,WAAWlwB,GAGvC,aAAa1R,GACT,OAAO,IAAI,GAAOA,EAAM3/B,KAAKszB,OCnsB/B,MAAO,GAgBT,YAAY0vC,EAA6Cn5B,GAAA,KAAAA,WAZzD,KAAA7lC,SAAmB,EAKnB,KAAAi/D,WAAqB,GACrB,KAAAC,cAAwB,IAExB,KAAAC,QAAkB,GAClB,KAAAC,QAAkB,EAId,IAAIC,EAAoBj7B,OAAO,2EAC/B46B,EAAet7B,OAAO27B,GACtB,IAOIC,EACA5G,EARA6G,EAAkBn7B,OAAO,4DAC7Bi7B,EAAkB37B,OAAO67B,GACzBvjE,KAAKu8D,MAAQn0B,OAAO,6DACpBi7B,EAAkB37B,OAAO1nC,KAAKu8D,OAC9Bv8D,KAAKwjE,oBAAsBp7B,OAAO,8CAClCpoC,KAAKu8D,MAAM70B,OAAO1nC,KAAKwjE,qBAIvB,IAAIxmD,EAAOhd,KACXgd,EAAKkmD,cAAgB5tB,GAAkB+tB,EAAkB72B,IAAI,WAC7DxvB,EAAKimD,WAAa3tB,GAAkBt4B,EAAKu/C,MAAM/vB,IAAI,WACnDxvB,EAAKymD,KAAOzmD,EAAKkmD,cAAgBlmD,EAAKimD,WAEtCM,EAAgBr5B,GAAG,YAActzB,IAE7B,IAAIo9B,EAAIp9B,EAAE+hC,MAAQ0qB,EAAkB5+D,SAAS+vC,IAAM,EACnDx3B,EAAK0mD,QAAQ1vB,GACbh3B,EAAKu/C,MAAM/vB,IAAI,MAAOwH,EAAI,MAE1Bh3B,EAAKu/C,MAAMlnB,QAAQ,YAAa,CAACz+B,EAAE+sD,YAKvC3jE,KAAKu8D,MAAMryB,GAAG,YAAa,CAACtzB,EAAGo9B,KACnB,MAALA,IAAWA,EAAIp9B,EAAE+sD,SACpBL,EAAatvB,EACb0oB,EAAc1/C,EAAKhZ,SACnBhE,KAAKwjE,oBAAoB36B,OAEzBT,OAAO3tB,UAAUyvB,GAAG,wBAA0BtzB,IAC1C,IAAIw9C,EAASx9C,EAAE+sD,QAAUL,EACzBtmD,EAAK0mD,QAAQhH,EAActI,KAG/BhsB,OAAO3tB,UAAUyvB,GAAG,sBAAuB,KACvC9B,OAAO3tB,UAAU+vB,IAAI,uBACrBpC,OAAO3tB,UAAU+vB,IAAI,yBACrBxqC,KAAKwjE,oBAAoBx6B,SAG7BpyB,EAAEo7B,oBAINgxB,EAAe94B,GAAG,aAAetzB,IACzB,GAAYgtD,eAChBP,EAAkBQ,WAGtBb,EAAe94B,GAAG,aAAetzB,IACzB,GAAYgtD,eAChBP,EAAkBS,YAGtB,IAAI/L,GAAU,EAAM/3D,KAAKmjE,UAAUnjE,KAAKojE,QAAUpjE,KAAKmjE,SACvDnjE,KAAKgE,SAAW+zD,GAAQ/3D,KAAKkjE,cAAgBljE,KAAKijE,YAClDjjE,KAAKu8D,MAAM/vB,IAAI,MAAOxsC,KAAKgE,SAAW,MAG1C,QAAQ+4D,GAEDA,EAAc,IACbA,EAAc,GAGfA,EAAc/8D,KAAKyjE,OAClB1G,EAAc/8D,KAAKyjE,MAGvBzjE,KAAKgE,SAAW+4D,EAEhB/8D,KAAKu8D,MAAM/vB,IAAI,MAAOuwB,EAAc,MAEpC,IAAIgH,EAAahH,GAAa/8D,KAAKkjE,cAAgBljE,KAAKijE,YACxDc,EAAa/jE,KAAKmjE,QAAUY,GAAY/jE,KAAKojE,QAAUpjE,KAAKmjE,SAE5D,IAAIa,EAAMz4D,KAAK04B,MAAmB,IAAb8/B,GAAoB,KACzC/jE,KAAKwjE,oBAAoBhxB,KAAKwxB,GAEV,MAAjBhkE,KAAK6pC,UACJ7pC,KAAK6pC,SAASk6B,IAnGR,GAAAH,eAAwB,ECGnC,ICJKK,GCsBAvoB,GFhBN,MAAO,GAsBT,YAAYwoB,EAA0C5wC,GAAA,KAAAA,OAnBtD,KAAAywC,WAAqB,EAUrB,KAAAI,aAAkE,GAClE,KAAAC,SAAW,IACX,KAAAC,YAAc,EACd,KAAAC,iBAAmB,GACnB,KAAAC,QAAUvkE,KAAKskE,iBACf,KAAAE,SAAWxkE,KAAKskE,iBAMZtkE,KAAKykE,YAAcr8B,OAAO,0FAC1B87B,EAAax8B,OAAO1nC,KAAKykE,aAEzB,IAAIC,EAAct8B,OAAO,eACzB87B,EAAax8B,OAAOg9B,GACpBA,EAAY57B,SAAS,iBACrB47B,EAAYl4B,IAAI,CAACm4B,SAAU,OAAQ3gE,SAAU,WAAYuvC,MAAO,OAAQC,OAAQ,SAEhFxzC,KAAK4kE,QAAUx8B,OAAO,yCACtBs8B,EAAYh9B,OAAO1nC,KAAK4kE,SACxB5kE,KAAK6kE,YAAc,IAAI,GAAYX,EAAenM,IAC9C/3D,KAAK4kE,QAAQp4B,IAAI,CACbs4B,UAAW,SAAW/M,EAAS,MAEnC/3D,KAAK+jE,WAAahM,IAGtB,IAiBIhkB,EACAC,EAjBJh0C,KAAK+kE,WAAatqD,SAASuqD,gBADlB,6BACsC,OAE/C58B,OAAOpoC,KAAK+kE,YAAYj8B,SAAS,yCAIjC9oC,KAAK4kE,QAAQ,GAAGK,YAAYjlE,KAAK+kE,YAEjC/kE,KAAKklE,iBAAwB98B,OAAOpoC,KAAKmlE,cAAc,OAAQnlE,KAAK+kE,aAEpE/kE,KAAKklE,iBAAiB14B,IAAI,CAAC44B,KAAM,UAAW,OAAU,SAEtDplE,KAAKqlE,wBAEcj9B,OAAOpoC,KAAK+kE,YAKnB76B,GAAG,YAAco7B,IACzBvxB,EAAIuxB,EAAIC,QACRvxB,EAAIsxB,EAAIE,QAERp9B,OAAO3tB,UAAUyvB,GAAG,oBAAsBrtB,IACtC,IAAI4oD,EAAK5oD,EAAG0oD,QAAUxxB,EAClB2xB,EAAK7oD,EAAG2oD,QAAUxxB,EACtBD,EAAIl3B,EAAG0oD,QACPvxB,EAAIn3B,EAAG2oD,QACPd,EAAYiB,WAAWjB,EAAYiB,aAAeF,GAClDf,EAAYj8B,UAAUi8B,EAAYj8B,YAAci9B,KAGpDt9B,OAAO3tB,UAAUyvB,GAAG,kBAAmB,KACnC9B,OAAO3tB,UAAU+vB,IAAI,qBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBASjC,wBACIxqC,KAAKklE,iBAAiBl5B,KAAK,CACvB+H,EAAG/zC,KAAKokE,SAAW,KACnBpwB,EAAGh0C,KAAKokE,SAAW,KACnB7wB,MAAQvzC,KAAKukE,QAAU,EAAEvkE,KAAKokE,SAAY,KAC1C5wB,OAASxzC,KAAKwkE,SAAW,EAAExkE,KAAKokE,SAAY,OAIpD,QAAQG,EAAiBC,GAClBD,EAAUvkE,KAAKskE,mBAAkBC,EAAUvkE,KAAKskE,kBAChDE,EAAWxkE,KAAKskE,mBAAkBE,EAAWxkE,KAAKskE,kBAErDtkE,KAAK4kE,QAAQp4B,IAAI,CACb+G,MAAOgxB,EAAU,KACjB/wB,OAAQgxB,EAAW,OAGvBxkE,KAAKukE,QAAUA,EACfvkE,KAAKwkE,SAAWA,EAEhBxkE,KAAKqlE,wBAGT,sBAAsBO,GAElB,IAAIC,EAAO,IACPC,EAAO,IACPnJ,GAAQ,IACR8G,GAAQ,IAEZ,IAAI,IAAIsC,KAAMH,EACPC,EAAOE,EAAGC,SAAQH,EAAOE,EAAGC,QAC5BrJ,EAAOoJ,EAAGC,OAASD,EAAGxB,UAAS5H,EAAOoJ,EAAGC,OAASD,EAAGxB,SACrDuB,EAAOC,EAAGE,QAAOH,EAAOC,EAAGE,OAC3BxC,EAAOsC,EAAGE,MAAQF,EAAGvB,WAAUf,EAAOsC,EAAGE,MAAQF,EAAGvB,UAG3DqB,GAAQ7lE,KAAKokE,SACbzH,GAAQ38D,KAAKokE,SACb0B,GAAQ9lE,KAAKokE,SACbX,GAAQzjE,KAAKokE,SAEb,IAAI8B,GAAsB,EACtBC,EAAanmE,KAAKukE,QAClB6B,EAAcpmE,KAAKwkE,SAEvB,GAAGqB,EAAO,GAAKlJ,EAAO38D,KAAKukE,SAAY5H,EAAOkJ,GAAQ7lE,KAAKukE,SAAWvkE,KAAKukE,QAAUvkE,KAAKskE,iBAAkB,CACxG,IAAIntD,EAAQ,EAYZ,GAXAgvD,EAAa56D,KAAK86D,IAAIrmE,KAAKskE,iBAAkB3H,EAAOkJ,GAEjDA,EAAO,IACN1uD,GAAS0uD,GAGVA,EAAO,GAAKlJ,EAAOwJ,IAClBhvD,EAAQgvD,EAAaxJ,GAEzBuJ,EAAsB,GAAT/uD,EAEV+uD,EACH,IAAI,IAAIH,KAAMH,EACVG,EAAGO,KAAKnvD,EAAO,GAAG,GAAM,GAKhC,GAAG2uD,EAAO,GAAKrC,EAAOzjE,KAAKwkE,UAAaf,EAAOqC,GAAQ9lE,KAAKwkE,UAAYxkE,KAAKwkE,SAAWxkE,KAAKskE,iBAAkB,CAC3G,IAAIntD,EAAQ,EAYZ,GAXAivD,EAAc76D,KAAK86D,IAAIrmE,KAAKskE,iBAAkBb,EAAOqC,GAElDA,EAAO,IACN3uD,GAAS2uD,GAGVA,EAAO,GAAKrC,EAAO2C,IAClBjvD,EAAQivD,EAAc3C,GAE1ByC,EAAsB,GAAT/uD,EAEV+uD,EACH,IAAI,IAAIH,KAAMH,EACVG,EAAGO,KAAK,EAAGnvD,GAAO,GAAM,GAShC,OAHAnX,KAAKumE,QAAQJ,EAAYC,GAGlB,CAACF,WAAYA,GAIjB,mBAAmBM,EAA4D,MAElF,IAAIxtE,EAAK,6BAES,MAAdgH,KAAK6a,QACL7a,KAAKymE,KAAOhsD,SAASuqD,gBAAgBhsE,EAAI,QACzCgH,KAAK6a,MAAQJ,SAASuqD,gBAAgBhsE,EAAI,SAC1CgH,KAAKymE,KAAKxB,YAAYjlE,KAAK6a,OAC3B7a,KAAK+kE,WAAWE,YAAYjlE,KAAKymE,OAGvB,MAAVD,IACAxmE,KAAKmkE,aAAeqC,EACpBxmE,KAAK0mE,uBAKN,cAAcxuE,EAAcmjB,EAAkB,KAAM9X,GAGvD,IACIkzC,EAAWrO,OAAO3tB,SAASuqD,gBADtB,6BAC0C9sE,IAMnD,OAJiB,MAAdqL,GAAoBkzC,EAASzK,KAAKzoC,GAExB,MAAV8X,GAAgBA,EAAO4pD,YAAYxuB,EAAS,IAExCA,EAIH,sBAEJ,IAAI/8C,EAAY,GAEhB,IAAK,IAAIitE,KAAY3mE,KAAKmkE,aAAc,CACpC,IAAIyC,EAAoB5mE,KAAKmkE,aAAawC,GAC1C,GAAyB,MAArBC,EAA2B,CAC3BltE,GAAKitE,EAAW,MAChB,IAAK,IAAIztE,KAAO0tE,EACZltE,GAAK,MAAQR,EAAM,IAAM0tE,EAAkB1tE,GAAO,MAEtDQ,GAAK,WAELA,GAAKitE,EAAW,KAIxB3mE,KAAK6a,MAAMgsD,YAAcntE,EAI7B,cAAcs8C,EAA4BzC,EAAeC,EAAgB6wB,GAErE,IAAIyC,EAAS,EACTC,GAAkB,EAClBC,EAAM,EACNC,EAAM,EACV,MAAOF,GAAO,CAEV,IAAI/yB,EAAI8yB,EACJ/yB,EAAI,EACR,IAAIA,EAAI,EAAGA,GAAK+yB,EAAQ/yB,IAGpB,GAFAizB,EAAMhnE,KAAKokE,SAtPA,GAsPWrwB,EACtBkzB,EAAMjnE,KAAKokE,SAvPA,GAuPWpwB,EACnBh0C,KAAKknE,OAAOlxB,EAAUzC,EAAOC,EAAQwzB,EAAKC,EAAK5C,GAAa,CAC3D0C,GAAS,EACT,MAGR,GAAGA,EAAQ,MAEX,IADAhzB,IACIC,EAAI,EAAGA,GAAK8yB,EAAS,EAAG9yB,IAGxB,GAFAgzB,EAAMhnE,KAAKokE,SAhQA,GAgQWrwB,EACtBkzB,EAAMjnE,KAAKokE,SAjQA,GAiQWpwB,EACnBh0C,KAAKknE,OAAOlxB,EAAUzC,EAAOC,EAAQwzB,EAAKC,EAAK5C,GAAa,CAC3D0C,GAAS,EACT,MAIRD,GAAU,EAId,MAAO,CAAC/yB,EAAGizB,EAAKhzB,EAAGizB,GAIvB,OAAOjxB,EAA4BuuB,EAAiBC,EAAkBwB,EAAgBC,EAAe5B,GAEjG,IAAI,IAAI10C,KAAWqmB,EAAS,CAExB,IAAImxB,EAAU57D,KAAK6pD,IAAIzlC,EAAQq2C,OAASr2C,EAAQ40C,QAAQ,EAAIyB,EAASzB,EAAQ,KAC9D50C,EAAQ40C,QAAUA,GAAS,EAAIF,EAE1C+C,EAAU77D,KAAK6pD,IAAIzlC,EAAQs2C,MAAQt2C,EAAQ60C,SAAS,EAAIyB,EAAQzB,EAAS,KAAO70C,EAAQ60C,SAAWA,GAAU,EAAIH,EAErH,GAAG8C,GAAWC,EAAS,OAAO,EAIlC,OAAO,ICjSf,SAAYnD,GACR,mBAAM,uBAAQ,qBADlB,CAAYA,QAAS,KAyBf,MAAgB,GAgBlB,YAAsB5oD,GAAA,KAAAA,SAVf,KAAA2qD,OAAiB,EACjB,KAAAC,MAAgB,EAKb,KAAAoB,MAAuC,GAE1C,KAAAC,gBAA0B,UAMjC,sBACI,MAAO,CACHhxC,KAAM/qB,KAAK04B,MAAMjkC,KAAKgmE,OD3CP,IC4CfxxB,IAAKjpC,KAAK04B,MAAMjkC,KAAKimE,MD5CN,IC6Cf1yB,MAAOhoC,KAAK04B,MAAMjkC,KAAKukE,QD7CR,IC8Cf/wB,OAAQjoC,KAAK04B,MAAMjkC,KAAKwkE,SD9CT,KCkDhB,OACiB,MAAjBxkE,KAAKy2C,UACRz2C,KAAKy2C,SAAS5N,OAGX,OACiB,MAAjB7oC,KAAKy2C,UACRz2C,KAAKy2C,SAASzN,OAGlB,SACwB,MAAjBhpC,KAAKy2C,UACRz2C,KAAKy2C,SAASnM,SAGlB,SACwB,MAAjBtqC,KAAKy2C,WACRz2C,KAAKy2C,SAAS9R,SACd3kC,KAAKy2C,SAAW,MAGpB,SAASA,GACLA,EAAS/O,OAAO1nC,KAAKy2C,UAGlB,QACiB,MAAjBz2C,KAAKy2C,WACRz2C,KAAKy2C,SAAS9sB,QACd3pB,KAAKqnE,MAAQ,IAGV,KAAKL,EAAaC,EAAaM,EAAqBC,GAA0B,GACjFxnE,KAAKgmE,QAAUgB,EACfhnE,KAAKimE,OAASgB,EAEd,IAAIlzB,EAAI/zC,KAAKgmE,OACThyB,EAAIh0C,KAAKimE,MAEVsB,IACCxzB,EDzFe,GCyFXxoC,KAAK04B,MAAM8P,EDzFA,IC0FfC,ED1Fe,GC0FXzoC,KAAK04B,MAAM+P,ED1FA,KC6FhBwzB,IACCxnE,KAAKgmE,OAASjyB,EACd/zC,KAAKimE,MAAQjyB,GAGjB5L,OAAOpoC,KAAKy2C,UAAUjK,IAAI,YAAa,aAAeuH,EAAI,MAAQC,EAAI,OAGnE,OAAOgzB,EAAaC,EAAaM,GACpCvnE,KAAKsmE,KAAKU,EAAMhnE,KAAKgmE,OAAQiB,EAAMjnE,KAAKimE,MAAOsB,GAG5C,cAAcrvE,EAAcmjB,EAAkB,KAAM9X,GAGvD,IACIkzC,EAAWrO,OAAO3tB,SAASuqD,gBADtB,6BAC0C9sE,IAMnD,OAJiB,MAAdqL,GAAoBkzC,EAASzK,KAAKzoC,GAExB,MAAV8X,GAAgBA,EAAO4pD,YAAYxuB,EAAS,IAExCA,EAIJ,kBAAkB1hC,EAAcsG,EAAkB,KAAM9X,GAGvD,IAAIkzC,EAA4Bz2C,KAAKmlE,cAAc,OAAQ9pD,EAAQ,CAC/DosD,KAAM,cACN,cAAe,aACfrC,KAAM,OACN,qBAAqB,YAOzB,OAJiB,MAAd7hE,GAAoBkzC,EAASzK,KAAKzoC,GAErCkzC,EAAS1hC,KAAKA,GAEP0hC,EAGR,eAAeixB,GAClB,IAAIC,EAAeD,EAAY,GAAGE,UAElC,MAAO,CACHp0B,OAAQm0B,EAAKn0B,OAAS,GAAeq0B,QACrCt0B,MAAOo0B,EAAKp0B,MAAQ,GAAes0B,SAKpC,YAAYz+D,GAEfpJ,KAAKqnE,MAAMtjE,KAAKqF,GAEA,QAAbA,EAAKhJ,OACiB,MAAlBgJ,EAAK0+D,YAAmB1+D,EAAK0+D,UAAY7D,GAAU3tC,MACtC,MAAbltB,EAAK2+D,OAAc3+D,EAAK2+D,MAAO,GACf,MAAhB3+D,EAAK4+D,UAAiB5+D,EAAK4+D,SAAU,IAKzC,SAEH,IAAIC,EAASjoE,KAAKy2C,SACL,MAAVwxB,IACCA,EAASjoE,KAAKmlE,cAAc,IAAKnlE,KAAKqb,QACtC4sD,EAAOn/B,SAAS,iBAChBm/B,EAAOn/B,SAAS,0BAChB9oC,KAAKy2C,SAAWwxB,EAChB7/B,OAAOpoC,KAAKy2C,UAAUjK,IAAI,YAAa,aAAexsC,KAAKgmE,OAAS,MAAQhmE,KAAKimE,MAAQ,QAG7F,IAAI15B,EAAQvsC,KAAKmlE,cAAc,OAAQ8C,EAAO,IAE1CC,EAAqB,GACrBC,EAAqB,EAErB1xC,GAAiB,EACrB,IAAI,IAAIrtB,KAAQpJ,KAAKqnE,MACjB,GAAgB,QAAbj+D,EAAKhJ,KAAe,CAChBq2B,IAAOyxC,GAAc,IACxBzxC,GAAQ,EACRrtB,EAAK69D,IAAMiB,EACX9+D,EAAKqtC,SAAmCz2C,KAAKooE,kBAAkBh/D,EAAK2L,KAAMkzD,EAAO,GAAI,CACjF,cAAgB7+D,EAAK2+D,KAAK,OAAO,SACjC,YAAa,OACb,aAAc3+D,EAAK4+D,QAAQ,SAAS,SACpC,cAAe5+D,EAAK0+D,WAAa7D,GAAU3tC,KAAO,QAAUltB,EAAK0+D,WAAa7D,GAAUoE,OAAS,SAAW,MAC5G,OAA0B,MAAhBj/D,EAAKk/D,QAAkB,GAAK,YAE1Cl/D,EAAKqtC,SAASjK,IAAI,YAAa,iBAAmB07B,EAAa,OAC5C,MAAhB9+D,EAAKk/D,UACJl/D,EAAKqtC,SAAS3N,SAAS,aACvB1/B,EAAKqtC,SAASvM,GAAG,YAAc2H,IAE3BzoC,EAAKk/D,UACLz2B,EAAMG,qBAGd,IAAIu2B,EAAUvoE,KAAKwoE,eAAep/D,EAAKqtC,UAKvC,GAJArtC,EAAKq/D,aAAeF,EAAQ/0B,OAC5BpqC,EAAKs/D,YAAcH,EAAQh1B,MAC3B40B,EAAa58D,KAAK86D,IAAI8B,EAAY/+D,EAAKs/D,aACvCR,GAAc9+D,EAAKq/D,aACA,MAAhBr/D,EAAKu/D,QAAgB,CACL3oE,KAAKmlE,cAAc,QAAS/7D,EAAKqtC,SAAS,IAChD1hC,KAAK3L,EAAKu/D,eAGvBv/D,EAAK69D,IAAMiB,EAAa9+D,EAAKw/D,YAAY,EACzCV,GAAc9+D,EAAKw/D,YAAc,GACjCnyC,GAAQ,EAIhB,IAAI8c,EAAQ,GAAmB40B,EAC/BnoE,KAAKukE,QDrNc,ICqNHh5D,KAAKuF,MAAMyiC,EDrNR,ICqN+B,GAClDvzC,KAAKwkE,SDtNc,ICsNFj5D,KAAKuF,MAAMo3D,EDtNT,ICsNqC,GAExD,IACIW,EAAat1B,EAAM,EACnBu1B,EAAYv1B,EAFD,IAIfhH,EAAMC,IAAI,CACN+G,MAAOvzC,KAAKukE,QAAU,KACtB/wB,OAAQxzC,KAAKwkE,SAAW,KACxBY,KAAMplE,KAAKsnE,gBACXyB,OAAQ,OACR,eAAgB,WAIpB,IAAI,IAAI3/D,KAAQpJ,KAAKqnE,MACjB,GAAgB,QAAbj+D,EAAKhJ,KAAe,CAEnB,IAAI2zC,EACJ,OAAO3qC,EAAK0+D,WACR,KAAK7D,GAAUoE,OAAQt0B,EAAI80B,EAAY,MACvC,KAAK5E,GAAU3tC,KAAMyd,EAnBlB,IAmBgC,MACnC,KAAKkwB,GAAUvtC,MAAOqd,EAAI+0B,EAE9B1/D,EAAKqtC,SAASjK,IAAI,YAAa,aAAeuH,EAAI,MAAM3qC,EAAK69D,IAAM,YAGnE79D,EAAKqtC,SAAmCz2C,KAAKmlE,cAAc,OAAQ8C,EAAO,GAAI,CAC1Ee,GAAI,IACJC,GAAI7/D,EAAK69D,IAAM,KACfiC,GAAIlpE,KAAKukE,QAAU,KACnB4E,GAAI//D,EAAK69D,IAAM,OAGnB79D,EAAKqtC,SAASjK,IAAI,CACdu8B,OAAQ,OACR,eAAgB3/D,EAAKw/D,YAAc,QAnOrC,GAAAf,QAAkB,KAAK,GERnC,MAAO,WAAiB,GAiB1B,YAAmBuB,EAAkBpD,EAAgBC,EAAeljE,GAChE1B,MAAM+nE,EAAQrE,YADC,KAAAqE,UAVnB,KAAAhrB,QAAkB,EAClB,KAAAirB,aAAuB,EACvB,KAAAC,gBAA0B,EAWtBtpE,KAAK+C,MAAQA,EAEA,MAATA,IACA/C,KAAKupE,cAAcvpE,KAAK+C,OACxB/C,KAAKwpE,cAAgBzmE,EAAMrL,OAAOmP,eAClC7G,KAAKspE,gBAAiB;AACtBtpE,KAAKqpE,aAAc,GAGvBrpE,KAAKypE,OAAOzD,EAAQC,GAAO,GAI/B,YACI,MAAO,CACH1sC,UAAWv5B,KAAKu5B,UAChBmwC,SAAU1pE,KAAK0pE,SACfC,gBAAiB3pE,KAAK2pE,gBACtBL,eAAgBtpE,KAAKspE,eACrBD,YAAarpE,KAAKqpE,YAClBG,cAAexpE,KAAKwpE,cACpBxD,OAAQhmE,KAAKgmE,OACbC,MAAOjmE,KAAKimE,OAIF,mBAACmD,EAAkBQ,GAEjC,IAAIC,EAAK,IAAI,GAAST,EAASQ,EAAI5D,OAAQ4D,EAAI3D,MAAO,MAQtD,OAPA4D,EAAGF,gBAAkBC,EAAID,gBACzBE,EAAGtwC,UAAYqwC,EAAIrwC,UACnBswC,EAAGH,SAAWE,EAAIF,SAClBG,EAAGP,eAAiBM,EAAIN,eACxBO,EAAGR,YAAcO,EAAIP,YACrBQ,EAAGL,cAAgBI,EAAIJ,cAEhBK,EAIX,cAAc9mE,GAEV/C,KAAK+C,MAAQA,EACb,IAAI+mE,EAAyB9pE,KAAK+pE,aAAahnE,GAE3C/C,KAAKu5B,WAAax2B,EAAMhJ,YAAciG,KAAK2pE,iBAAmBG,GAAkB9pE,KAAKukE,QAAU,IAAOvkE,KAAKD,eAAiBgD,EAAMhD,eAClIC,KAAKwpE,cAAgBzmE,EAAMrL,OAAOmP,eAClC7G,KAAKgqE,eAELhqE,KAAKiqE,iBAGTjqE,KAAKu5B,UAAYx2B,EAAMhJ,WACvBiG,KAAK0pE,SAAW3mE,EAAMrL,OAAOioC,KAAKznC,KAClC8H,KAAK2pE,gBAAkBG,EACvB9pE,KAAKD,cAAgBgD,EAAMhD,cAG/B,kBAAkB4vB,GACd3vB,KAAKopE,QAAQ91C,KAAK42C,kBAAkBlqE,KAAK+C,MAAMrL,OAAQi4B,EAAQxgB,aAInE,cAcI,GAZAnP,KAAK6iC,QAEL7iC,KAAKmqE,YAAY,CACb/pE,KAAM,OACN2U,MAAO/U,KAAK+C,iBAAiB,EAAY,iBAAmB,IAAM/C,KAAK+C,MAAMhJ,WAC7E4uE,QAASnc,GAAuBxsD,KAAK+C,MAAO,IAAI,GAChD+kE,UAAW7D,GAAUoE,OACrBN,MAAM,EACNC,QAAShoE,KAAK+C,iBAAiB,EAC/BulE,QAAStoE,KAAKwpE,mBAAgBnhE,EAAY,KAAQrI,KAAKkqE,kBAAkBlqE,KAAK+C,UAG9E/C,KAAK+C,iBAAiB,GAAS/C,KAAKspE,eAAgB,CACpDtpE,KAAKmqE,YAAY,CACb/pE,KAAM,OACNwoE,YAAa,MAEjB,IAAK,IAAI1hE,KAAKlH,KAAK+C,MAAMQ,WAAY,CAEjC,IAAIwR,EAAe/U,KAAKoqE,kBAAkBljE,EAAErG,YAAcqG,EAAEnN,WAC5Dgb,GAAQ,IAAM7N,EAAE9G,KAAKrG,WAErBiG,KAAKmqE,YAAY,CACb/pE,KAAM,OACN2U,KAAMA,EACN4zD,QAASnc,GAAuBtlD,GAChC4gE,UAAW7D,GAAU3tC,KACrBgyC,QAAStoE,KAAKwpE,mBAAgBnhE,EAAY,KAAQrI,KAAKkqE,kBAAkBhjE,OAKjFlH,KAAKqpE,cACLrpE,KAAKmqE,YAAY,CACb/pE,KAAM,OACNwoE,YAAa,MAEjB5oE,KAAK+C,MAAMgD,QAAQgE,OAAOhS,GAAoB,YAAfA,EAAE6J,WAAyBmN,QAAQhX,IAC9D,IAAIgd,EAAe/U,KAAKoqE,kBAAkBryE,EAAE8I,YAAc9I,EAAEgC,WAAa,KAEzEiG,KAAKmqE,YAAY,CACb/pE,KAAM,OACN2U,KAAMA,EACN4zD,QAASnc,GAAuBz0D,GAChC+vE,UAAW7D,GAAU3tC,KACrB0xC,QAAShoE,KAAK+C,iBAAiB,EAC/BulE,QAAStoE,KAAKwpE,mBAAgBnhE,EAAY,KAAOrI,KAAKkqE,kBAAkBnyE,SAMpFiI,KAAKsnE,gBAAkBtnE,KAAKwpE,cAAgB,UAAY,UACxDxpE,KAAKqyC,SAELryC,KAAKqqE,kBAAoBrqE,KAAKmlE,cAAc,OAAQnlE,KAAKy2C,SAAS,GAAI,CAClEx+C,EAAG+H,KAAKsqE,kBACRpnE,MAAO,oBACP2X,MAAO,yBAAgC7a,KAAKukE,QAAU,KAAQ,eAGlEvkE,KAAKiqE,iBAGT,kBACI,OAAIjqE,KAAKqpE,YACE,6BAEA,6BASf,S,MACiB,QAAb,EAAArpE,KAAKy2C,gBAAQ,SAAEjM,IAAI,4BACnBpC,OAAO3tB,UAAU+vB,IAAI,0BACrBpC,OAAO3tB,UAAU+vB,IAAI,4BACrBnpC,MAAMipC,SAGV,iBACI,IAAIttB,EAAOhd,KAEmB,MAA1BA,KAAKqqE,oBACLrqE,KAAKqqE,kBAAkB7/B,IAAI,4BAC3BxqC,KAAKqqE,kBAAkB7/B,IAAI,+BAG/BxqC,KAAKqqE,kBAAkBngC,GAAG,6BAA+BtzB,IACrDA,EAAEo7B,oBAENhyC,KAAKqqE,kBAAkBngC,GAAG,2BAA6BtzB,IACnDA,EAAEo7B,kBACFhyC,KAAKqpE,aAAerpE,KAAKqpE,YACzBrpE,KAAKspE,gBAAkBtpE,KAAKspE,eAC5BtpE,KAAKqqE,kBAAkBr+B,KAAK,IAAKhsC,KAAKsqE,mBACtCtqE,KAAKgqE,cACehqE,KAAKopE,QAASmB,yBACdvqE,KAAKopE,QAASoB,iBAGtCxqE,KAAKy2C,SAASvM,GAAG,2BAA6B2H,IAK1C,GAHAA,EAAMG,kBACNH,EAAM44B,2BAEa,GAAhB54B,EAAMwF,OAAa,OAEtB,IAAItD,EAAIlC,EAAM0zB,QACVvxB,EAAInC,EAAM2zB,QAEdxoD,EAAKy5B,SAAShnB,KAAK,QAAQqZ,SAAS,YAEpCV,OAAO3tB,UAAU+vB,IAAI,0BACrBpC,OAAO3tB,UAAU+vB,IAAI,4BAErBpC,OAAO3tB,UAAUyvB,GAAG,2BAA6B2H,IAC7C,IAAI64B,EAAa,EAAI,GAAK,KAAO1qE,KAAKopE,QAAQrF,WAC1C0B,GAAM5zB,EAAM0zB,QAAUxxB,GAAK22B,EAC3BhF,GAAM7zB,EAAM2zB,QAAUxxB,GAAK02B,EAE/B32B,EAAIlC,EAAM0zB,QACVvxB,EAAInC,EAAM2zB,QAEVxoD,EAAKspD,KAAKb,EAAIC,GAAI,GAGlBiF,aAAa3tD,EAAK4tD,YAClB5tD,EAAK4tD,WAAajiC,WAAW,KACa3rB,EAAKosD,QAC9BoB,gBACd,OAGPpiC,OAAO3tB,UAAUyvB,GAAG,yBAA0B,KAC1CltB,EAAKspD,KAAK,EAAG,GAAG,GAAM,GACtB,IAAI15B,EAAkC5vB,EAAKosD,QAC3Cx8B,EAAa29B,yBACb39B,EAAa49B,eACbxtD,EAAKy5B,SAAShnB,KAAK,QAAQsZ,YAAY,YACvCX,OAAO3tB,UAAU+vB,IAAI,0BACrBpC,OAAO3tB,UAAU+vB,IAAI,4BACrBoC,EAAahK,OAAQ,MAOjC,kBAAkB/hC,GACd,OAAQA,GACJ,KAAKjH,EAAWwS,QAAS,MAAO,IAChC,KAAKxS,EAAWqQ,UAAW,MAAO,IAClC,KAAKrQ,EAAWsM,OAAQ,MAAO,KAIvC,aAAanD,GAET,IAAIrJ,EAAY,GAEhB,GAAIqJ,aAAiB,GAAS/C,KAAKspE,gBAAkBvmE,EAAMQ,WAAWvB,OAAS,EAC3E,IAAK,IAAIkF,KAAKnE,EAAMQ,WAAY7J,GAAKsG,KAAKoqE,kBAAkBljE,EAAErG,YAAcqG,EAAEnN,WAGlF,GAAIiG,KAAKqpE,aAAetmE,EAAMgD,QAAQ/D,OAAS,EAC3C,IAAK,IAAIjK,KAAKgL,EAAMgD,QACZhO,EAAEqJ,gBACN1H,GAAKsG,KAAKoqE,kBAAkBryE,EAAE8I,YAAc9I,EAAEgC,WAAa,MAInE,OnC3RF,SAAeL,GACjB,IACImxE,EADAC,EAAe,EAEnB,IAAK,IAAInzE,EAAI,EAAGA,EAAI+B,EAAEsI,OAAQrK,IAC5BkzE,EAAQnxE,EAAEsX,WAAWrZ,GACrBmzE,GAAUA,GAAQ,GAAKA,EAAQD,EAC/BC,GAAQ,EAEV,OAAOA,EmCmRIA,CAAKpxE,GAIhB,sBAAsBqJ,GAClB,OAAOA,EAAMrL,OAAOioC,KAAKznC,MAAQ8H,KAAK0pE,UAClC1pE,KAAK+pE,aAAahnE,IAAU/C,KAAK2pE,iBCrRvC,MAAO,GAyBM,gBAACoB,EAAoBC,EAAoB5qE,GAMpD,IAAIqlE,EAAKuF,EAAYj3B,EAAIg3B,EAAYh3B,EACjC2xB,EAAKsF,EAAYh3B,EAAI+2B,EAAY/2B,EAEjC/7C,EAAIsT,KAAK0/D,KAAKxF,EAAGA,EAAGC,EAAGA,GAE3B,GAAGztE,EAAI,KAAS,MAAO,CAACizE,KAAM,GAAInC,OAAQ,OAAQ3D,KAAM,QAExD,IAAI+F,EAAK1F,EAAGxtE,EACRmzE,EAAK1F,EAAGztE,EAERizE,EAAe,KJ9CA,GI8COF,EAAYj3B,EAAoB,GAAa8zB,QACjE,IJ/Ca,GI+CPmD,EAAYh3B,EAAoB,GAAa6zB,QAErDwD,EAAQrrE,KAAKsrE,OAAOlrE,GAExB,IAAI,IAAImrE,KAAQF,EAAMG,MAAM,CACxB,IAAIC,EAAQF,EAAK9yE,EAAI,IAAM8S,KAAKmgE,GAC5BC,EAAMR,EAAK5/D,KAAKqgE,IAAIH,GAASL,EAAK7/D,KAAKsgE,IAAIJ,GAC3CK,EAAMX,EAAK5/D,KAAKsgE,IAAIJ,GAASL,EAAK7/D,KAAKqgE,IAAIH,GAC/CP,GAAQ,MAAQS,EAAMJ,EAAKv6B,EAAI,GAAa62B,QAAU,IAAMiE,EAAMP,EAAKv6B,EAAI,GAAa62B,QACxFsD,EAAKQ,EACLP,EAAKU,EAGT,MAAO,CACHZ,KAAMA,EACN9F,KAAMiG,EAAMjG,KACZ2D,OAAQsC,EAAMtC,SAxDf,GAAAgD,WAAa,GACb,GAAAT,OAAkC,CACrC,YAAe,CACXE,MAAO,CAAC,CAAC/yE,EAAG,IAAKu4C,EAAG,IAAM,CAACv4C,EAAG,IAAKu4C,EAAG,IAAM,CAACv4C,EAAG,IAAKu4C,EAAG,KACxD+3B,OAAQ,UACR3D,KAAM,UACN,wBAAoB/8D,GAExB,YAAe,CACXmjE,MAAO,CAAC,CAAC/yE,EAAG,IAAKu4C,EAAG,IAAM,CAACv4C,EAAG,IAAKu4C,EAAG,IAAM,CAACv4C,EAAG,IAAKu4C,EAAG,KACxD+3B,OAAQ,UACR3D,KAAM,UACN,mBAAoB,KAExB,YAAe,CACXoG,MAAO,CAAC,CAAC/yE,EAAG,GAAK,GAAUszE,WAAY/6B,EAAG,IAAM,CAACv4C,EAAG,IAAM,EAAE,GAAUszE,WAAY/6B,EAAG,IAChF,CAACv4C,EAAG,EAAE,GAAUszE,WAAY/6B,EAAG,IAAM,CAACv4C,EAAG,IAAM,EAAE,GAAUszE,WAAY/6B,EAAG,KAC/E+3B,OAAQ,UACR3D,KAAM,UACN,wBAAoB/8D,IC7B1B,MAAO,GAMT,YAAsBgT,EAAyB2wD,EAAoCtiD,GAA7D,KAAArO,SAAyB,KAAA2wD,eAAoC,KAAAtiD,QAI5E,OACkB,MAAjB1pB,KAAKy2C,UACTz2C,KAAKy2C,SAAS5N,OAGX,OACkB,MAAjB7oC,KAAKy2C,UACTz2C,KAAKy2C,SAASzN,OAGlB,SACyB,MAAjBhpC,KAAKy2C,UACTz2C,KAAKy2C,SAASnM,SAGlB,SACyB,MAAjBtqC,KAAKy2C,UACTz2C,KAAKy2C,SAAS9R,SAGlB,SAAS8R,GACLA,EAAS/O,OAAO1nC,KAAKy2C,UAGlB,QACkB,MAAjBz2C,KAAKy2C,UACTz2C,KAAKy2C,SAAS9sB,QAGX,cAAczxB,EAAcmjB,EAAkB,KAAM9X,GAGvD,IACIkzC,EAAWrO,OAAO3tB,SAASuqD,gBADtB,6BAC0C9sE,IAMnD,OAJkB,MAAdqL,GAAoBkzC,EAASzK,KAAKzoC,GAExB,MAAV8X,GAAgBA,EAAO4pD,YAAYxuB,EAAS,IAEzCA,EAKJ,kBAAkB1hC,EAAcsG,EAAkB,KAAM9X,GAG3D,IAAIkzC,EAA4Bz2C,KAAKmlE,cAAc,OAAQ9pD,EAAQ,CAC/DosD,KAAM,cACN,cAAe,aACfrC,KAAM,OACN,qBAAsB,YAO1B,OAJkB,MAAd7hE,GAAoBkzC,EAASzK,KAAKzoC,GAEtCkzC,EAAS1hC,KAAKA,GAEP0hC,EAGJ,eAAeixB,GAClB,IAAIC,EAAgBD,EAAY,GAAGE,UAEnC,MAAO,CACHp0B,OAAQm0B,EAAKn0B,OAAS,GAAaq0B,QACnCt0B,MAAOo0B,EAAKp0B,MAAQ,GAAas0B,SAMlC,SAEH,IAAII,EAASjoE,KAAKy2C,SACJ,MAAVwxB,GACAA,EAASjoE,KAAKmlE,cAAc,IAAKnlE,KAAKqb,QACtCrb,KAAKy2C,SAAWwxB,EAChBA,EAAOz7B,IAAI,SAAUxsC,KAAK0pB,QAE1Bu+C,EAAOt+C,QAGX,IAAIsiD,EAASjsE,KAAKgsE,aAAaE,cAC/B,GAAc,MAAVD,GAAkBA,EAAOjqE,OAAS,EAClC,OAGJ,IAAIkpE,EAAO,KAAOlrE,KAAKmsE,mBAAmBF,EAAO,IAEjD,IAAK,IAAIt0E,EAAI,EAAGA,EAAIs0E,EAAOjqE,OAAQrK,IAC/BuzE,GAAQ,MAAQlrE,KAAKmsE,mBAAmBF,EAAOt0E,IAGnD,IAAIy0E,EAAY,GAAUd,OAAOtrE,KAAKgsE,aAAaK,WASnD,IARYrsE,KAAKmlE,cAAc,OAAQ8C,EAAO,GAAI,CAAEhwE,EAAGizE,IACjD1+B,IAAI,CAEN,eAAgB,SAChB,KAAQ,OACR,mBAAoB4/B,EAAU,sBAG3BH,EAAOjqE,OAAS,GAAKiqE,EAAOA,EAAOjqE,OAAS,GAAG+xC,GAAKk4B,EAAOA,EAAOjqE,OAAS,GAAG+xC,GACjFk4B,EAAOA,EAAOjqE,OAAS,GAAGgyC,GAAKi4B,EAAOA,EAAOjqE,OAAS,GAAGgyC,GACzDi4B,EAAOt4D,MAGX,GAAIs4D,EAAOjqE,OAAS,GAAoD,MAA/ChC,KAAKgsE,aAAaM,0BAAmC,CAC1E,IAAIC,EAAO,GAAUC,SAASP,EAAOA,EAAOjqE,OAAS,GAAIiqE,EAAOA,EAAOjqE,OAAS,GAC5EhC,KAAKgsE,aAAaK,WAEVrsE,KAAKmlE,cAAc,OAAQ8C,EAAO,GAAI,CAAEhwE,EAAGs0E,EAAKrB,OACtD1+B,IAAI,CACNu8B,OAAQ/oE,KAAK0pB,MACb,eAAgB,SAChB,KAAQ6iD,EAAKnH,QAMzB,mBAAmBqH,GAGf,MLpImB,GKkIXA,EAAM14B,EAAoB,GAAa8zB,QAE/B,ILpIG,GKmIX4E,EAAMz4B,EAAoB,GAAa6zB,SApIrC,GAAAA,QAAkB,KAAO,GCgBrC,MAAO,WAAqB,GAmB9B,YAAoB3D,EAAmC5wC,GACnDjyB,MAAM6iE,EAAc5wC,GADJ,KAAA4wC,eAjBpB,KAAAwI,qBAA8D,GAE9D,KAAApB,OAAyB,GAEzB,KAAAqB,mBAA6B,KAI7B,KAAA38B,QAAkB,EAElB,KAAA48B,mCAAqC,EACrC,KAAAC,uBAAyB,EACzB,KAAAC,aAAe,EAEf,KAAAlqC,OAAiB,EAMb,IAAI5lB,EAAOhd,KACXA,KAAKykE,YAAYv6B,GAAG,QAAUrtB,IAC1BA,EAAG47B,iBACH,IAAIs0B,EAAuE,GAA/C/vD,EAAKgwD,kBAAkBC,qBACnDp5B,GAAgB,CAAC,CACbxC,QAAS07B,EAAwB,2BAA6B,2BAC9DljC,SAAU,KACN7sB,EAAKgwD,kBAAkBC,sBAAwBF,EAC/C/vD,EAAKkwD,YAAYlwD,EAAK8yB,kBAAkB,MAG7CjzB,EAAG67B,MAAQ,EAAG77B,EAAG87B,MAAQ,GAC5B97B,EAAGm1B,oBAIX,mBACIhyC,KAAK0sE,qBAAuB,GAC5B1sE,KAAKsrE,OAAOv8D,QAASs8D,IAAYA,EAAM1mC,WACvCoG,EAAE/qC,KAAK+kE,YAAYp7C,QAGvB,YAEI,IAAIwjD,EAA8B,CAC9BC,WAAY,GACZH,qBAAsBjtE,KAAKgtE,kBAAkBC,sBAGjD,IAAK,IAAII,KAAertE,KAAK0sE,qBAAsB,CAC/C,IAAIY,EAAWttE,KAAK0sE,qBAAqBW,GACzC,IAAK,IAAIxD,KAAMyD,EAASlvB,OAAQ,CAC5B,IAAImvB,EAAM1D,EAAG58B,YACbsgC,EAAIF,YAAcj8D,OAAOI,SAAS67D,GAClCF,EAAIC,WAAWrpE,KAAKwpE,IAI5B,OAAOJ,EAIX,YAAYK,GACR,IAAK,IAAI3D,KAAM2D,EAAuBJ,WAAY,CAC9C,IAAIA,EAAyBptE,KAAK0sE,qBAAqB7C,EAAGwD,aACxC,MAAdD,IACAA,EAAa,CACThvB,OAAQ,GACRqvB,SAAU,GACVR,sBAAsB,GAE1BjtE,KAAK0sE,qBAAqB7C,EAAGwD,aAAeD,GAEhDA,EAAWK,SAAS1pE,KAAK,GAAS2pE,YAAY1tE,KAAM6pE,IACpDuD,EAAWH,qBAAuBO,EAAuBP,sBAKjE,yBACI,IAAIG,EAAaptE,KAAK0sE,qBAAqB1sE,KAAK2sE,oBAChD3sE,KAAK2tE,sBAAsBP,EAAWhvB,QAG1C,cAAcjQ,GACV,IAAI07B,EAAiB7pE,KAAK0sE,qBAAqBv+B,EAAUtsC,IASzD,OARU,MAANgoE,IACAA,EAAK,CACDzrB,OAAQ,GACRqvB,SAAU,GACVR,sBAAsB,GAE1BjtE,KAAK0sE,qBAAqBv+B,EAAUtsC,IAAMgoE,GAEvCA,EAGX,kBAAkB17B,GACd,IAAIy/B,EAAO5tE,KAAK6tE,cAAc1/B,GAE9B,GAAInuC,KAAK2sE,oBAAsBx+B,EAAUtsC,GAAI,CACzC,GAA+B,MAA3B7B,KAAK2sE,mBAA4B,CACjC,IAAIY,EAAMvtE,KAAK0sE,qBAAqB1sE,KAAK2sE,oBACzC,GAAU,MAAPY,EAAY,CACX,IAAK,IAAI1D,KAAM0D,EAAInvB,OACfyrB,EAAGv/B,SAEP,IAAK,IAAIu/B,KAAM0D,EAAIE,SACf5D,EAAGv/B,UAKf,IAAK,IAAIu/B,KAAM+D,EAAKxvB,OAChBp+C,KAAK+kE,WAAWE,YAAY4E,EAAGpzB,SAAS,IAE5C,IAAK,IAAIozB,KAAM+D,EAAKH,SACG,MAAf5D,EAAGpzB,UACHz2C,KAAK+kE,WAAWE,YAAY4E,EAAGpzB,SAAS,IAIhDz2C,KAAK2tE,sBAAsBC,EAAKxvB,QAKpC,OAFAp+C,KAAK2sE,mBAAqBx+B,EAAUtsC,GAE7B+rE,EAIX,YAAYz/B,EAAsB2/B,G,MAE9B,GAAiB,MAAb3/B,EAAmB,OACvBnuC,KAAK8vC,iBAAmB3B,EACxBnuC,KAAKgtE,kBAAoBhtE,KAAK+tE,kBAAkB5/B,GAEhD,IAAI1wB,EAAc0wB,EAAU1wB,YAExBuwD,EAA4B,GAE5BC,GAA4B,EAC5BC,EAA0C,GAC1CtnE,EAA2C,GAE/C,IAAK,IAAIlP,KAAU+lB,EAAY2F,YAAW,GAAQ,CAC9C,IAAIC,EAA4B,QAApB,EAAG3rB,aAAM,EAANA,EAAQ4lB,iBAAS,eAAE+F,SAClB,MAAZA,IACJ4qD,GAAmB,EAGnB5qD,EAAStZ,OAAQ3J,GACNA,aAAgB,GACnBA,aAAgB,GACrB2O,QAAShM,IACR,IAAI8mE,EAAe7pE,KAAKmuE,mBAAmBprE,EAAO/C,KAAKgtE,kBAAmBkB,GAChE,MAANrE,GAAYmE,EAAcjqE,KAAK8lE,GAC/B9mE,aAAiB,GACjBA,EAAMqrE,0BAA0BxnE,MAM5C,IAAIynE,EAAkC,GACtC,KAAOA,EAASrsE,OAAS4E,EAAkB5E,QAAQ,CAC/CqsE,EAAWznE,EAAkB4F,MAAM,GACnC,IAAK,IAAI8hE,KAAOD,EACRC,aAAe,GACfA,EAAIF,0BAA0BxnE,GAK1C,GAAG5G,KAAKgtE,kBAAkBC,qBACtB,IAAK,IAAIqB,KAAO1nE,EAAmB,CAC/B,IAAIijE,EAAe7pE,KAAKmuE,mBAAmBG,EAAKtuE,KAAKgtE,kBAAmBkB,GAC9D,MAANrE,GAAYmE,EAAcjqE,KAAK8lE,GAI3C7pE,KAAK4iC,MAAQ5iC,KAAK4iC,OAASsrC,EAAiBlsE,OAAS,EAErD,IAAK,IAAIe,KAASmrE,EAAkB,CAChC,IAAIrE,EAAK,IAAI,GAAS7pE,KAAsB,GAAhBuL,KAAKq6C,SNzMlB,GMyMiE,GAAhBr6C,KAAKq6C,SNzMtD,GMyMqF7iD,GAEpG8mE,EAAGG,cAEH,IAAIuE,EAAUvuE,KAAKwuE,cAAcR,EAAenE,EAAGtF,QAASsF,EAAGrF,SAAUxkE,KAAKqkE,aAE9EwF,EAAGJ,OAAO8E,EAAQx6B,EAAGw6B,EAAQv6B,GAAG,GAEhCg6B,EAAcjqE,KAAK8lE,GAQvB,GAJIqE,EAAiBlsE,OAAS,GAC1BhC,KAAK2tE,sBAAsBK,GAG1BC,EAAL,CAEA,IAAK,IAAIpE,KAAM7pE,KAAKgtE,kBAAkB5uB,OAClCyrB,EAAG7gC,OACH6gC,EAAGzrB,QAAS,EACZp+C,KAAKgtE,kBAAkBS,SAAS1pE,KAAK8lE,GAGzC7pE,KAAKgtE,kBAAkB5uB,OAAS4vB,EAE3BF,IACD9tE,KAAKuqE,yBACLvqE,KAAKwqE,iBAKb,eACIxqE,KAAKkkE,aAAaz0C,KAAK,4BAA4BuZ,OAInD,IAAI+pB,EAAmB,CAAC,UAAW,UAAW,UAAW,UAAW,UACnE,UAAW,UAAW,UAAW,UAAW,UAAW,WACpD0b,EAAa,EAEbC,EAAe1uE,KAAK2uE,aAExB3uE,KAAKgwC,UACL0+B,EAAa1+B,QAAUhwC,KAAKgwC,QAEF,MAAtBhwC,KAAK4uE,eACL5uE,KAAK4uE,cAAcC,YAGvB7uE,KAAK4uE,cAAgB,IAAIE,OAAO,+CAChC,IAAI9xD,EAAOhd,KACXA,KAAK4uE,cAAcG,UAAY,SAAUn4D,GAErC,IAAIs7B,EAAoBt7B,EAAEq0B,KAC1B,GAAIiH,EAAGlC,SAAWhzB,EAAKgzB,QAAS,CAC5BhzB,EAAKknD,aAAaz0C,KAAK,4BAA4BuZ,OAEnDhsB,EAAKsuD,OAAOv8D,QAASs8D,IAAYA,EAAM1mC,WAEvC,IAGIqqC,EAHAC,EAA8D,GAE9DC,EAA6Bh9B,EAAGo5B,OAAOtpE,OAAS,EAEpD,GACIgtE,EAAyBE,EACzBA,EAAqB,EACrBh9B,EAAGo5B,OAAOv8D,QAASs8D,IACI,MAAfA,EAAM3hD,QACNwlD,IACuC,MAAnC7D,EAAMiB,2BACNjB,EAAM3hD,MAAQqpC,EAAO0b,GACrBQ,EAA0B5D,EAAMtxE,YAAcsxE,EAAM3hD,MACpD+kD,IACIA,EAAa1b,EAAO/wD,OAAS,IAAGysE,EAAa,IAEjDpD,EAAM3hD,MAAQulD,EAA0B5D,EAAMiB,oCAItD4C,EAAqBF,GAE7B98B,EAAGo5B,OAAOv8D,QAASs8D,IACI,MAAfA,EAAM3hD,QACN2hD,EAAM3hD,MAAQ,aAItBwoB,EAAGo5B,OAAOv8D,QAASs8D,IACf,IAAI8D,EAAmB,IAAI,GAAanyD,EAAK+nD,WAAYsG,EAAOA,EAAM3hD,OACtEylD,EAAG98B,SACHr1B,EAAKsuD,OAAOvnE,KAAKorE,OAO7BnvE,KAAK4uE,cAAcQ,YAAYV,GAC/B1uE,KAAKkkE,aAAaz0C,KAAK,4BAA4BoZ,OAIvD,aAEI,IAAI6lC,EAA6B,CAC7BW,WAAY,GACZ/D,OAAQ,GACR3O,KAAMpxD,KAAKmyD,KAAK19D,KAAKukE,QNtTN,IMuTfd,KAAMl4D,KAAKmyD,KAAK19D,KAAKwkE,SNvTN,IMwTfoI,mCAAoC5sE,KAAK4sE,mCACzCC,uBAAwB7sE,KAAK6sE,uBAC7BC,aAAc9sE,KAAK8sE,cAGnBM,EAAaptE,KAAK0sE,qBAAqB1sE,KAAK2sE,oBAiChD,OA/BAS,EAAWhvB,OAAOrvC,QAAS86D,IACvB6E,EAAaW,WAAWtrE,KAAK8lE,EAAGyF,yBAGpClC,EAAWhvB,OAAOrvC,QAAS86D,IAEvB,GAAIA,EAAG9mE,iBAAiB,EAAO,CAC3B,GAA0B,MAAtB8mE,EAAG9mE,MAAMK,UAAmB,CAC5B,IAAImsE,EAAMvvE,KAAKwvE,aAAa3F,EAAG9mE,MAAMK,UAAWgqE,EAAWhvB,QAChD,MAAPmxB,GACAvvE,KAAKyvE,WAAW5F,EAAI0F,EAAK,cAAeb,GAGhD,IAAK,IAAIgB,KAAQ7F,EAAG9mE,MAAM6C,WAAY,CAClC,IAAI2pE,EAAMvvE,KAAKwvE,aAAaE,EAAMtC,EAAWhvB,QAClC,MAAPmxB,GACAvvE,KAAKyvE,WAAW5F,EAAI0F,EAAK,cAAeb,GAGhD,IAAK,IAAI5nE,KAAM+iE,EAAG9mE,MAAMgE,mBAAoB,CACxC,IAAIwoE,EAAMvvE,KAAKwvE,aAAa1oE,EAAG/D,MAAOqqE,EAAWhvB,QACtC,MAAPmxB,GACAvvE,KAAKyvE,WAAWF,EAAK1F,EAAI,cAAe6E,OASjDA,EAIX,WAAWa,EAAeI,EAAetD,EAAmBqC,GAE5Ca,EAAID,sBACJK,EAAIL,sBADhB,IAGIlC,EAAaptE,KAAK0sE,qBAAqB1sE,KAAK2sE,oBAEhD+B,EAAapD,OAAOvnE,KAAK,CACrBsoE,UAAWA,EAEXuD,mBAAoBxC,EAAWhvB,OAAOz5C,QAAQgrE,GAE9CE,qBAAsBzC,EAAWhvB,OAAOz5C,QAAQ4qE,GAEhDO,sBAAuBH,EAAIp2C,UAC3Bx/B,WAAYw1E,EAAIh2C,UAAY,YAAco2C,EAAIp2C,YAKtD,aAAax2B,EAA0BqqE,GAEnC,IAAK,IAAIvD,KAAMuD,EACX,GAAIvD,EAAG9mE,OAASA,EAAO,OAAO8mE,EAGlC,OAAO,KAIX,mBAAmB9mE,EAA0BqqE,EAAwBc,GACjE,IAAIv2E,EAAI,EACR,KAAOA,EAAIy1E,EAAWhvB,OAAOp8C,QAAQ,CACjC,IAAIsE,EAAI8mE,EAAWhvB,OAAOzmD,GAC1B,GAAI2O,EAAEizB,WAAax2B,EAAMhJ,YAAcuM,EAAEypE,sBAAsBhtE,GAG3D,OAFAuD,EAAEijE,cAAcxmE,GAChBqqE,EAAWhvB,OAAOlnC,OAAOvf,EAAG,GACrB2O,EAEX3O,IAIJ,IADAA,EAAI,EACGA,EAAIy1E,EAAWK,SAASzrE,QAAQ,CACnC,IAAIsE,EAAI8mE,EAAWK,SAAS91E,GAC5B,GAAI2O,EAAEizB,WAAax2B,EAAMhJ,YAAcuM,EAAEypE,sBAAsBhtE,GAO3D,OANAqqE,EAAWK,SAASv2D,OAAOvf,EAAG,GAC9B2O,EAAEvD,MAAQA,EACVuD,EAAE0jE,cACF1jE,EAAEuiC,OACFviC,EAAE83C,QAAS,EACXp+C,KAAK4iC,OAAQ,EACNt8B,EAEX3O,IAKJ,OAFAu2E,EAAiBnqE,KAAKhB,GAEf,KAGX,QAEI,IAAI8mE,EAAK7pE,KAAK0sE,qBAAqB1sE,KAAK2sE,oBACxC,GAAU,MAAN9C,EACA,IAAK,IAAI7xE,KAAK6xE,EAAGzrB,OACbpmD,EAAEsyC,UChaZ,MAAO,WCPP,MAEF,YAAsBhX,EAA0B08C,GAA1B,KAAA18C,OAA0B,KAAA08C,kBDWhD,qB,MAEI,IAAIvyD,EAAczd,KAAKszB,KAAK4Q,sBAAsBzmB,YAE9Cg5B,EAAWrO,OAAO,uCACtBpoC,KAAKiwE,eAAiB7nC,OAAO,qBAC7BqO,EAAS/O,OAAO1nC,KAAKiwE,gBAErB,IAAK,IAAIv4E,KAAU+lB,EAAY2F,YAAW,GAAQ,CAC9C,IAAIlI,EAA0C,QAAzB,EAAGxjB,EAAO2mB,uBAAe,eAAEnD,kBAChD,GAAyB,MAArBA,GAAyD,GAA5BA,EAAkBlZ,OAAa,SAChE,IAAImZ,EAAcD,EAAkB,GAAGC,YACpB,MAAfA,GAA4D,MAArCD,EAAkB,GAAGE,cAChDD,EAAYpM,QAAQ,CAAC0M,EAAU1hB,KAC3B,IAAIqG,EAAOqb,EAASrb,KACpB,GAAY,MAARA,GAAgBA,aAAgB,GAAwB,MAAfA,EAAK1I,SAAmB0I,EAAK1I,OAAOmP,eAAgB,CAC7F,IAAIqpE,EAAmBn2E,GAAciG,KAAKmwE,eAAiB,YAAc,GACzEnwE,KAAKiwE,eAAevoC,OAAO,kBAAoB3tC,EAAam2E,EAAW,KAAOn2E,EAC1E,YAAcrC,EAAOioC,KAAKznC,KAAO,kBAKjD,OAAOu+C,EAIX,UAAoB,MAAO,QAE3B,gB,MAEI,IACI25B,EAAqC,QAA5B,EADFpwE,KAAKszB,KAAK+M,iBAAiB1iB,KACjB3d,KAAKmwE,uBAAe,eAAEv3E,MAC3C,GAAiB,MAAbw3E,EAEA,YADApwE,KAAKgwE,cAAchlE,MAAM,uBAAyBhL,KAAKmwE,eAAiB,kBAItD,MAAlBC,EAAUhwE,MAAkBgwE,EAAUhwE,gBAAgB,GACtDJ,KAAKgwE,cAAchlE,MAAM,gBAAkBhL,KAAKmwE,eAAiB,2BAGrE,IAQIE,EARAttE,EAAsBqtE,EAAUhwE,KAChCw6B,EAAqBw1C,EAAUx3E,MAG/B03E,EAA6BtwE,KAAKuwE,qBAAqBxtE,GAGvDytE,EAAwC,GAG5C,GAAkC,MAA9BF,EAAoC,CAEpC,IAAIhqE,EAAIvD,EACR,KAAY,MAALuD,KAAeA,aAAa,IAAc,CAE7C,IAAK,IAAIY,KAAKZ,EAAE/C,WAAY,CACxB,IAAI3K,EAAQgiC,EAAI33B,gBAAgBqD,EAAEvM,YAAYmN,EAAEnN,YAChD,GAAMnB,EAAMwH,gBAAgB,EAC5B,GAAyB,MAArBiwE,GAA6BA,GAAqBnpE,EAAE9G,KACpDowE,EAA4BzsE,KAAKmD,EAAEnN,gBAChC,CACH,IAAI02E,EAAKzwE,KAAKuwE,qBAAqB33E,EAAMwH,MAC/B,MAANqwE,IACAJ,EAAoBI,IAKhCnqE,EAAIA,EAAElD,WAKoB,MAA9BktE,GAA2D,MAArBD,EACtCrwE,KAAKgwE,cAAchlE,MAAM,2DAEzBhL,KAAKktE,YAAYkD,EAAWE,EAA4BE,EAA6BH,GAO7F,YAAYD,EAAkBE,EAC1BE,EAAuCH,IAQ3C,qBAAqBttE,GAEjB,IAAI2tE,EAA2B,GAG3BpqE,EAAIvD,EACR,KAAY,MAALuD,KAAeA,aAAa,IAC3BA,EAAEV,WAAW5D,OAAS,IACtB0uE,EAAcA,EAAYnpE,OAAOjB,EAAEV,aAEpB,MAAfU,EAAElD,WAAuBkD,EAAElD,qBAAqB,SAPpDutE,GAQa5sE,KAAKuC,EAAElD,WAEpBkD,EAAIA,EAAElD,UAIV,IADAkD,EAAIvD,EACQ,MAALuD,KAAeA,aAAa,IAAc,CAE7C,IAAK,IAAIY,KAAKZ,EAAE/C,WAAY,CACxB,IAAInD,EAAO8G,EAAE9G,KACb,GAAIswE,EAAY/rE,QAAmBvE,IAAS,SAlBhDuwE,GAkB8DhsE,QAAevE,IAAS,EAC9E,OAA0BA,EAIlCkG,EAAIA,EAAElD,UAGV,OAAO,KAIX,UE3IE,MAAO,WAAsB,GAK/B,YAAYkwB,EAAwBs9C,GAChCvvE,MAAMuvE,EAAkBnhD,KAAK,4BAA6B6D,GAD1B,KAAAs9C,oBAHpC,KAAAC,SAAmC,GACnC,KAAAC,eAAuC,KAInC9wE,KAAK6wE,SAAS9sE,KAAK,IAAI,GAAYuvB,EAAMtzB,OAEzC,IAAI+wE,EAAcH,EAAkBnhD,KAAK,0BACzCshD,EAAYpnD,QACZonD,EAAYrpC,OAAO,6DAGnB,IAAK,IAAIspC,KAAWhxE,KAAK6wE,SACrBE,EAAYrpC,OAAO,qBAA+BspC,EAAQC,UAAY,aAG1E,IAAIj0D,EAAOhd,KACX+wE,EAAY7mC,GAAG,SAAWtzB,IAEtB,IAAIhe,EAAgBge,EAAEs6D,cAAct4E,MACpC,GAAY,MAATA,EAC2B,MAAvBokB,EAAK8zD,iBACJ9zD,EAAK4nD,QAAQn1C,KAAK,0BAA0BkV,SAC5C3nB,EAAK8zD,eAAejuC,SAExB7lB,EAAK8zD,eAAiB,SACnB,CACH,IAAIK,EAAW//D,OAAOI,SAAS5Y,GAC/BokB,EAAK8zD,eAAiB9zD,EAAK6zD,SAASM,GAExCn0D,EAAKo0D,mBAKb,MAAMpmE,GACFhL,KAAK4kE,QAAQl9B,OAAO,sCAAwC18B,EAAQ,UAIxE,iBACI,IAAIqmE,EAAerxE,KAAK4wE,kBAAkBnhD,KAAK,8BACrB,MAAvBzvB,KAAK8wE,gBACJO,EAAa1nD,QACb0nD,EAAa3pC,OAAO1nC,KAAK8wE,eAAeQ,uBAExCD,EAAa1nD,QAIrB,gBAC8B,MAAvB3pB,KAAK8wE,gBACJ9wE,KAAK8wE,eAAeS,iBCpD1B,MAAO,GAST,YAAoBj+C,EAAuBk+C,GAAvB,KAAAl+C,OAAuB,KAAAk+C,YAL3C,KAAAC,aAAuB,EAOnBzxE,KAAK0xE,MAAQF,EAAU/hD,KAAK,YAC5BzvB,KAAK2xE,UAAYH,EAAU/hD,KAAK,mBAEhC,IAAImiD,EAAmB5xE,KAAK2xE,UAAUliD,KAAK,8BAA8BztB,OAAS,EAC9E6vE,EAAoB7xE,KAAK2xE,UAAUliD,KAAK,+BAA+BztB,OAAS,EAEjF4vE,IACC5xE,KAAK4sC,aAAe,IAAI,GAAa5sC,KAAK0xE,MAAMjiD,KAAK,oBAAqB6D,GAC1EtzB,KAAK2xE,UAAUliD,KAAK,8BAA8Bya,GAAG,QAAS,KAAQltB,EAAKsW,KAAKw+C,mBAAkB,MAGnGD,IACC7xE,KAAKgwE,cAAgB,IAAI,GAAchwE,KAAKszB,KAAMtzB,KAAK0xE,MAAMjiD,KAAK,sBAClEzvB,KAAK2xE,UAAUliD,KAAK,+BAA+Bya,GAAG,QAAS,KAAQltB,EAAK+0D,4BAGhF,IAAI/0D,EAAOhd,KACPgyE,EAAyB,OAC7BR,EAAU/hD,KAAK,oBAAoBya,GAAG,QAAS,KAE3CltB,EAAKy0D,aAAez0D,EAAKy0D,YAEzB,IAAIQ,EAAe7pC,OAAO,oBAErBprB,EAAKy0D,aAUNrpC,OAAO,SAASoE,IAAI,UAAW,QAC/BwlC,EAAiB5pC,OAAO,aAAaoE,IAAI,SACzCpE,OAAO,aAAaoE,IAAI,QAAS,QACjCylC,EAAalpC,YAAY,oBACzBkpC,EAAanpC,SAAS,yBAEtBV,OAAO,yBAAyBV,OAAOU,OAAO,cAC9C6pC,EAAajmC,KAAK,QAAS,kCAC3B5D,OAAO,gBAAgBiN,QAAQ,iBAjB/BjN,OAAO,SAASoE,IAAI,UAAW,QAC/BpE,OAAO,aAAaoE,IAAI,QAASwlC,GAEjCC,EAAalpC,YAAY,yBACzBkpC,EAAanpC,SAAS,oBACtBV,OAAO,aAAa2O,YAAY3O,OAAO,eACvC6pC,EAAajmC,KAAK,QAAS,+BAC3B5D,OAAO,gBAAgBiN,QAAQ,kBAgB3C,qBACI,IAAI68B,EAA2BlyE,KAAKszB,KAAK+M,iBAAiB6xC,YAC1D,GAAmB,MAAfA,GAAuBlyE,KAAKyxE,YAAa,CACzC,IAAIU,EAAez9B,OAAOI,YAAc90C,KAAK2xE,UAAUn+B,SAAW,EAC9D4+B,EAAsB19B,OAAOC,WAAcw9B,EAC3CE,EAAqBH,EAAY3+B,MAAQ2+B,EAAY1+B,OACzD,GAAI6+B,GAAsBD,EAAqB,CAC3C,IAAIE,EAAWD,EAAqBF,EACpCnyE,KAAK0xE,MAAMjiD,KAAK,WAAW+c,IAAI,QAAS8lC,EAAW,MACnDtyE,KAAK0xE,MAAMjiD,KAAK,WAAW+c,IAAI,SAAU2lC,EAAe,UACrD,CACH,IAAII,EAAY79B,OAAOC,WAAa09B,EACpCryE,KAAK0xE,MAAMjiD,KAAK,WAAW+c,IAAI,QAASkI,OAAOC,WAAa,MAC5D30C,KAAK0xE,MAAMjiD,KAAK,WAAW+c,IAAI,SAAU+lC,EAAY,QAMjE,UACIv9B,GAASh1C,KAAKwxE,WAGlB,wBACI,IAAI5W,EAAU56D,KAAK2xE,UAAUliD,KAAK,8BAClC,OAAqB,GAAlBmrC,EAAQ54D,QACJ44D,EAAQrjB,SAAS,aAG5B,yBACI,IAAIqjB,EAAU56D,KAAK2xE,UAAUliD,KAAK,+BAClC,OAAqB,GAAlBmrC,EAAQ54D,QACJ44D,EAAQrjB,SAAS,aAG5B,8BACQv3C,KAAKwyE,wBACLxyE,KAAKgwE,cAAcoB,iBAI3B,yBACIpxE,KAAKgwE,cAAcoB,iBACfpxE,KAAKszB,KAAK+M,iBAAiBob,OAASC,GAAiBC,QAAU37C,KAAKszB,KAAK+M,iBAAiBob,OAASC,GAAiBiO,SACpH3pD,KAAKgwE,cAAcuB,iBC5GzB,MAAO,GAIT,YAAYj+C,GACRtzB,KAAKszB,KAAOA,EAGhB,cACI,IAAItW,EAAOhd,KAEXooC,OAAO,YAAY8B,GAAG,YAAcuoC,IAEhC,IAAIC,EAAKtqC,OAAO,cACZuqC,EAAKvqC,OAAO,0BACZ2L,EAAI0+B,EAAG5V,QAEXz0B,OAAO3tB,UAAUyvB,GAAG,oBAAsB0oC,IACtC,IAAInN,EAAKmN,EAAG/V,QAAU9oB,EAClBR,EAAQniC,OAAOI,SAASkhE,EAAGlmC,IAAI,SAASz8B,QAAQ,KAAM,KAC1D2iE,EAAGlmC,IAAI,QAAU+G,EAAQkyB,EAAM,MAE/B,IAAIoN,EAAUzhE,OAAOI,SAASmhE,EAAGnmC,IAAI,SAASz8B,QAAQ,KAAM,KAC5D4iE,EAAGnmC,IAAI,QAAUqmC,EAAUpN,EAAM,MACjCzoD,EAAKsW,KAAKixB,kBAAkBhE,SACyB,MAAlDvjC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,YACnC3qC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,WAAWpH,SAEnDxM,EAAI6+B,EAAG/V,UAGXz0B,OAAO3tB,UAAUyvB,GAAG,kBAAmB,KACnC9B,OAAO3tB,UAAU+vB,IAAI,qBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBAM7BpC,OAAO,YAAY8B,GAAG,YAAcuoC,IAEhC,IAAIK,EAAK1qC,OAAO,oBACZuqC,EAAKvqC,OAAO,0BACZ4L,EAAIy+B,EAAG9O,QAEXv7B,OAAO3tB,UAAUyvB,GAAG,oBAAsB0oC,IACtC,IAAIlN,EAAKkN,EAAGjP,QAAU3vB,EAElBR,EAASpiC,OAAOI,SAASshE,EAAGtmC,IAAI,UAAUz8B,QAAQ,KAAM,KAC5D+iE,EAAGtmC,IAAI,SAAWgH,EAASkyB,EAAM,MAEjC,IAAIqN,EAAW3hE,OAAOI,SAASmhE,EAAGnmC,IAAI,UAAUz8B,QAAQ,KAAM,KAC9D4iE,EAAGnmC,IAAI,SAAWumC,EAAWrN,EAAM,MAEnC1oD,EAAKsW,KAAKixB,kBAAkBhE,SACyB,MAAlDvjC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,YACnC3qC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,WAAWpH,SAGnDvM,EAAI4+B,EAAGjP,UAGXv7B,OAAO3tB,UAAUyvB,GAAG,kBAAmB,KACnC9B,OAAO3tB,UAAU+vB,IAAI,qBACrBpC,OAAO3tB,UAAU+vB,IAAI,uBAM7BpC,OAAO,YAAY8B,GAAG,YAAcuoC,IAEhC,IAAIC,EAAKtqC,OAAO,aACZuqC,EAAKvqC,OAAO,0BACZ2L,EAAI0+B,EAAG5V,QACX,GAAY+G,eAAgB,EAE5Bx7B,OAAO3tB,UAAUyvB,GAAG,oBAAsB0oC,IACtC,IAAInN,EAAKmN,EAAG/V,QAAU9oB,EAElBR,EAAQniC,OAAOI,SAASkhE,EAAGlmC,IAAI,SAASz8B,QAAQ,KAAM,KAC1D2iE,EAAGlmC,IAAI,QAAU+G,EAAQkyB,EAAM,MAE/B,IAAIoN,EAAUzhE,OAAOI,SAASmhE,EAAGnmC,IAAI,SAASz8B,QAAQ,KAAM,KAC5D4iE,EAAGnmC,IAAI,QAAUqmC,EAAUpN,EAAM,MAEjCzoD,EAAKsW,KAAKixB,kBAAkBhE,SACyB,MAAlDvjC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,YACnC3qC,EAAKsW,KAAK2kC,UAAUzO,gBAAgB7B,WAAWpH,SAGnDnY,OAAO,gBAAgBiN,QAAQ,eAC/B9B,GAASkyB,EACT1xB,EAAI6+B,EAAG/V,QACP+V,EAAG5gC,oBAGP5J,OAAO3tB,UAAUyvB,GAAG,kBAAmB,KACnC9B,OAAO3tB,UAAU+vB,IAAI,qBACrBpC,OAAO3tB,UAAU+vB,IAAI,mBACrB,GAAYo5B,eAAgB,OChGtC,MAAO,GAST,YAAoBtwC,EAAoB0/C,GAApB,KAAA1/C,OAAoB,KAAA0/C,YAIxC,eACIhzE,KAAKkhE,WAAWv8B,SAChB3kC,KAAKizE,aAAatuC,SAGtB,UAEI3kC,KAAKkzE,mBAELlzE,KAAKmzE,iBAELnzE,KAAKozE,cAAcpzE,KAAKgzE,WAI5B,mBAEI,IAAIh2D,EAAOhd,KAEXA,KAAKizE,aAAe,IAAI,GAAejzE,KAAKszB,KAAKoZ,gBAAgBgJ,UAC7D,gBAAiB,IAAK,KACtB,GAAI,WAAW,GAEnB11C,KAAKizE,aAAaj8B,eAAkBjG,IAEhC/zB,EAAKsW,KAAK0pB,eAAe1Q,YAAY,KAOjC7B,GAAK,gBAL+B,CAChC4oC,UAAWtiC,EAAGlvC,GACdisC,OAAQ9tC,KAAKszB,KAAK8Y,KAAKvqC,IAGKupC,IACJ,GAApBA,EAASD,UAELnuB,EAAKsW,KAAKua,mBAAqB7wB,EAAKsW,KAAK8Y,KAAKvqC,KAC9Cmb,EAAKs2D,cAAgBt2D,EAAKsW,KAAKga,cAAc9gC,QAC7CwQ,EAAKu2D,oBAAsBv2D,EAAKsW,KAAKwc,kBAGzC9yB,EAAKsW,KAAKkgD,kBAAkBpoC,EAAS8D,YACrClyB,EAAKsW,KAAKua,kBAAoBkD,EAAGlvC,GACjCmb,EAAKsW,KAAKoZ,gBAAgB+mC,iBAAiB,uBAC3Cz2D,EAAKsW,KAAKoZ,gBAAgBg0B,YAAY73B,OACtC,GAAOma,WAAW,mBAAoBhjD,KAAKszB,MAE3CtW,EAAKsW,KAAK2kC,UAAUyb,kBACpB12D,EAAKsW,KAAK2kC,UAAUzO,gBAAgBmqB,mBAAmB32D,EAAKsW,KAAKga,gBAGrEttC,KAAKszB,KAAK0pB,eAAepR,yBAA2B5rC,KAAKszB,KAAK0pB,eAAerR,gCAC7E3rC,KAAKszB,KAAK0pB,eAAelR,sBAAwB9rC,KAAKszB,KAAK0pB,eAAerR,qCAS1F,uBACI,IAAIrY,EAAOtzB,KAAKszB,KAGhBA,EAAKixB,kBAAkBuT,cAAc,CAAE9P,UAAU,IAEjD10B,EAAKga,cAAgBttC,KAAKszE,cAC1BhgD,EAAKwc,iBAAmB9vC,KAAKuzE,oBAC7BjgD,EAAKua,kBAAoBva,EAAK8Y,KAAKvqC,GACnCyxB,EAAKoZ,gBAAgB+mC,iBAAiB,MAEtCngD,EAAKoZ,gBAAgBknC,iBAAiBtgD,EAAKga,eAEd,MAAzBha,EAAKwc,kBAA4Bxc,EAAKga,cAActrC,OAAS,IAC7DsxB,EAAKwc,iBAAmBxc,EAAKga,cAAc,IAGlB,MAAzBha,EAAKwc,kBACLxc,EAAKoZ,gBAAgB4c,mBAAmBh2B,EAAKwc,kBAGjD9vC,KAAKizE,aAAah8B,OAAO,MAAM,GAInC,iBACI,IAAIj6B,EAAOhd,KAEXA,KAAKkhE,WAAa,IAAI,GAAelhE,KAAKszB,KAAKoZ,gBAAgBgJ,UAC3D,UAAW,IAAK,KAAM,GAAI,SAAS,GAEvC11C,KAAKkhE,WAAWlqB,eAAkB68B,IAC9B72D,EAAKsW,KAAK0pB,eAAe1Q,YAAY,KAEjC,IAAI0mC,EAAuBa,EACV,MAAbb,GACAhzE,KAAK8zE,eAAed,EAAUrU,aAS9C,eAAeoV,GACX/zE,KAAKizE,aAAapwC,QAElBkxC,EAAap8B,KAAK,CAACzwC,EAAG0wC,IACd1wC,EAAE83D,aAAepnB,EAAEonB,aAAqB,EACxCpnB,EAAEonB,aAAe93D,EAAE83D,cAAsB,EACzC93D,EAAE63D,QAAUnnB,EAAEmnB,QAAgB,EAC9BnnB,EAAEmnB,QAAU73D,EAAE63D,SAAiB,EAC5B,GAGX,IAAK,IAAIiV,KAAMD,EAAc,CACzB,IAAIhjC,EAAuB,CACvB74C,KAAM87E,EAAGjV,QAAU,IAAMiV,EAAGhV,aAC5BlnB,SAAUk8B,EAAGhV,aAAe,IAAMgV,EAAGjV,QACrCnuB,gBAAiBojC,GAErBh0E,KAAKizE,aAAatiC,WAAWI,IAKrC,cAAckjC,GACVj0E,KAAKizE,aAAapwC,QAElBoxC,EAAct8B,KAAK,CAACzwC,EAAG0wC,IACf1wC,EAAEhP,KAAO0/C,EAAE1/C,KAAa,EACxB0/C,EAAE1/C,KAAOgP,EAAEhP,MAAc,EACtB,GAGX,IAAK,IAAI4O,KAAMmtE,EAAe,CAC1B,IAAIljC,EAAuB,CACvB74C,KAAM4O,EAAG5O,KACT04C,gBAAiB9pC,GAErB9G,KAAKkhE,WAAWvwB,WAAWI,KCvJjC,MAAO,GAGT,YAAoBzd,GAAA,KAAAA,OAIpB,UAEI,IAAItW,EAAOhd,KAEPk0E,EAAgB9rC,OAAO,sBAE3BA,OAAO,mBAAmBgC,QAE1BhC,OAAO,mBAAmB8B,GAAG,UAAYtzB,IACxB,SAATA,EAAE1d,KACFkvC,OAAO,mBAAmBgC,UAIlChC,OAAO,mBAAmB8B,GAAG,UAAYtzB,IACxB,SAATA,EAAE1d,KACFkvC,OAAO,iBAAiBiN,QAAQ,WAIxCjN,OAAO,mBAAmB8B,GAAG,UAAYtzB,IACxB,OAATA,EAAE1d,MACF0d,EAAE6hC,iBACFrQ,OAAO,iBAAiBgC,QACxBhC,OAAO,iBAAiBU,SAAS,cAExB,SAATlyB,EAAE1d,KACFkvC,OAAO,iBAAiBiN,QAAQ,WAIxCjN,OAAO,iBAAiB8B,GAAG,UAAYtzB,IACtB,OAATA,EAAE1d,KACF0d,EAAE6hC,iBACFrQ,OAAO,mBAAmBgC,QAC1BhC,OAAO,iBAAiBW,YAAY,cAEpCX,OAAO,iBAAiBiN,QAAQ,WAKxC,IAAI8+B,GAAgB,EACpB/rC,OAAO,iBAAiB8B,GAAG,QAAS,KAMhC,GAJAkT,GAAWkB,OAEX41B,EAAcrrC,OAEVsrC,EAAe,OACnBA,GAAgB,EAEhBxrC,WAAW,KACPwrC,GAAgB,GACjB,KAOH1pC,GAAK,QAL4B,CAC7B2pC,SAAkBhsC,OAAO,mBAAmB6B,MAC5CoqC,SAAkBjsC,OAAO,mBAAmB6B,OAGnBmB,IAEzB,GAAKA,EAASD,QAEP,CAOH/C,OAAO,UAAUY,OAEjBZ,OAAO,oBAAoBoK,KAAK,oBAChCpK,OAAO,gBAAgBoE,IAAI,UAAW,QAEtC,IAAIJ,EAAiBhB,EAASgB,KACT,MAAjBA,EAAKW,UAAmD,MAA/BX,EAAKW,SAAS60B,gBACvCx1B,EAAKW,SAAW,CACZ60B,cAAe,CACX0S,mBAAmB,EACnBrS,mBAAmB,EACnBsS,wBAAwB,EACxBC,wBAAwB,EACxBC,sBAAsB,EACtBC,sBAAsB,EACtB7S,sBAAsB,GAE1B8S,UAAW,KACX/nC,aAAc,OAItB5sC,KAAKszB,KAAKshD,mBAAqB,K,YAE3B53D,EAAKsW,KAAKgoC,SAAS7R,QAAQrd,GAE3BhE,OAAO,gBAAgBY,OACvBkrC,EAAclrC,OACdZ,OAAO,uBAAuBoK,KAAKE,GAAWtG,EAAK2yB,SAAW,IAAMrsB,GAAWtG,EAAK4yB,eAEpF,IAAI,GAAShiD,EAAKsW,MAAMgrB,OAEpBlS,EAAKwvB,YACL5+C,EAAKsW,KAAKuhD,oBAAoBzpC,EAAS0pC,WAG3C93D,EAAKsW,KAAK8Y,KAAOA,EAEjBpvB,EAAKsW,KAAKkgD,kBAAkBpoC,EAAS8D,YACrClyB,EAAKsW,KAAKua,kBAAoBzB,EAAKvqC,GAEnCmb,EAAKsW,KAAK0pB,eAAe+3B,kBAEzB/3D,EAAKsW,KAAKoZ,gBAAgBkD,cAAcolC,UAAU5oC,EAAKwvB,YACvD5+C,EAAKsW,KAAKoZ,gBAAgB6D,mBAAmBykC,UAAU5oC,EAAKwvB,YAE5B,QAAhC,EAAkB,QAAlB,EAAA5+C,EAAKsW,KAAKuZ,gBAAQ,eAAED,oBAAY,SAAE/J,QAEA,MAA9BuJ,EAAKW,SAASH,eACkB,QAAhC,EAAkB,QAAlB,EAAA5vB,EAAKsW,KAAKuZ,gBAAQ,eAAED,oBAAY,SAAE8gC,YAAYthC,EAAKW,SAASH,eAGhE5vB,EAAKsW,KAAKskC,mBAAmBqd,eAC7Bj4D,EAAKsW,KAAK2kC,UAAU2I,mBAIS,GAA7B5gE,KAAKszB,KAAK4hD,kBACVl1E,KAAKszB,KAAKshD,qBACV50E,KAAKszB,KAAKshD,mBAAqB,WAnEnCxsC,OAAO,kBAAkBoK,KAAK,uDAwElC2iC,IACA/sC,OAAO,kBAAkBoK,KAAK,sBAAwB2iC,OAM9D/sC,OAAO,iBAAiB8B,GAAG,QAAS,KAEhC9B,OAAO,oBAAoBoK,KAAK,wEAChCpK,OAAO,gBAAgBoE,IAAI,UAAW,QAElCxsC,KAAKszB,KAAKua,mBAAqB7tC,KAAKszB,KAAK8Y,KAAKvqC,IAC9C7B,KAAKszB,KAAKoZ,gBAAgBi0B,sBAG9B3gE,KAAKszB,KAAK0pB,eAAe1Q,YAAY,K,MAEjCtsC,KAAKszB,KAAKuZ,SAASD,aAAawoC,mBAMhC3qC,GAAK,SAJ8B,CAC/BkiC,mBAA8C,QAA5B,EAAE3sE,KAAKszB,KAAKwc,wBAAgB,eAAEjuC,IAGtB,K,QAG1BumC,OAAO,UAAUS,OACjBT,OAAO,gBAAgBoE,IAAI,UAAW,QACtCpE,OAAO,kBAAkBze,QACzB3pB,KAAKszB,KAAK2H,YAAY0oB,SAASjI,GAAiBsY,iBAChDh0D,KAAKszB,KAAKixB,kBAAkB2D,SAASngD,OAAOsP,OAAOmwC,YAAY,GAAI,WACnExnD,KAAKszB,KAAKoZ,gBAAgBkD,cAAc/M,QACxC7iC,KAAKszB,KAAKoZ,gBAAgB6D,mBAAmB1N,QACjB,QAA5B,EAAmB,QAAnB,EAAA7iC,KAAKszB,KAAK2kC,iBAAS,eAAEzxB,eAAO,SAAE3D,QAC9B7iC,KAAKszB,KAAK2H,YAAY8O,aAAalH,QAE/B7iC,KAAKszB,KAAK8Y,KAAKwvB,aACf57D,KAAKszB,KAAK2tC,gBAAgBoU,eAC1Br1E,KAAKszB,KAAK2tC,gBAAkB,MAGhCjhE,KAAKszB,KAAKwc,iBAAmB,KAC7B9vC,KAAKszB,KAAK8Y,KAAO,YChM/B,MAAOkpC,GAWT,YAAoB3X,EAAgDrqC,GAAhD,KAAAqqC,oBAAgD,KAAArqC,OALpE,KAAAiiD,WAAqD,GAErD,KAAAC,cAAwB,EACxB,KAAAC,oBAA8B,EAI1Bz1E,KAAK01E,wBAA0BttC,OAAO,qIACtCpoC,KAAK21E,wBAA0BvtC,OAAO,mHACtCpoC,KAAK41E,mBAAqBxtC,OAAO,mHACjCu1B,EAAkBj2B,OAAO1nC,KAAK01E,wBAAyB11E,KAAK21E,wBAAyB31E,KAAK41E,oBAE1F51E,KAAKu1E,WAAa,CACd,aAAgBv1E,KAAK21E,wBACrB,QAAW31E,KAAK41E,oBAGpB,IAAIC,EAAK71E,KAAKszB,KAAKwiD,cAEnBD,EAAGE,eAAe,mBAAoB,GAClC,KACI/1E,KAAKg2E,yBACN,wCAAyCh2E,KAAK01E,yBAErDG,EAAGE,eAAe,wBAAyB,GACvC,KACI/1E,KAAKi2E,QAAQ,iBACd,uBAAwBj2E,KAAK21E,yBAEpCE,EAAGE,eAAe,mBAAoB,GAClC,KACI/1E,KAAKi2E,QAAQ,YACd,iBAAkBj2E,KAAK41E,oBAIlC,wBACO51E,KAAKy1E,oBACJz1E,KAAK01E,wBAAwB3sC,YAAY,yBACzC/oC,KAAK01E,wBAAwB5sC,SAAS,oBACtC9oC,KAAK01E,wBAAwB1pC,KAAK,QAAS,2BAC3C5D,OAAO,aAAaS,KAAK,KACzBT,OAAO,cAAcS,KAAK,KAC1BT,OAAO,aAAaS,SAEpB7oC,KAAK01E,wBAAwB3sC,YAAY,oBACzC/oC,KAAK01E,wBAAwB5sC,SAAS,yBACtC9oC,KAAK01E,wBAAwB1pC,KAAK,QAAS,6BAC3C5D,OAAO,aAAaY,KAAK,KACzBZ,OAAO,cAAcY,KAAK,KAC1BZ,OAAO,aAAaY,OACpBhpC,KAAKszB,KAAK+M,iBAAiByhC,QAG/Bn5B,WAAW,KACP3oC,KAAKszB,KAAKixB,kBAAkBhE,UAC7B,KAEHvgD,KAAKy1E,oBAAsBz1E,KAAKy1E,mBAGpC,QAAQ38E,EAAkCo9E,GAAwB,GAE9D,IAAIC,EAAoB,gBAARr9E,EAAyB,UAAY,eAErDkH,KAAKu1E,WAAWz8E,GAAMgwC,SAAS,cAC/B9oC,KAAKu1E,WAAWY,GAAWptC,YAAY,cAEvC,IACI4rC,EADW30E,KAAKszB,KAAK8Y,KAAKW,SACL4nC,UAErByB,EAAWzB,EAAU77E,GAOzB,GANA67E,EAAU0B,eAAiBv9E,EAE3BkH,KAAKszB,KAAKgjD,aAAa/a,YAAY6a,EAASh8D,OAE5Cpa,KAAKszB,KAAKjc,OAAO+gD,YAAYge,EAAS/0B,UAElCrhD,KAAKw1E,cAAgBY,EAASZ,aAAc,CAC/Bx1E,KAAKszB,KAAKixB,kBAChByU,UAAU,oCAAoCF,MACrD94D,KAAKw1E,cAAgBx1E,KAAKw1E,aAG1BU,GAAcl2E,KAAKk2E,eAI3B,aAAaze,GACMz3D,KAAKu2E,oBACXl1B,SAAWoW,EACpBz3D,KAAKk2E,eAGT,SAAS97D,GACL,IAAIg8D,EAAWp2E,KAAKu2E,oBACpBH,EAASh8D,MAAQA,EACjBpa,KAAKszB,KAAKgjD,aAAa/a,YAAY6a,EAASh8D,OAC5Cpa,KAAKk2E,eAGT,qBACI,IAAIE,EAAWp2E,KAAKu2E,oBACpBH,EAASZ,cAAgBY,EAASZ,aACrBx1E,KAAKszB,KAAKixB,kBAChByU,UAAU,oCAAoCF,MACrD94D,KAAKk2E,eAGT,oBACI,IAAIvB,EAAY30E,KAAKszB,KAAK8Y,KAAKW,SAAS4nC,UACxC,OAAOA,EAAUA,EAAU0B,gBAG/B,eACIr2E,KAAKszB,KAAK0Z,eAAgB,EAG9B,eACI,IAAID,EAAW/sC,KAAKszB,KAAK8Y,KAAKW,SAED,MAAzBA,EAAQ,YACRA,EAAQ,UAAgB,CACpBypC,QAAS,KACTC,aAAc,KACdJ,eAAgB,YAIU,MAA9BtpC,EAAS4nC,UAAU6B,UACnBzpC,EAAS4nC,UAAU6B,QAAU,CACzBn1B,SAAU,GACVm0B,cAAc,EACdp7D,MAAO,QAGX2yB,EAAS4nC,UAAU8B,aAAe,CAC9Bp1B,SAAU,GACVm0B,cAAc,EACdp7D,MAAO,SAEXpa,KAAKk2E,gBAETl2E,KAAKi2E,QAAQlpC,EAAS4nC,UAAU0B,gBAAgB,IC9IlD,MAAOK,GAKT,YAAoBpjD,GAAA,KAAAA,OAHpB,KAAA4B,mBAA0C,GAO1C,mBACIl1B,KAAKk1B,mBAAmBnmB,QAAQtV,GAAKA,EAAEk9E,cAAe,GACtD32E,KAAK+2D,MAAO,IAAIpO,MAAOqO,UAG3B,SAAShzD,EAAwBtM,GAC7B,IAAIk/E,EAAc52E,KAAKk1B,mBAAmBzF,KAAKh2B,GAAKA,EAAEuK,SAASoF,MAAQpF,EAASoF,MAAQ3P,EAAEuK,SAASqF,QAAUrF,EAASqF,QACnHutE,EACCA,EAAYD,cAAe,EAE3B32E,KAAKk1B,mBAAmBnxB,KAAK,CAACC,SAAUA,EAAU6yE,YAAa72E,KAAK+2D,KAAM4f,cAAc,EAAMj/E,OAAQA,IAI9G,iBACI,IAAIq/D,GAAO,IAAIpO,MAAOqO,UACtBh3D,KAAKk1B,mBAAqBl1B,KAAKk1B,mBAAmBnrB,OAAOtQ,GAAKA,EAAEk9E,cAEhE,IAAIzc,EAAwBl6D,KAAKszB,KAAK0P,2BAClC8zC,EAAa92E,KAAKszB,KAAKixB,kBAAkBsS,cAAcnU,WAE3D1iD,KAAKk1B,mBAAmBnrB,OAAOtQ,GAAKs9D,EAAOt9D,EAAEo9E,YAAc,KAAM9nE,QAAQtV,IAErE,IAAIs9E,EAAsC,MAApBt9E,EAAE/B,OAAOioC,KAAK99B,IAAcpI,EAAE/B,OAAOioC,KAAK99B,IAAMq4D,EAAsBv6B,KAAK99B,GAE7Fm1E,EAAiE,CACjE,CACI5uE,MAAO,IAAIL,OAAOg+C,MAAMtsD,EAAEuK,SAASoF,KAAM3P,EAAEuK,SAASqF,OAAQ5P,EAAEuK,SAASoF,KAAM3P,EAAEuK,SAASqF,QACxF0L,KAAM,IACNixC,kBAAkB,IAI1B,GAAG+wB,GACIxrE,KAAK6pD,IAAI0hB,EAAar9E,EAAEuK,SAASoF,MAAQ,EAAE,CAC1C,IAAIiO,EAASrX,KAAKszB,KAAKixB,kBACvB,MAAM4J,EAAY92C,EAAO+2C,eACzB/2C,EAAOyuC,aAAa,kBAAmBkxB,GACvC3/D,EAAO4/D,aAAa9oB,GACpBnuD,KAAKk1B,mBAAmBhe,OAAOlX,KAAKk1B,mBAAmBvwB,QAAQlL,GAAI,OCvDjF,MAAOy9E,GAKT,YAAoB5jD,GAAA,KAAAA,OAChB,IAAItW,EAAOhd,KACX+/C,QAAQkX,UAAU,qBAAsB,IACxCviB,OAAO0D,iBAAiB,WAAavG,IACf,sBAAfA,EAAM4J,OACLsE,QAAQkX,UAAU,qBAAsB,IACxCj6C,EAAKsW,KAAKjc,OAAOu9C,kBAAiB,EAAO53C,EAAKsW,KAAKjc,OAAOg+C,0BAClB,MAAlCr1D,KAAKm3E,2BACXn3E,KAAKo3E,mBAAmBvlC,GAES,MAAlC7xC,KAAKm3E,4BACJn3E,KAAKm3E,4BACLn3E,KAAKm3E,0BAA4B,QAM7C,2BAA2BE,GACvBr3E,KAAKo3E,mBAAqBC,EAG9B,kCAAkCF,GAC9Bn3E,KAAKm3E,0BAA4BA,EACjCp3B,QAAQkX,UAAU,GAAI,KCAxB,MAAO,GAAb,cAEI,KAAAkK,cAAwB,EA4DxB,KAAA7zB,cAA6B,GAiB7B,KAAAgnB,mBAAyC,IAAI4iB,GAAmBl3E,MAchE,KAAAk1E,gBAAkB,EAGlB,KAAAoC,qBAAsB,EACtB,KAAAtnC,QAAkB,EAKlB,KAAAhD,eAAyB,EAlGzB,aAAwB,OAAO,EAE/B,iBACI,OAAOhtC,KAAKi7B,YAEhB,sBACI,OAAOj7B,KAAK8vC,iBAEhB,cACI,OAAO9vC,KAAKu3E,SAEhB,kBACI,OAAOv3E,KAAKqX,OAAOA,OAGvB,cACI,OAAOrX,KAAK6sC,SAGhB,eACI,OAAO7sC,KAAKi4D,UAIhB,2BACI,OAAOj4D,KAAK0sC,gBAAgB1J,2BAGhC,mBACI,OAAOhjC,KAAK81E,cAGhB,2BAA2Bn2C,EAAY37B,GACnChE,KAAK0sC,gBAAgB8qC,2BAA2B73C,EAAM37B,GAE1D,6BACIhE,KAAK0sC,gBAAgB+qC,6BAGzB,cACI,OAAOz3E,KAAKo8C,SAGhB,gBAAgB1kD,GACZsI,KAAK0sC,gBAAgB4X,gBAAgB5sD,GAGzC,oBACI,OAAOsI,KAAK03E,eAGhB,kBAAkBhgF,EAAgByX,GAC9BnP,KAAK0sC,gBAAgB4X,gBAAgB5sD,GACrCsI,KAAKqX,OAAOA,OAAOsgE,mBAAmBxoE,EAAYnL,SAASoF,MAC3DpJ,KAAKqX,OAAOA,OAAOorC,YAAY,CAACp5C,OAAQ8F,EAAYnL,SAASqF,OAAQq5C,WAAYvzC,EAAYnL,SAASoF,OAsD1G,UAEIpJ,KAAK43E,MAAQ,IAAI,GAAM53E,MACvBA,KAAK43E,MAAMnuB,UAEXzpD,KAAK81E,cAAgB,IAAI,GAAc,KAAM91E,MAC7CA,KAAK81E,cAAcx3B,OAEnBt+C,KAAKg9C,eAAiB,IAAI,GAAeh9C,KAAMooC,OAAO,wCAExC,IAAI,GAAQpoC,MAClB63E,cACR73E,KAAKs7D,SAAW,IAAI,GAASt7D,MAC7BA,KAAK0sC,gBAAkB,IAAI,GAAgB1sC,KAAMooC,OAAO,mCACxDpoC,KAAK0sC,gBAAgB+c,UAErBzpD,KAAKi4D,UAAY,IAAI,GAAUj4D,KAAMooC,OAAO,wCAAyCA,OAAO,SAE5FpoC,KAAK6sC,SAAW,IAAI,GAAS7sC,KAAMooC,OAAO,oBAC1CpoC,KAAK6sC,SAAS4c,UAEdzpD,KAAKu3E,SAAW,IAAI,GAASv3E,KAAMooC,OAAO,2BAA4BA,OAAO,mCAE7EpoC,KAAKi7B,YAAc,IAAI,GAAYj7B,KAAMA,KAAKu3E,SAC1C,IAAI,GAAsBnvC,OAAO,aAAcA,OAAO,YACtDA,OAAO,4BACXpoC,KAAKi7B,YAAYwuB,UAEjBzpD,KAAK83E,YAEL93E,KAAK+3E,uBAEL/3E,KAAKg4E,uBAELC,KAAKC,MAAMC,YAEXn4E,KAAKs2E,aAAe,IAAIr8D,EAExBja,KAAK43D,mBAAqB,IAAI0d,GAAmBltC,OAAO,cAAepoC,MAEvEA,KAAK03E,eAAiB,IAAIhB,GAAe12E,MAI7C,uBAEIi4E,KAAKG,UAAU7+E,UAAU8+E,gBAAkB,SAAUC,GACjD,IAAIpmD,EAAKlyB,KAAKu4E,eAcd,GAbIv4E,KAAKw4E,WAAax4E,KAAKy4E,kBAQvBz4E,KAAKy4E,gBAAkBz4E,KAAKw4E,SAE5Bx4E,KAAK04E,WAAa,GAGlB14E,KAAK04E,YAAcJ,EAAgBK,SAAU,CAE7C,IAAI55D,EAAKu5D,EAAgBM,eACrBC,EAAK74E,KAAK44E,eACdC,EAAG3xE,EAAKgrB,EAAGhrB,EAAI6X,EAAG7X,EAAMgrB,EAAG0lB,EAAI74B,EAAG/mB,EAClC6gF,EAAGjhC,EAAK1lB,EAAGhrB,EAAI6X,EAAG64B,EAAM1lB,EAAG0lB,EAAI74B,EAAG9mB,EAClC4gF,EAAG7gF,EAAKk6B,EAAGl6B,EAAI+mB,EAAG7X,EAAMgrB,EAAGj6B,EAAI8mB,EAAG/mB,EAClC6gF,EAAG5gF,EAAKi6B,EAAGl6B,EAAI+mB,EAAG64B,EAAM1lB,EAAGj6B,EAAI8mB,EAAG9mB,EAClC4gF,EAAGC,GAAM5mD,EAAG4mD,GAAK/5D,EAAG7X,EAAMgrB,EAAG6mD,GAAKh6D,EAAG/mB,EAAK+mB,EAAG+5D,GAC7CD,EAAGE,GAAM7mD,EAAG4mD,GAAK/5D,EAAG64B,EAAM1lB,EAAG6mD,GAAKh6D,EAAG9mB,EAAK8mB,EAAGg6D,GAE7C/4E,KAAK04E,UAAYJ,EAAgBK,SAEjC34E,KAAK24E,aAOjB,aACI34E,KAAKqX,OAAS,IAAI,GAAOrX,MAAM,GAAM,IACrC,IAAI,GAAYs+C,OAEhBt+C,KAAKqX,OAAOoyC,QAAQrhB,OAAO,YAE3B,IAAIprB,EAAOhd,KACXooC,OAAOsM,QAAQxK,GAAG,SAAW2H,IACzBzJ,OAAO,oBAAoBoE,IAAI,SAAU,SACzCpE,OAAO,WAAWoE,IAAI,SAAWkI,OAAOI,YAAc,IAAM,GAAK,EAAK,MACtE93B,EAAK3F,OAAOA,OAAOkpC,SACnBnY,OAAO,WAAWoE,IAAI,SAAU,MAIpCpE,OAAOsM,QAAQW,QAAQ,UAEvBr1C,KAAK+3E,uBAGT,oBAAoBjD,GAChB90E,KAAKihE,gBAAkB,IAAI,GAAgBjhE,KAAM80E,GACjD90E,KAAKihE,gBAAgBxX,UAYzB,uBACIzpD,KAAKk1E,kBACuB,GAAxBl1E,KAAKk1E,iBACLl1E,KAAKsjC,QAIb,YACI/yB,EAAkB+tC,OAClB/vC,EAAiB+vC,OACjB9tC,EAAmB8tC,OACnBrvC,EAAoBqvC,OACpBpvC,EAAqBovC,OACrBhzC,EAAoBgzC,OACpBlvC,EAAkBkvC,OAElBptC,EAAYotC,OACZzsC,EAAUysC,OACVhsC,EAAWgsC,OACX/rC,EAAc+rC,OACd7rC,EAAY6rC,OAIhB,QAEmC,MAA3Bt+C,KAAK40E,oBACL50E,KAAK40E,qBAGT,IAAI53D,EAAOhd,KACX2oC,WAAW,KACP3rB,EAAKunC,kBAAkBhE,UACxB,KAEHvgD,KAAKo8C,SAAW,IAAI,GAASp8C,MAE7BA,KAAK+iD,aAIT,aAC4B,MAApB/iD,KAAKkjD,aACLhX,cAAclsC,KAAKkjD,aAGvB,IAAIlmC,EAAOhd,KACXA,KAAKkjD,YAAc3a,YAAY,KAE3BvrB,EAAKolC,kBAEN,KAKP,iB,QAEI,GAA6B,MAAzBpiD,KAAK8vC,kBAEL9vC,KAAK8vC,iBAAiBryB,YAAYwiC,WAClCjgD,KAAKo8C,SAAS/Z,gBAAkB1vB,EAAe4vB,WAC5CviC,KAAKi7B,YAAYwgB,OAASC,GAAiBiO,SAC3C3pD,KAAKi7B,YAAYwgB,OAASC,GAAiBC,OAC9C,IAEI37C,KAAKo8C,SAASG,QAAQv8C,KAAK8vC,iBAAiBryB,aAE5C,IAAInK,EAAqC,QAA/B,EAAiB,QAAjB,EAAGtT,KAAKi4D,iBAAS,eAAE/0B,oBAAY,eAAEigB,WAAWnjD,KAAK8vC,kBAC3D9vC,KAAK0sC,gBAAgBssC,iBAAiBh5E,KAAK8vC,iBAAkBx8B,GAE7DtT,KAAKqX,OAAO49C,0BAA0B,MAEtCj1D,KAAKi/C,eAEDj/C,KAAK0sC,iBACL1sC,KAAKgwC,UAGT,IAAIipC,EAAsF,MAA1Ej5E,KAAKi7B,YAAYi+C,mBAAmBl5E,KAAK8vC,iBAAiBryB,aAEtEw7D,GACAj5E,KAAKi7B,YAAYwgB,OAASC,GAAiBsY,kBAC3Ch0D,KAAKm5E,yCACLn5E,KAAKi7B,YAAY0oB,SAASjI,GAAiBxhB,OAI1C++C,GACAj5E,KAAKi7B,YAAYwgB,OAASC,GAAiBxhB,MAAQl6B,KAAKi7B,YAAYwgB,OAASC,GAAiB1wC,OAC/FhL,KAAKi7B,YAAY0oB,SAASjI,GAAiBsY,iBAG/Ch0D,KAAK8xE,mBAAmB9xE,KAAK6sC,SAASusC,yBAExC,MAAOxiE,GACL4vB,QAAQx7B,MAAM4L,GACd5W,KAAKo8C,SAAS/Z,eAAiB1vB,EAAe3H,OAM1D,eAEIhL,KAAKi4D,UAAUrO,uBAAuB5pD,KAAK8vC,iBAAkB9vC,KAAK0sC,gBAAgB1J,4BAItF,kBAAkB8qC,GACdnD,aAAa3qE,KAAKq5E,wBAClBr5E,KAAKq5E,uBAAyB1wC,WAAW,K,QACV,QAA3B,EAAa,QAAb,EAAA3oC,KAAK6sC,gBAAQ,eAAED,oBAAY,SAAEsgC,YAAYltE,KAAK8vC,iBAAkBg+B,IACjE,KAGP,yCACI,IAAI1oB,EAAKplD,KAAK8vC,iBAAiBryB,YAAY67D,OAC3Ct5E,KAAKi7B,YAAYxd,YAAc2nC,EAC/BplD,KAAKi7B,YAAYs+C,mBAAqBv5E,KAAKgwC,QAEvChwC,KAAKi7B,YAAYwgB,OAASC,GAAiBsY,iBAAmBh0D,KAAKs3E,qBACnEt3E,KAAKi7B,YAAY0oB,SAASjI,GAAiBxhB,MAKnD,gBAAgB8T,GACZhuC,KAAKstC,cAAcp2B,OAAOlX,KAAKstC,cAAc3oC,QAAQqpC,GAAI,GAG7D,kBAAkBkB,GAEdlvC,KAAKstC,cAAgB,GACrBttC,KAAK8vC,iBAAmB,KAExB9vC,KAAKukD,kBAAkBuT,cAAc,CAAE9P,UAAU,IAEjD,IAAK,IAAI3a,KAAM6B,EAAWA,WAAY,CAElC,IAAIf,EAAuB,GAAUgP,gBAAgB9P,EAAIrtC,MACzDA,KAAKstC,cAAcvpC,KAAKoqC,GACpBd,EAAGxrC,IAAM7B,KAAKosC,KAAKotC,sBACnBx5E,KAAK8vC,iBAAmB3B,GAIhCnuC,KAAK0sC,gBAAgBknC,iBAAiB5zE,KAAKstC,eAEd,MAAzBttC,KAAK8vC,kBAA4B9vC,KAAKstC,cAActrC,OAAS,IAC7DhC,KAAK8vC,iBAAmB9vC,KAAKstC,cAAc,IAGlB,MAAzBttC,KAAK8vC,kBACL9vC,KAAK0sC,gBAAgB4c,mBAAmBtpD,KAAK8vC,kBAGhB,GAA7B9vC,KAAKstC,cAActrC,QAEnB,GAAOghD,WAAW,qBAAsBhjD,KAAMA,KAAK0sC,gBAAgB6D,mBAAmB2F,iBAO9F,mBAAmBh+C,EAAc01C,GAC7B,OAAO,IAAI,GAAU11C,EAAM8H,KAAM4tC,ICtanC,MAAO,GAEe,kBAAC74B,EAAc0kE,EAAoCC,GAEvE,IAAIC,EAAUvxC,OAAO,iBACrBuxC,EAAQ5wC,YAAY,CAAC,oBAAqB,qBAAsB,mBAAoB,wBAEpF4wC,EAAQ7wC,SAAS,gBAAkB4wC,GAEnCC,EAAQntC,IAAI,CAAElW,KAAM,GAAII,MAAO,GAAI8d,IAAK,GAAIolC,OAAQ,KAEpD,IAAIC,EAAKJ,EAAch1E,SACnBmzC,EAAIxP,OAAO,QAIf,OAAQsxC,GACJ,IAAK,SAAUC,EAAQntC,IAAI,CACvBlW,KAAMujD,EAAGvjD,KAAOmjD,EAAclmC,QAAU,EAJ5B,GAKZqmC,OAAQhiC,EAAEpE,SAAWqmC,EAAGrlC,IALZ,KAOZ,MACJ,IAAK,MAAOmlC,EAAQntC,IAAI,CACpBlW,KAAMujD,EAAGvjD,KAAOmjD,EAAclmC,QAAU,EAT5B,GAUZiB,IAAKqlC,EAAGrlC,IAAMilC,EAAcjmC,SAAW,KAEvC,MACJ,IAAK,OAAQmmC,EAAQntC,IAAI,CACrBlW,KAAMujD,EAAGvjD,KAAOmjD,EAAclmC,QAdlB,GAeZiB,IAAKqlC,EAAGrlC,IAAMilC,EAAcjmC,SAAW,EAf3B,KAiBZ,MACJ,IAAK,QAASmmC,EAAQntC,IAAI,CACtB9V,MAAOkhB,EAAErE,QAAUsmC,EAAGvjD,KACtBke,IAAKqlC,EAAGrlC,IAAMilC,EAAcjmC,SAAW,EApB3B,KAyBpBmmC,EAAQlqD,KAAK,QAAQ+iB,KAAKz9B,GAE1B,IAAI+nC,EAAU68B,EAAQlqD,KAAK,cAC3BqtB,EAAQ5S,GAAG,QAAUtzB,IACjBA,EAAEo7B,kBACF8K,EAAQtS,IAAI,SACZ,GAAOgM,UAGXmjC,EAAQ9V,OAAO,KAIP,eACMz7B,OAAO,iBACb07B,QAAQ,KAIH,kBAACjiE,EAAYi4E,EAAoBrjC,GAE9C,IAAInjB,EACJ,KAAGwmD,aAAoB,IAGnB,OAFAxmD,EAAOwmD,EAKX,IAAIlY,EAAgBtuC,EAAK8Y,KAAKW,SAAU60B,cAE9B,sBAAN//D,GAA8B+/D,EAAa,yBAC3C//D,EAAK,oBAGT,IAAIk4E,EAAOl4E,EAAK,OAEhB,GAAqB,MAAjB+/D,IAAiD,MAAvBA,EAAcmY,KAAkBnY,EAAcmY,IAAQ,CAChFnY,EAAcmY,IAAQ,EACtBzmD,EAAK0pB,eAAe9P,uBAAuB,QAE3C,IAAIn4B,EAAe,GACf2kE,EAA6B,OAEjC,OAAQ73E,GACJ,IAAK,mBACDkT,EAAO,0OACP2kE,EAAY,MACZ,MACJ,IAAK,qBACD3kE,EAAO,uZAMP2kE,EAAY,MACZjjC,EAAWnjB,EAAK2H,YAAY++C,eAAelc,aAAavB,MACxD,MACJ,IAAK,gBACDxnD,EAAO,yNAGP2kE,EAAY,OACZ,MACJ,IAAK,qBACD3kE,EAAO,0MAGP2kE,EAAY,OACZ,MACJ,IAAK,mBACD3kE,EAAO,kIACP2kE,EAAY,MACZjjC,EAAWrO,OAAO,kBAClB,MACJ,IAAK,mBACDrzB,EAAO,w1CAYP2kE,EAAY,MACZjjC,EAAWnjB,EAAK2H,YAAY++C,eAAe9b,gBAC3C,MACJ,IAAK,gBACDnpD,EAAK,gaAIL2kE,EAAY,SACZjjC,EAAWnjB,EAAK2kC,UAAUzxB,QAAQiB,YAAYhY,KAAK,qBAG/C,IAAR1a,GAA0B,MAAZ0hC,GAAoBA,EAASz0C,OAAS,GACpD,GAAOi4E,WAAWllE,EAAM0hC,EAAUijC,KC9I5C,MAAO,GAUT,YAAY/pD,EAA8B2D,GAAA,KAAAA,OAN1C,KAAA4mD,YAAwC,GAExC,KAAAC,oBAAiD,GACjD,KAAAC,eAA4C,GAC5C,KAAAC,iBAA8C,GAG1Cr6E,KAAKs6E,kBAAkB3qD,GAG3B,sBACI3vB,KAAK2vB,QAAQ6a,IAAI,WACjBxqC,KAAK2vB,QAAQ6a,IAAI,SACjBxqC,KAAK2vB,QAAQ6a,IAAI,cAGb,kBAAkB7a,GACtB3vB,KAAK2vB,QAAUA,EACf,IAAI3S,EAAOhd,KACX2vB,EAAQua,GAAG,UAAYtzB,IACnB,IAAI1d,EAAM0d,EAAE1d,IACZ,GAAU,MAAPA,EAAa,OAAO,EACpB0d,EAAE+nC,WAAUzlD,EAAM,SAAWA,GAC7B0d,EAAE8nC,UAASxlD,EAAM,OAASA,GAC1B0d,EAAEgoC,SAAQ1lD,EAAM,MAAQA,GAC3B8jB,EAAKk9D,YAAYhhF,EAAIqW,gBAAiB,EAEtC,IAAI,IAAIgrE,KAAOv9D,EAAKq9D,iBAChBE,EAAIrhF,GASR,OALG8G,KAAKszB,KAAK+qB,cAAgBr+C,KAAKszB,KAAK+M,iBAAiBob,OAASC,GAAiBiO,UAAY3pD,KAAKszB,KAAKixB,kBAAkBi2B,gBACnH,CAAC,UAAW,YAAa,YAAa,cAAc71E,QAAQiS,EAAE1d,MAAQ,GACzE0d,EAAE6hC,kBAGC,IAGX9oB,EAAQua,GAAG,QAAUtzB,IACjB,IAAI1d,EAAM0d,EAAE1d,IACZ,GAAU,MAAPA,EAAa,OAAO,EACvB,QAAiB,IAAPA,EAAV,CAEG0d,EAAE+nC,WAAUzlD,EAAM,SAAWA,GAC7B0d,EAAE8nC,UAASxlD,EAAM,OAASA,GAC1B0d,EAAEgoC,SAAQ1lD,EAAM,MAAQA,GAC3B8jB,EAAKk9D,YAAYhhF,EAAIqW,gBAAiB,EAEtC,IAAI,IAAIgrE,KAAOv9D,EAAKo9D,eAChBG,EAAIrhF,GAER,OAAO,KAEXy2B,EAAQua,GAAG,WAAatzB,IACpB,IAAItQ,EAAIsQ,EAAE1d,IACP0d,EAAE+nC,UAAYr4C,EAAEtE,OAAS,IACxBsE,EAAI,WAAaA,GAElBsQ,EAAE8nC,SAAWp4C,EAAEtE,OAAS,IACvBsE,EAAI,UAAYA,GAEjBsQ,EAAEgoC,QAAUt4C,EAAEtE,OAAS,IACtBsE,EAAI,SAAWA,GAEnB,IAAI,IAAIi0E,KAAOv9D,EAAKm9D,oBAChBI,EAAIj0E,GAER,OAAO,IAKf,UAAUpN,GACN,OAAU,MAAPA,EAAoB,KACuB,GAAvC8G,KAAKk6E,YAAYhhF,EAAIqW,eAGhC,0BACIvP,KAAKm6E,oBAAsB,KjB9DnC,SAAYz+B,GACR,yCAAiB,yBAAS,uBAAQ,qBAAO,mBAAM,yCAAiB,qDADpE,CAAYA,QAAgB,KActB,MAAO,GAwET,YAAmBpoB,EAAuBmnD,EAA4BT,EAClEpyC,GADe,KAAAtU,OAAuB,KAAAmnD,YAA4B,KAAAT,iBAlEtE,KAAAT,oBAA8B,IAK9B,KAAAhc,eAAiB,EACjB,KAAAN,kBAAoB,IACpB,KAAAyd,aAAe,GAWf,KAAAzxE,aAAsC,GAEtC,KAAA4xC,MAAiB,GACjB,KAAA8/B,YAAwB,GAGxB,KAAAh9D,KAAa,GAEb,KAAAi9D,cAAwB,EACxB,KAAAC,aAAuB,EAEvB,KAAArP,MAAgB,EAChB,KAAAsP,UAAoB,EACpB,KAAAC,uBAAiC,EAEjC,KAAAC,qBAA+B,EAC/B,KAAAC,WAAqB,EACrB,KAAAC,4BAAsC,EAEtC,KAAAC,kBAA4B,EAE5B,KAAAC,qCAAuC,GAOvC,KAAAC,kCAAiD,GAGjD,KAAAv9B,QAAoB,CAAC,QAAS,QAAS,OAAQ,WAC3C,WAAY,UAAW,WAI3B,KAAA+f,mBAA0D,CACtD,MAAS,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC1C,MAAS,EAAC,GAAO,GAAM,GAAO,GAAO,GAAO,GAC5C,KAAQ,EAAC,GAAO,GAAM,GAAM,GAAO,GAAO,GAC1C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,SAAY,EAAC,GAAO,GAAO,GAAM,GAAM,GAAM,GAC7C,QAAW,EAAC,GAAO,GAAO,GAAM,GAAO,GAAO,GAC9C,QAAW,EAAC,GAAO,GAAM,GAAM,GAAM,GAAM,IAiV/C,KAAAyd,YAAsB,EAwBtB,KAAAC,aAAuB,EACvB,KAAAC,sBAAgC,EAkMhC,KAAAC,kBAA4B,KAqwB5B,KAAAC,cAAoC,CAAChgC,GAAiBC,OAAQD,GAAiBiO,QAASjO,GAAiBigC,iBA1yCrG37E,KAAK+pC,aAAe,IAAIpC,GAAaC,EAAS5nC,KAAKszB,MACnDtzB,KAAKupC,aAAe,IAAI,GAAa3B,EAAS5nC,KAAKszB,MAC/CA,EAAK+qB,aACLr+C,KAAK47E,aAAe,IAAI,GAAaxzC,OAAO,QAAS9U,GAErDtzB,KAAK47E,aAAe,IAAI,GAAaxzC,OAAOsM,QAASphB,GAGzDtzB,KAAKu3E,SAAWkD,EAEhBT,EAAe1b,eAAet+D,MAE9BA,KAAK+6E,uBAAyBt4C,YAAYC,MAC1C1iC,KAAKwrE,MAAQ,EACbxrE,KAAK86E,UAAY,EACjB96E,KAAKs7E,YAAc,EAEnBt7E,KAAK06E,aAAe,EAEpB,IAAI19D,EAAOhd,KAUXA,KAAK67E,QAAUtzC,YARQ,KAEdvrB,EAAK69D,aACN79D,EAAK8+D,cAAc9+D,EAAK09D,cAAc,EAAO,KAKR16E,KAAK06E,cAClD,IACIqB,EAAMthD,KAAKC,UADmC,CAAEjyB,QAAS,IAE7D8/B,YAAY,KACRvrB,EAAKq+D,kCAAkCtsE,QAAQs+B,GAAMA,EAAG2uC,KAAKD,KAC9D,KAIP,UAEI,IAAI/+D,EAAOhd,KAEP61E,EAAK71E,KAAKszB,KAAK2gC,mBAEfgoB,EAAgB,KAChBj/D,EAAKg+D,qBAAuB,IAC5Bh+D,EAAKsmB,SAGL44C,EAAgB,KAChBl/D,EAAKm/D,SAGTtG,EAAGE,eAAe,oBAAqB,CAAC,MACpC,KACQF,EAAGuG,SAAS,qBACZH,IAEAC,KAGL,mBAAoBl8E,KAAKg6E,eAAejc,cAE/C8X,EAAGE,eAAe,oBAAqB,CAAC,MACpC,KACQF,EAAGuG,SAAS,qBACZH,IAEAC,KAGL,QAASl8E,KAAKg6E,eAAehc,cAEpC6X,EAAGE,eAAe,mBAAoB,GAClC,KACI/4D,EAAK8kD,MAAK,GACV9kD,EAAKwuD,MAAQ,GACd,oBAAqBxrE,KAAKg6E,eAAe/b,aAOhD4X,EAAGE,eAAe,uBAAwB,CAAC,MACvC,KACI/1E,KAAKq8E,SAAQ,IACd,4BAA6Br8E,KAAKg6E,eAAe9b,iBAExD2X,EAAGE,eAAe,uBAAwB,CAAC,MACvC,KACI/1E,KAAKq8E,SAAQ,IACd,4BAA6Br8E,KAAKg6E,eAAe7b,iBAExD0X,EAAGE,eAAe,sBAAuB,GACrC,KACI/1E,KAAKs8E,WACN,WAAYt8E,KAAKg6E,eAAe5b,gBAEvCyX,EAAGE,eAAe,sBAAuB,GACrC,KACI/4D,EAAK8kD,MAAK,IACX,cAAe9hE,KAAKg6E,eAAe3b,gBAE1Cr+D,KAAK2jD,SAASjI,GAAiBsY,iBAInC,mBAAmBv2C,GAEf,IAAI0kD,EACJA,EAAMniE,KAAKszB,KAAK0P,2BAEhB,IAAIu5C,GAAmC,EAKvC,GAAW,MAAPpa,EAAa,CACb,IAAIjI,EAAwBz8C,EAAYk8C,iBAAiBwI,EAAIxiC,MAC7D,GAA6B,MAAzBu6B,IACAqiB,GAAoCpa,EAAI1+B,cAChCy2B,EAAsBv2B,YAC1Bu2B,EAAsBv2B,aACtB,OAAOu2B,EAMnB,GAAuB,MAAnBl6D,KAAKw8E,YAAsBD,EAAkC,CAC7D,IAAIE,EAAiBh/D,EAAYk8C,iBAAiB35D,KAAKw8E,WAAW78C,MAClE,GAAsB,MAAlB88C,GAA0BA,EAAe94C,YACzC,OAAO84C,EAKf,GAAIF,EACA,IAAK,IAAIxkF,KAAK0lB,EAAY2F,YAAW,GACjC,GAAIrrB,EAAE4rC,YACF,OAAO5rC,EAKnB,OAAO,KAOX,O,YAEIiI,KAAK46E,cAAe,EAEV56E,KAAKszB,KAAK0P,2BAEhBo/B,mCAE6B,QAAjC,EAAwB,QAAxB,EAAApiE,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEk2C,kBAM/B18E,KAAKu5E,oBAAsBv5E,KAAKszB,KAAK0c,SAAWhwC,KAAKszB,KAAKqpD,cAAcj5C,8BACxE1jC,KAAKszB,KAAK6lD,yCACVn5E,KAAK2d,KAAO,GACqB,QAAjC,EAAwB,QAAxB,EAAA3d,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEo2C,gBAGvC,IAAIC,EAAgB78E,KAAKk5E,mBAAmBl5E,KAAKyd,aAEjD,GAAqB,MAAjBo/D,EAAJ,CAKA78E,KAAKw8E,WAAaK,EAElB78E,KAAKwjD,uBAAyB,EAE9BxjD,KAAKiJ,aAAe,GACpBjJ,KAAK66C,MAAQ,GACb76C,KAAK26E,YAAc,GACnB36E,KAAK88E,kBAAoB,EAEzB98E,KAAK2jD,SAASjI,GAAiBxhB,MAE/Bl6B,KAAKm7E,kBAAmB,EAExBn7E,KAAKg7E,qBAAuB,IAK5Bh7E,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS1B,KAAKw8E,WAAWh+D,YACzBtV,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAC5CL,OAAQ,gBACR2H,oBAAqB,KACrBC,oBAAqB,kBAIzB,IAAK,IAAIxR,KAAKiI,KAAKyd,YAAY2F,YAAW,GACtCpjB,KAAK+8E,gBAAgBhlF,GACrBiI,KAAKg9E,kBAAkBjlF,GAG3BiI,KAAKi9E,kBArCDj9E,KAAK2jD,SAASjI,GAAiBsY,iBAyCvC,aACI,IAAIv6D,EAAIuG,KAAKiJ,aAAa0K,MAM1B,GALA3T,KAAKge,eAAiBvkB,EAAEiI,QACxB1B,KAAKwjD,uBAAyB/pD,EAAEyP,gBAChClJ,KAAKk9E,cAAgBzjF,EAAEkI,OACvB3B,KAAKm9E,2BAA6B1jF,EAAE6P,oBACpCtJ,KAAKo9E,2BAA6B3jF,EAAE8P,oBACa,MAA7C9P,EAAE4jF,wCAAiD,CAEnDr9E,KAAK26E,YAAY52E,KAA+B,MAA1B/D,KAAK88E,kBAA4B,EAAI98E,KAAK88E,mBAChE98E,KAAK88E,kBAAoB98E,KAAK66C,MAAM74C,OAEpC,IAAK,IAAIs7E,KAAM7jF,EAAE4jF,wCAAyCr9E,KAAK66C,MAAM92C,KAAKu5E,GAC1E7jF,EAAE4jF,wCAA0C,MAIpD,kBAAkBtlF,GAEd,IAAK,IAAIgL,KAAShL,EAAEulB,UAAU+F,SAO1B,GANItgB,aAAiB,IACjBA,EAAMoD,YAAYsG,YAAc,IAAI,EAAc1J,EAAMoD,aACxDpD,EAAMoD,YAAYsG,YAAY8E,4BAC9BxO,EAAMw6E,iCAAiCv9E,KAAKiJ,eAG5ClG,aAAiB,EAAM,CACvB,IAAIy6E,EAAiBz6E,EAAMoD,YAAYsG,YAAYxJ,gBAAgBzK,IAAIuK,EAAMhJ,YAC7E,IAAK,IAAIojB,KAAYpa,EAAMyZ,aACvBghE,EAAehlF,IAAI2kB,EAASpjB,YAAYnB,MAAQukB,EAAS9jB,QAOzE,gBAAgBtB,GAEZ,IAAK,IAAI2nB,KAAa3nB,EAAEulB,UAAU+F,SAC9B,GAAI3D,aAAqB,EAAM,CAE3BA,EAAU69D,iCAAiCv9E,KAAKiJ,cAEhD,IAAI0T,EAAqB,GAErB8gE,EAAsC,CACtC/lF,OAAQgoB,EAAUhoB,OAClB2O,aAAc,KACdjC,WAAY,IAGZs5E,EAAoCh+D,EAAUtZ,+BAA+BhC,WAAWpC,OAAS,EAEjG07E,GACA19E,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS+7E,EACTv0E,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAC5CL,OAAQ,uCAAyC+d,EAAU3lB,WAC3DuP,oBAAqB,KACrBC,oBAAqB,gCAM7B,IAAK,IAAI4T,KAAYuC,EAAUlD,aAC3BW,EAAS9jB,OAAS,IAAI,EAAkBqmB,EAAWvC,GAEnDR,EAAU5Y,KAAK,CACX3D,KAAMsf,EACN9mB,MAAOukB,EAAS9jB,SAGmB,MAAnC8jB,EAASwD,wBACT3gB,KAAKiJ,aAAalF,KAAK,CACnBrC,QAASyb,EAASwD,uBAClBzX,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAC5CL,OAAQ,mBAAqB+d,EAAU3lB,WACvCuP,oBAAqB,KACrBC,oBAAqB,gCAKzBm0E,GACAD,EAA2Br5E,WAAWL,KAAK,CACvC3D,KAAMzG,EAAUgkF,oBAChB35E,SAAUmZ,EAASnZ,SACnB0b,UAAWA,EACXxC,gBAAiBC,EAASpjB,aAMlC2jF,GACAD,EAA2Br5E,WAAWL,KAAK,CACvC3D,KAAMzG,EAAU+mB,WAChB1c,SAAU,CAAEoF,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,KAIhD0d,EAAU/C,UAAY,CAClBvc,KAAM,IAAI,EAAUsf,GACpB9mB,MAAO+jB,IAQvB,MAAMktB,G,QAE+B,QAAjC,EAAwB,QAAxB,EAAA7pC,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEo3C,cAEnC59E,KAAK69E,uBAAyBh0C,EAE9B7pC,KAAKm7E,kBAAmB,EAEpBn7E,KAAKy7C,OAASC,GAAiB1wC,OAAShL,KAAKy7C,OAASC,GAAiBxhB,OACvEl6B,KAAKs+C,OACLt+C,KAAK89E,gBAGT99E,KAAK2jD,SAASjI,GAAiBiO,SAE/B3pD,KAAKw9D,6BAELx9D,KAAK+6E,uBAAyBt4C,YAAYC,MAC1C1iC,KAAK46E,cAAe,EAQxB,cAAcF,EAAsBqD,EAAmBC,GAEnD,IAAIx7C,EAAKC,YAAYC,MAErB,IAAKq7C,EAAU,CACX,IAAIE,EAAmB,IAAOj+E,KAAKu9D,eACnC,GAAIv9D,KAAK46E,cAAgBp4C,EAAKxiC,KAAKu7E,aAAe0C,EAAkB,OACpEj+E,KAAKu7E,aAAe/4C,EAGxBxiC,KAAKw7E,sBAAwBh5C,EAAKxiC,KAAKu7E,aAEvC,IAII2C,EAJAC,EAAsBJ,EAAW3sE,OAAOC,iBAAmBrR,KAAKu9D,eAAiBv9D,KAAK06E,aAAe,IAEzG16E,KAAKs7E,cAGL,IAAI3jF,EAAI,EAER,KAAOA,EAAIwmF,IAAwBn+E,KAAK46E,cAA6B,MAAbsD,IACnDz7C,YAAYC,MAAQF,GAAMk4C,EAAesD,IAE1CE,EAAYl+E,KAAKo+E,WACA,MAAbF,IAFN,CAgBE,GAVIl+E,KAAKu9D,gBAAkBv9D,KAAKo7E,uCAAyC2C,GACrE/9E,KAAK8jD,iCAGL9jD,KAAKy7C,OAASC,GAAiB1wC,OAC/BhL,KAAKy7C,OAASC,GAAiBxhB,OAC/Bl6B,KAAK46E,cAAe,GAIpB56E,KAAKg7E,qBAAuB,IAAMh7E,KAAK46E,aAAc,CACrD,IACI52E,EADOhE,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAC3Bx/C,SACJ,MAAZA,GAAoBA,EAASoF,MAAQpJ,KAAKi7E,YAC1Cj7E,KAAK46E,cAAe,EACpB56E,KAAK2jD,SAASjI,GAAiBC,QAE3B37C,KAAKq+E,eAAe1kF,EAAUulB,mBAC9Bg/D,EAAYl+E,KAAKo+E,WACA,MAAbF,GAAqBl+E,KAAKq+E,eAAe1kF,EAAU+mB,cACnDw9D,EAAYl+E,KAAKo+E,cAOjCzmF,IAGa,MAAbumF,GACAl+E,KAAK8kC,eAAeo5C,GAGpBl+E,KAAK46E,eACD56E,KAAKy7C,OAASC,GAAiBC,QAC/B37C,KAAK8jD,iCAE0B,MAA/B9jD,KAAK69E,yBACL79E,KAAK69E,yBACL79E,KAAK69E,uBAAyB,OAItC,IAAI75C,EAAKvB,YAAYC,MAAQF,EAC7BxiC,KAAK86E,WAAa92C,EAUtB,eAAek6C,G,UACXl+E,KAAK46E,cAAe,EACpB56E,KAAK2jD,SAASjI,GAAiB1wC,OAE/B,IAAIm6C,EAAY/c,OAAO,oCAEnBk2C,GAA0B,EAC9B,GAAIt+E,KAAKszB,KAAK+qB,aAAc,CACxB,IACIza,EAD2C5jC,KAAKszB,KAC1BsQ,OAC1B,GAA8B,GAA1BA,EAAO26C,iBAAiD,GAAtB36C,EAAO46C,YAAqB,CAC9DF,GAAiB,EACjB,IAAIG,EAAiB,GACjBC,EAAmB1+E,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAC3D,GAAwB,MAApBk7B,EAA0B,CAC1B,IAAIv1E,EAAeu1E,aAAgB,EAAhBA,EAAkB16E,SACrCy6E,EAAiB,aAAet1E,EAAaC,KAAO,YAAcD,EAAaE,OAE9C,QAAjC,EAAwB,QAAxB,EAAArJ,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEugB,UAAU/mD,KAAKge,eAAetmB,OAAQyR,GAG7EmnC,MAAM,SAAWmuC,EAAiB,KAAOP,IAKjD,GAAII,EAAgB,CAChBn5B,EAAUzd,OAAOU,OAAO,sDAAwD81C,EAAY,SAC5Fl+E,KAAKujD,qBAEL,IAAI9sB,GAAQ,EACZ,IAAK,IAAI9+B,EAAIqI,KAAKiJ,aAAajH,OAAS,EAAGrK,GAAK,EAAGA,IAAK,CAEpD,IAAI8B,EAAIuG,KAAKiJ,aAAatR,GAEtB+B,EAAY,mCAAqC+8B,EAAQ,MAAQ,kBAAoB,aADhFh9B,EAAEkI,kBAAkBZ,EAAUtH,EAAEkI,OAAO5H,WAAaN,EAAEkI,QAEzC,MAAlBlI,EAAE0P,eAAsBzP,GAAK,6CAA+CD,EAAE0P,aAAaC,KAAO,OAAS3P,EAAE0P,aAAaE,OAAS,YACvI3P,GAAK,OACL,IAAIilF,EAAYv2C,OAAO1uC,GACvB,GAAsB,MAAlBD,EAAE0P,aAAsB,CACxB,IAAI6T,EAAOhd,KACXooC,OAAOu2C,EAAU,IAAIz0C,GAAG,YAAa,K,QACA,QAAjC,EAAwB,QAAxB,EAAAltB,EAAKsW,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEugB,UAAUttD,EAAEiI,QAAQhK,OAAQ+B,EAAE0P,gBAMzE,GAHAg8C,EAAUzd,OAAOi3C,GAEjBloD,GAAQ,EACqB,MAAzBh9B,EAAE8P,oBACF,MAIR,IAAIi9B,EAAkC,QAA3B,EAAGxmC,KAAKszB,KAAK2P,sBAAc,eAAEuD,QAEzB,MAAXA,IACAA,EAAQqd,kBAAkBsB,EAAW,KAAM,uBAC3C3e,EAAQo4C,YAOpB,6BAEQ5+E,KAAKy7C,OAASC,GAAiBiO,SAE3B3pD,KAAKu9D,eAAiBv9D,KAAKo7E,sCAC3Bp7E,KAAKszB,KAAKmkD,6BAOtB,eAAehyD,GACX,OAA2B,MAAvBzlB,KAAKge,mBACLhe,KAAKwjD,uBAAyBxjD,KAAKge,eAAe5Z,WAAWpC,OAAS,IACnEhC,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAAwBpjD,MAAQqlB,GAG/E,e,QACIzlB,KAAK+pC,aAAalH,QACF,QAAhB,EAAA7iC,KAAKkyE,mBAAW,SAAE2M,eACG,QAArB,EAAA7+E,KAAK8+E,wBAAgB,SAAED,eAG3B,KAAKE,GAAmB,GACpB/+E,KAAKupC,aAAaP,OAClBhpC,KAAKm8E,QAEmB,MAApBn8E,KAAKkyE,cACLlyE,KAAKkyE,YAAY8M,iBAAmB,IAGxCr2C,WAAW,KACP3oC,KAAK2jD,SAASjI,GAAiBxhB,MAC/Bl6B,KAAKszB,KAAKmkD,6BACNsH,GACA/+E,KAAKsjC,SAEV,KAGP,QACItjC,KAAK2jD,SAASjI,GAAiBC,QAC/B37C,KAAK46E,cAAe,EAIxB,iCACI,GAA2B,MAAvB56E,KAAKge,eAAwB,OACjC,IAAI3Z,EAAOrE,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAC/C,GAAY,MAARn/C,EAAc,OAClB,IAAIL,EAAWK,EAAKL,SACpB,GAAgB,MAAZA,EAAkB,CAClBhE,KAAKszB,KAAKkkD,2BAA2Bx3E,KAAKge,eAAetmB,OAAOioC,KAAM37B,GACtEhE,KAAKu3E,SAAS0H,SAASj/E,KAAKge,eAAgBha,EAAUhE,KAAK66C,MAAO76C,KAAK88E,kBAAmB98E,KAAK2d,MAE/D,MADhB3d,KAAKszB,KAAK2P,eACZsmB,iBACNvpD,KAAKge,eAAetmB,QAAUsI,KAAKy7E,oBACnCz7E,KAAKszB,KAAK2P,eAAe2mB,uBAAuB,KAAM5pD,KAAKge,eAAetmB,QAC1EsI,KAAKy7E,kBAAoBz7E,KAAKge,eAAetmB,QAEjDsI,KAAKszB,KAAK2P,eAAesmB,eAAe21B,SAAS76E,KAK7D,UACIrE,KAAKg7E,qBAAuB,EAC5Bh7E,KAAKsjC,QAGT,QAAQ67C,G,QAGJ,GAFiC,QAAjC,EAAwB,QAAxB,EAAAn/E,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEo3C,cACnC59E,KAAKm7E,kBAAmB,EACpBn7E,KAAKy7C,OAASC,GAAiBC,OAAQ,CAEvC,GADA37C,KAAKs+C,OACDt+C,KAAKy7C,OAASC,GAAiBsY,gBAC/B,OAEJh0D,KAAK89E,eACL99E,KAAK8jD,iCACL9jD,KAAK2jD,SAASjI,GAAiBC,YAC5B,CACH37C,KAAKg7E,qBAAuB,IAC5B,IAAIoE,EAA0Bp/E,KAAKg7E,qBAE/Bh3E,EADOhE,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAC3Bx/C,SAChBk6E,EAAYl+E,KAAKo+E,WACrB,GAAiB,MAAbF,EAEA,YADAl+E,KAAK8kC,eAAeo5C,IAInBiB,GAAYn/E,KAAKg7E,qBAAuBoE,GACzCp/E,KAAKg7E,qBAAuB,EAExBh7E,KAAKi7E,UADO,MAAZj3E,EACiBA,EAASoF,MAER,EAEtBpJ,KAAKsjC,SAGDtjC,KAAKy7C,OAASC,GAAiBxhB,KAC/Bl6B,KAAKszB,KAAKmkD,8BAEVz3E,KAAK8jD,iCAED9jD,KAAKy7C,OAASC,GAAiBigC,iBAC/B37E,KAAK2jD,SAASjI,GAAiBC,UAQnD,WAEI,IAEIt3C,EAEA65E,EAJA55E,GAAwB,EAM5B,MAAQA,IAAiBtE,KAAKk7E,4BAA2C,MAAbgD,GAAmB,CAG3E,GAAIl+E,KAAKwjD,uBAAyBxjD,KAAKge,eAAe5Z,WAAWpC,OAAS,EAAG,CACzEhC,KAAK2jD,SAASjI,GAAiBxhB,MAC/B,MAGJ71B,EAAOrE,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAElB,MAArBn/C,EAAKC,eACLA,EAAeD,EAAKC,cAGxB45E,EAAYl+E,KAAKq/E,YAAYh7E,GAQjC,OAJArE,KAAKk7E,4BAA6B,EAElCl7E,KAAKwrE,QAEE0S,EAGX,YAAY75E,G,QAER,GAAuB,MAAnBA,EAAKi7E,aAAuBt/E,KAAKm7E,iBAGjC,OAFAn7E,KAAKk7E,4BAA6B,OAClCl7E,KAAKm8E,QAITn8E,KAAKm7E,kBAAmB,EACxB,IAGIviF,EAHAgrD,EAAW5jD,KAAK66C,MAAM74C,OAAS,EAC/Bwf,EAAkBxhB,KAAK88E,kBACvBjiC,EAAQ76C,KAAK66C,MAGjB,OAAQx2C,EAAKjE,MACT,KAAKzG,EAAUwnB,UACX,IAAIo+D,EAAkC,MAAzBl7E,EAAKgd,iBAA2B,EAAIhd,EAAKgd,iBACtDzoB,EAAQiiD,EAAM+I,EAAW27B,GACzB1kC,EAAM+I,EAAW27B,GAAU3mF,EAAMwH,KAAKwO,OAAOhW,EAAOyL,EAAK+c,SACzD,MACJ,KAAKznB,EAAU2vB,UAEX,GADA1wB,EAAQiiD,EAAM+I,GACK,MAAfhrD,EAAMA,MAAe,MACzB,IAAIgiC,EAAqBhiC,EAAMA,MAC/B,GAAIyL,EAAK+c,mBAAmB,EACxB,GAAkB,iBAAPwZ,GACP,IAAKA,EAAI13B,MAAMmL,gBAAgBhK,EAAK+c,SAChC,MAAQ,yBAA2BwZ,EAAI13B,MAAMnJ,WAAa,oBAAsBsK,EAAK+c,QAAQrnB,WAAa,wBAE3G,CACH,GAAkB,iBAAP6gC,GAAmB,CAAC,UAAW,SAAU,SAASj2B,QAAQN,EAAK+c,QAAQrnB,YAAc,EAC5F,MAAQ,6BAA+BsK,EAAK+c,QAAQrnB,WAAa,oBAC9D,GAAkB,iBAAP6gC,GAAmB,CAAC,SAAU,aAAaj2B,QAAQN,EAAK+c,QAAQrnB,YAAc,EAC5F,MAAQ,qCAAuCsK,EAAK+c,QAAQrnB,WAAa,oBACtE,GAAkB,kBAAP6gC,GAA+C,WAA3Bv2B,EAAK+c,QAAQrnB,WAC/C,MAAQ,uCAAyCsK,EAAK+c,QAAQrnB,WAAa,yBAGhF,GAAIsK,EAAK+c,mBAAmB,IAClBwZ,EAAI13B,MAAOm6B,oBAAoBh5B,EAAK+c,SAC7C,MAAQ,yBAA2BwZ,EAAI13B,MAAMnJ,WAAa,sCAAwCsK,EAAK+c,QAAQrnB,WAAa,IAGpI,MACJ,KAAKJ,EAAU6uB,yBACX,IAAI/M,EAAWpX,EAAKoX,SAChBrb,EAAOqb,EAASrb,KACpBxH,EAAQ,CACJwH,KAAMA,EACNxH,MAAO,MAEPwH,aAAgBH,IAChBrH,EAAMA,MAAQwH,EAAKF,cAEvB26C,EAAMp/B,EAASC,SAAW8F,GAAmB5oB,EACzCyL,EAAKwmB,mCACLgwB,EAAM92C,KAAKnL,GAEf,MACJ,KAAKe,EAAUq0B,yBACX6sB,EAAM92C,KAAK82C,EAAMx2C,EAAK+oB,mBAAqB5L,IAC3C,MACJ,KAAK7nB,EAAUwzB,wBACX0tB,EAAMx2C,EAAK+oB,mBAAqB5L,GAAmBq5B,EAAMlnC,MACzD,MACJ,KAAKha,EAAU6pB,cACX,IAAIg8D,EAAUn7E,EAAKof,cAAgBo3B,EAAMr5B,GAAiB5oB,MAAQiiD,EAAMlnC,MAAM/a,MAC9E,GAAe,MAAX4mF,EAAiB,MAAO,6BAA+Bn7E,EAAKkf,oBAAsB,qBACtF,IAAIk8D,EAAyBD,EAASnzE,SAAShI,EAAKkf,qBACzB,OAAvBk8D,aAAM,EAANA,EAAQ9+E,cACR8+E,EAAO9+E,YAAY8+E,GAEvB5kC,EAAM92C,KAAK07E,GACX,MACJ,KAAK9lF,EAAU+1B,gBACX,IAAIxoB,EAAI2zC,EAAMlnC,MAAM/a,MACpB,GAAS,MAALsO,EAAW,MAAO,mDACtB2zC,EAAM92C,KAAK,CAAE3D,KAAMmO,EAAkB3V,MAAesO,EAAGlF,SACvD,MACJ,KAAKrI,EAAUmE,WACXlF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,MAAQA,EAAMA,MAC7ByL,EAAKwf,mBACNg3B,EAAMlnC,MAEV,MACJ,KAAKha,EAAUoE,eACXnF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUqE,gBACXpF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUsE,yBACXrF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUuE,mBACXtF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUwE,iBACXvF,EAAQiiD,EAAMlnC,MACdknC,EAAM+I,EAAW,GAAGhrD,OAASA,EAAMA,MACnC,MACJ,KAAKe,EAAUorB,SACX,IAAItiB,EAAgBo4C,EAAMlnC,MACtB+rE,EACAr7E,EAAKotB,SAASnhB,QAAQjM,EAAK2gB,SAAU61B,EAAM+I,EAAW,GAAInhD,GAC1DovB,EAAaxtB,EAAKotB,SAASziB,cAAc3K,EAAK2gB,SAAUviB,EAAcrC,MAC1Ey6C,EAAM+I,EAAW,GAAK,CAClBxjD,KAAMyxB,EACNj5B,MAAO8mF,GAEX,MACJ,KAAK/lF,EAAUwtB,QACX,IAAIw4D,EAAW9kC,EAAMlnC,MACjBtP,EAAK2gB,UAAYrrB,EAAUoD,MAC3B89C,EAAM92C,KAAK,CACP3D,KAAMu/E,EAASv/E,KACfxH,OAAQ+mF,EAAS/mF,QAGrBiiD,EAAM92C,KAAK,CACP3D,KAAMu/E,EAASv/E,KACfxH,OAAQ+mF,EAAS/mF,QAGzB,MACJ,KAAKe,EAAU0tB,aACXwzB,EAAM92C,KAAK,CACPnL,MAAOyL,EAAKzL,MACZwH,KAAMiE,EAAKgtB,WAEf,MACJ,KAAK13B,EAAUi3B,sBACPvsB,EAAKtB,iBAAiB,EACtB83C,EAAM92C,KAAK,CACP3D,KAAMiE,EAAKtB,MAAMoD,YACjBvN,MAAOyL,EAAKtB,MAAMoD,YAAYsG,cAIlCouC,EAAM92C,KAAK,CACP3D,KAAMiE,EAAKtB,MACXnK,MAAOyL,EAAKtB,QAGpB,MACJ,KAAKpJ,EAAU2pB,oBACX1qB,EAAQyL,EAAKtB,MAAM0J,YAAYJ,SAAShI,EAAKkf,qBACpB,MAArB3qB,EAAM+H,aACN/H,EAAM+H,YAAY/H,GAEtBiiD,EAAM92C,KAAKnL,GACX,MAKJ,KAAKe,EAAU8tB,mBACX,IAAIvlB,EAAQ24C,EAAMlnC,MACdjF,EAAQmsC,EAAMlnC,MAElB,GAAmB,MAAfjF,EAAM9V,MAAe,MAAO,4CAEhC,GAAIsJ,EAAMtJ,OAAS8V,EAAM9V,MAAMoJ,QAAUE,EAAMtJ,MAAQ,EACnD,MAAO,qCAAuCsJ,EAAMtJ,MAAQ,2BAA6B8V,EAAM9V,MAAMoJ,OAEzG64C,EAAM92C,KAAK2K,EAAM9V,MAAMsJ,EAAMtJ,QAC7B,MAEJ,KAAKe,EAAUslB,eACXjf,KAAK66C,MAAM92C,KAAK,CAAEnL,MAAOyL,EAAK8B,YAAYsG,YAAarM,KAAMiE,EAAK8B,cAElE,IAAIkyB,EAAmB,CACnBz/B,MAAO,CAAC,CAAEA,MAAO,OAAQwH,KAAMkL,IAC/BlL,KAAM,IAAI,EAAUkL,IAEpBs0E,EAAkBh8B,EAAW,EAEjC5jD,KAAK66C,MAAM92C,KAAKs0B,GAEhBr4B,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B98E,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS1B,KAAKge,eACd9U,gBAAiBlJ,KAAKwjD,uBAAyB,EAC/Cr6C,aAAc9E,EAAKL,SACnBrC,OAAQ3B,KAAKk9E,cACb5zE,oBAAqBtJ,KAAKm9E,2BAC1B5zE,oBAAqB,OAGzBvJ,KAAKm9E,2BAA6B,KAClCn9E,KAAK88E,kBAAoB8C,EAEzB5/E,KAAKge,eAAiB3Z,EAAK1C,OAAOD,QAClC1B,KAAKk9E,cAAgB74E,EAAK1C,OAC1B3B,KAAKwjD,wBAA0B,EAE/B,IAAK,IAAI7rD,EAAI,EAAGA,EAAI0M,EAAK1C,OAAOJ,8BAA+B5J,IAC3DkjD,EAAM92C,KAAK,MAKf,MACJ,KAAKpK,EAAUu1B,kBACX,IAAI2wD,EAAyBhlC,EAAM3jC,OAAO2jC,EAAM74C,OAASqC,EAAK8qB,eAAgB9qB,EAAK8qB,gBAEnF0rB,EAAM92C,KAAK,CACPnL,MAAOinF,EACPz/E,KAAMiE,EAAK2lB,YAGf,MACJ,KAAKrwB,EAAU2nB,WAGX,IAAI3f,EAAS0C,EAAK1C,OAEdm+E,EAAiBl8B,EAAW,EAAIv/C,EAAKmd,gBACrCu+D,EAAcp+E,EAAOX,cAAcc,WACvC,IAAK,IAAInK,EAAImoF,EAAiB,EAAGnoF,GAAKisD,EAAUjsD,IACvB,MAAjBqI,KAAK66C,MAAMljD,IAAcqI,KAAK66C,MAAMljD,GAAGyI,gBAAgBH,IACvD46C,EAAMljD,GAAK,CACPyI,KAAM2/E,EAAYpoF,EAAImoF,EAAiB,GAAG1/E,KAC1CxH,MAAOiiD,EAAMljD,GAAGiB,QAK5B,GAAmC,MAA/BiiD,EAAMilC,GAAgBlnF,QAAkB+I,EAAOf,SAC/C,MAAO,sBAAwBe,EAAO5H,WAAa,oBAGvD,GAAI4H,EAAOR,YAAcQ,EAAOL,YAAc+C,EAAKkd,YAAa,CAE5D5f,EADak5C,EAAMilC,GACqBlnF,MAAOsK,MAAO4hB,qBAAqBnjB,EAAOC,WAGtF,GAAc,MAAVD,EAEA,MAGJ,GAAqB,MAAjBA,EAAOF,OAAgB,CACvB,IAAIwhB,EAAKthB,EAAOuhB,gBACZphB,EAAa+4C,EAAM3jC,OAAO4oE,GAC1BE,EAAcr+E,EAAOF,OAAOK,GACtB,MAANmhB,GACA43B,EAAM92C,KAAK,CACPnL,MAAOonF,EACP5/E,KAAM6iB,QAGX,CACHjjB,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B98E,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS1B,KAAKge,eACd9U,gBAAiBlJ,KAAKwjD,uBAAyB,EAC/Cr6C,aAAc9E,EAAKL,SACnBrC,OAAQ3B,KAAKk9E,cACb5zE,oBAAqBtJ,KAAKm9E,2BAC1B5zE,oBAAqB,OAGzBvJ,KAAKm9E,2BAA6B,KAClCn9E,KAAK88E,kBAAoBgD,EAEzB9/E,KAAKge,eAAiBrc,EAAOD,QAC7B1B,KAAKk9E,cAAgBv7E,EACrB3B,KAAKwjD,wBAA0B,EAE/B,IAAK,IAAI7rD,EAAI,EAAGA,EAAIgK,EAAOJ,8BAA+B5J,IACtDkjD,EAAM92C,KAAK,MAGf/D,KAAKg7E,uBACLh7E,KAAKk7E,4BAA6B,EAEtC,MACJ,KAAKvhF,EAAUw3B,gBAGX,IAAI8uD,EAAU57E,EAAK1C,OAEfu+E,EAAkBt8B,EAAW,EAAIv/C,EAAKmd,gBAEtC1f,EAAa+4C,EAAM3jC,OAAOgpE,GAE9BlgF,KAAK46E,cAAe,EACpB,IAAIuF,EAAWngF,KAAKy7C,MACpBz7C,KAAK2jD,SAASjI,GAAiBigC,iBAE/B37E,KAAK8jD,iCAEL,IAAI9mC,EAAOhd,KACXA,KAAKupC,aAAa62C,UAAUH,EAASn+E,EAAalJ,IAC9CiiD,EAAM92C,KAAKnL,GACXoH,KAAKszB,KAAKmkD,6BACVz6D,EAAK2mC,SAASjI,GAAiBC,QAC3BwkC,GAAYzkC,GAAiBiO,QAC7B3sC,EAAKsmB,QAELtmB,EAAK8mC,mCAIb,MAEJ,KAAKnqD,EAAUkgB,OACX7Z,KAAK6Z,OAAOxV,EAAMw2C,GAClB,MACJ,KAAKlhD,EAAUsqB,qBACX42B,EAAM3jC,OAAO0sC,EAAW,EAAIv/C,EAAKihB,UACjC,MACJ,KAAK3rB,EAAUqsB,eACXhmB,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B98E,KAAK88E,kBAAoBl5B,EAAW,EACpC,IAAK,IAAIjsD,EAAI,EAAGA,EAAI0M,EAAK4hB,yBAA0BtuB,IAC/CkjD,EAAM92C,KAAK,MAEf,MACJ,KAAKpK,EAAUulB,gBACX27B,EAAM3jC,OAAOsK,GACbxhB,KAAK88E,kBAAoB98E,KAAK26E,YAAYhnE,MAC1C,MACJ,KAAKha,EAAUouB,UACX,IAAI1uB,EAAS,IAAI,EAAcgL,EAAKnB,OACpC7J,EAAOkY,4BAEP3Y,EAAQ,CACJA,MAAOS,EACP+G,KAAMiE,EAAKnB,OAGf23C,EAAM92C,KAAKnL,GACPyL,EAAKqqB,4BACLmsB,EAAM92C,KAAKnL,GACXgrD,KAGJ,IAAI7gD,EAAesB,EAAKnB,MAExB,KAAgB,MAATH,GAAe,CAClB,IAAIs9E,EAAMt9E,EAAMqD,+BACZi6E,EAAIj8E,WAAWpC,OAAS,IAExBhC,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B98E,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS1B,KAAKge,eACd9U,gBAAiBlJ,KAAKwjD,uBAAyB,EAC/Cr6C,aAAc9E,EAAKL,SACnBrC,OAAQ3B,KAAKk9E,cACb5zE,oBAAqBtJ,KAAKm9E,2BAC1B5zE,oBAAqB,OAGzBvJ,KAAKm9E,2BAA6B,KAClCn9E,KAAK88E,kBAAoBl5B,EAAW,EAEpC5jD,KAAKge,eAAiBqiE,EACtBrgF,KAAKwjD,wBAA0B,EAC/BxjD,KAAKk9E,cAAgB,mBAAqBn6E,EAAMhJ,WAChDiG,KAAKg7E,uBAELh7E,KAAKk7E,4BAA6B,GAGtCn4E,EAAQA,EAAMK,UAKlB,MACJ,KAAKzJ,EAAU01B,gCACXz2B,EAAQiiD,EAAM+I,GACd,IAAIp1B,EAAmB51B,EAAMwH,KAC7B,IAAK,IAAIkgF,KAAO9xD,EAAUY,8BACtBkxD,EAAI1nF,EAAMA,OAEd,MACJ,KAAKe,EAAUg0B,oBACXktB,EAAMx2C,EAAK0pB,kBAAoBvM,GAAmB,CAC9CphB,KAAMmO,EACN3V,MAAO,GAEX,MACJ,KAAKe,EAAUw0B,yCACX,IAAIoyD,EAAkB1lC,EAAMx2C,EAAK0pB,kBAAoBvM,GAAiB5oB,QAClEo0B,EAAa6tB,EAAMx2C,EAAKupB,qBAAuBpM,GAAiB5oB,MAEpE,OAAQyL,EAAKyD,MACT,IAAK,QACGy4E,EAAkBvzD,EAAYhrB,QAC9B64C,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiB5oB,MAAgBo0B,EAAYuzD,GAAS3nF,MACrFiiD,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiBphB,KAAe4sB,EAAYuzD,GAASngF,MAEpFJ,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,EAErD,MACJ,IAAK,eACD,IAAIs7E,EAA2CxzD,EAAYhqB,cAAZ,WAAyC+hC,WACpFw7C,EAAUC,EAAKx+E,QACf64C,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiB5oB,MAAQ4nF,EAAKD,GAAS3nF,MACtEiiD,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiBphB,KAAOogF,EAAKD,GAASngF,MAErEJ,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,EAErD,MACJ,IAAK,QACD,IAAIu7E,EAA6CzzD,EAAYhqB,cAAZ,MAAoC09E,OACjFH,EAAUE,EAAMz+E,QAChB64C,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiB5oB,MAAQ6nF,EAAMF,GAC9D1lC,EAAMx2C,EAAKwpB,kBAAoBrM,GAAiBphB,KAAOqgF,EAAMF,GAASx9E,OAEtE/C,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,EAI7D,MACJ,KAAKvL,EAAU+tB,yBACX9uB,EAAQiiD,EAAM+I,GACdhrD,EAAMA,OAASyL,EAAK8rB,qBACpB,MACJ,KAAKx2B,EAAUguB,wBACX/uB,EAAQiiD,EAAM+I,GAEd/I,EAAM+I,GAAY,CACdhrD,MAAOA,EAAMA,MACbwH,KAAMxH,EAAMwH,MAGhBxH,EAAMA,OAASyL,EAAK8rB,qBACpB,MACJ,KAAKx2B,EAAUgsB,WACX3lB,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,EACjD,MACJ,KAAKvL,EAAU0sB,WACXztB,EAAQiiD,EAAMlnC,MACD/a,EAAMA,QACfoH,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,GAErD,MACJ,KAAKvL,EAAU2sB,YACX1tB,EAAQiiD,EAAMlnC,MACC/a,EAAMA,QACjBoH,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,GAErD,MACJ,KAAKvL,EAAU6sB,0BACX5tB,EAAQiiD,EAAM+I,GACDhrD,EAAMA,QACfoH,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,GAErD,MACJ,KAAKvL,EAAU4sB,2BACX3tB,EAAQiiD,EAAM+I,GACChrD,EAAMA,QACjBoH,KAAKwjD,uBAAyBn/C,EAAKa,YAAc,GAErD,MACJ,KAAKvL,EAAUoL,KACX,MACJ,KAAKpL,EAAU+mB,WAEX,GAAI1gB,KAAKiJ,aAAajH,OAAS,EAAG,CAC9BhC,KAAKi9E,aACLj9E,KAAKwjD,yBACLxjD,KAAKk7E,4BAA6B,EAClCl7E,KAAKi7E,WAAa,EAEd52E,EAAKggB,uBACLrkB,KAAKg7E,sBAAwB,GAGjC,MAGJ,GAAyB,MAApBh7E,KAAKkyE,aAAuBlyE,KAAKkyE,YAAYyO,UAAU3+E,OAAS,GAA+B,MAAzBhC,KAAK8+E,iBAA0B,CACtG9+E,KAAKwjD,yBACL,MAKJ,GAFiBxjD,KAAKszB,KAAK4Q,sBAAsBzmB,YAAYmjE,UAAU,eACnBtjE,UAAUC,QAAQ,SACvDsjE,aAAa7+E,OAAS,EAAG,CACpChC,KAAKwjD,yBACL,MAkBJ,GAfAxjD,KAAK2jD,SAASjI,GAAiBxhB,MAC/Bl6B,KAAKge,eAAiB,KACtBhe,KAAKwjD,wBAA0B,EAC/BxjD,KAAKk7E,4BAA6B,EAElC,GAAOl4B,WAAW,qBAAsBhjD,KAAKszB,MAE7CtzB,KAAK+pC,aAAa+2C,iBAEM,MAApB9gF,KAAKkyE,cACLlyE,KAAKkyE,YAAY8M,iBAAmB,IAGxCh/E,KAAKszB,KAAKmkD,6BAENz3E,KAAKwrE,MAAQ,EAAG,CAChB,IAAIxnC,EAAKvB,YAAYC,MAAQ1iC,KAAK+6E,uBAC9BpvE,EAAU,YAAc3L,KAAKwrE,MAAQ,aAAexrE,KAAKikC,MAAMD,GAC7D,QAAUhkC,KAAKikC,MAAMjkC,KAAKwrE,MAAQxnC,EAAK,KAAQ,YACpB,QAAjC,EAAwB,QAAxB,EAAAhkC,KAAKszB,KAAK2P,sBAAc,eAAEuD,eAAO,SAAEqd,kBAAkBl4C,EAAS,MAG9D3L,KAAKwrE,OAAS,EAElBxrE,KAAKwjD,yBACL,MACJ,KAAK7pD,EAAU4vB,MACf,KAAK5vB,EAAU6vB,QACX,IAAIzU,EAAO,KACP2U,EAAQ,KACRrlB,EAAKolB,YAAWC,EAAyBmxB,EAAMlnC,MAAM/a,OACpDyL,EAAKslB,QAAO5U,EAAe8lC,EAAMlnC,MAAM/a,OACxCyL,EAAKjE,MAAQzG,EAAU6vB,QACvBxpB,KAAK+pC,aAAavgB,QAAQzU,EAAM2U,GAEhC1pB,KAAK+pC,aAAaxgB,MAAMxU,EAAM2U,GAElC,MACJ,KAAK/vB,EAAUowB,eACX,IAAIg3D,EAAmB,GACvB,IAAK,IAAIppF,EAAI,EAAGA,EAAI0M,EAAKulB,UAAWjyB,IAChCopF,EAAOh9E,KAAa82C,EAAMlnC,MAAM/a,OAEpCiiD,EAAM92C,KAAK/D,KAAKghF,eAAeD,EAAQ18E,EAAK2lB,YAC5C,MACJ,KAAKrwB,EAAUuwB,WACX2wB,EAAM92C,KAAK,CACP3D,KAAMiE,EAAK2lB,UACXpxB,MAAO,KAEX,MACJ,KAAKe,EAAU2wB,WACXs5B,GAAYv/C,EAAKkmB,sBAEjB,IAAIla,EAAkBwqC,EAAM3jC,OAAO0sC,EAAW,EAAGv/C,EAAKkmB,uBAAuB3nB,IAAIq+E,IAAO,CAAE7gF,KAAM6gF,EAAI7gF,KAAMxH,MAAOqoF,EAAIroF,SACrHiiD,EAAM+I,GAAUhrD,MAAgBiiD,EAAM+I,GAAUhrD,MAAO2O,OAAO8I,GAC9D,MACJ,KAAK1W,EAAU2mB,cACX,IAAInD,EAAW9Y,EAAKqb,UAAUjD,oBAAoBpY,EAAK6Y,iBACvD29B,EAAM92C,KAAKM,EAAKqb,UAAU/C,UAAU/jB,MAAMukB,EAASL,UACnD,MACJ,KAAKnjB,EAAU8B,cACX,IAAIylF,EAAcrmC,EAAMlnC,MAAM/a,MAC1BsM,EAAcb,EAAKiB,eAAe47E,GACnB,MAAfh8E,EACAlF,KAAKwjD,uBAAyBt+C,EAAc,EAEb,MAA3Bb,EAAKmB,qBACLxF,KAAKwjD,uBAAyBn/C,EAAKmB,mBAAqB,GAKhE,MACJ,KAAK7L,EAAUixB,wBAEX,IAAIpnB,EAAIa,EAAKoX,SACbzb,KAAK2d,KAAKna,EAAEzJ,YAAcyJ,EAC1BA,EAAE5K,MAAQ,CACNwH,KAAMoD,EAAEpD,KACRxH,MAAQ4K,EAAEpD,gBAAgBH,EAAiBuD,EAAEpD,KAAKF,aAAe,MAEjEmE,EAAKwmB,mCACL7qB,KAAK66C,MAAM92C,KAAKP,EAAE5K,OAGtB,MACJ,KAAKe,EAAU42B,oBACX,IAAI7e,EAAK1R,KAAK2d,KAAKtZ,EAAKtK,YACxB,GAAU,MAAN2X,EAGA,MAAO,gBAAkBrN,EAAKtK,WAAa,sBAF3CiG,KAAK66C,MAAM92C,KAAK2N,EAAG9Y,OAIvB,MACJ,KAAKe,EAAUmpB,kBACX,IAAIq+D,EAAoCnhF,KAAK66C,MAAMr5B,GAAiB5oB,MACpE,GAA0B,MAAtBuoF,EAA4B,CAEA,GADhBA,EAAmBn+E,cAAnB,MACH,aACLhD,KAAK6Z,OAAO,KAAMghC,IAQlC76C,KAAKwjD,yBAGT,OAAOn/C,EAA8Bw2C,GAEjC,IAAIsiC,EAA6Bn9E,KAAKm9E,2BAEtC,GAAY,MAAR94E,GAAgBA,EAAKyb,gCAAiC,CACtD,IAAIkgE,EAAqBnlC,EAAMlnC,MAC/BknC,EAAM76C,KAAK88E,mBAAqBkD,EAChCnlC,EAAM3jC,OAAOlX,KAAK88E,kBAAoB,QAEtCjiC,EAAM3jC,OAAOlX,KAAK88E,mBAA8B,MAARz4E,GAAgBA,EAAK0b,uBAA0B,EAAI,IAG/F/f,KAAK88E,kBAAoB98E,KAAK26E,YAAYhnE,MAE1C3T,KAAKi9E,aACO,MAAR54E,GAA0C,GAA1BA,EAAK2hC,mBAA2BhmC,KAAKwjD,yBACzDxjD,KAAKwjD,yBACLxjD,KAAKg7E,uBAE6B,MAA9BmC,GACAA,EAA2Bn9E,MAMnC,eAAe+gF,EAAkB3gF,GAC7B,IAAI+M,EAAoB/M,EAAMiC,YAC9B,GAAqB,GAAjB0+E,EAAO/+E,OAAa,CACpB,IAAI0M,EAAiB,GACrB,IAAK,IAAI/W,EAAI,EAAGA,EAAIopF,EAAO,GAAIppF,IAAK,CAChC,IAAI6L,EAAI,CACJpD,KAAM+M,EACNvU,MAAO,MAGPuU,aAAiBlN,IACjBuD,EAAE5K,MAAQuU,EAAMjN,cAGpBwO,EAAM3K,KAAKP,GAGf,MAAO,CACHpD,KAAMA,EACNxH,MAAO8V,GAER,CACH,IAAIA,EAAiB,GACjBtV,EAAI2nF,EAAOptE,MACf,IAAK,IAAIhc,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB+W,EAAM3K,KAAK/D,KAAKghF,eAAeD,EAAQ5zE,IAE3C,MAAO,CACH/M,KAAMA,EACNxH,MAAO8V,IAMnB,MAAMtV,GACF,MAAO,GAAKmS,KAAK04B,MAAU,IAAJ7qC,GAAa,IAKxC,SAASqiD,GAIL,IAAI0kC,EAAWngF,KAAKy7C,MACpBz7C,KAAKy7C,MAAQA,EAETA,GAASC,GAAiB1wC,OAASywC,GAASC,GAAiBxhB,OAC7Dl6B,KAAKq7E,kCAAkCtsE,QAAQqyE,GAAUA,EAAO5qC,SAChEx2C,KAAKq7E,kCAAoC,IAG7C,IAAIxF,EAAK71E,KAAKszB,KAAK2gC,mBAEnB,IAAK,IAAIotB,KAAYrhF,KAAK89C,QACtB+3B,EAAGyL,UAAU,eAAiBD,EAAUrhF,KAAK69D,mBAAmBwjB,GAAU5lC,IAGtDz7C,KAAK69D,mBAAL,MAAiCpiB,IAGrDz7C,KAAKg6E,eAAejc,aAAal1B,OACjC7oC,KAAKg6E,eAAehc,aAAah1B,SAEjChpC,KAAKg6E,eAAejc,aAAa/0B,OACjChpC,KAAKg6E,eAAehc,aAAan1B,QAGd7oC,KAAK69D,mBAAL,KAAgCpiB,IAK3B,MAApBz7C,KAAKkyE,aACLlyE,KAAKkyE,YAAYqP,kBAIrBvhF,KAAK07E,cAAc/2E,QAAQw7E,IAAa,GAAKngF,KAAK07E,cAAc/2E,QAAQ82C,GAAS,IACjFz7C,KAAKu3E,SAASiK,UAEdxhF,KAAK47E,aAAa6F,2BAGlBzhF,KAAK07E,cAAc/2E,QAAQw7E,GAAY,GAAKngF,KAAK07E,cAAc/2E,QAAQ82C,IAAU,GACjFz7C,KAAKu3E,SAASmK,SAMtB,qBAEI,GAA2B,MAAvB1hF,KAAKge,eAAwB,OAEjC,IAAI7U,EACAu1E,EAAmB1+E,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBACnC,MAApBk7B,IACAv1E,EAAeu1E,EAAiB16E,UAGpChE,KAAKiJ,aAAalF,KAAK,CACnBrC,QAAS1B,KAAKge,eACd9U,gBAAiBlJ,KAAKwjD,uBACtBr6C,aAAcA,EACdxH,OAAQ3B,KAAKk9E,cACb5zE,oBAAqBtJ,KAAKm9E,2BAC1B5zE,oBAAqBvJ,KAAKo9E,6BAG9Bp9E,KAAKm9E,2BAA6B,KAClCn9E,KAAKo9E,2BAA6B,KA8BtC,SAASz7E,EAAgBggF,EACrBr4E,EAAyDs4E,GAEzD,GAAI5hF,KAAKy7C,OAASC,GAAiBiO,QAC/B,OAGJ,IAAIvlD,EAAazC,EAAOD,QAAQ0C,WAE5Bw9E,GAAuC,GAA5B5hF,KAAKiJ,aAAajH,QAE7BhC,KAAKujD,qBAELvjD,KAAKge,eAAiBrc,EAAOD,QAC7B1B,KAAKk9E,cAAgBv7E,EACrB3B,KAAKwjD,uBAAyB,EAC9BxjD,KAAKm9E,2BAA6B7zE,EAClCtJ,KAAKo9E,2BAA6B,QAElCp9E,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B98E,KAAK88E,kBAAoB98E,KAAK66C,MAAM74C,OACpChC,KAAK66C,MAAQ76C,KAAK66C,MAAMtzC,OAAOo6E,GAK3Bv9E,EAAWA,EAAWpC,OAAS,GAAG5B,MAAQzG,EAAUkgB,QAAQ7Z,KAAKg7E,yBAMrEh7E,KAAKiJ,aAAaiO,OAAO,EAAG,EAAG,CAC3BxV,QAASC,EAAOD,QAChBwH,gBAAiB,EACjBC,aAAc,CAAEC,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAC5CL,OAAQA,EACR2H,oBAAqBA,EACrBC,oBAAqB,QACrB8zE,wCAAyCsE,IAGzCv9E,EAAWA,EAAWpC,OAAS,GAAG5B,MAAQzG,EAAUkgB,QAAQ7Z,KAAKg7E,wBAO7E,SAASt5E,GAEL1B,KAAKujD,qBAELvjD,KAAKge,eAAiBtc,EACtB1B,KAAKwjD,uBAAyB,EAE9B,IAQIx4C,EAqBA44C,EA7BAH,EAAkBzjD,KAAK66C,MAAM74C,OAE7B0hD,EAAsB1jD,KAAKy7C,MAC3Bu/B,EAAuBh7E,KAAKg7E,qBAC5BE,EAA6Bl7E,KAAKk7E,2BAKlC2G,GAHgB7hF,KAAK88E,kBAGT,GAEhB,IACI,KAAgB,MAAT9xE,IACFhL,KAAKge,gBAAkBtc,GAAW1B,KAAKwjD,uBACpCxjD,KAAKge,eAAe5Z,WAAWpC,SAChC6/E,EAAY,KAGf72E,EAAQhL,KAAKo+E,WACbyD,IAEN,MAAOjrE,GACL5L,EAAQ,4BAQZ,GALIhL,KAAKge,gBAAkBtc,GAAW1B,KAAKiJ,aAAajH,OAAS,GAC7DhC,KAAKi9E,aAILj9E,KAAK66C,MAAM74C,OAASyhD,EAGpB,IAFAG,EAAW5jD,KAAK66C,MAAMlnC,MAEf3T,KAAK66C,MAAM74C,OAASyhD,GACvBzjD,KAAK66C,MAAMlnC,MASnB,OAJA3T,KAAKg7E,qBAAuBA,EAC5Bh7E,KAAKk7E,2BAA6BA,EAClCl7E,KAAK2jD,SAASD,GAEP,CACH14C,MAAOA,EACPpS,MAAOgrD,GAKf,kCAAkCliD,EAAkBogF,GAEhD9hF,KAAKujD,qBAELvjD,KAAKge,eAAiBtc,EACtB,IAAIqgF,EAAqB/hF,KAAKwjD,uBAC9BxjD,KAAKwjD,uBAAyB,EAE9B,IAAIw+B,EAA4BhiF,KAAK26E,YAAY34E,OACjDhC,KAAK26E,YAAY52E,KAAK/D,KAAK88E,mBAC3B,IAAIr5B,EAAkBzjD,KAAK66C,MAAM74C,OACjChC,KAAK88E,kBAAoBr5B,EAEzB,IAAK,IAAIjgD,KAAKs+E,EAA6B9hF,KAAK66C,MAAM92C,KAAKP,GAE3D,IAuBIogD,EAvBAF,EAAsB1jD,KAAKy7C,MAC3Bu/B,EAAuBh7E,KAAKg7E,qBAC5BE,EAA6Bl7E,KAAKk7E,2BAGlC2G,EAAY,EACZ72E,EAAQ,KAEZ,IACI,KAAOhL,KAAK26E,YAAY34E,OAASggF,GAC1BH,EAAY,KAAmB,MAAT72E,GAC3B,CACE,IAAI3G,EAAOrE,KAAKge,eAAe5Z,WAAWpE,KAAKwjD,wBAE/Cx4C,EAAQhL,KAAKq/E,YAAYh7E,GACzBw9E,KAEN,MAAOjrE,GACL5L,EAAQ,4BAMZ,GAHiB,KAAb62E,GAAqB7hF,KAAK8kC,eAAe,qDAGzC9kC,KAAK66C,MAAM74C,OAASyhD,EAGpB,IAFAG,EAAW5jD,KAAK66C,MAAMlnC,MAEf3T,KAAK66C,MAAM74C,OAASyhD,GACvBzjD,KAAK66C,MAAMlnC,MAYnB,OAPA3T,KAAKg7E,qBAAuBA,EAC5Bh7E,KAAKk7E,2BAA6BA,EAGlCl7E,KAAKwjD,uBAAyBu+B,EAC9B/hF,KAAK2jD,SAASD,GAEP,CACH14C,MAAOA,EACPpS,MAAOgrD,GAKf,6BAA6B7gD,GACzB,IAAI1J,EAAS,IAAI,EAAc0J,GAC/B1J,EAAOkY,4BAEP,IAAI3Y,EAAQ,CACRA,MAAOS,EACP+G,KAAM2C,GAGN04B,EAAS14B,EAEb,KAAiB,MAAV04B,GAAgB,CACnB,IAAI4kD,EAAM5kD,EAAOr1B,+BACbi6E,EAAIj8E,WAAWpC,OAAS,GAExBhC,KAAKiiF,kCAAkC5B,EAAK,CAACznF,IAGjD6iC,EAASA,EAAOr4B,UAGpB,IAAI8+E,EAAcn/E,EAAM+hB,qBAAqB/hB,EAAMhJ,WAAa,MAUhE,OATmB,MAAfmoF,GAA8C,MAAvBA,EAAYxgF,SAMnC1B,KAAKiiF,kCAAkCC,EAAYxgF,QAAS,CAAC9I,IAG1DS,GkBzsDT,MAAO8oF,GA0Jc,wBAACz4D,GACpB,GAAY,MAATA,EACC,MAAO,MACJ,CACH,IAAIhwB,EAAYgwB,EAAM9X,SAAS,IAC/B,KAAOlY,EAAEsI,OAAS,GAAGtI,EAAI,IAAMA,EAC/B,MAAO,IAAMA,GAID,qBAACgwB,GACjB,OAAY,MAATA,EAAuB,MAClB,SAAmB,SAARA,IAAqB,IAAM,OAAiB,MAARA,IAAmB,GAAK,MAAgB,IAARA,GAAgB,IAGlF,0BAACA,GAEtB,GAAY,MAATA,EACC,MAAO,CACHA,MAAO,KACP04D,MAAO,GAIf,IAAIpqF,EAAIgI,KAAKqiF,iBAAiB34D,GAC9B,GAAS,MAAL1xB,EAAW,MAAO,CAAE0xB,MAAO1xB,EAAGoqF,MAAO,GAIzC,IAAIh5B,EAAK1/B,EAAMlX,MAAM,qBACrB,GAAI42C,GAAMA,EAAGpnD,OAAS,EAAG,CACrB,IAAIjK,EAAIqxD,EAAG,GACX,GAAIrxD,EACA,MAAO,CACH2xB,MAAO,MAAUlY,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAAM,IAAQ5F,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAAM5F,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAChHgrE,MAAO,GAKnB,IAAIE,EAAK54D,EAAMlX,MAAM,qBACrB,GAAI8vE,GAAMA,EAAGtgF,OAAS,EAAE,CACpB,IAAIjK,EAAIuqF,EAAG,GACX,GAAIvqF,EACA,MAAO,CACH2xB,MAAO,MAAUlY,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAAM,IAAQ5F,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAAM5F,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAChHgrE,MAAO5wE,SAASzZ,EAAEqf,OAAO,EAAG,GAAI,IAAM,KAKlD,IAAIjN,EAAKuf,EAAMlX,MAAM,oDACrB,OAAIrI,EACO,CACHuf,MAAyB,MAAlBlY,SAASrH,EAAG,IAAkC,IAAlBqH,SAASrH,EAAG,IAAcqH,SAASrH,EAAG,IACzEi4E,MAAO,IAIfj4E,EAAKuf,EAAMlX,MAAM,uEACbrI,EACO,CACHuf,MAAyB,MAAlBlY,SAASrH,EAAG,IAAkC,IAAlBqH,SAASrH,EAAG,IAAcqH,SAASrH,EAAG,IACzEi4E,MAAOjwE,WAAWhI,EAAG,KAItB,CAAEuf,MAAO,SAAU04D,MAAO,KA3N9B,GAAAC,iBAAmB,CACtB,UAAa,SACb,aAAgB,SAChB,KAAQ,MACR,WAAc,QACd,MAAS,SACT,MAAS,SACT,OAAU,SACV,MAAS,EACT,eAAkB,SAClB,KAAQ,IACR,WAAc,QACd,MAAS,SACT,UAAa,SACb,UAAa,QACb,WAAc,QACd,UAAa,SACb,MAAS,SACT,eAAkB,QAClB,SAAY,SACZ,QAAW,SACX,KAAQ,MACR,SAAY,IACZ,SAAY,MACZ,cAAiB,SACjB,SAAY,SACZ,SAAY,SACZ,UAAa,MACb,UAAa,SACb,YAAe,QACf,eAAkB,QAClB,WAAc,SACd,WAAc,SACd,QAAW,QACX,WAAc,SACd,aAAgB,QAChB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,QACjB,cAAiB,MACjB,WAAc,QACd,SAAY,SACZ,YAAe,MACf,QAAW,QACX,QAAW,QACX,WAAc,QACd,UAAa,SACb,YAAe,SACf,YAAe,QACf,QAAW,SACX,UAAa,SACb,WAAc,SACd,KAAQ,SACR,UAAa,SACb,KAAQ,QACR,KAAQ,QACR,MAAS,MACT,YAAe,SACf,SAAY,SACZ,QAAW,SACX,aAAc,SACd,UAAW,QACX,MAAS,SACT,MAAS,SACT,SAAY,SACZ,cAAiB,SACjB,UAAa,QACb,aAAgB,SAChB,UAAa,SACb,WAAc,SACd,UAAa,SACb,qBAAwB,SACxB,UAAa,SACb,UAAa,SACb,WAAc,QACd,UAAa,SACb,YAAe,SACf,cAAiB,QACjB,aAAgB,QAChB,eAAkB,QAClB,eAAkB,QAClB,eAAkB,SAClB,YAAe,SACf,KAAQ,MACR,UAAa,QACb,MAAS,SACT,QAAW,SACX,OAAU,QACV,iBAAoB,QACpB,WAAc,IACd,aAAgB,SAChB,aAAgB,QAChB,eAAkB,QAClB,gBAAmB,QACnB,kBAAqB,MACrB,gBAAmB,QACnB,gBAAmB,SACnB,aAAgB,QAChB,UAAa,SACb,UAAa,SACb,SAAY,SACZ,YAAe,SACf,KAAQ,IACR,QAAW,SACX,MAAS,QACT,UAAa,QACb,OAAU,SACV,UAAa,SACb,OAAU,SACV,cAAiB,SACjB,UAAa,SACb,cAAiB,SACjB,cAAiB,SACjB,WAAc,SACd,UAAa,SACb,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,WAAc,SACd,OAAU,QACV,cAAiB,QACjB,IAAO,SACP,UAAa,SACb,UAAa,QACb,YAAe,QACf,OAAU,SACV,WAAc,SACd,KAAQ,SACR,SAAY,QACZ,SAAY,SACZ,OAAU,SACV,OAAU,SACV,QAAW,QACX,UAAa,QACb,UAAa,QACb,UAAa,QACb,KAAQ,SACR,YAAe,MACf,UAAa,QACb,IAAO,SACP,KAAQ,MACR,QAAW,SACX,OAAU,SACV,UAAa,QACb,OAAU,SACV,MAAS,SACT,MAAS,SACT,WAAc,SACd,OAAU,SACV,YAAe,UCvIjB,MAAO,WAAmB,EAE5B,YAAmB3qF,GAEf2J,MAAM,QAAS3J,EAAQ,iDAFR,KAAAA,SAIfsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElD,IAAIglE,EAAwB7qF,EAAO4lB,UAAUC,QAAQ,SACjDilE,EAA4C9qF,EAAO4lB,UAAUC,QAAQ,iBAIzEvd,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC6pF,EAAiB3gF,EAAW,GAAGlJ,MAC/B8pF,EAAe5gF,EAAW,GAAGlJ,MAC7B+pF,EAAkB3iF,KAAK4iF,eAAexqF,EAAGqqF,EAAQC,GACrDtqF,EAAE4K,cAAF,MAA2B2/E,IAE5B,GAAO,EAAO,+CAA+C,IAEpE3iF,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+pF,EAAkB3iF,KAAK4iF,eAAexqF,GAC1CA,EAAE4K,cAAF,MAA2B2/E,IAE5B,GAAO,EAAO,sIAAsI,IAE3J3iF,KAAKwJ,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,CAC9D,CAAE3I,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MACZR,EAAE4K,cAAF,MAEnB6/E,mBAAmBn5D,KAEvB,GAAO,EAAO,oOAAoO,IAEzP1pB,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BkqF,EAAkB1qF,EAAE4K,cAAF,MAElB+/E,GAAS,IAAI9K,KAAK+K,QAASC,SAASH,EAAGI,MAAM3K,gBACjDuK,EAAGI,MAAM3K,eAAe4K,WACxBL,EAAGI,MAAM3K,eAAe6K,UAAUrvC,EAAEC,GACpC8uC,EAAGI,MAAM3K,eAAe5hC,QAAQosC,GAIhCD,EAAGI,MAAMpe,UAAUue,aAEpB,GAAO,EAAO,uEAAuE,IAE5FrjF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACzG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC6yE,EAAgB3pE,EAAW,GAAGlJ,MAC9Bm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BkqF,EAAkB1qF,EAAE4K,cAAF,MAElB+/E,GAAS,IAAI9K,KAAK+K,QAASC,SAASH,EAAGI,MAAM3K,gBACjDuK,EAAGI,MAAM3K,eAAe4K,WACxBL,EAAGI,MAAM3K,eAAe6K,WAAWrvC,GAAIC,GACvC8uC,EAAGI,MAAM3K,eAAe+K,QAAQ7X,EAAQ,IAAMlgE,KAAKmgE,IACnDoX,EAAGI,MAAM3K,eAAe6K,UAAUrvC,EAAGC,GACrC8uC,EAAGI,MAAM3K,eAAe5hC,QAAQosC,GAMhCD,EAAGI,MAAMpe,UAAUue,aAEpB,GAAO,EAAO,8FAA8F,IAEnHrjF,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm/D,EAAiBj2D,EAAW,GAAGlJ,MAC/Bm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BkqF,EAAkB1qF,EAAE4K,cAAF,MAGlB+/E,GAAS,IAAI9K,KAAK+K,QAASC,SAASH,EAAGI,MAAM3K,gBACjDuK,EAAGI,MAAM3K,eAAe4K,WACxBL,EAAGI,MAAM3K,eAAe6K,WAAWrvC,GAAIC,GACvC8uC,EAAGI,MAAM3K,eAAegL,MAAMxrB,EAAQA,GACtC+qB,EAAGI,MAAM3K,eAAe6K,UAAUrvC,EAAGC,GACrC8uC,EAAGI,MAAM3K,eAAe5hC,QAAQosC,GAMhCD,EAAGI,MAAMpe,UAAUue,aAEpB,GAAO,EAAO,gFAAgF,IAErGrjF,KAAKwJ,UAAU,IAAIzI,EAAO,sBAAuB,IAAI2B,EAAc,CAC/D,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,MAAOqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC09B,EAAex0B,EAAW,GAAGlJ,MAC7B47C,EAAc1yC,EAAW,GAAGlJ,MAC5B26C,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAC/BkqF,EAAkB1qF,EAAE4K,cAAF,MAEtB8/E,EAAGI,MAAM3K,eAAe4K,WACxBL,EAAGI,MAAM3K,eAAe6K,WAAW9sD,GAAOke,GAC1CsuC,EAAGI,MAAM3K,eAAegL,MAAMT,EAAGU,aAAajwC,EAAOuvC,EAAGW,cAAcjwC,GAGtEsvC,EAAGI,MAAMpe,UAAUue,aAEpB,GAAO,EAAO,gFAAgF,IAGrGrjF,KAAKwJ,UAAU,IAAIzI,EAAO,kBAAmB,IAAI2B,EAAc,CAC3D,CAAE3I,WAAY,QAASqG,KAAMmiF,EAAWpzE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1FyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8qF,EAAuB5hF,EAAW,GAAGlJ,MACnBR,EAAE4K,cAAF,MAEnB2gF,aAAwB,MAATD,EAAgB,KAAOA,EAAM1gF,cAAN,QAE1C,GAAO,EAAO,sLAAsL,IAE3MhD,KAAKwJ,UAAU,IAAIzI,EAAO,mBAAoB,IAAI2B,EAAc,CAC5D,CAAE3I,WAAY,WAAYqG,KAAMoiF,EAAmBrzE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCy+E,EAA0Bv1E,EAAW,GAAGlJ,MACtBR,EAAE4K,cAAF,MAEnB4gF,iBAAiBvM,KAErB,GAAO,EAAO,gGAAgG,IAGrHr3E,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,OAAOuI,KAAK04B,MAAM6+C,EAAGvvC,SAEtB,GAAO,EAAO,2FAA2F,IAEhHvzC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD6L,EACCzM,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,OAAOuI,KAAK04B,MAAM6+C,EAAGtvC,UAEtB,GAAO,EAAO,yFAAyF,IAE9GxzC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACboK,cAAF,MAClB6gF,EAAiB/hF,EAAW,GAAGlJ,MAEnCkqF,EAAGgB,UAAUD,KAEd,GAAO,EAAO,yIAAyI,IAKlK,eAAeE,EAA4BtB,EAAiB,IAAKC,EAAe,K,YAE5E,IAAII,EAAsC,QAApC,EAAoB,QAApB,EAAc,QAAd,EAAG9iF,KAAKtI,cAAM,eAAE47B,YAAI,eAAE+M,wBAAc,eAAI6xC,YAG9C,GAAU,MAAN4Q,EAAY,CAEZ,GAAIA,EAAGvvC,OAASkvC,GAAUK,EAAGtvC,QAAUkvC,EAAM,CAEzC,IAAIsB,EAAgBz4E,KAAK04B,MAAMy+C,EAAOD,EAAS,KAC/CK,EAAGmB,gBAAgBz3C,IAAI,iBAAkBw3C,EAAQ,KAEjDlB,EAAGI,MAAM3K,eAAegL,MAAMT,EAAGvvC,MAAQkvC,EAAQK,EAAGtvC,OAASkvC,GAC7DI,EAAGvvC,MAAQkvC,EACXK,EAAGtvC,OAASkvC,EAGZI,EAAGI,MAAMpe,UAAUue,WAEW,QAA9B,EAAArjF,KAAKtI,OAAO47B,KAAK4wD,qBAAa,SAAEC,qBAIpC,OAAOrB,EAGP,OAAO,IAAI,GAAYL,EAAQC,EAAM1iF,KAAKtI,OAAQqsF,IAyBxD,MAAO,GAsCT,YAAmBxwC,EAAsBC,EAAwB97C,EAAuB0sF,G,UAArE,KAAA7wC,QAAsB,KAAAC,SAAwB,KAAA97C,SAAuB,KAAA0sF,QA/BxF,KAAAzD,UAAyB,GACzB,KAAA0D,iBAAgC,GAChC,KAAAC,YAA2B,GAC3B,KAAAC,cAA6B,GAC7B,KAAAC,sBAAuC,GAEvC,KAAAC,oBAAgD,GAChD,KAAAC,eAAsC,GAGtC,KAAAC,gBAA0B,EAC1B,KAAAC,YAAsB,EASf,KAAAC,eAAmD,GAoL1D,KAAAC,kBAA4B,EAC5B,KAAAC,MAAgB,EAChB,KAAAC,SAAmB,EAEnB,KAAAhG,iBAAmC,GA3K/B/G,KAAKlrC,SAASk4C,WAAahN,KAAKiN,YAAYC,QAE5CnlF,KAAKyjF,cAAgBjwC,EACrBxzC,KAAKwjF,aAAejwC,EAEpBvzC,KAAKi7B,YAA+B,QAApB,EAAc,QAAd,EAAGj7B,KAAKtI,cAAM,eAAE47B,YAAI,eAAE+M,iBAEG,MAArCrgC,KAAKi7B,YAAY6jD,kBACjB9+E,KAAKi7B,YAAY6J,eAAe,qFAGA,MAAhC9kC,KAAKi7B,YAAYi3C,aACjBlyE,KAAKi7B,YAAY6J,eAAe,oDAGpC9kC,KAAKi7B,YAAYi3C,YAAclyE,KAE/BA,KAAKikF,gBAAkB77C,OAAO,eAC9B,IAAIg9C,EAAeplF,KAAKtI,OAAO47B,KAAK+M,iBAAiB0J,aAAas7C,iBAClErlF,KAAKslF,eAAiBtlF,KAAKtI,OAAO47B,KAAK4wD,cAAc1S,UAAU/hD,KAAK,mBAGpE,IAAIuhB,EAAI,KACJ,IAAIu0C,EAAWH,EAAazgC,QAAQ,YAChC6gC,EAAmBD,EAAShyC,QAC5BkyC,EAAoBF,EAAS/xC,SAI7BA,EAASD,EAAQkyC,EAAYD,EAC7BJ,EAAa54C,IAAI,CACb,MAAS+G,EAAQC,EAASiyC,EAAY,KACtC,OAAUA,EAAY,OAG1BL,EAAa54C,IAAI,CACb,OAAUgH,EAASD,EAAQiyC,EAAW,KACtC,MAASA,EAAW,QAKhCJ,EAAa56C,IAAI,eACjB46C,EAAal7C,GAAG,cAAe8G,GAE/BA,IAEAhxC,KAAK0lF,gBAAkBt9C,OAAO,eAC9BpoC,KAAKikF,gBAAgBv8C,OAAO1nC,KAAK0lF,iBAEjCN,EAAa19C,OAAO1nC,KAAKikF,iBACzBmB,EAAav8C,OAEbu8C,EAAa,GAAGO,cAAgB,SAAU/uE,GACtCA,EAAE6hC,kBAGNw/B,KAAKlrC,SAAS64C,YAAc,IAE5B5lF,KAAK6lF,IAAM,IAAI5N,KAAK6N,YAAY,CAC5BC,WAAW,EACXxyC,MAAOA,EAAOC,OAAQA,IAK1B,IAAIx2B,EAAOhd,KAGXA,KAAKgmF,eAAkB7uE,IAEnB6F,EAAKipE,KAAKhO,KAAKiO,OAAOC,OAAOC,YAGjCpmF,KAAK6lF,IAAIQ,OAAO/gD,IAAItlC,KAAKgmF,gBACzBhmF,KAAK6lF,IAAIQ,OAAOC,OAAS,GAEzBtmF,KAAKi7B,YAAY4/C,aAAc,EAE/B76E,KAAKkjF,MAAQ,IAAIjL,KAAKsO,UAEtBvmF,KAAK6lF,IAAI3C,MAAMsD,SAASxmF,KAAKkjF,OAE7BljF,KAAK0lF,gBAAgBh+C,OAAO1nC,KAAK6lF,IAAIY,MAQrCzmF,KAAKi7B,YAAY2gD,aAAazB,oBAAoBp2E,KAAM7K,IACpD,IAAK,IAAIwtF,KAAO1pE,EAAKqnE,iBAEjBrnE,EAAK2pE,qBAAqBD,EAAKxtF,KAKvC8G,KAAKi7B,YAAY2gD,aAAaxB,eAAer2E,KAAM7K,IAC/C,IAAK,IAAIwtF,KAAO1pE,EAAKsnE,YAEjBtnE,EAAK2pE,qBAAqBD,EAAKxtF,KAKvC8G,KAAKi7B,YAAY2gD,aAAavB,iBAAiBt2E,KAAM7K,IACjD,IAAK,IAAIwtF,KAAO1pE,EAAKunE,cAEjBvnE,EAAK2pE,qBAAqBD,EAAKxtF,KAMvC,IAAK,IAAI0tF,IAAgB,CAAC,UAAW,YAAa,YAAa,aAAc,cACzE5mF,KAAK0lF,gBAAgBx7C,GAAG08C,EAAehwE,IACnC,IAAIm9B,EAAIR,EAAQ38B,EAAEiwE,QAAU7mF,KAAK0lF,gBAAgBnyC,QAC7CS,EAAIR,EAAS58B,EAAEkwE,QAAU9mF,KAAK0lF,gBAAgBlyC,SAE9C/5C,EAAI,IAAIw+E,KAAK8O,MAAMhzC,EAAGC,GAC1Bh0C,KAAKkjF,MAAM3K,eAAeyO,aAAavtF,EAAGA,GAC1Cs6C,EAAIt6C,EAAEs6C,EACNC,EAAIv6C,EAAEu6C,EAENh3B,EAAKiqE,aAAaL,EAAc7yC,EAAGC,EAAGp9B,EAAEygC,QAExC,IAAK,IAAIggC,KAAYr3E,KAAK0kF,eACc,MAAhCrN,EAASzlB,MAAMg1B,IACf5mF,KAAKknF,oBAAoB7P,EAAUuP,EAAc7yC,EAAGC,EAAGp9B,EAAEygC,UAOzE,IAAIiuC,EAAiBtlF,KAAKslF,eAE1BtlF,KAAK0lF,gBAAgBx7C,GAAG,YAActzB,IAClC,IAAIm9B,EAAIR,EAAQ38B,EAAEiwE,QAAU7mF,KAAK0lF,gBAAgBnyC,QAC7CS,EAAIR,EAAS58B,EAAEkwE,QAAU9mF,KAAK0lF,gBAAgBlyC,SAE9C/5C,EAAI,IAAIw+E,KAAK8O,MAAMhzC,EAAGC,GAC1Bh0C,KAAKkjF,MAAM3K,eAAeyO,aAAavtF,EAAGA,GAC1Cs6C,EAAIxoC,KAAK04B,MAAMxqC,EAAEs6C,GACjBC,EAAIzoC,KAAK04B,MAAMxqC,EAAEu6C,GACjBsxC,EAAevwE,KAAK,IAAIg/B,KAAKC,QAGjCh0C,KAAK0lF,gBAAgBx7C,GAAG,aAAetzB,IACnC0uE,EAAez8C,SAGnB7oC,KAAK0lF,gBAAgBx7C,GAAG,aAAetzB,IACnC0uE,EAAet8C,SAGW,QAA9B,EAAAhpC,KAAKtI,OAAO47B,KAAK4wD,qBAAa,SAAEC,qBAvKpC,kBACInkF,KAAK2gF,UAAY,GACjB3gF,KAAKqkF,iBAAmB,GACxBrkF,KAAKskF,YAAc,GACnBtkF,KAAKukF,cAAgB,GAuKzB,UAAUV,GACN7jF,KAAK0lF,gBAAgBl5C,IAAI,SAAUq3C,GAUvC,KAAK1sE,G,MAEDnX,KAAK4kF,aAAeztE,EAEpB,IAAK,IAAIgwE,KAAgBnnF,KAAKg/E,iBAC1BmI,EAAalB,KAAK9uE,GAGtB,GAAwB,MAApBnX,KAAKi7B,YACL,OAAQj7B,KAAKi7B,YAAYwgB,OACrB,KAAKC,GAAiBiO,QAElB,IAAK3pD,KAAK2kF,eAAgB,CACtB3kF,KAAK8kF,oBACL,MAGJ,IAAIruD,GAAiB,EAErB,IAAK,IAAI2wD,KAAapnF,KAAK2gF,UAAW,CAElC,IAAI0G,EAAcD,EAAUC,YAC5B,GAAIA,EAAYC,aAAeD,EAAYE,YAAa,SAExD,IAAI7lF,EAA0B,QAAnB,EAAG0lF,EAAUzlF,cAAM,eAAED,QAChC1B,KAAKwnF,SAAS/wD,EAAO2wD,EAAWpnF,KAAK4kF,aACtB,MAAXljF,GAAoB0lF,EAAUC,YAAYE,cAC1C9wD,GAAQ,EACRz2B,KAAK2kF,gBAAiB,GAG9B,MACJ,KAAKjpC,GAAiBxhB,KACtB,KAAKwhB,GAAiB1wC,MACtB,KAAK0wC,GAAiBsY,gBAClBh0D,KAAKuhF,kBAkBjB,IAZAvhF,KAAK4kF,YAAc,EAEf5kF,KAAKi7B,YAAYwgB,OAASC,GAAiBiO,UACvC3pD,KAAK2gF,UAAU3+E,OAAS,GACxBhC,KAAKi7B,YAAY6gD,cAAc,OAAO,EAAM,IAC5C97E,KAAKi7B,YAAY2/C,cAAe,EAChC56E,KAAKi7B,YAAY6gD,cAAc,OAAO,EAAO,MAE7C97E,KAAKi7B,YAAY6gD,cAAc,OAAO,EAAO,KAI9C97E,KAAKwkF,sBAAsBxiF,OAAS,GAAG,CAE1C,IAAIqlF,EAAcrnF,KAAKwkF,sBAAsB7wE,MAM7C,IAAK,IAAI8zE,IAAa,CAACznF,KAAKqkF,iBAAkBrkF,KAAKskF,YAAatkF,KAAKukF,eACjE,IAAK,IAAI5sF,EAAI,EAAGA,EAAI8vF,EAAUzlF,OAAQrK,IAC9B8vF,EAAU9vF,GAAG0vF,cAAgBA,IAC7BI,EAAUvwE,OAAOvf,EAAG,GACpBA,KAMZ,IAAK,IAAIA,EAAI,EAAGA,EAAIqI,KAAKykF,oBAAoBziF,OAAQrK,IAC7CqI,KAAKykF,oBAAoB9sF,GAAG+vF,cAAgBL,IAC5CrnF,KAAKykF,oBAAoBvtE,OAAOvf,EAAG,GACnCA,KAIR,IAAK,IAAIA,EAAI,EAAGA,EAAIqI,KAAK2gF,UAAU3+E,OAAQrK,IACnCqI,KAAK2gF,UAAUhpF,GAAG0vF,cAAgBA,IAClCrnF,KAAK2gF,UAAUzpE,OAAOvf,EAAG,GACzBA,KAIR,IAAIgwF,EAA8BN,EAAaM,cAC1B,MAAjBA,IACAA,EAAcC,UACAP,EAAaM,cAAgB,OAOvD,mBAAmBj+D,GACf,IAAI1xB,EAAImqF,GAAY0F,mBAAmBn+D,GACvC1pB,KAAK6lF,IAAIiC,SAASxgB,gBAAkBtvE,EAAE0xB,MAI1C,qBAAqB09D,EAAsBluF,G,QAEvC,IAAIwI,EAA0B,QAAnB,EAAG0lF,EAAUzlF,cAAM,eAAED,QAC5BD,EAAyB,QAAnB,EAAG2lF,EAAUzlF,cAAM,eAAEF,OAE3Bm5B,EAAMwsD,EAAUC,YAAYxhD,cAE5B87C,EAAyB,CACzB,CACIvhF,KAAMw6B,EAAI13B,MACVtK,MAAOgiC,GAEX,CACIx6B,KAAMkL,EACN1S,MAAOM,IAIA,MAAXwI,EACA1B,KAAKi7B,YAAYgL,SAASmhD,EAAUzlF,OAAQggF,EAAe,MAAM,GAChD,MAAVlgF,GACPA,EAAO,IAKf,SAASg1B,EAAgB2wD,EAAsBjwE,G,QAE3C,IAAIzV,EAA0B,QAAnB,EAAG0lF,EAAUzlF,cAAM,eAAED,QAC5BD,EAAyB,QAAnB,EAAG2lF,EAAUzlF,cAAM,eAAEF,OAE3Bm5B,EAAMwsD,EAAUC,YAAYxhD,cAE5B87C,EAAyB,CACzB,CACIvhF,KAAMw6B,EAAI13B,MACVtK,MAAOgiC,IAIXwsD,EAAUzlF,OAAO8L,oBAAsB,GACvCk0E,EAAc59E,KACV,CACI3D,KAAM6O,EACNrW,MAAOue,IAMnB,IAAI6F,EAAOhd,KAEI,MAAX0B,EACA1B,KAAKi7B,YAAYgL,SAASmhD,EAAUzlF,OAAQggF,EAAelrD,EAASwE,IAChEje,EAAK2nE,gBAAiB,EACtB1pD,EAAY2/C,cAAe,GAC3B,MAAM,GACO,MAAVn5E,GACPA,EAAO,IAKf,eACI,IAAK,IAAImlF,IAAgB,CAAC,UAAW,YAAa,YAAa,aAAc,cACzE5mF,KAAK0lF,gBAAgBl7C,IAAIo8C,GAE7B5mF,KAAKg/E,iBAAmB,GACxBh/E,KAAK6lF,IAAIQ,OAAO1hD,OAAO3kC,KAAKgmF,gBAC5BhmF,KAAK6lF,IAAI+B,UACT5nF,KAAKikF,gBAAgBt/C,SACrB3kC,KAAKtI,OAAO47B,KAAK+M,iBAAiB0J,aAAas7C,iBAAiBr8C,OAChEhpC,KAAKi7B,YAAY4/C,aAAc,EAC/B76E,KAAKi7B,YAAYi3C,YAAc,KAC/BlyE,KAAKslF,eAAet8C,OAGxB,aAAa49C,EAAsB7yC,EAAWC,EAAWqD,GAErD,OAAQuvC,GACJ,IAAK,YACL,IAAK,UACD,IAAK,IAAIvP,KAAYr3E,KAAKykF,oBAAqB,CAC3C,IAAIiD,EAA2BrQ,EAASqQ,YAEJ,MAAhCrQ,EAASzlB,MAAMg1B,KAA0Bc,EAAYK,cAAch0C,EAAGC,IAAM0zC,EAAYM,iBACxFhoF,KAAKioF,yBAAyB5Q,EAAUuP,EAAc7yC,EAAGC,EAAGqD,GAKpE,MACJ,IAAK,aACD,IAAK,IAAIggC,KAAYr3E,KAAKykF,oBAAqB,CAC3C,IAAIiD,EAA2BrQ,EAASqQ,YAEJ,MAAhCrQ,EAASzlB,MAAMg1B,IAAyBc,EAAYK,cAAch0C,EAAGC,KAAO0zC,EAAYQ,2BACxFloF,KAAKioF,yBAAyB5Q,EAAUuP,EAAc7yC,EAAGC,EAAGqD,EAAQ,KAChEqwC,EAAYQ,2BAA4B,IAKpD,MACJ,IAAK,aACD,IAAK,IAAI7Q,KAAYr3E,KAAKykF,oBAAqB,CAC3C,IAAIiD,EAA2BrQ,EAASqQ,YAEJ,MAAhCrQ,EAASzlB,MAAMg1B,IAAyBc,EAAYQ,2BACpDloF,KAAKioF,yBAAyB5Q,EAAUuP,EAAc7yC,EAAGC,EAAGqD,EAAQ,KAChEqwC,EAAYQ,2BAA4B,IAKpD,MACJ,IAAK,YACD,IAAK,IAAI7Q,KAAYr3E,KAAKykF,oBAAqB,CAC3C,IAAIiD,EAA2BrQ,EAASqQ,YAExC,GAAmC,MAA/BrQ,EAASzlB,MAAT,WACiC,MAAhCylB,EAASzlB,MAAT,aAAyC81B,EAAYQ,2BACrB,MAAhC7Q,EAASzlB,MAAT,YAAwC81B,EAAYQ,0BACvD,CACE,IAAIH,EAAgBL,EAAYK,cAAch0C,EAAGC,IAC5C0zC,EAAYM,gBAAkBD,IAAiD,MAA/B1Q,EAASzlB,MAAT,WACjD5xD,KAAKioF,yBAAyB5Q,EAAU,YAAatjC,EAAGC,EAAGqD,GAE3D0wC,GAAiD,MAAhC1Q,EAASzlB,MAAT,aAAyC81B,EAAYQ,2BACtEloF,KAAKioF,yBAAyB5Q,EAAU,aAActjC,EAAGC,EAAGqD,EAAQ,KAChEqwC,EAAYQ,2BAA4B,KAG3CH,GAAiD,MAAhC1Q,EAASzlB,MAAT,YAAwC81B,EAAYQ,2BACtEloF,KAAKioF,yBAAyB5Q,EAAU,aAActjC,EAAGC,EAAGqD,EAAQ,KAChEqwC,EAAYQ,2BAA4B,OASpE,yBAAyB7Q,EAAkCuP,EACvD7yC,EAAWC,EAAWqD,EAAgBxN,GAEtC,IAAKwtC,EAASqQ,YAAYS,kCACrB9Q,EAASqQ,YAAYC,cAAcz2D,QAAS,OAEjD,IAAIvvB,EAAS01E,EAAStxE,QAAQ6gF,GAC1BllF,EAAUC,EAAOD,QACjBD,EAASE,EAAOF,OAEhBm5B,EAAMy8C,EAASqQ,YAAY7hD,cAE3B87C,EAAyB,CACzB,CACIvhF,KAAMw6B,EAAI13B,MACVtK,MAAOgiC,GAEX,CACIx6B,KAAM6O,EACNrW,MAAOm7C,GAEX,CACI3zC,KAAM6O,EACNrW,MAAOo7C,IAIK,aAAhB4yC,GAA+C,cAAhBA,GAAgD,cAAhBA,GAC/DjF,EAAc59E,KACV,CACI3D,KAAMmO,EACN3V,MAAOy+C,IAIJ,MAAX31C,EACA1B,KAAKi7B,YAAYgL,SAAStkC,EAAQggF,EAAe93C,GAAU,GAC1C,MAAVpoC,GACPA,EAAO,IAKf,iBAAiB41E,GAMb,IAAIn1E,EAAgBlC,KAAKykF,oBAAoB2D,UAAWC,GAAgBA,EAAIX,YAAY7hD,eAAiBwxC,GACtGn1E,GAAS,GACRlC,KAAKykF,oBAAoBvtE,OAAOhV,EAAO,GAG3C,IAAIomF,EAAgB,CAChB,CAAEvuF,WAAY,UAAW6H,UAAW,yBACpC,CAAE7H,WAAY,YAAa6H,UAAW,yBACtC,CAAE7H,WAAY,YAAa6H,UAAW,oBACtC,CAAE7H,WAAY,aAAc6H,UAAW,oBACvC,CAAE7H,WAAY,aAAc6H,UAAW,qBAGvC2mF,EAAwB,KAE5B,IAAK,IAAIr2D,KAAMo2D,EAAe,CAC1B,IAAI3mF,EAAyB01E,EAASn0E,MAAO4hB,qBAAqB,KAAOoN,EAAGn4B,WAAam4B,EAAGtwB,YAErE,OAAnBD,aAAM,EAANA,EAAQD,UAAmBC,EAAOD,QAAQ0C,WAAWpC,OAAS,GAAuB,OAAlBL,aAAM,EAANA,EAAQF,WAEjE,MAAN8mF,IACAA,EAAK,CACDlR,SAAUA,EACVzlB,MAAO,GACP7rD,QAAS,IAEb/F,KAAK0kF,eAAe3gF,KAAKwkF,IAG7BA,EAAG32B,MAAM1/B,EAAGn4B,WAAWwV,gBAAiB,EACxCg5E,EAAGxiF,QAAQmsB,EAAGn4B,WAAWwV,eAAiB5N,IAQtD,oBAAoB01E,EAA6BuP,EAC7C7yC,EAAWC,EAAWqD,EAAgBxN,GAEtC,IAAIloC,EAAS01E,EAAStxE,QAAQ6gF,GAC1BllF,EAAUC,EAAOD,QACjBD,EAASE,EAAOF,OAEhBm5B,EAAMy8C,EAASA,SAEfsK,EAAyB,CACzB,CACIvhF,KAAMw6B,EAAI13B,MACVtK,MAAOgiC,GAEX,CACIx6B,KAAM6O,EACNrW,MAAOm7C,GAEX,CACI3zC,KAAM6O,EACNrW,MAAOo7C,IAIK,aAAhB4yC,GAA+C,cAAhBA,GAAgD,cAAhBA,GAC/DjF,EAAc59E,KACV,CACI3D,KAAMmO,EACN3V,MAAOy+C,IAIJ,MAAX31C,EACA1B,KAAKi7B,YAAYgL,SAAStkC,EAAQggF,EAAe93C,GAAU,GAC1C,MAAVpoC,GACPA,EAAO,KC11Bb,MAAO,WAAc,EAEvB,YAAY/J,GAER2J,MAAM,QAAS3J,EAAQ,+JAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAClDvd,KAAKmB,YAAa,EAElB,IAAIqnF,EAAyE,CACzE,CAAE5mF,UAAW,qBAAsB6mF,oBAAqB,oBACxD,CAAE7mF,UAAW,kBAAmB6mF,oBAAqB,eACrD,CAAE7mF,UAAW,oBAAqB6mF,oBAAqB,iBACvD,CAAE7mF,UAAW,QAAS6mF,oBAAqB,aAC3C,CAAE7mF,UAAW,cAAe6mF,oBAAqB,cAGrDzoF,KAAK8F,yBAA2B,CAC3BrN,IAEG,IAAK,IAAI2sD,KAAMojC,EAAkB,CAC7B,IAAI7mF,EAAyBlJ,EAAEyK,MAAO4hB,qBAAqBsgC,EAAGxjD,WAE9D,GAAuB,OAAnBD,aAAM,EAANA,EAAQD,UAAqC,OAAlBC,aAAM,EAANA,EAAQF,QAAgB,CACnD,IAAI2jC,EAA+B3sC,EAAEuK,cAAF,MACnCoiC,EAAG8sC,YAAY9sB,EAAGqjC,qBAAqB1kF,KAAK,CACxCsjF,YAAajiD,EACbzjC,OAAQA,QAQ5B3B,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IAGjD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCyuF,EAAc,IAAI,GAAY3vF,EAAO47B,KAAK+M,iBAAkBjoC,GAEhEA,EAAE4K,cAAF,MAA2BqkF,IAK/B,GAAO,EAAO,4DAA4D,IAE9ErnF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD,KACCZ,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MACnB4kF,YAEJ,GAAO,EAAO,0IAA0I,IAE/J5nF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCM,EAAc4I,EAAW,GAAGlJ,MAGhC,OAFsBR,EAAE4K,cAAF,MAEX0lF,UAAUxvF,KAEtB,GAAO,EAAO,+NAA+N,IAEpP8G,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCM,EAAc4I,EAAW,GAAGlJ,MAGhC,OAFsBR,EAAE4K,cAAF,MAEZ0lF,UAAUxvF,KAErB,GAAO,EAAO,yNAAyN,IAE9O8G,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAEZukF,aAEX,GAAO,EAAO,0FAA0F,IAG/GvnF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDhL,EAAO4lB,UAAUC,QAAQ,SACxBzb,GAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAEZkvE,YAAYkS,OAEvB,GAAO,EAAO,gCAAgC,IAErDpkF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD6N,EACCzO,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAGnB2lF,gBAAe,KAInB,GAAO,EAAO,uFAAuF,IAExG3oF,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IAC7D6N,EACCzO,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAGnB2lF,gBAAe,KAEnB,GAAO,EAAO,+FAA+F,IAEhH3oF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACxDwM,EACCpN,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAEXskF,aAEZ,GAAO,EAAO,oFAAoF,IAEzGtnF,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,YAAaqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxG,KACA,MACA,GAAO,EAAO,0CAA0C,IAE5Dd,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAC/C,KACA,MACA,GAAO,EAAO,0CAA0C,IAE5D1C,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,yFAAyF,IAE3Gd,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,kEAAkE,IAEpFd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClG,KACA,MACA,GAAO,EAAO,qEAAqE,IAK3F,oBACId,KAAK+F,QAAQgE,OAAOhS,GAAqB,YAAhBA,EAAEgC,YAA0B,GAAGkH,WAAajB,KAAKtI,OAAO4lB,UAAUC,QAAQ,UAMrG,MAAO,GAOT,YAAY0d,EAAiC4K,GAAA,KAAAA,gBAJ7C,KAAA0hD,aAAuB,EAEvB,KAAAD,aAAuB,EAGnB,IAAIpV,EAAcj3C,EAAYi3C,YAC9B,GAAmB,MAAfA,EAAqB,CACrB,IAAIlkC,EAAmB,IAAI,EAAqB/S,EAAYxd,YAAYF,QAAQ,SAASnd,MACzF8xE,EAAc,IAAI,GAAY,IAAK,IAAKj3C,EAAYxd,YAAYmjE,UAAU,eAAgB5yC,GAE1FA,EAAEhrC,cAAF,MAA2BkvE,EAE/BlyE,KAAKkyE,YAAcA,EAGvB,eAAeh5C,GACXl5B,KAAKsnF,YAAcpuD,EAIvB,UAAUhgC,GACN,OAAO8G,KAAKkyE,YAAYj3C,YAAY2gD,aAAagN,UAAU1vF,GAG/D,UACI8G,KAAKunF,aAAc,EACnBvnF,KAAKkyE,YAAYsS,sBAAsBzgF,KAAK/D,OC5N9C,MAAO,WAAuB,EAEhC,YAAYtI,GACR2J,MAAM,YAAa3J,EAAQ,CACvB,CACI0I,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,UAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,SAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,OAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,YAIpBiG,KAAKD,cAAgB,0BCwCvB,SAAU8oF,GAAQC,EAAWC,GAE/B,IAAItjB,EAAKsjB,EAAGh1C,EAAI+0C,EAAG/0C,EACf2xB,EAAKqjB,EAAG/0C,EAAI80C,EAAG90C,EAEnB,OAAOzoC,KAAK0/D,KAAKxF,EAAKA,EAAKC,EAAKA,GAa9B,SAAUsjB,GAAoBC,EAAiBC,GAEjD,IAAIC,GAAS,EACTC,EAAcH,EAAOjnF,OAEzB,IAAK,IAAIE,EAAQ,EAAGA,GAASknF,EAAc,EAAGlnF,IAAS,CAEnD,IAAIvK,EAAIuK,EAAQknF,EACZp7E,GAAK9L,EAAQ,GAAKknF,EAClBp7E,EAAI,IACJA,GAAKo7E,GAGHH,EAAOtxF,GAAGq8C,EAAIk1C,EAAMl1C,GAAOi1C,EAAOj7E,GAAGgmC,EAAIk1C,EAAMl1C,GAChDk1C,EAAMn1C,GAAKk1C,EAAOj7E,GAAG+lC,EAAIk1C,EAAOtxF,GAAGo8C,IAAMm1C,EAAMl1C,EAAIi1C,EAAOtxF,GAAGq8C,IAAMi1C,EAAOj7E,GAAGgmC,EAAIi1C,EAAOtxF,GAAGq8C,GAAKi1C,EAAOtxF,GAAGo8C,IAC3Go1C,GAAUA,GAGlB,OAAOA,EAsHL,SAAUE,GAAsBC,EAAkBC,GAKpD,IAAK,IAAI5xF,EAAI,EAAGA,EAAI2xF,EAAQtnF,OAAQrK,IAChC,GAAIqxF,GAAoBO,EAASD,EAAQ3xF,IACrC,OAAO,EAIf,IAAK,IAAIA,EAAI,EAAGA,EAAI4xF,EAAQvnF,OAAQrK,IAChC,GAAIqxF,GAAoBM,EAASC,EAAQ5xF,IACrC,OAAO,EAIf,OAAO,EAgCL,SAAU6xF,GAAqBtiF,EAAU0wC,EAAUn+C,GAErD,IAAIgsE,EAAK7tB,EAAE7D,EAAI7sC,EAAE6sC,EACb2xB,EAAK9tB,EAAE5D,EAAI9sC,EAAE8sC,EAEbp8C,EAAI2T,KAAK0/D,KAAKvF,EAAKA,EAAKD,EAAKA,GAEjC,OAAI7tE,EAAI,KACGixF,GAAQ3hF,EAAGzN,GAGf8R,KAAK6pD,IAAIsQ,EAAKjsE,EAAEs6C,EAAI0xB,EAAKhsE,EAAEu6C,EAAI4D,EAAE7D,EAAI7sC,EAAE8sC,EAAI4D,EAAE5D,EAAI9sC,EAAE6sC,GAAKn8C,EClR7D,MAAO,WAAmB,EAE5B,YAAYF,GAER2J,MAAM,QAAS3J,EAAQ,+FAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,UAClDvd,KAAKmB,YAAa,EAGlB,IAAIsoF,EAAY/xF,EAAO4lB,UAAUC,QAAQ,SACpB,IAAI,EAAUksE,GAEnCzpF,KAAKyJ,aAAa,IAAI/I,EAAU,QAASuO,EACpCrW,IAEG,IACI8wF,EADqB9wF,EAAMS,OACD2J,cAAJ,MAEZ,MAAV0mF,GAAkBA,EAAOnC,aAAuC,MAAxBmC,EAAO/B,cAC/C/uF,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ8wF,EAAOje,QAEtB,EAAO7xE,EAAWqQ,WAAW,EAAM,aAE1CjK,KAAKyJ,aAAa,IAAI/I,EAAU,UAAWuO,EACtCrW,IAEG,IACI8wF,EADqB9wF,EAAMS,OACD2J,cAAJ,MACZ,MAAV0mF,GAAkBA,EAAOnC,aAAuC,MAAxBmC,EAAO/B,cAC/C/uF,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ8wF,EAAOC,eAEtB,EAAO/vF,EAAWqQ,WAAW,EAAM,yEAE1CjK,KAAKyJ,aAAa,IAAI/I,EAAU,UAAWuO,EACtCrW,IAEG,IACI8wF,EADqB9wF,EAAMS,OACD2J,cAAJ,MACZ,MAAV0mF,GAAkBA,EAAOnC,aAAuC,MAAxBmC,EAAO/B,cAC/C/uF,EAAMA,MAAQ,EAIlBA,EAAMA,MAAQ8wF,EAAOE,eAEtB,EAAOhwF,EAAWqQ,WAAW,EAAM,yEAiC1CjK,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC6sE,EAAa3jE,EAAW,GAAGlJ,MAC3B8sE,EAAa5jE,EAAW,GAAGlJ,MAC3BixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,SAErBD,EAAGvjB,KAAKb,EAAIC,KAEb,GAAO,EAAO,mFAAmF,IAExG1lE,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACzG,CAAE/G,WAAY,UAAWqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,UAAWqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCmxF,EAAqBjoF,EAAW,GAAGlJ,MACnCoxF,EAAkBloF,EAAW,GAAGlJ,MAChCqxF,EAAkBnoF,EAAW,GAAGlJ,MAChCixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,WAErBD,EAAGvG,OAAOyG,EAAYC,EAASC,KAEhC,GAAO,EAAO,uFAAuF,IAE5GjqF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACzGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCmxF,EAAqBjoF,EAAW,GAAGlJ,MACnCixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,WAErBD,EAAGvG,OAAOyG,KAEX,GAAO,EAAO,iGAAiG,IAEtH/pF,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,UAAWqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,UAAWqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm/D,EAAiBj2D,EAAW,GAAGlJ,MAC/BoxF,EAAkBloF,EAAW,GAAGlJ,MAChCqxF,EAAkBnoF,EAAW,GAAGlJ,MAChCixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,UAErBD,EAAGtG,MAAMxrB,EAAQiyB,EAASC,KAE3B,GAAO,EAAO,kHAAkH,IAEvIjqF,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCmxF,EAAqBjoF,EAAW,GAAGlJ,MACnCixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,UAErBD,EAAGtG,MAAMwG,KAEV,GAAO,EAAO,oHAAoH,IAEzI/pF,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IACzDwM,EACCpN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,iBAErB,OAAOD,EAAGK,kBAEX,GAAO,EAAO,oHAAoH,IAEzIlqF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,cAErB,OAAOD,EAAGF,eAEX,GAAO,EAAO,6JAA6J,IAElL3pF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,cAErB,OAAOD,EAAGD,eAEX,GAAO,EAAO,6JAA6J,IAElL5pF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,YAErB,OAAOD,EAAGpe,QAEX,GAAO,EAAO,4LAA4L,IAEjNzrE,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BixF,EAAkBzxF,EAAE4K,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,iBAErB,OAAOD,EAAG9B,cAAch0C,EAAGC,KAE5B,GAAO,EAAO,gFAAgF,IAErGh0C,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,SAAUqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuxF,EAAuBroF,EAAW,GAAGlJ,MAE5B,MAATuxF,GACAzyF,EAAO47B,KAAK+M,iBAAiByE,eAAe,uEAGhD,IAAI+kD,EAAkBzxF,EAAE4K,cAAF,MAClBonF,EAAmBD,EAAMnnF,cAAN,MAEvB,IAAI6mF,EAAGC,cAAc,gBAArB,CAEA,IAAGM,EAAI7C,YAKP,OAAOsC,EAAGQ,aAAaD,GAJnBP,EAAG3X,YAAYj3C,YAAY6J,eAAe,wFAM/C,GAAO,EAAO,+FAA+F,IAEpH9kC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAClB+wC,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAE1BixF,EAAGC,cAAc,cAErBD,EAAGvjB,KAAKvyB,EAAI81C,EAAGF,aAAc31C,EAAI61C,EAAGD,gBAErC,GAAO,EAAO,yGAAyG,IAE9H5pF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyP,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAClBsnF,EAAmBxoF,EAAW,GAAGlJ,MAEjCixF,EAAGC,cAAc,aAErBD,EAAGvG,OAAOgH,EAAWT,EAAGpe,SAEzB,GAAO,EAAO,8CAA8C,IAEnEzrE,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,UAAWqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyP,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAClBkuB,EAAmBpvB,EAAW,GAAGlJ,MAEjCixF,EAAGC,cAAc,eAErBD,EAAGU,WAAWr5D,KAEf,GAAO,EAAO,yFAAyF,IAE9GlxB,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,wEAAwE,IAE1Fd,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,wEAAwE,IAE1Fd,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,MAAOqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/F,KACA,MACA,GAAO,EAAO,wHAAwH,IAE1Id,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,MAAOqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/F,KACA,MACA,GAAO,EAAO,+GAA+G,IAEjId,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACA,MACA,GAAO,EAAO,iFAAiF,IAEnGd,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,SAErBD,EAAGW,KAAK9gE,KAET,GAAO,EAAO,wEAAwE,IAE7F1pB,KAAKwJ,UAAU,IAAIzI,EAAO,kCAAmC,IAAI2B,EAAc,IAC3E6N,EACCzO,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAEnBglF,gBAAiB,IAErB,GAAO,EAAO,yOAAyO,IAE9PhoF,KAAKwJ,UAAU,IAAIzI,EAAO,iCAAkC,IAAI2B,EAAc,IAC1E6N,EACCzO,IAE0BA,EAAW,GAAGlJ,MACboK,cAAF,MAEnBglF,gBAAiB,IAErB,GAAO,EAAO,iPAAiP,IAEtQhoF,KAAKwJ,UAAU,IAAIzI,EAAO,kCAAmC,IAAI2B,EAAc,CAC3E,CAAE3I,WAAY,QAASqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC6xF,EAAiB3oF,EAAW,GAAGlJ,MACbR,EAAE4K,cAAF,MAEnBmlF,gCAAkCsC,IAEtC,GAAO,EAAO,2GAA2G,IAEhIzqF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAkBzxF,EAAE4K,cAAF,MAElB6mF,EAAGC,cAAc,SAErBD,EAAGW,KAAK9gE,KAET,GAAO,EAAO,wEAAwE,IAE7F1pB,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAkBzxF,EAAE4K,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,6DAA6D,IAGlFlD,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD6N,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,gBAErB,OAAOD,EAAGc,iBAEX,GAAO,EAAO,4CAA4C,IAEjE3qF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD6N,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACboK,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,cAErB,OAAOD,EAAGe,eAEX,GAAO,EAAO,+CAA+C,KAOtE,MAAgB,WAAoB,GA0CtC,YAAY3vD,EAA0B4K,GAElCxkC,MAAM45B,EAAa4K,GAnCvB,KAAA4lC,MAAgB,EAEhB,KAAAof,kBAA6B,KAC7B,KAAAC,sBAAiC,KACjC,KAAAC,iBAAkB,EAElB,KAAA5C,iCAA2C,EAE3C,KAAAD,2BAAqC,EAErC,KAAAF,gBAA0B,EA2BtB,IAAIM,EAAgB,CAChB,CAAEvuF,WAAY,UAAW6H,UAAW,yBACpC,CAAE7H,WAAY,YAAa6H,UAAW,yBACtC,CAAE7H,WAAY,YAAa6H,UAAW,oBACtC,CAAE7H,WAAY,aAAc6H,UAAW,oBACvC,CAAE7H,WAAY,aAAc6H,UAAW,qBAGvC2mF,EAA6B,KAEjC,IAAK,IAAIr2D,KAAMo2D,EAAe,CAC1B,IAAI3mF,EAAyBkkC,EAAc3iC,MAAO4hB,qBAAqB,KAAOoN,EAAGn4B,WAAam4B,EAAGtwB,WAE1E,OAAnBD,aAAM,EAANA,EAAQD,UAAqC,OAAlBC,aAAM,EAANA,EAAQF,UAEzB,MAAN8mF,IACAA,EAAK,CACDb,YAAa1nF,KACb4xD,MAAO,GACP7rD,QAAS,IAEb/F,KAAKkyE,YAAYuS,oBAAoB1gF,KAAKwkF,IAG9CA,EAAG32B,MAAM1/B,EAAGn4B,WAAWwV,gBAAiB,EACxCg5E,EAAGxiF,QAAQmsB,EAAGn4B,WAAWwV,eAAiB5N,IAlDtD,SAAS+lF,GAKL,GAHA1nF,KAAKgrF,eAAiBtD,EAAYsD,eAClChrF,KAAKirF,eAAiBvD,EAAYuD,eAEG,MAAjCvD,EAAYmD,kBAA2B,CACvC7qF,KAAK6qF,kBAAoB,GACzB,IAAK,IAAIpxF,KAAKiuF,EAAYmD,kBAAmB7qF,KAAK6qF,kBAAkB9mF,KAAK1L,OAAOgtB,OAAO,GAAI5rB,IAG/FuG,KAAKkrF,oBAAmB,GAExBlrF,KAAK+qF,gBAAkBrD,EAAYqD,gBACnC/qF,KAAKmoF,gCAAkCT,EAAYS,gCACnDnoF,KAAKkoF,0BAA4BR,EAAYQ,0BAE7CloF,KAAK2nF,cAAcpP,eAAe0K,SAASyE,EAAYC,cAAc7iB,UAAUyT,gBAC/Ev4E,KAAK2nF,cAActP,kBAwCvB,mBAAmBz1C,GACf5iC,KAAK+qF,gBAAkBnoD,EAG3B,eACI,IAAIuoD,EAA4BnrF,KAAK2nF,cAActsE,OAC/C+vE,EAAeD,EAAU75C,SAAStvC,OAAS,EAC/CmpF,EAAUE,cAAcrrF,KAAK2nF,cAAeyD,GAGhD,aACoCprF,KAAK2nF,cAActsE,OACzCgwE,cAAcrrF,KAAK2nF,cAAe,GAGhD,oBACI,GAAqC,MAAjC3nF,KAAKkyE,YAAYyR,aAAsB,CACvC3jF,KAAK6lC,cAAc7iC,cAAnB,MAA4ChD,KACbA,KAAKkyE,YAAYyR,aACpCr+C,IAAItlC,KAAK6lC,gBAI7B,cAAclkC,GACV,QAAI3B,KAAKunF,cACLvnF,KAAKkyE,YAAYj3C,YAAY6J,eAAe,wBAA0BnjC,EAAS,sEACxE,GAKf,KAAK+nB,GACD,IAAI1xB,EAAImqF,GAAY0F,mBAAmBn+D,GAEnC1pB,KAAK2nF,cAAc6C,OAEnBxqF,KAAK2nF,cAAc6C,KAAOxyF,EAAE0xB,OAEhC1pB,KAAKqyC,SAGT,WAAWnhB,GAEPlxB,KAAK2nF,cAAcz2D,QAAUA,EAGjC,aAAaw2D,GAGT,GAA6B,MAAxB1nF,KAAA,cAAiE,MAA/B0nF,EAAW,aAC9C,OAAOA,EAAY2C,aAAarqF,MAGpCA,KAAK2nF,cAActP,kBACnBqP,EAAYC,cAActP,kBAE1B,IAAIiT,EAAKtrF,KAAK2nF,cAAc4D,YACxBC,EAAM9D,EAAYC,cAAc4D,YAEpC,QAAID,EAAGh1D,KAAOk1D,EAAI90D,OAAS80D,EAAIl1D,KAAOg1D,EAAG50D,WAErC40D,EAAG92C,IAAMg3C,EAAI5R,QAAU4R,EAAIh3C,IAAM82C,EAAG1R,UAEpC8N,EAAW,OACJA,EAAY2C,aAAarqF,MAGN,MAA1BA,KAAK6qF,mBAA8D,MAAjCnD,EAAYmD,oBAG9C7qF,KAAK+qF,iBAAiB/qF,KAAKyrF,sBAC3B/D,EAAYqD,iBAAiBrD,EAAY+D,sBAEtCpC,GAAsBrpF,KAAK8qF,sBAAuBpD,EAAYoD,0BAIzE,cAAc/2C,EAAWC,GACrB,QAAKh0C,KAAK2nF,cAAc4D,YAAY/lD,SAASuO,EAAGC,KAElB,MAA1Bh0C,KAAK6qF,oBAEL7qF,KAAK+qF,iBAAiB/qF,KAAKyrF,sBACxBzC,GAAoBhpF,KAAK8qF,sBAAuB,CAAE/2C,EAAGA,EAAGC,EAAGA,MAGtE,sBACI,IAAIv6C,EAAI,IAAIw+E,KAAK8O,MAAM/mF,KAAKgrF,eAAgBhrF,KAAKirF,gBACjDjrF,KAAK2nF,cAActP,kBACnBr4E,KAAK2nF,cAAc7iB,UAAU8T,eAAe8S,MAAMjyF,EAAGA,GAErDuG,KAAK8qF,sBAAwB,GAC7B,IAAI/yF,EAAIiI,KAAK2nF,cAAc7iB,UAAU8T,eACrC,IAAK,IAAIn/E,KAAKuG,KAAK6qF,kBACf7qF,KAAK8qF,sBAAsB/mF,KAAK,CAC5BgwC,EAAIh8C,EAAEmP,EAAIzN,EAAEs6C,EAAMh8C,EAAEC,EAAIyB,EAAEu6C,EAAKj8C,EAAE+gF,GACjC9kC,EAAIj8C,EAAE6/C,EAAIn+C,EAAEs6C,EAAMh8C,EAAEE,EAAIwB,EAAEu6C,EAAKj8C,EAAEghF,KAGzC/4E,KAAKkrF,oBAAmB,GAI5B,gBACI,IAAIS,EAAS3rF,KAAK2nF,cAAc4D,WAAU,GACtCK,EAAS5rF,KAAKkyE,YAAY2T,IAAI+F,OAClC,OAAOD,EAAOj1D,MAAQk1D,EAAOt1D,MAAQq1D,EAAOr1D,KAAOs1D,EAAOl1D,OACnDi1D,EAAO/R,OAASgS,EAAOp3C,KAAOm3C,EAAOn3C,IAAMo3C,EAAOhS,OAG7D,KAAKnU,EAAYC,GACb1lE,KAAK2nF,cAAcpP,eAAe6K,UAAU3d,EAAIC,GAChD1lE,KAAK2nF,cAAc7iB,UAAUue,WAC7BrjF,KAAK2nF,cAActP,kBACnBr4E,KAAKkrF,oBAAmB,GAG5B,OAAOnB,EAAoB8B,EAAaC,GAGpC,GADA9rF,KAAK2nF,cAActP,kBACT,MAANwT,EAAY,CACZ,IAAIpyF,EAAI,IAAIw+E,KAAK8O,MAAM/mF,KAAKgrF,eAAgBhrF,KAAKirF,gBACjDjrF,KAAK2nF,cAAcpP,eAAemT,MAAMjyF,EAAGA,GAC3CoyF,EAAKpyF,EAAEs6C,EACP+3C,EAAKryF,EAAEu6C,MACJ,CACH,IAAIv6C,EAAI,IAAIw+E,KAAK8O,MAAM8E,EAAIC,GAC3B9rF,KAAKkyE,YAAYgR,MAAM3K,eAAemT,MAAMjyF,EAAGA,GAC/CuG,KAAK2nF,cAAc7iB,UAAU8T,eAAeoO,aAAavtF,EAAGA,GAC5DuG,KAAK2nF,cAAcpP,eAAemT,MAAMjyF,EAAGA,GAC3CoyF,EAAKpyF,EAAEs6C,EACP+3C,EAAKryF,EAAEu6C,EAGXh0C,KAAK2nF,cAAcpP,eAAe6K,WAAWyI,GAAKC,GAClD9rF,KAAK2nF,cAAcpP,eAAe+K,QAAQyG,EAAa,IAAMx+E,KAAKmgE,IAClE1rE,KAAK2nF,cAAcpP,eAAe6K,UAAUyI,EAAIC,GAChD9rF,KAAK2nF,cAAc7iB,UAAUue,WAC7BrjF,KAAKkrF,oBAAmB,GAExBlrF,KAAKyrE,OAASse,EAGlB,MAAMhyB,EAAgB8zB,EAAaC,GAG/B,GADA9rF,KAAK2nF,cAActP,kBACT,MAANwT,EAAY,CACZ,IAAIpyF,EAAI,IAAIw+E,KAAK8O,MAAM/mF,KAAKgrF,eAAgBhrF,KAAKirF,gBACjDjrF,KAAK2nF,cAAcpP,eAAemT,MAAMjyF,EAAGA,GAC3CoyF,EAAKpyF,EAAEs6C,EACP+3C,EAAKryF,EAAEu6C,MACJ,CACH,IAAIv6C,EAAI,IAAIw+E,KAAK8O,MAAM8E,EAAIC,GAC3B9rF,KAAKkyE,YAAYgR,MAAM3K,eAAemT,MAAMjyF,EAAGA,GAC/CuG,KAAK2nF,cAAc7iB,UAAU8T,eAAeoO,aAAavtF,EAAGA,GAC5DuG,KAAK2nF,cAAcpP,eAAemT,MAAMjyF,EAAGA,GAC3CoyF,EAAKpyF,EAAEs6C,EACP+3C,EAAKryF,EAAEu6C,EAGXh0C,KAAK2nF,cAAcpP,eAAe6K,WAAWyI,GAAKC,GAClD9rF,KAAK2nF,cAAcpP,eAAegL,MAAMxrB,EAAQA,GAChD/3D,KAAK2nF,cAAcpP,eAAe6K,UAAUyI,EAAIC,GAChD9rF,KAAK2nF,cAAc7iB,UAAUue,WAE7BrjF,KAAKkrF,oBAAmB,GAIrB,aACH,IAAIzxF,EAAI,IAAIw+E,KAAK8O,MAAM/mF,KAAKgrF,eAAgBhrF,KAAKirF,gBAKjD,OAJAjrF,KAAK2nF,cAActP,kBAEnBr4E,KAAK2nF,cAAc7iB,UAAU8T,eAAe8S,MAAMjyF,EAAGA,GACrDuG,KAAKkyE,YAAYgR,MAAM3K,eAAeyO,aAAavtF,EAAGA,GAC/CA,EAAEs6C,EAGN,aACH,IAAIt6C,EAAI,IAAIw+E,KAAK8O,MAAM/mF,KAAKgrF,eAAgBhrF,KAAKirF,gBAIjD,OAHAjrF,KAAK2nF,cAActP,kBACnBr4E,KAAK2nF,cAAc7iB,UAAU8T,eAAe8S,MAAMjyF,EAAGA,GACrDuG,KAAKkyE,YAAYgR,MAAM3K,eAAeyO,aAAavtF,EAAGA,GAC/CA,EAAEu6C,EAKN,UACH3yC,MAAMumF,UACqB,MAAvB5nF,KAAK+rF,gBACL/rF,KAAK+rF,eAAepnD,OAAO3kC,KAAK6lC,eAIxC,mBAAmBmmD,EAA0BvC,GACzC,IAAIwC,EAA2B,GAC/B,IAAK,IAAI9B,KAAS6B,EAAYtL,OAAQ,CACUyJ,EAAMnnF,cAAN,MAC5BqnF,aAAarqF,OACzBisF,EAAgBloF,KAAK,CACjB3D,KAAMqpF,EACN7wF,MAAOuxF,IAKnB,OAAO8B,GC7uBT,MAAO,WAAoB,EAE7B,YAAYv0F,GAER2J,MAAM,SAAU3J,EAAQ,uFAExBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,UAIlD,IAAI2uE,EAA0BlsF,KAAKtI,OAAO4lB,UAAUC,QAAQ,SAE5Dvd,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,UAAWqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,UAAWqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,MAAOqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuzF,EAAkBrqF,EAAW,GAAGlJ,MAChCwzF,EAAkBtqF,EAAW,GAAGlJ,MAChC09B,EAAex0B,EAAW,GAAGlJ,MAC7B47C,EAAc1yC,EAAW,GAAGlJ,MAC5B26C,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAE/ByzF,EAAK,IAAI,GAAaF,EAASC,EAAS91D,EAAMke,EAAKjB,EAAOC,EAAQ97C,EAAO47B,KAAK+M,iBAAkBjoC,GACpGA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,sKAAsK,IAE3LrsF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7ForF,EACCpqF,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAG9B,OAFuBR,EAAE4K,cAAF,MAEbspF,iBAAiBv4C,EAAGC,EAAGk4C,KAElC,GAAO,EAAO,4CAA4C,IAEjElsF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBupF,WAAWx4C,EAAGC,EAAGtqB,EAAO04D,KAE5B,GAAO,EAAO,qJAAqJ,IAE1KpiF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBupF,WAAWx4C,EAAGC,EAAGtqB,KAErB,GAAO,EAAO,6HAA6H,IAElJ1pB,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBupF,WAAWx4C,EAAGC,EAAGtqB,KAErB,GAAO,EAAO,qPAAqP,IAE1Q1pB,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBupF,WAAWx4C,EAAGC,EAAGtqB,EAAO04D,KAE5B,GAAO,EAAO,2QAA2Q,IAEhSpiF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MAGlC,OAFuBR,EAAE4K,cAAF,MAEbwpF,SAASz4C,EAAGC,EAAGtqB,KAE1B,GAAO,EAAO,mSAAmS,IAExT1pB,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B8wB,EAAgB5nB,EAAW,GAAGlJ,MAGlC,OAFuBR,EAAE4K,cAAF,MAEbwpF,SAASz4C,EAAGC,EAAGtqB,EAAO,KAEjC,GAAO,EAAO,kMAAkM,IAGvN1pB,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBypF,QAAQ/iE,EAAO04D,KAEnB,GAAO,EAAO,qJAAqJ,IAE1KpiF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MACXR,EAAE4K,cAAF,MAEpBypF,QAAQ/iE,KAEZ,GAAO,EAAO,sPAAsP,IAE3Q1pB,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAmBzxF,EAAE4K,cAAF,MAEvB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,8DAA8D,KAOrF,MAAO,WAAqB,GAuB9B,YAAmBwpF,EAAgBC,EAAgBr2D,EAAqBke,EAAoBjB,EAAsBC,EAC9GvY,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFJ,KAAA6mD,UAAgB,KAAAC,UAAgB,KAAAr2D,OAAqB,KAAAke,MAAoB,KAAAjB,QAAsB,KAAAC,SAG9GxzC,KAAKgrF,eAAiB10D,EAAOid,EAAQ,EACrCvzC,KAAKirF,eAAiBz2C,EAAMhB,EAAS,EAErCxzC,KAAK6qF,kBAAoB,CACrB,CAAE92C,EAAGzd,EAAM0d,EAAGQ,GAAO,CAAET,EAAGzd,EAAM0d,EAAGQ,EAAMhB,GAAU,CAAEO,EAAGzd,EAAOid,EAAOS,EAAGQ,EAAMhB,GAAU,CAAEO,EAAGzd,EAAOid,EAAOS,EAAGQ,IAGnHx0C,KAAKqyC,SACLryC,KAAK4sF,oBA5BT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtC8pF,EAAmB,IAAI,GAAa7sF,KAAK0sF,QAAS1sF,KAAK2sF,QAAS3sF,KAAKs2B,KAAMt2B,KAAKw0C,IAAKx0C,KAAKuzC,MAAOvzC,KAAKwzC,OAAQxzC,KAAKkyE,YAAYj3C,YAAaiX,GAEhJ,IAAK,IAAIv6C,EAAI,EAAGA,EAAIqI,KAAK8sF,WAAW9qF,OAAQrK,IAAKk1F,EAAGC,WAAWn1F,GAAKqI,KAAK8sF,WAAWn1F,GAQpF,OAPAk1F,EAAGE,YAAYC,SAEf96C,EAAGlvC,cAAH,MAA4B6pF,EAE5BA,EAAG5J,SAASjjF,MACZ6sF,EAAGx6C,SAEIH,EAkBX,SAE8B,MAAtBlyC,KAAK2nF,gBACL3nF,KAAKitF,eACLjtF,KAAKkyE,YAAYgR,MAAMsD,SAASxmF,KAAK2nF,gBAKnC,eAEN,IAAIuF,EAAc,IAAIC,aAAantF,KAAK0sF,QAAU1sF,KAAK2sF,QAAU,EAAI,GACrE3sF,KAAK8sF,WAAa,IAAIK,aAAantF,KAAK0sF,QAAU1sF,KAAK2sF,QAAU,EAAI,GACrE,IAAIS,EAAmB,IAAIC,WAAWrtF,KAAK0sF,QAAU1sF,KAAK2sF,QAAU,GAEhEW,EAAQttF,KAAKuzC,MAAQvzC,KAAK0sF,QAC1Ba,EAAQvtF,KAAKwzC,OAASxzC,KAAK2sF,QAE/B,IAAK,IAAI34C,EAAI,EAAGA,EAAIh0C,KAAK2sF,QAAS34C,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI/zC,KAAK0sF,QAAS34C,IAAK,CACnC,IAAIzd,EAAOyd,EAAIu5C,EAAQttF,KAAKs2B,KACxBke,EAAMR,EAAIu5C,EAAQvtF,KAAKw0C,IACvBtyC,EAAmC,GAA1B6xC,EAAIC,EAAKh0C,KAAK0sF,SAC3BQ,EAAYhrF,GAASo0B,EACrB42D,EAAYhrF,EAAQ,GAAKsyC,EACzB04C,EAAYhrF,EAAQ,GAAKo0B,EAAOg3D,EAChCJ,EAAYhrF,EAAQ,GAAKsyC,EACzB04C,EAAYhrF,EAAQ,GAAKo0B,EACzB42D,EAAYhrF,EAAQ,GAAKsyC,EAAM+4C,EAC/BL,EAAYhrF,EAAQ,GAAKo0B,EAAOg3D,EAChCJ,EAAYhrF,EAAQ,GAAKsyC,EAAM+4C,EAE/B,IAAI7jE,GAASqqB,EAAIC,GAAK,EACtB9xC,EAAmC,IAA1B6xC,EAAIC,EAAKh0C,KAAK0sF,SACvB,IAAK,IAAI/0F,EAAI,EAAGA,EAAI,GAAIA,IACpBqI,KAAK8sF,WAAW5qF,EAAQvK,GAAK+xB,EAMzC,IAAI/xB,EAAY,EAEhB,IAAK,IAAIq8C,EAAI,EAAGA,EAAIh0C,KAAK2sF,QAAS34C,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI/zC,KAAK0sF,QAAS34C,IAAK,CAEnC,IAAI7xC,EAAiC,GAAxB6xC,EAAIC,EAAIh0C,KAAK0sF,SAC1B/0F,EAA6B,GAAxBo8C,EAAIC,EAAIh0C,KAAK0sF,SAClBU,EAAiBz1F,GAAKuK,EACtBkrF,EAAiBz1F,EAAI,GAAKuK,EAAQ,EAClCkrF,EAAiBz1F,EAAI,GAAKuK,EAAQ,EAClCkrF,EAAiBz1F,EAAI,GAAKuK,EAAQ,EAClCkrF,EAAiBz1F,EAAI,GAAKuK,EAAQ,EAClCkrF,EAAiBz1F,EAAI,GAAKuK,EAAQ,EAM1C,IAAIsrF,EAAe,IAAIvV,KAAKwV,OAAOP,GAAa,GAChDltF,KAAK+sF,YAAc,IAAI9U,KAAKwV,OAAOztF,KAAK8sF,YAAY,GACpD,IAAIY,EAAoB,IAAIzV,KAAKwV,OAAOL,GAAkB,GAAM,GAIhE,MAAMO,GAAW,IAAI1V,KAAK2V,UACrBnkF,aAAa,kBACV+jF,EACA,GAAGK,SAASH,GAEfjkF,aAAa,SACVzJ,KAAK+sF,YACL,GAEFe,EAAS7V,KAAK8V,OAAOC,KAAK,obAkB5B,wJAUJhuF,KAAK2nF,cAAgB,IAAI1P,KAAKgW,KAAKN,EAAUG,EAAQ,KAAM7V,KAAKiW,WAAWC,WAE3EnuF,KAAK2nF,cAAc3jF,SAASX,IAAIrD,KAAKs2B,KAAMt2B,KAAKw0C,KAI7C,iBAAiBT,EAAWC,EAAWk4C,GAC1C,IAAIv0F,EAA+B,IAA1Bo8C,EAAIC,EAAKh0C,KAAK0sF,SAGnBj0F,EAAIuH,KAAK8sF,WAAWn1F,GACpBy2F,EAAIpuF,KAAK8sF,WAAWn1F,EAAI,GACxBigD,EAAI53C,KAAK8sF,WAAWn1F,EAAI,GAGxBijC,GAFI56B,KAAK8sF,WAAWn1F,EAAI,GAEH,IAAI,EAAcu0F,IAEvCrqF,EAA8B,CAC9BwsF,IAAK9iF,KAAK04B,MAAU,IAAJxrC,GAChB61F,MAAO/iF,KAAK04B,MAAU,IAAJmqD,GAClBG,KAAMhjF,KAAK04B,MAAU,IAAJ2T,GACjB42C,IAAKrM,GAAYsM,iBAAuC,MAAtBljF,KAAK04B,MAAU,IAAJxrC,GAA2C,IAAtB8S,KAAK04B,MAAU,IAAJmqD,GAAmB7iF,KAAK04B,MAAU,IAAJ2T,KAK/G,OAFAhd,EAAI53B,cAAgBnB,EAEb+4B,EAKJ,SAASmZ,EAAWC,EAAWtqB,EAAwB04D,GAC1D,IACIpqF,EADAL,EAA+B,IAA1Bo8C,EAAIC,EAAKh0C,KAAK0sF,SAGvB,GAAoB,iBAAThjE,EAAmB,CAC1B,IAAIrT,EAAK8rE,GAAY0F,mBAAmBn+D,GACxC1xB,EAAIqe,EAAGqT,MACCrT,EAAG+rE,WAEXpqF,EAAI0xB,EAGR,IAAIjxB,IAAU,SAAJT,IAAiB,IAAM,IAC7Bo2F,IAAU,MAAJp2F,IAAe,GAAK,IAC1B4/C,GAAU,IAAJ5/C,GAAa,IAEnB02F,EAAK1uF,KAAK8sF,WAAWn1F,GACrBg3F,EAAK3uF,KAAK8sF,WAAWn1F,EAAI,GACzBi3F,EAAK5uF,KAAK8sF,WAAWn1F,EAAI,GAE7B,OAAO4T,KAAK6pD,IAAI38D,EAAIi2F,GAAM,IAAOnjF,KAAK6pD,IAAIg5B,EAAIO,GAAM,IAAOpjF,KAAK6pD,IAAIxd,EAAIg3C,GAAM,GAI3E,WAAW76C,EAAWC,EAAWtqB,EAAwB04D,GAC5D,IACIpqF,EADAL,EAA+B,IAA1Bo8C,EAAIC,EAAKh0C,KAAK0sF,SAGvB,GAAoB,iBAAThjE,EAAmB,CAC1B,IAAIrT,EAAK8rE,GAAY0F,mBAAmBn+D,GACxC1xB,EAAIqe,EAAGqT,MACM,MAAT04D,IAAeA,EAAQ/rE,EAAG+rE,YAE9BpqF,EAAI0xB,EACS,MAAT04D,IAAeA,EAAQ,GAG/B,IAAI3pF,IAAU,SAAJT,IAAiB,IAAM,IAC7Bo2F,IAAU,MAAJp2F,IAAe,GAAK,IAC1B4/C,GAAU,IAAJ5/C,GAAa,IAEvBgI,KAAK8sF,WAAWn1F,GAAKc,EACrBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAC1BpiF,KAAK8sF,WAAWn1F,EAAI,IAAMc,EAC1BuH,KAAK8sF,WAAWn1F,EAAI,IAAMy2F,EAC1BpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAC1BpiF,KAAK+sF,YAAYC,SAGd,QAAQtjE,EAAwB04D,GACnC,IAAIpqF,EAEJ,GAAoB,iBAAT0xB,EAAmB,CAC1B,IAAIrT,EAAK8rE,GAAY0F,mBAAmBn+D,GACxC1xB,EAAIqe,EAAGqT,MACP04D,EAAQ/rE,EAAG+rE,WAEXpqF,EAAI0xB,EAGR,IAAK,IAAIsqB,EAAI,EAAGA,EAAIh0C,KAAK2sF,QAAS34C,IAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI/zC,KAAK0sF,QAAS34C,IAAK,CACnC,IAAIp8C,EAA+B,IAA1Bo8C,EAAIC,EAAKh0C,KAAK0sF,SAEnBj0F,IAAU,SAAJT,IAAiB,IAAM,IAC7Bo2F,IAAU,MAAJp2F,IAAe,GAAK,IAC1B4/C,GAAU,IAAJ5/C,GAAa,IAEvBgI,KAAK8sF,WAAWn1F,GAAKc,EACrBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAC1BpiF,KAAK8sF,WAAWn1F,EAAI,IAAMc,EAC1BuH,KAAK8sF,WAAWn1F,EAAI,IAAMy2F,EAC1BpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAGlCpiF,KAAK+sF,YAAYC,SAGd,eAAej5C,EAAWC,EAAWv7C,EAAW21F,EAAWx2C,EAAWwqC,GACzE,IAAIzqF,EAA+B,IAA1Bo8C,EAAIC,EAAKh0C,KAAK0sF,SACvBj0F,GAAK,IACL21F,GAAK,IACLx2C,GAAK,IACL53C,KAAK8sF,WAAWn1F,GAAKc,EACrBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,GAAKigD,EACzB53C,KAAK8sF,WAAWn1F,EAAI,GAAKyqF,EACzBpiF,KAAK8sF,WAAWn1F,EAAI,GAAKc,EACzBuH,KAAK8sF,WAAWn1F,EAAI,GAAKy2F,EACzBpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAC1BpiF,KAAK8sF,WAAWn1F,EAAI,IAAMc,EAC1BuH,KAAK8sF,WAAWn1F,EAAI,IAAMy2F,EAC1BpuF,KAAK8sF,WAAWn1F,EAAI,IAAMigD,EAC1B53C,KAAK8sF,WAAWn1F,EAAI,IAAMyqF,EAC1BpiF,KAAK+sF,YAAYC,SAGd,SAASj5C,EAAWC,GACvB,IAAIr8C,EAA6B,IAAxBo8C,EAAIC,EAAIh0C,KAAK0sF,SACtB,OAA8C,MAAvCnhF,KAAKuF,MAA2B,IAArB9Q,KAAK8sF,WAAWn1F,IACa,IAA3C4T,KAAKuF,MAA+B,IAAzB9Q,KAAK8sF,WAAWn1F,EAAI,IAC/B4T,KAAKuF,MAA+B,IAAzB9Q,KAAK8sF,WAAWn1F,EAAI,KCtfrC,MAAO,WAAyB,EAElC,YAAYD,GAER2J,MAAM,cAAe3J,EAAQ,mGAE7BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,UAClDvd,KAAKmB,YAAa,EAElB,IAEI+qF,EAA0BlsF,KAAKtI,OAAO4lB,UAAUC,QAAQ,SAE5Dvd,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxDwpF,EACCpqF,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACPoK,cAAF,MAE5B,OAAO6mF,EAAGyC,iBAAiBzC,EAAGgF,UAAWhF,EAAGgF,UAAW3C,KAExD,GAAO,EAAO,0CAA0C,IAE/DlsF,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,IAC1DwpF,EACCpqF,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACPoK,cAAF,MAE5B,OAAO6mF,EAAGyC,iBAAiBzC,EAAGiF,YAAajF,EAAGiF,YAAa5C,KAE5D,GAAO,EAAO,0CAA0C,IAE/DlsF,KAAKyJ,aAAa,IAAI/I,EAAU,cAAeuO,EAC1CrW,IAEG,IACI8wF,EADqB9wF,EAAMS,OACK2J,cAAJ,MAMhCpK,EAAMA,MALQ,MAAV8wF,EAKUA,EAAOqF,YAJH,QAMnB,EAAOn1F,EAAWqQ,WAAW,EAAM,yBAE1CjK,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACzGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,aAErBD,EAAGmF,SAAS5M,KAEb,GAAO,EAAO,mIAAmI,IAExJpiF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACPoK,cAAF,MAE5B,IAAI6mF,EAAGC,cAAc,YAErB,OAAOD,EAAGoF,YAEX,GAAO,EAAO,mIAAmI,IAExJjvF,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,iBAErBD,EAAGqF,aAAaxlE,KAEjB,GAAO,EAAO,0GAA0G,IAE/H1pB,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,iBAErBD,EAAGqF,aAAaxlE,EAAO04D,KAExB,GAAO,EAAO,kIAAkI,IAEvJpiF,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,iBAErBD,EAAGqF,aAAaxlE,KAEjB,GAAO,EAAO,mOAAmO,IAExP1pB,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,iBAErBD,EAAGqF,aAAaxlE,EAAO04D,KAExB,GAAO,EAAO,6LAA6L,IAElNpiF,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,mBAErBD,EAAGsF,eAAezlE,KAEnB,GAAO,EAAO,2GAA2G,IAEhI1pB,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,mBAErBD,EAAGsF,eAAezlE,EAAO04D,KAE1B,GAAO,EAAO,mIAAmI,IAExJpiF,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,mBAErBD,EAAGsF,eAAezlE,EAAO04D,KAE1B,GAAO,EAAO,6LAA6L,IAElNpiF,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,oBAAqBqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChHyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8wB,EAAgB5nB,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,mBAErBD,EAAGsF,eAAezlE,KAEnB,GAAO,EAAO,mOAAmO,IAExP1pB,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,eAAgBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC26C,EAAgBzxC,EAAW,GAAGlJ,MAC9BixF,EAAwBzxF,EAAE4K,cAAF,MAExB6mF,EAAGC,cAAc,mBAErBD,EAAGuF,eAAe77C,KAEnB,GAAO,EAAO,uDAAuD,IAIhF,UAAU87C,EAAajN,GACnB,IAAI1oF,EAAW,MAAP21F,EAAc,MAAQA,EAAIz9E,SAAS,IAC3C,KAAOlY,EAAEsI,OAAS,GAAGtI,EAAI,IAAMA,EAE/B,IAAIwN,EAAIqE,KAAK04B,MAAc,IAARm+C,GAAaxwE,SAAS,IAGzC,OAFI1K,EAAElF,OAAS,IAAGkF,EAAI,IAAMA,GAErB,IAAMxN,EAAIwN,GAMnB,MAAgB,WAA0B,GAS5C,YAAY+zB,EAA0B4K,GAClCxkC,MAAM45B,EAAa4K,GARvB,KAAAgpD,UAAoB,QACpB,KAAAI,UAAoB,EAEpB,KAAAH,YAAsB,KACtB,KAAAQ,YAAsB,EACtB,KAAAP,YAAsB,GAMtB,SAASQ,GACLluF,MAAM4hF,SAASsM,GACfvvF,KAAK6uF,UAAYU,EAAIV,UACrB7uF,KAAKivF,UAAYM,EAAIN,UAErBjvF,KAAK8uF,YAAcS,EAAIT,YACvB9uF,KAAKsvF,YAAcC,EAAID,YACvBtvF,KAAK+uF,YAAcQ,EAAIR,YAG3B,SAAS3M,GAELpiF,KAAKivF,UAAY7M,EACjBpiF,KAAKsvF,YAAclN,EACnBpiF,KAAKqyC,SAGT,eAAe3oB,EAAwB04D,GAEnC,GAAoB,iBAAT14D,EAAmB,CAC1B,IAAI1xB,EAAImqF,GAAY0F,mBAAmBn+D,GACvC1pB,KAAK8uF,YAAc92F,EAAE0xB,MACrB1pB,KAAKsvF,YAAuB,MAATlN,EAAgBpqF,EAAEoqF,MAAQA,OAE7CpiF,KAAK8uF,YAAcplE,EACnB1pB,KAAKsvF,YAAclN,EAGvBpiF,KAAKqyC,SAIT,aAAa3oB,EAAwB04D,GAEjC,GAAoB,iBAAT14D,EAAmB,CAC1B,IAAI1xB,EAAImqF,GAAY0F,mBAAmBn+D,GACvC1pB,KAAK6uF,UAAY72F,EAAE0xB,MACnB1pB,KAAKivF,UAAqB,MAAT7M,EAAgBpqF,EAAEoqF,MAAQA,OAE3CpiF,KAAK6uF,UAAYnlE,EACjB1pB,KAAKivF,UAAY7M,EAIrBpiF,KAAKqyC,SAIT,eAAekB,GACXvzC,KAAK+uF,YAAcx7C,EACnBvzC,KAAKqyC,SAGF,iBAAiB3oB,EAAe04D,EAAe8J,GAElD,GAAa,MAATxiE,EAAe,OAAO,KAE1B,IAAIjxB,GAAa,SAARixB,IAAqB,GAC1B0kE,GAAa,MAAR1kE,IAAmB,EACxBkuB,EAAY,IAARluB,EAEJkR,EAAqB,IAAI,EAAcsxD,GAEvCrqF,EAA8B,CAC9BwsF,IAAK51F,EACL61F,MAAOF,EACPG,KAAM32C,EACN42C,IAAKrM,GAAYsM,iBAAiB/kE,IAKtC,OAFAkR,EAAI53B,cAAgBnB,EAEb+4B,GCjUT,MAAO,WAAoB,EAE7B,YAAYljC,GAER2J,MAAM,SAAU3J,EAAQ,SAExBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAIlDvd,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC42F,EAAa1tF,EAAW,GAAGlJ,MAC3B62F,EAAa3tF,EAAW,GAAGlJ,MAC3BH,EAAYqJ,EAAW,GAAGlJ,MAE1ByzF,EAAK,IAAI,GAAamD,EAAIC,EAAIh3F,EAAGf,EAAO47B,KAAK+M,iBAAkBjoC,GACnEA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,8EAA8E,IAEnGrsF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAYqJ,EAAW,GAAGlJ,MAC1BixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,cAErBD,EAAG6F,UAAUj3F,KAEd,GAAO,EAAO,kCAAkC,IAEvDuH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACZoK,cAAF,MAEvB,IAAI6mF,EAAGC,cAAc,aAErB,OAAOD,EAAGpxF,EAAIoxF,EAAGlC,cAAcpE,MAAMxvC,IAEtC,GAAO,EAAO,2BAA2B,IAEhD/zC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAmBzxF,EAAE4K,cAAF,MAEvB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,8DAA8D,KAOrF,MAAO,WAAqB,GAE9B,YAAmBssF,EAAmBC,EAAmBh3F,EACrDwiC,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFJ,KAAA2pD,KAAmB,KAAAC,KAAmB,KAAAh3F,IAGrDuH,KAAKgrF,eAAiBwE,EACtBxvF,KAAKirF,eAAiBwE,EAEtBzvF,KAAKqyC,SACLryC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAmB,IAAI,GAAarsF,KAAKwvF,GAAIxvF,KAAKyvF,GAAIzvF,KAAKvH,EAAGuH,KAAKkyE,YAAYj3C,YAAaiX,GAMhG,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,SAEIlyC,KAAK6qF,kBAAoB,GAEzB,IAAI8E,EAAapkF,KAAKmgE,GAAK,EAC3B,IAAK,IAAI/zE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIyqF,EAAQuN,EAAah4F,EACzBqI,KAAK6qF,kBAAkB9mF,KAAK,CACxBgwC,EAAG/zC,KAAKwvF,GAAKxvF,KAAKvH,EAAI8S,KAAKqgE,IAAIwW,GAC/BpuC,EAAGh0C,KAAKyvF,GAAKzvF,KAAKvH,EAAI8S,KAAKsgE,IAAIuW,KAGvCpiF,KAAK+qF,iBAAkB,EAEvB,IAAIqD,EAAwBpuF,KAAK2nF,cAEP,MAAtB3nF,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WACLT,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAEb,MAApBjvF,KAAK8uF,aACLV,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAGtElB,EAAE2B,WAAW/vF,KAAKwvF,GAAIxvF,KAAKyvF,GAAIzvF,KAAKvH,GACpC21F,EAAE4B,YAEoB,MAAlBhwF,KAAK6uF,WACLT,EAAE6B,UAKV,UAAUx3F,GACNuH,KAAKvH,EAAIA,EACTuH,KAAKqyC,SAGT,gBAEI,OAAOhxC,MAAM6oF,gBAIjB,cAAcn2C,EAAWC,GAErB,IAAKh0C,KAAK2nF,cAAc4D,YAAY/lD,SAASuO,EAAGC,GAAI,OAAO,EAE3D,IAAIv6C,EAAgB,IAAIw+E,KAAK8O,MAAMhzC,EAAGC,GAC9Bh0C,KAAK2nF,cAAc7iB,UAAU8T,eAEnCoO,aAAavtF,EAAGA,GAElB,IAAIgsE,EAAKhsE,EAAEs6C,EAAI/zC,KAAKwvF,GAChB9pB,EAAKjsE,EAAEu6C,EAAIh0C,KAAKyvF,GACpB,OAAOhqB,EAAKA,EAAKC,EAAKA,GAAM1lE,KAAKvH,EAAIuH,KAAKvH,GC3J5C,MAAO,WAAmB,EAE5B,YAAYf,GAER2J,MAAM,QAAS3J,EAAQ,SAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElD,IAAK,IAAI2yE,KAAa/N,GAAYE,iBAAkB,CAEhD,IAAI8N,EAAWhO,GAAYE,iBAAiB6N,GAExCz3F,EAAmB,IAAI,EAAcuH,MAMrC6B,EAA8B,CAC9BwsF,KALkB,SAAX8B,IAAwB,GAM/B7B,OALoB,MAAX6B,IAAsB,EAM/B5B,KALmB,IAAX4B,EAMR3B,IAAKrM,GAAYsM,iBAAiB0B,IAGtC13F,EAAEuK,cAAgBnB,EAElB7B,KAAKyJ,aAAa,IAAI/I,EAAUwvF,EAAWlwF,KACtCpH,IAAYA,EAAMA,MAAQH,IAAK,EAAMmB,EAAWsM,QAAQ,EACzD,aAAegqF,EAAY,KAAO/N,GAAYsM,iBAAiB0B,GAAY,SAAWhO,GAAYiO,cAAcD,KAGxHnwF,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAE7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,MAAOqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC/F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACCgB,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCy1F,EAAc9iF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACvC01F,EAAgB/iF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACzC21F,EAAehjF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAGxCoK,EAAyC,CACzCqrF,IAAKA,EACLC,MAAOA,EACPC,KAAMA,EACNC,IAAK,OAASH,EAAM,KAAOC,EAAQ,KAAOC,EAAO,KAGrDn2F,EAAE4K,cAAgBA,IAEnB,GAAO,EAAO,+HACf,IAENhD,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvD6L,EACCzM,IAC0BA,EAAW,GAAGlJ,MAErC,OAAO2S,KAAK6xD,MAAsB,SAAhB7xD,KAAKq6C,YAExB,GAAO,EAAM,wDACd,IAEN5lD,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,kBAAmBqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GyN,EACCzM,IAC0BA,EAAW,GAAGlJ,MAArC,IACI4S,EAAc1J,EAAW,GAAGlJ,MAQhC,OAPI4S,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KAMd,OAJSD,KAAK6xD,MAAM7xD,KAAKq6C,UAAY,IAAMp6C,IAAQA,GAIrC,KAHLD,KAAK6xD,MAAM7xD,KAAKq6C,UAAY,IAAMp6C,IAAQA,IAC1CD,KAAK6xD,MAAM7xD,KAAKq6C,UAAY,IAAMp6C,IAAQA,KAI3D,GAAO,EAAM,wNACd,IAENxL,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,kBAAmBqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC3G,CAAE/G,WAAY,kBAAmBqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GyN,EACCzM,IAC0BA,EAAW,GAAGlJ,MAArC,IACI4S,EAAc1J,EAAW,GAAGlJ,MAC5BytE,EAAcvkE,EAAW,GAAGlJ,MAMhC,GALI4S,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KACjB66D,EAAM,IAAGA,EAAM,GACfA,EAAM,MAAKA,EAAM,KAElBA,EAAM76D,EAAI,CACT,IAAIqnC,EAAIwzB,EACRA,EAAM76D,EACNA,EAAMqnC,EAOV,OAAO,OAJStnC,KAAK6xD,MAAM7xD,KAAKq6C,UAAYygB,EAAM76D,EAAM,IAAMA,GAIzC,KAHLD,KAAK6xD,MAAM7xD,KAAKq6C,UAAYygB,EAAM76D,EAAM,IAAMA,IAC9CD,KAAK6xD,MAAM7xD,KAAKq6C,UAAYygB,EAAM76D,EAAM,IAAMA,KAI/D,GAAO,EAAM,4OACd,IAENxL,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,GAC0BA,EAAW,GAAGlJ,MAEDoK,cAAgBwrF,KAErD,GAAO,EAAO,yCAAyC,IAE9DxuF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,aAAcqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1FoO,EACCpN,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCy3F,EAAoBvuF,EAAW,GAAGlJ,MAElCX,EAA8BG,EAAE4K,cAChCstF,EAA+BD,EAAGrtF,cAEtC,OAAQ/K,EAAEo2F,KAAOiC,EAAGjC,KAAOp2F,EAAEq2F,OAASgC,EAAGhC,OAASr2F,EAAEs2F,MAAQ+B,EAAG/B,OAEhE,GAAO,EAAO,0BAA0B,IAE/CvuF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEDoK,cAAgBqrF,KAErD,GAAO,EAAO,kDAAkD,IAEvEruF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEDoK,cAAgBsrF,OAErD,GAAO,EAAO,mDAAmD,IAExEtuF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEDoK,cAAgBurF,MAErD,GAAO,EAAO,mDAAmD,IAExEvuF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,MAAOqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC/F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyN,EACCzM,IAC0BA,EAAW,GAAGlJ,MAIrC,OAAY,MAHIkJ,EAAW,GAAGlJ,MAGJ,IAFVkJ,EAAW,GAAGlJ,MACdkJ,EAAW,GAAGlJ,QAG/B,GAAO,EAAM,+EAA+E,IAEnGoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,MAAOqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC/F,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpGwK,EACCxJ,IAC0BA,EAAW,GAAGlJ,MAArC,IACIH,EAAYqJ,EAAW,GAAGlJ,MAC1Bw1F,EAAYtsF,EAAW,GAAGlJ,MAC1Bg/C,EAAY91C,EAAW,GAAGlJ,MAC1BsO,EAAYpF,EAAW,GAAGlJ,MAC1B8wB,GAAqB,SAAJjxB,EAAoB,MAAJ21F,EAAkB,IAAJx2C,EAAYrsC,KAAK6xD,MAAU,IAAJl2D,IAAU0K,SAAS,IAC7F,KAAO8X,EAAM1nB,OAAS,GAAG0nB,EAAQ,IAAMA,EAEvC,MAAO,IAAMA,IAEd,GAAO,EAAM,mHAAmH,KC3MzI,MAAO,WAAqB,EAE9B,YAAYhyB,GAER2J,MAAM,UAAW3J,EAAQ,WAEzBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAIlDvd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC42F,EAAa1tF,EAAW,GAAGlJ,MAC3B62F,EAAa3tF,EAAW,GAAGlJ,MAC3B23F,EAAazuF,EAAW,GAAGlJ,MAC3B43F,EAAa1uF,EAAW,GAAGlJ,MAE3ByzF,EAAK,IAAI,GAAcmD,EAAIC,EAAIc,EAAIC,EAAI94F,EAAO47B,KAAK+M,iBAAkBjoC,GACzEA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,2FAA2F,IAE5GrsF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAYqJ,EAAW,GAAGlJ,MACNR,EAAE4K,cAAF,MAErBytF,WAAWh4F,KAEf,GAAO,EAAO,mCAAmC,IAExDuH,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCH,EAAYqJ,EAAW,GAAGlJ,MACNR,EAAE4K,cAAF,MAErB0tF,WAAWj4F,KAEf,GAAO,EAAO,mCAAmC,IAEpDuH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAoBzxF,EAAE4K,cAAF,MAExB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,+DAA+D,KAO9F,MAAO,WAAsB,GAE/B,YAAmBssF,EAAmBC,EAAmBc,EAAmBC,EACxEv1D,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFJ,KAAA2pD,KAAmB,KAAAC,KAAmB,KAAAc,KAAmB,KAAAC,KAGxExwF,KAAKgrF,eAAiBwE,EACtBxvF,KAAKirF,eAAiBwE,EAEtBzvF,KAAKqyC,SACLryC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAoB,IAAI,GAAcrsF,KAAKwvF,GAAIxvF,KAAKyvF,GAAIzvF,KAAKuwF,GAAIvwF,KAAKwwF,GAAIxwF,KAAKkyE,YAAYj3C,YAAaiX,GAM5G,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,SAEIlyC,KAAK6qF,kBAAoB,GAEzB,IAAI8E,EAAapkF,KAAKmgE,GAAG,EACzB,IAAI,IAAI/zE,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACvB,IAAIyqF,EAAQuN,EAAah4F,EACzBqI,KAAK6qF,kBAAkB9mF,KAAK,CACxBgwC,EAAG/zC,KAAKwvF,GAAKxvF,KAAKuwF,GAAGhlF,KAAKqgE,IAAIwW,GAC9BpuC,EAAGh0C,KAAKyvF,GAAKzvF,KAAKwwF,GAAGjlF,KAAKsgE,IAAIuW,KAItC,IAAIgM,EAAwBpuF,KAAK2nF,cAEP,MAAtB3nF,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WACLT,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAEb,MAApBjvF,KAAK8uF,aACLV,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAGtElB,EAAEuC,YAAY3wF,KAAKwvF,GAAIxvF,KAAKyvF,GAAIzvF,KAAKuwF,GAAIvwF,KAAKwwF,IAC9CpC,EAAE4B,YAEoB,MAAlBhwF,KAAK6uF,WACLT,EAAE6B,UAIV,WAAWx3F,GACPuH,KAAKuwF,GAAK93F,EACVuH,KAAKqyC,SAGT,WAAW55C,GACPuH,KAAKuwF,GAAK93F,EACVuH,KAAKqyC,SAGT,gBAEI,OAAOhxC,MAAM6oF,gBAIjB,cAAcn2C,EAAWC,GAErB,IAAKh0C,KAAK2nF,cAAc4D,YAAY/lD,SAASuO,EAAGC,GAAI,OAAO,EAE3D,IAAIv6C,EAAgB,IAAIw+E,KAAK8O,MAAMhzC,EAAGC,GAC9Bh0C,KAAK2nF,cAAc7iB,UAAU8T,eAEnCoO,aAAavtF,EAAGA,GAElB,IAAIgsE,EAAKhsE,EAAEs6C,EAAI/zC,KAAKwvF,GAChB9pB,EAAKjsE,EAAEu6C,EAAIh0C,KAAKyvF,GACpB,OAAOhqB,EAAGA,GAAIzlE,KAAKuwF,GAAGvwF,KAAKuwF,IAAM7qB,EAAGA,GAAI1lE,KAAKwwF,GAAGxwF,KAAKwwF,KAAO,GChK9D,MAAO,WAA2B,EAEpC,YAAY94F,GAER2J,MAAM,gBAAiB3J,EAAQ,2IAE/BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElD,IAAIksE,EAAY/xF,EAAO4lB,UAAUC,QAAQ,SAEzCvd,KAAKyJ,aAAa,IAAI/I,EAAU,SAAU+oF,EACrC7wF,IAEG,IAAIgiC,EAAqBhiC,EAAMS,OAC/BT,EAAMA,MAAQgiC,EAAI53B,cAAJ,SAEf,EAAOpJ,EAAWsM,QAAQ,EAAM,8CAEvClG,KAAKyJ,aAAa,IAAI/I,EAAU,SAAU+oF,EACrC7wF,IAEG,IAAIgiC,EAAqBhiC,EAAMS,OAC/BT,EAAMA,MAAQgiC,EAAI53B,cAAJ,SAEf,EAAOpJ,EAAWsM,QAAQ,EAAM,gDAOzC,MAAO,WAAmB,EAE5B,YAAYxO,GAER2J,MAAM,QAAS3J,EAAQ,yQAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,UAElD,IAAIqzE,EAAoBl5F,EAAO4lB,UAAUC,QAAQ,iBAC7CszE,EAAyB,IAAI,EAAUD,GACvCnH,EAAY/xF,EAAO4lB,UAAUC,QAAQ,SAGzCvd,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCyzF,EAAK,IAAI,GAAY30F,EAAO47B,KAAK+M,iBAAkBjoC,GACvDA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,sJAAsJ,IAE3KrsF,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAM,IAAI,EAAU1I,EAAO4lB,UAAUC,QAAQ,UAAWpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACpJ,KACCH,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8nF,EAAkB5+E,EAAW,GAAGlJ,MAEhCyzF,EAAK,IAAI,GAAY30F,EAAO47B,KAAK+M,iBAAkBjoC,GACvDA,EAAE4K,cAAF,MAA2BqpF,EAE3B,IAAK,IAAI3yF,KAAKgnF,EACV2L,EAAG/mD,IAAI5rC,EAAEd,SAGd,GAAO,EAAO,kOAAkO,IAEvPoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,SAAUqG,KAAM,IAAI,EAAUqpF,GAAYt6E,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KAE5H,KACCH,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC8nF,EAAkB5+E,EAAW,GAAGlJ,MAChCixF,EAA+BzxF,EAAE4K,cAAF,MAEnC,IAAK,IAAItJ,KAAKgnF,EACVmJ,EAAGvkD,IAAI5rC,EAAEd,SAGd,GAAO,EAAO,4CAA4C,IAEjEoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEjG2oF,EACC3nF,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAGlC,OAFmCR,EAAE4K,cAAF,MAEzB8tF,WAAW5uF,KAEtB,GAAO,EAAO,mHAAmH,IAExIlC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MACCR,EAAE4K,cAAF,MAEhC+tF,gBAAgB7uF,KAEpB,GAAO,EAAO,8IAA8I,IAEnKlC,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,QAASqG,KAAMqpF,EAAWt6E,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAE1F,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuxF,EAAuBroF,EAAW,GAAGlJ,MACNR,EAAE4K,cAAF,MAEhC2hC,OAAOwlD,KAEX,GAAO,EAAO,mFAAmF,IAGxG,IAAI6G,EAAiB,IAAI,EAAUvH,GAEnCzpF,KAAKwJ,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,CAC9D,CAAE3I,WAAY,QAASqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,SAAUpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAElHkwF,EACClvF,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuxF,EAAuBroF,EAAW,GAAGlJ,MACrCixF,EAA+BzxF,EAAE4K,cAAF,MAEnC,GAAI6mF,EAAGC,cAAc,uBAAkC,MAATK,EAAe,MAAO,GAEpE,IAAIzJ,EAA0BmJ,EAAGoH,oBAAoB9G,GAEjD95E,EAAkB,GACtB,IAAK,IAAIw5E,KAAMnJ,EACXrwE,EAAOtM,KAAK,CACR3D,KAAMqpF,EACN7wF,MAAOixF,IAKf,OAAOx5E,IAER,GAAO,EAAO,kFAAkF,IAEvGrQ,KAAKwJ,UAAU,IAAIzI,EAAO,oBAAqB,IAAI2B,EAAc,CAC7D,CAAE3I,WAAY,QAASqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrF,CAAE/G,WAAY,0BAA2BqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvH+vF,EACC/uF,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCs4F,EAAwBpvF,EAAW,GAAGlJ,MACtCu4F,EAAmCrvF,EAAW,GAAGlJ,MACjDixF,EAA+BzxF,EAAE4K,cAAF,MAC/BouF,EAAyCF,EAAOluF,cAAP,MAE7C,IAAI6mF,EAAGC,cAAc,sBAErB,OAAOD,EAAGwH,qBAAqBD,EAAcR,EAAmBO,KAEjE,GAAO,EAAO,ySAEmG,IAGxHnxF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACAoK,cAAF,MAEnC,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGnJ,OAAO1+E,SAElB,GAAO,EAAO,iEAAiE,IAEtFhC,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD6N,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACAoK,cAAF,MAE/B6mF,EAAGC,cAAc,UAErBD,EAAGyH,qBAEJ,GAAO,EAAO,0EAA0E,IAE/FtxF,KAAKwJ,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,IAC9D6N,EACCzO,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACAoK,cAAF,MAE/B6mF,EAAGC,cAAc,UAErBD,EAAG0H,oBAEJ,GAAO,EAAO,kEAAkE,IAG/E9H,EAAWjgF,UAAU,IAAIzI,EAAO,qBAAsB,IAAI2B,EAAc,CAC5E,CAAE3I,WAAY,QAASqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrFkwF,EACClvF,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCozF,EADuBlqF,EAAW,GAAGlJ,MACJoK,cAAN,MAC3B6mF,EAAkBzxF,EAAE4K,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,sBAErB,OAAOD,EAAG2H,mBAAmBxF,EAAavC,KAE3C,GAAO,EAAO,4EAA4E,IAEjGzpF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAkBzxF,EAAE4K,cAAF,MAEtB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,2GAA2G,KAOlI,MAAO,WAAoB,GAI7B,YAAY+3B,EAA0B4K,GAClCxkC,MAAM45B,EAAa4K,GAHvB,KAAA66C,OAA0B,GAItB1gF,KAAK2nF,cAAgB,IAAI1P,KAAKsO,UAC9BvmF,KAAKkyE,YAAYgR,MAAMsD,SAASxmF,KAAK2nF,eACrC3nF,KAAK4sF,oBAIT,gBAAgB1qF,GACZ,GAAIA,EAAQ,GAAKA,GAASlC,KAAK0gF,OAAO1+E,OAElC,YADAhC,KAAKkyE,YAAYj3C,YAAY6J,eAAe,gDAAkD5iC,EAAQ,KAI1G,IAAIioF,EAAQnqF,KAAK0gF,OAAOx+E,GACxBlC,KAAK2kC,OAAOwlD,GAGhB,WAAWjoF,GACP,KAAIA,EAAQ,GAAKA,GAASlC,KAAK0gF,OAAO1+E,QAItC,OAAOhC,KAAK0gF,OAAOx+E,GAHflC,KAAKkyE,YAAYj3C,YAAY6J,eAAe,gDAAkD5iC,EAAQ,KAM9G,QAAQa,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtC0uF,EAA+B,IAAI,GAAYzxF,KAAKkyE,YAAYj3C,YAAaiX,GACjFA,EAAGlvC,cAAH,MAA4ByuF,EAE5B,IAAK,IAAIv/C,KAAMlyC,KAAK0gF,OAAQ,CACxB,IAEIgR,EAF2Bx/C,EAAGlvC,cAAH,MAES0nF,QAAex4C,EAAGhvC,OACtDyuF,EAA+BD,EAAO1uF,cAAP,MAEnCyuF,EAAgB/Q,OAAO38E,KAAK2tF,GAE5BC,EAAgB5F,eAAiB0F,EAEhBA,EAAgB9J,cAAenB,SAASmL,EAAgBhK,eAO7E,OAHA8J,EAAgBxO,SAASjjF,MACzByxF,EAAgBp/C,SAETH,EAGX,eAAehZ,GACXl5B,KAAKsnF,YAAcpuD,EAEnB,IAAK,IAAIixD,KAASnqF,KAAK0gF,OAAQ,CACQyJ,EAAMnnF,cAAN,MAChCskF,YAAcpuD,GAMzB,IAAIixD,GAEA,IAAIzC,EAAwCyC,EAAMnnF,cAAN,MAE5C,GAAI0kF,EAAYH,YAEZ,YADAvnF,KAAKkyE,YAAYj3C,YAAY6J,eAAe,sEAIhD,GAAI9kC,KAAK4xF,qBAAqBzH,GAC1B,OAGJnqF,KAAK0gF,OAAO38E,KAAKomF,GAEiB,MAA9BzC,EAAYqE,gBACZrE,EAAYqE,eAAepnD,OAAOwlD,GAGtCzC,EAAYqE,eAAiB/rF,KAE7B,IAAI6xF,GAAU,IAAI5Z,KAAK+K,QAASC,SAASjjF,KAAK2nF,cAAc7iB,UAAU8T,gBACtEiZ,EAAQC,SACRpK,EAAYC,cAAcpP,eAAe5hC,QAAQk7C,EAAQl7C,QAAQ32C,KAAKkyE,YAAYgR,MAAM3K,iBACxFmP,EAAYC,cAAc7iB,UAAUue,WAEnBrjF,KAAK2nF,cAAenB,SAASkB,EAAYC,eAC1DD,EAAYC,cAActP,kBAE1B,IAAI0Z,EAAe,EACfC,EAAe,EAEnB,IAAK,IAAI7H,KAASnqF,KAAK0gF,OAAQ,CAC3B,IAAImJ,EAA+BM,EAAMnnF,cAAN,MACnC+uF,GAAQlI,EAAGF,aACXqI,GAAQnI,EAAGD,aAGf,IAAI71C,EAAIg+C,EAAO/xF,KAAK0gF,OAAO1+E,OACvBgyC,EAAIg+C,EAAOhyF,KAAK0gF,OAAO1+E,OAE3BhC,KAAK2nF,cAActP,kBACnB,IAAIyQ,EAAiB9oF,KAAK2nF,cAAc/O,eAAeoO,aAAa,IAAI/O,KAAK8O,MAAMhzC,EAAGC,IAEtFh0C,KAAKgrF,eAAiBlC,EAAG/0C,EACzB/zC,KAAKirF,eAAiBnC,EAAG90C,EAGtB,mBACH,IAAI9xC,EAAgB,EACpB,IAAK,IAAIioF,KAASnqF,KAAK0gF,OACnB1gF,KAAKiyF,WAAW9H,EAAOjoF,KAE3BlC,KAAK0gF,OAAS,GAGX,OAAOyJ,GACV,IAAIjoF,EAAQlC,KAAK0gF,OAAO/7E,QAAQwlF,GAC5BjoF,GAAS,IACTlC,KAAK0gF,OAAOxpE,OAAOhV,EAAO,GAE1BlC,KAAKiyF,WAAW9H,EAAOjoF,IAIvB,WAAWioF,EAAsBjoF,GACrC,IAAIwlF,EAA2ByC,EAAMnnF,cAAN,MAE3B8hE,GAAY,IAAImT,KAAK+K,QAASC,SAASyE,EAAYC,cAAc7iB,UAAU8T,gBAE9D54E,KAAK2nF,cAAeuK,cAAchwF,GAEnD,IAAIiwF,GAAwB,IAAIla,KAAK+K,QAASC,SAASjjF,KAAKkyE,YAAYgR,MAAM3K,gBAC9E4Z,EAAsBL,SACtBpK,EAAYC,cAAcpP,eAAe4K,WACzCuE,EAAYC,cAAcpP,eAAe7wC,OAAOo9B,EAAUnuB,QAAQw7C,IAClEzK,EAAYC,cAAc7iB,UAAUue,WACpCrjF,KAAKkyE,YAAYgR,MAAMsD,SAASkB,EAAYC,eAC5CD,EAAYC,cAActP,kBAC1BqP,EAAYqE,eAAiB,KAK1B,UAGA,UACH/rF,KAAKuxF,kBACLlwF,MAAMumF,UAGH,kBACH,IAAK,IAAIuC,KAASnqF,KAAK0gF,OAAOl0E,MAAM,GAAI,CACD29E,EAAMnnF,cAAN,MAChC4kF,UAEP5nF,KAAK0gF,OAAS,GAIlB,aAAagH,GACT,IAAK,IAAIyC,KAASnqF,KAAK0gF,OAAQ,CAE3B,GADmCyJ,EAAMnnF,cAAN,MAC5BqnF,aAAa3C,GAChB,OAAO,EAGf,OAAO,EAGX,mBAAmB9kD,GACf,IAAK,IAAIunD,KAASnqF,KAAK0gF,OAAQ,CACQyJ,EAAMnnF,cAAN,MAChCkoF,mBAAmBtoD,IAI9B,cAAcmR,EAAWC,GACrB,IAAK,IAAIm2C,KAASnqF,KAAK0gF,OAAQ,CAE3B,GADmCyJ,EAAMnnF,cAAN,MAC5B+kF,cAAch0C,EAAGC,GACpB,OAAO,EAGf,OAAO,EAGX,oBAAoBm2C,GAEhB,IAAI8B,EAAmC,GACnCvE,EAAwCyC,EAAMnnF,cAAN,MAE5C,IAAK,IAAItJ,KAAKsG,KAAK0gF,OAAQ,CACYhnF,EAAEsJ,cAAF,MAC5BqnF,aAAa3C,IAChBuE,EAAgBloF,KAAKrK,GAI7B,OAAOuyF,EAIX,qBAAqBmF,EAA2BR,EAC5CO,GAEA,IAAIiB,EAA0B,GAE1BC,EAAqD,IAAIvyF,IAE7D,IAAK,IAAIwyF,KAAUtyF,KAAK0gF,OAAQ,CAC5B,IAAI6R,EAAyCD,EAAOtvF,cAAP,MAC7C,IAAK,IAAIwvF,KAAUpB,EAAa1Q,OAAQ,CACpC,IAAI+R,EAAyCD,EAAOxvF,cAAP,MAC7C,GAAIuvF,EAAalI,aAAaoI,GAAe,CAEzC,IAAKtB,GAAwE,MAA7CkB,EAAwB75F,IAAIi6F,GAAuB,CAC/EJ,EAAwBhvF,IAAIovF,GAAc,GAC1C,IAAI73D,EAAqB,IAAI,EAAqBg2D,GAClDh2D,EAAIrpB,4BAEJqpB,EAAI53B,cAAJ,OAA8BuvF,EAAa1sD,cAC3CjL,EAAI53B,cAAJ,OAA8ByvF,EAAa5sD,cAC3CusD,EAAeruF,KAAK,CAChB3D,KAAMwwF,EACNh4F,MAAOgiC,IAIf,GAAIu2D,EACA,QAMhB,OAAOiB,EAIX,qBAAqBM,GACjB,IAAI/P,EAAK+P,EAAW1vF,cAAX,MACT,GAAI2/E,aAAc,GAAa,CAC3B,GAAIA,GAAM3iF,KAEN,OADAA,KAAKkyE,YAAYj3C,YAAY6J,eAAe,iDACrC,EAEP,IAAK,IAAIqlD,KAASxH,EAAGjC,OACjB,GAAI1gF,KAAK4xF,qBAAqBzH,GAC1B,OAAO,EAKvB,OAAO,GC7gBT,MAAO,WAAiB,EAE1B,YAAYzyF,GACR2J,MAAM,MAAO3J,EAAQ,iHAErBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKyJ,aAAa,IAAI/I,EAAU,UAAW4K,EAAsB1S,IAAYA,EAAMA,MAAQ,YAAa,EAAMgB,EAAWsM,QAAQ,EAAM,KACvIlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa4K,EAAsB1S,IAAYA,EAAMA,MAAQ,cAAe,EAAMgB,EAAWsM,QAAQ,EAAM,KAC3IlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa4K,EAAsB1S,IAAYA,EAAMA,MAAQ,cAAe,EAAMgB,EAAWsM,QAAQ,EAAM,KAC3IlG,KAAKyJ,aAAa,IAAI/I,EAAU,aAAc4K,EAAsB1S,IAAYA,EAAMA,MAAQ,eAAgB,EAAMgB,EAAWsM,QAAQ,EAAM,KAC7IlG,KAAKyJ,aAAa,IAAI/I,EAAU,QAAS4K,EAAsB1S,IAAYA,EAAMA,MAAQ,UAAW,EAAMgB,EAAWsM,QAAQ,EAAM,KACnIlG,KAAKyJ,aAAa,IAAI/I,EAAU,QAAS4K,EAAsB1S,IAAYA,EAAMA,MAAQ,MAAO,EAAMgB,EAAWsM,QAAQ,EAAM,KAC/HlG,KAAKyJ,aAAa,IAAI/I,EAAU,QAAS4K,EAAsB1S,IAAYA,EAAMA,MAAQ,UAAW,EAAMgB,EAAWsM,QAAQ,EAAM,KACnIlG,KAAKyJ,aAAa,IAAI/I,EAAU,MAAO4K,EAAsB1S,IAAYA,EAAMA,MAAQ,QAAS,EAAMgB,EAAWsM,QAAQ,EAAM,KAC/HlG,KAAKyJ,aAAa,IAAI/I,EAAU,OAAQ4K,EAAsB1S,IAAYA,EAAMA,MAAQ,YAAa,EAAMgB,EAAWsM,QAAQ,EAAM,KACpIlG,KAAKyJ,aAAa,IAAI/I,EAAU,SAAU4K,EAAsB1S,IAAYA,EAAMA,MAAQ,WAAY,EAAMgB,EAAWsM,QAAQ,EAAM,KACrIlG,KAAKyJ,aAAa,IAAI/I,EAAU,WAAY4K,EAAsB1S,IAAYA,EAAMA,MAAQ,aAAc,EAAMgB,EAAWsM,QAAQ,EAAM,KACzIlG,KAAKyJ,aAAa,IAAI/I,EAAU,YAAa4K,EAAsB1S,IAAYA,EAAMA,MAAQ,cAAe,EAAMgB,EAAWsM,QAAQ,EAAM,KAC3IlG,KAAKyJ,aAAa,IAAI/I,EAAU,SAAU4K,EAAsB1S,IAAYA,EAAMA,MAAQ,WAAY,EAAMgB,EAAWsM,QAAQ,EAAM,KACrIlG,KAAKyJ,aAAa,IAAI/I,EAAU,OAAQ4K,EAAsB1S,IAAYA,EAAMA,MAAQ,WAAY,EAAMgB,EAAWsM,QAAQ,EAAM,KACnIlG,KAAKyJ,aAAa,IAAI/I,EAAU,OAAQ4K,EAAsB1S,IAAYA,EAAMA,MAAQ,WAAY,EAAMgB,EAAWsM,QAAQ,EAAM,KACnIlG,KAAKyJ,aAAa,IAAI/I,EAAU,OAAQ4K,EAAsB1S,IAAYA,EAAMA,MAAQ,QAAS,EAAMgB,EAAWsM,QAAQ,EAAM,KAEhIlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,6BCvB/B,MAAO,WAAqB,EAE9B,YAAY7Z,GAER2J,MAAM,UAAW3J,EAAQ,mFAEzBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAIlDvd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC5G,CAAE/G,WAAY,SAAUqG,KAAM,IAAI,EAAU6O,GAAsBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpH,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+5F,EAAwB7wF,EAAW,GAAGlJ,MACtCqzE,EAAkBnqE,EAAW,GAAGlJ,MAEhCg6F,EAAyB,GAC7B3mB,EAAOl9D,QAAQvL,GAAKovF,EAAa7uF,KAAKP,EAAE5K,QAExC,IAAIi6F,EAAK,IAAI,GAAcD,EAAcD,EAAcj7F,EAAO47B,KAAK+M,iBAAkBjoC,GACrFA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,0HAA0H,IAE/I7yF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC5G,CAAE/G,WAAY,SAAUqG,KAAM,IAAI,EAAU6O,GAAsBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACtI,KACCH,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+5F,EAAwB7wF,EAAW,GAAGlJ,MACtCqzE,EAAkBnqE,EAAW,GAAGlJ,MAEhCg6F,EAAyB,GAC7B3mB,EAAOl9D,QAAQvL,GAAKovF,EAAa7uF,KAAKP,EAAE5K,QAExC,IAAIi6F,EAAK,IAAI,GAAcD,EAAcD,EAAcj7F,EAAO47B,KAAK+M,iBAAkBjoC,GACrFA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,6GAA6G,IAElI7yF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,eAAgBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC5G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+5F,EAAwB7wF,EAAW,GAAGlJ,MAItCi6F,EAAK,IAAI,GAFgB,GAEYF,EAAcj7F,EAAO47B,KAAK+M,iBAAkBjoC,GACrFA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,8CAA8C,IAGnE7yF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BixF,EAAoBzxF,EAAE4K,cAAF,MAEpB6mF,EAAGC,cAAc,aAErBD,EAAGiJ,SAAS/+C,EAAGC,KAEhB,GAAO,EAAO,wCAAwC,IAE7Dh0C,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAM,IAAI,EAAU6O,GAAsBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpH,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCqzE,EAAkBnqE,EAAW,GAAGlJ,MAChCixF,EAAoBzxF,EAAE4K,cAAF,MAExB,IAAI6mF,EAAGC,cAAc,aAIrB,IAAI,IAAInyF,EAAI,EAAGA,EAAIs0E,EAAOjqE,OAAS,EAAGrK,GAAK,EACnCkyF,EAAGiJ,SAAS7mB,EAAOt0E,GAAGiB,MAAOqzE,EAAOt0E,EAAE,GAAGiB,MAAOjB,GAAKs0E,EAAOjqE,OAAQ,KAG7E,GAAO,EAAO,uIAAuI,IAExJhC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAoBzxF,EAAE4K,cAAF,MAExB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,+DAA+D,KAO1F,MAAO,WAAsB,GAE/B,YAAY+oE,EAA0B0mB,EAClC13D,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFe,KAAA8sD,eAIlC,IAAIZ,EAAO,EAAOC,EAAO,EACzBhyF,KAAK6qF,kBAAoB,GAEzB,IAAK,IAAIlzF,EAAI,EAAGA,EAAIs0E,EAAOjqE,QAAS,CAChC,IAAI+xC,EAAIk4B,EAAOt0E,KACXq8C,EAAIi4B,EAAOt0E,KACfo6F,GAAQh+C,EACRi+C,GAAQh+C,EACRh0C,KAAK6qF,kBAAkB9mF,KAAK,CAAEgwC,EAAGA,EAAGC,EAAGA,IAGvCi4B,EAAOjqE,OAAS,IAChBhC,KAAKgrF,eAAiB+G,EAAO/xF,KAAK6qF,kBAAkB7oF,OACpDhC,KAAKirF,eAAiB+G,EAAOhyF,KAAK6qF,kBAAkB7oF,QAGpD2wF,IACA3yF,KAAK8uF,YAAc,KAGvB9uF,KAAKqyC,SACLryC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAoB,IAAI,GAAc,GAAIrsF,KAAK2yF,aAAc3yF,KAAKkyE,YAAYj3C,YAAaiX,GAM/F,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,SAEI,IAAIk8C,EAAwBpuF,KAAK2nF,cAkBjC,GAhB0B,MAAtB3nF,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WAAqB7uF,KAAK2yF,cAC/BvE,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAEb,MAApBjvF,KAAK8uF,aACLV,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAGnEtvF,KAAK6qF,kBAAkB7oF,OAAS,EAAE,CACjCosF,EAAE3kB,OAAOzpE,KAAK6qF,kBAAkB,GAAG92C,EAAG/zC,KAAK6qF,kBAAkB,GAAG72C,GAChE,IAAK,IAAIr8C,EAAI,EAAGA,EAAIqI,KAAK6qF,kBAAkB7oF,OAAQrK,IAC/Cy2F,EAAE2E,OAAO/yF,KAAK6qF,kBAAkBlzF,GAAGo8C,EAAG/zC,KAAK6qF,kBAAkBlzF,GAAGq8C,GAIpEh0C,KAAK2yF,cACLvE,EAAE4B,YAGgB,MAAlBhwF,KAAK6uF,WAAqB7uF,KAAK2yF,cAC/BvE,EAAE6B,UAIV,SAASl8C,EAAWC,EAAW3B,GAAkB,GAC7C,IAAI54C,EAAI,IAAIw+E,KAAK8O,MAAMhzC,EAAGC,GAC1Bh0C,KAAK2nF,cAAc7iB,UAAU8T,eAAeoO,aAAavtF,EAAGA,GAC5DuG,KAAK6qF,kBAAkB9mF,KAAK,CAAEgwC,EAAGt6C,EAAEs6C,EAAGC,EAAGv6C,EAAEu6C,IAC3Ch0C,KAAK+qF,iBAAkB,EACnB14C,GAAQryC,KAAKqyC,SAGrB,SAAS0B,EAAWC,EAAW9xC,GACf,GAATA,GAAuB,GAATA,IACblC,KAAK6qF,kBAAkB3oF,GAAS,CAAC6xC,EAAGA,EAAGC,EAAGA,GAC1Ch0C,KAAK+qF,iBAAkB,EACvB/qF,KAAKqyC,UAIb,UAAU22B,EAAYC,EAAYC,EAAYC,GAC1CnpE,KAAK6qF,kBAAoB,CAAC,CAAC92C,EAAGi1B,EAAGh1B,EAAGi1B,GAAK,CAACl1B,EAAGm1B,EAAGl1B,EAAGm1B,IACnDnpE,KAAK+qF,iBAAkB,EACvB/qF,KAAKqyC,UCvNP,MAAO,WAAuB,EAEhC,YAAY36C,GAER2J,MAAM,YAAa3J,EAAQ,YAE3BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAIlDvd,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,MAAOqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC09B,EAAex0B,EAAW,GAAGlJ,MAC7B47C,EAAc1yC,EAAW,GAAGlJ,MAC5B26C,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAE/ByzF,EAAK,IAAI,GAAgB/1D,EAAMke,EAAKjB,EAAOC,EAAQ97C,EAAO47B,KAAK+M,iBAAkBjoC,GACrFA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,qHAAqH,IAEtIrsF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpG,KACHgB,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACToK,cAAF,MACtBuwC,EAAgBzxC,EAAW,GAAGlJ,MAE9BixF,EAAGC,cAAc,cAErBD,EAAGt2C,MAAQA,EAAQs2C,EAAGlC,cAAcpE,MAAMxvC,EAC1C81C,EAAGx3C,YAEJ,GAAO,EAAO,mCAAmC,IAEpDryC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACHgB,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACToK,cAAF,MACtBwwC,EAAiB1xC,EAAW,GAAGlJ,MAE/BixF,EAAGC,cAAc,eAErBD,EAAGr2C,OAASA,EAASq2C,EAAGlC,cAAcpE,MAAMvvC,EAC5C61C,EAAGx3C,YAEJ,GAAO,EAAO,iCAAiC,IAEtDryC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACToK,cAAF,MAE1B,IAAI6mF,EAAGC,cAAc,YAErB,OAAOD,EAAGt2C,MAAQs2C,EAAGlC,cAAcpE,MAAMxvC,IAE1C,GAAO,EAAO,2BAA2B,IAEhD/zC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACToK,cAAF,MAE1B,IAAI6mF,EAAGC,cAAc,aAErB,OAAOD,EAAGr2C,OAASq2C,EAAGlC,cAAcpE,MAAMvvC,IAE3C,GAAO,EAAO,yBAAyB,IAE1Ch0C,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAsBzxF,EAAE4K,cAAF,MAE1B,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,iEAAiE,KAO5F,MAAO,WAAwB,GAEjC,YAAmBozB,EAAqBke,EAAoBjB,EAAsBC,EAC9EvY,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFJ,KAAAvP,OAAqB,KAAAke,MAAoB,KAAAjB,QAAsB,KAAAC,SAG9ExzC,KAAKgrF,eAAiB10D,EAAOid,EAAQ,EACrCvzC,KAAKirF,eAAiBz2C,EAAMhB,EAAS,EAErCxzC,KAAKqyC,SAELryC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAsB,IAAI,GAAgBrsF,KAAKs2B,KAAMt2B,KAAKw0C,IAAKx0C,KAAKuzC,MAAOvzC,KAAKwzC,OAAQxzC,KAAKkyE,YAAYj3C,YAAaiX,GAM1H,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAGX,SAEIlyC,KAAK6qF,kBAAoB,CACrB,CAAE92C,EAAG/zC,KAAKs2B,KAAM0d,EAAGh0C,KAAKw0C,KAAO,CAAET,EAAG/zC,KAAKs2B,KAAM0d,EAAGh0C,KAAKw0C,IAAMx0C,KAAKwzC,QACjE,CAAEO,EAAG/zC,KAAKs2B,KAAOt2B,KAAKuzC,MAAOS,EAAGh0C,KAAKw0C,IAAMx0C,KAAKwzC,QAAU,CAAEO,EAAG/zC,KAAKs2B,KAAOt2B,KAAKuzC,MAAOS,EAAGh0C,KAAKw0C,MAGpG,IAAI45C,EAAwBpuF,KAAK2nF,cAEP,MAAtB3nF,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WACLT,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAEb,MAApBjvF,KAAK8uF,aACLV,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAGtElB,EAAE3kB,OAAOzpE,KAAKs2B,KAAMt2B,KAAKw0C,KACzB45C,EAAE2E,OAAO/yF,KAAKs2B,KAAOt2B,KAAKuzC,MAAOvzC,KAAKw0C,KACtC45C,EAAE2E,OAAO/yF,KAAKs2B,KAAOt2B,KAAKuzC,MAAOvzC,KAAKw0C,IAAMx0C,KAAKwzC,QACjD46C,EAAE2E,OAAO/yF,KAAKs2B,KAAMt2B,KAAKw0C,IAAMx0C,KAAKwzC,QACpC46C,EAAE4B,YAEoB,MAAlBhwF,KAAK6uF,WACLT,EAAE6B,WCxKR,MAAO,WAAwB,EAEjC,YAAYv4F,GACR2J,MAAM,aAAc3J,EAAQ,CACxB,CACI0I,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,kBAIpBiG,KAAKD,cAAgB,yEChBvB,MAAO,WAA8B,EAEvC,YAAYrI,GAER2J,MAAM,mBAAoB3J,EAAQ,mCAElCsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,mBAAoB,IAAI2B,EAAc,CAC5D,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,MAAOqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC09B,EAAex0B,EAAW,GAAGlJ,MAC7B47C,EAAc1yC,EAAW,GAAGlJ,MAC5B26C,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAC/BkuE,EAAiBhlE,EAAW,GAAGlJ,MAE/ByzF,EAAK,IAAI,GAAuB/1D,EAAMke,EAAKjB,EAAOC,EAAQszB,EAAQpvE,EAAO47B,KAAK+M,iBAAkBjoC,GACpGA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,kIAAkI,IAEvJrsF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACFoK,cAAF,MAEjC,IAAI6mF,EAAGC,cAAc,YAErB,OAAOD,EAAGt2C,MAAQs2C,EAAGlC,cAAcpE,MAAMxvC,IAE1C,GAAO,EAAO,2BAA2B,IAEhD/zC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACFoK,cAAF,MAEjC,IAAI6mF,EAAGC,cAAc,aAErB,OAAOD,EAAGr2C,OAASq2C,EAAGlC,cAAcpE,MAAMvvC,IAE3C,GAAO,EAAO,yBAAyB,IAE1Ch0C,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACzDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACFoK,cAAF,MAEjC,IAAI6mF,EAAGC,cAAc,aAErB,OAAOD,EAAG/iB,OAAS+iB,EAAGlC,cAAcpE,MAAMvvC,IAE3C,GAAO,EAAO,8BAA8B,IAE/Ch0C,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAA6BzxF,EAAE4K,cAAF,MAEjC,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,wEAAwE,KAOnG,MAAO,WAA+B,GAExC,YAAmBozB,EAAqBke,EAAoBjB,EAAsBC,EAAuBszB,EACrG7rC,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAFJ,KAAAvP,OAAqB,KAAAke,MAAoB,KAAAjB,QAAsB,KAAAC,SAAuB,KAAAszB,SAGrG9mE,KAAKgrF,eAAiB10D,EAAOid,EAAQ,EACrCvzC,KAAKirF,eAAiBz2C,EAAMhB,EAAS,EAErCxzC,KAAK6qF,kBAAoB,GAEzB7qF,KAAKgzF,gBAAgB18D,EAAOwwC,EAAQtyB,EAAMsyB,EAAQv7D,KAAKmgE,GAAG,GAC1D1rE,KAAKgzF,gBAAgB18D,EAAOwwC,EAAQtyB,EAAMhB,EAASszB,EAAQv7D,KAAKmgE,IAChE1rE,KAAKgzF,gBAAgB18D,EAAOid,EAAQuzB,EAAQtyB,EAAMhB,EAASszB,EAAQ,EAAEv7D,KAAKmgE,GAAG,GAC7E1rE,KAAKgzF,gBAAgB18D,EAAOid,EAAQuzB,EAAQtyB,EAAMsyB,EAAQ,GAC1D9mE,KAAK6qF,kBAAkB9mF,KAAK,CAACgwC,EAAGzd,EAAOwwC,EAAQ9yB,EAAGQ,IAElDx0C,KAAKqyC,SACLryC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAA6B,IAAI,GAAuBrsF,KAAKs2B,KAAMt2B,KAAKw0C,IAAKx0C,KAAKuzC,MAAOvzC,KAAKwzC,OAAQxzC,KAAK8mE,OAAQ9mE,KAAKkyE,YAAYj3C,YAAaiX,GAMrJ,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,gBAAgB+gD,EAAcC,EAAcC,GACxC,IACIC,EAAK7nF,KAAKmgE,GAAG,EADT,EAGR,IAAI,IAAI/zE,EAAI,EAAGA,GAHP,EAGeA,IACnBqI,KAAK6qF,kBAAkB9mF,KAAK,CAACgwC,EAAGk/C,EAAOjzF,KAAK8mE,OAAOv7D,KAAKqgE,IAAIunB,EAAaC,EAAGz7F,GAAIq8C,EAAGk/C,EAAOlzF,KAAK8mE,OAAOv7D,KAAKsgE,IAAIsnB,EAAaC,EAAGz7F,KAIvI,SAEI,IAAIy2F,EAAwBpuF,KAAK2nF,cAEP,MAAtB3nF,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WACLT,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAEb,MAApBjvF,KAAK8uF,aACLV,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAGtElB,EAAEiF,gBAAgBrzF,KAAKs2B,KAAKt2B,KAAKw0C,IAAKx0C,KAAKuzC,MAAOvzC,KAAKwzC,OAAQxzC,KAAK8mE,QAE9C,MAAlB9mE,KAAK6uF,WACLT,EAAE6B,WC7JR,MAAO,WAAuB,EAEhC,YAAYv4F,GACR2J,MAAM,YAAa3J,EAAQ,CACvB,CACI0I,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,UAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,uBAIpBiG,KAAKD,cAAgB,gFCZvB,MAAO,WAAmB,EAE5B,YAAYrI,GACR2J,MAAM,QAAS3J,EAAQ,8BAEvBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElD,IAAI,IAAI8/B,KAASD,GAAWE,OACxBt9C,KAAKyJ,aAAa,IAAI/I,EAAU28C,EAAMnlD,KAAMoT,EAAsB1S,IAAYA,EAAMA,MAAQykD,EAAMnlD,OAAQ,EAAM0B,EAAWsM,QAAQ,EAAMm3C,EAAMl9C,cAGnJH,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAE7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,QAASqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpG,KACHgB,IACG,IAAIu7C,EAAgBv7C,EAAW,GAAGlJ,MAClCwkD,GAAWQ,KAAKP,KAElB,GAAO,EAAM,iMCzBjB,MAAO,GAIyB,4BAACnlD,EAAcgK,EAAeilF,EAA4BmM,GAE3E,MAATpxF,IACAA,EAAQ,GAEZhK,GAAQ,IAAMgK,EAEd,IAAIqxF,EAAU,GAAgBC,aAAat7F,GAU3C,OARe,MAAXq7F,IAEAA,EAAU,GAAgBE,WAAWH,EAAQnM,EAAajV,aAE1D,GAAgBshB,aAAat7F,GAAQq7F,GAIlCA,EAIc,kBAACD,EAAqBphB,GAE3C,IAAIwhB,EAASxhB,EAAY2T,IAAIiC,SAAS6L,QAAQC,QAAQF,OAAOJ,GACzDtlD,EAAIslD,EAAO//C,MACXsgD,EAAIP,EAAO9/C,OAEf,GAAIkgD,EAAO1xF,SAAW,EAAIgsC,EAAI6lD,EAC1B,MAAO,CAAC,CAAE9/C,EAAG,EAAGC,EAAG,GAAK,CAAED,EAAG/F,EAAGgG,EAAG,GAAK,CAAED,EAAG/F,EAAGgG,EAAG6/C,GAAK,CAAE9/C,EAAG,EAAGC,EAAG6/C,IAGvE,IAAIN,EAAmB,GAInBO,EAAkB,GACtB,GAAgBC,gBAAgB,CAAChgD,EAAG,EAAGC,EAAG,GAAI,CAACD,EAAG/F,EAAE,EAAGgG,EAAG,GAHpCggD,EAIDF,GACrB,GAAgBC,gBAAgB,CAAChgD,EAAG/F,EAAE,EAAGgG,EAAG,GAAI,CAACD,EAAG/F,EAAE,EAAGgG,EAAG6/C,EAAE,GALxCG,EAMDF,GACrB,GAAgBC,gBAAgB,CAAChgD,EAAG/F,EAAE,EAAGgG,EAAG6/C,EAAE,GAAI,CAAC9/C,EAAG,EAAGC,EAAG6/C,EAAE,GAPxCG,EAQDF,GACrB,GAAgBC,gBAAgB,CAAChgD,EAAG,EAAGC,EAAG6/C,EAAE,GAAI,CAAC9/C,EAAG,EAAGC,EAAG,GATpCggD,EAUDF,GAErB,IAAIG,EAAM,CAAClgD,EAAG/F,EAAE,EAAGgG,EAAG6/C,EAAE,GACxB,IAAI,IAAIK,KAASJ,EACb,GAAgBI,MAAMX,EAASW,EAAOD,EAAIjmD,EAAG6lD,EAAGH,GAGpD,IAAIx5D,GAAgB,EACpB,MAAOA,GAAK,CACRA,GAAO,EACP,IAAI,IAAIviC,EAAI,EAAGA,EAAI47F,EAAQvxF,OAAS,EAAGrK,IAAI,CAC/B6xF,GAAqB+J,EAAQ57F,GAAI47F,GAAS57F,EAAE,GAAG47F,EAAQvxF,QAASuxF,EAAQ57F,EAAE,IAC3E,IACH47F,EAAQr8E,OAAOvf,EAAE,EAAG,GACpBuiC,GAAO,IAOnB,OAAOq5D,EAImB,uBAACjwD,EAAcoQ,EAAYt6C,EAAW6yE,GAEhE,IAAIkoB,GAAMzgD,EAAIK,EAAIzQ,EAAMyQ,IAAI36C,EAAE,GAC1Bg7F,GAAM1gD,EAAIM,EAAI1Q,EAAM0Q,IAAI56C,EAAE,GAE9B,IAAI,IAAIzB,EAAI,EAAGA,GAAKyB,EAAI,EAAI,GAAKzB,IAC7Bs0E,EAAOloE,KAAK,CACRgwC,EAAGzQ,EAAMyQ,EAAIogD,EAAGx8F,EAChBq8C,EAAG1Q,EAAM0Q,EAAIogD,EAAGz8F,IAOR,aAAC47F,EAAkBjwD,EAAcoQ,EACjDH,EAAeC,EAAgBkgD,GAE/B,IAII3/C,EAAWC,EAJXhyC,EAAS6mF,GAAQvlD,EAAOoQ,GACxBygD,GAAMzgD,EAAIK,EAAIzQ,EAAMyQ,GAAK/xC,EACzBoyF,GAAM1gD,EAAIM,EAAI1Q,EAAM0Q,GAAKhyC,EAI7B,IAAK,IAAIrK,EAAI,EAAGA,GAAKqK,EAAS,IAE1B+xC,EAAIzQ,EAAMyQ,EAAIp8C,EAAIw8F,EAClBngD,EAAI1Q,EAAM0Q,EAAIr8C,EAAIy8F,EAEb,GAAgBC,cAActgD,EAAGC,EAAGT,EAAOC,EAAQkgD,IAL3B/7F,KAUjC47F,EAAQxvF,KAAK,CAAEgwC,EAAGA,EAAGC,EAAGA,IAKA,qBAACD,EAAWC,EAAWT,EAAeC,EAAgBkgD,GAE9E,GAAI3/C,EAAI,GAAKC,EAAI,GAAKD,EAAIR,GAASS,EAAIR,EACnC,OAAO,EAOX,OAAY,GAJJkgD,EAAO,EAAInoF,KAAK04B,MAAM8P,GAAK,EAAIR,EAAQhoC,KAAK04B,MAAM+P,GAAK,IAnHpD,GAAAw/C,aAA4C,GCQzD,MAAO,WAAoB,EAE7B,YAAY97F,GAER2J,MAAM,SAAU3J,EAAQ,qLAExBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,UAElD,IAAI+2E,EAAwB58F,EAAO4lB,UAAUC,QAAQ,aAIrDvd,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,qBAAsBqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACvI,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,YAAaqG,KAAMk0F,EAAgBnlF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEnG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B27F,EAAwCzyF,EAAW,GAAGlJ,MACtDsJ,EAAgBJ,EAAW,GAAGlJ,MAC9B47F,EAA+B1yF,EAAW,GAAGlJ,MAE7CyzF,EAAK,IAAI,GAAat4C,EAAGC,EAAGugD,EAAmBj4E,UAAUviB,WAAYmI,EAAOxK,EAAO47B,KAAK+M,iBAAkBjoC,EAAGo8F,EAAUl4E,UAAUviB,YACrI3B,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,khBAAkhB,IAEviBrsF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,qBAAsBqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACvI,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B27F,EAAwCzyF,EAAW,GAAGlJ,MACtDsJ,EAAgBJ,EAAW,GAAGlJ,MAE9ByzF,EAAK,IAAI,GAAat4C,EAAGC,EAAGugD,EAAmBj4E,UAAUviB,WAAYmI,EAAOxK,EAAO47B,KAAK+M,iBAAkBjoC,GAC9GA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,oUAAoU,IAEzVrsF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,qBAAsBqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEvI,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1B27F,EAAwCzyF,EAAW,GAAGlJ,MAEtDyzF,EAAK,IAAI,GAAat4C,EAAGC,EAAGugD,EAAmBj4E,UAAUviB,WAAY,KAAMrC,EAAO47B,KAAK+M,iBAAkBjoC,GAC7GA,EAAE4K,cAAF,MAA2BqpF,IAE5B,GAAO,EAAO,oUAAoU,IAEzVrsF,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,qBAAsBqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEvI,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC27F,EAAwCzyF,EAAW,GAAGlJ,MACtDixF,EAAiCzxF,EAAE4K,cAAF,MAEjC6mF,EAAGC,cAAc,aAErBD,EAAG4K,WAAWF,EAAmBj4E,UAAUviB,cAE5C,GAAO,EAAO,0RAA0R,IAE/SiG,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,qBAAsBqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,iBAAkBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACvI,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC27F,EAAwCzyF,EAAW,GAAGlJ,MACtDsJ,EAAgBJ,EAAW,GAAGlJ,MAC9BixF,EAAiCzxF,EAAE4K,cAAF,MAEjC6mF,EAAGC,cAAc,aAErBD,EAAG4K,WAAWF,EAAmBj4E,UAAUviB,WAAYmI,KAExD,GAAO,EAAO,0RAA0R,IAE/SlC,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCsJ,EAAgBJ,EAAW,GAAGlJ,MAC9BixF,EAAiCzxF,EAAE4K,cAAF,MAEjC6mF,EAAGC,cAAc,aAErBD,EAAG4K,WAAW5K,EAAG6K,YAAaxyF,KAE/B,GAAO,EAAO,qCAAqC,IAE1DlC,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,aAAcqG,KAAM,IAAI,EAAUmO,GAAmBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrH,CAAE/G,WAAY,aAAcqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,cAAepO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC5H,CAAE/G,WAAY,kBAAmBqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAE3G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+7F,EAAsB7yF,EAAW,GAAGlJ,MACpCg8F,EAAgC9yF,EAAW,GAAGlJ,MAC9Ci8F,EAA0B/yF,EAAW,GAAGlJ,MACxCixF,EAAiCzxF,EAAE4K,cAAF,MAEjC8xF,EAAoB,GACxB,IAAK,IAAItxF,KAAKmxF,EACVG,EAAQ/wF,KAAKP,EAAE5K,OAGfixF,EAAGC,cAAc,kBAErBD,EAAGkL,cAAcD,EAASF,EAAWt4E,UAAUviB,WAAY86F,KAE5D,GAAO,EAAO,6BAA6B,IAElD70F,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,YAAaqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,UAAWqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACnG,CAAE/G,WAAY,aAAcqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,cAAepO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC5H,CAAE/G,WAAY,kBAAmBqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAE3G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCo8F,EAAoBlzF,EAAW,GAAGlJ,MAClCq8F,EAAkBnzF,EAAW,GAAGlJ,MAChCg8F,EAAgC9yF,EAAW,GAAGlJ,MAC9Ci8F,EAA0B/yF,EAAW,GAAGlJ,MACxCixF,EAAiCzxF,EAAE4K,cAAF,MAErC,GAAI6mF,EAAGC,cAAc,iBAAkB,OAEvC,IAAIgL,EAAoB,GAExB,GAAIE,EAAYC,GAAWA,EAAUD,EAAY,IAC7C,IAAK,IAAIr9F,EAAIq9F,EAAWr9F,EAAIs9F,EAASt9F,IAAKm9F,EAAQ/wF,KAAKpM,GAG3DkyF,EAAGkL,cAAcD,EAASF,EAAWt4E,UAAUviB,WAAY86F,KAE5D,GAAO,EAAO,6BAA6B,IAElD70F,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IACzD,KACCZ,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACEoK,cAAF,MAEjC6mF,EAAGC,cAAc,kBAErBD,EAAGqL,eAAc,KAElB,GAAO,EAAO,yEAAyE,IAE9Fl1F,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,IAC1D,KACCZ,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACEoK,cAAF,MAEjC6mF,EAAGC,cAAc,mBAErBD,EAAGsL,mBAEJ,GAAO,EAAO,oCAAoC,IAEzDn1F,KAAKwJ,UAAU,IAAIzI,EAAO,kBAAmB,IAAI2B,EAAc,IAC3D,KACCZ,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACEoK,cAAF,MAEjC6mF,EAAGC,cAAc,oBAErBD,EAAGuL,oBAEJ,GAAO,EAAO,qDAAqD,IAE1Ep1F,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACzGyP,EACCzO,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCwpF,EAAgBtgF,EAAW,GAAGlJ,MAC9BixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,aAErBD,EAAGmF,SAAS5M,KAEb,GAAO,EAAO,6GAA6G,IAElIpiF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAmBzxF,EAAE4K,cAAF,MAEvB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,8DAA8D,KAOrF,MAAO,WAAqB,GAW9B,YAAmB6wC,EAAkBC,EAAkB97C,EAAqBgK,EACxE+4B,EAA0B4K,EACnB2uD,EAAoB,UAC3BnzF,MAAM45B,EAAa4K,GAHJ,KAAAkO,IAAkB,KAAAC,IAAkB,KAAA97C,OAAqB,KAAAgK,QAEjE,KAAAsyF,YAXX,KAAAa,iBAA6B,GAC7B,KAAAC,eAAyB,EACzB,KAAAC,qBAA+B,EAC/B,KAAAC,cAAwB,EACxB,KAAAC,iBAA2B,EAE3B,KAAAb,WAAa,OACb,KAAAF,YAAsB,GAOlB10F,KAAKy0F,WAAW,KAAMvyF,GAEtB,IAAIoxF,EAAsBtzF,KAAK2nF,cAE/B3nF,KAAK2nF,cAAcpP,eAAe6K,UAAUpjF,KAAK+zC,EAAIu/C,EAAO//C,MAAQ,EAAGvzC,KAAKg0C,EAAIs/C,EAAO9/C,OAAS,GAChGxzC,KAAK2nF,cAAc7iB,UAAUue,WAE7BrjF,KAAKkyE,YAAYgR,MAAMsD,SAAS8M,GAGhCtzF,KAAKgrF,eAAiBsI,EAAO//C,MAAQ,EACrCvzC,KAAKirF,eAAiBqI,EAAO9/C,OAAS,EAEtCxzC,KAAK4sF,oBAIT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAmB,IAAI,GAAarsF,KAAK+zC,EAAG/zC,KAAKg0C,EAAGh0C,KAAK9H,KAAM8H,KAAKkC,MAAOlC,KAAKkyE,YAAYj3C,YAAaiX,GAM7G,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,SAASkwC,GACLpiF,KAAK2nF,cAAcvF,MAAQA,EAG/B,WAAWlqF,EAAegK,GAEtB,GAAIhK,GAAQ8H,KAAK9H,MAAQgK,GAASlC,KAAKkC,MAAO,OAElC,MAARhK,IAAcA,EAAO8H,KAAK9H,MACjB,MAATgK,IAAeA,EAAQ,GAC3BlC,KAAKkC,MAAQA,EAEblC,KAAK00F,YAAcx8F,EAEnB,IAAIw9F,EAAS,GAEe,MAAxBhhD,OAAOihD,gBAEPD,EAAShhD,OAAOihD,eAGpB,IAAIC,EAAQ3d,KAAK4d,OAAO1P,OAAO2P,UAAUJ,EAAS,oCAC9CK,EAAgB79F,EAAO,IAAMgK,EAC7B8zF,EAAUJ,EAAMK,SAASF,GAE7B,GAAe,MAAXC,EAAiB,CAEjB,GAAsB,qBAAlBh2F,KAAKw0F,UAAkC,CAEvC,IAAI37F,EAAImH,KAAKkyE,YAAY2S,eAAekR,GAExC,GAAS,MAALl9F,EAAW,CACX,IAAIy6F,EAAS,IAAIrb,KAAKie,OAAOF,GAEzBG,EAAkBle,KAAKme,cAAcn9F,OAAO,CAC5Cs6C,MAAO+/C,EAAO//C,MACdC,OAAQ8/C,EAAO9/C,OACfghD,UAAWvc,KAAKiN,YAAYC,UAGhCnlF,KAAKkyE,YAAY2T,IAAIiC,SAASz1C,OAAOihD,EAAQ6C,GAAiB,GAC9Dn2F,KAAKkyE,YAAY2S,eAAekR,GAAiBI,EACjDt9F,EAAIs9F,EAGRH,EAAUn9F,EACK,MAAXm9F,IAAiBA,EAAUJ,EAAMK,SAASF,IAmClD,IAAIzC,EAAmCtzF,KAAK2nF,cAC9B,MAAV2L,GACAA,EAAS,IAAIrb,KAAKie,OAAOF,GACzBh2F,KAAK2nF,cAAgB2L,GAErBA,EAAO0C,QAAUA,EAGrBh2F,KAAK6qF,kBAAoB,GAAgBwL,qBAAqBn+F,EAAMgK,EAAOlC,KAAM,IAAIi4E,KAAKie,OAAON,EAAMK,SAASF,KAChH/1F,KAAK+qF,iBAAkB,OAGG,MAAtB/qF,KAAK2nF,gBACL3nF,KAAK2nF,cAAgB,IAAI1P,KAAKie,QAO1C,UAIA,cAAcvB,EAAsBC,EAAoBC,GACpD70F,KAAKk1F,eAAc,GACnBl1F,KAAKq1F,iBAAmBV,EACxB30F,KAAK40F,WAAaA,EAClB50F,KAAKu1F,qBAAuBV,EAAkB,IAC9C70F,KAAKw1F,cAAgB,EACrBx1F,KAAKs1F,eAAgB,EACrBt1F,KAAKkyE,YAAY8M,iBAAiBj7E,KAAK/D,MAG3C,cAAcs2F,GACV,GAAIt2F,KAAKs1F,cAAe,CACpB,IAAIiB,EAAmBv2F,KAAKkyE,YAAY8M,iBACpCrnF,EAAI4+F,EAAiB5xF,QAAQ3E,MACjCu2F,EAAiBr/E,OAAOvf,EAAG,GAE/BqI,KAAKs1F,eAAgB,EACjBgB,GAAct2F,KAAKuqF,YAAW,GAGtC,iBACIvqF,KAAKy1F,iBAAkB,EAG3B,kBACIz1F,KAAKy1F,iBAAkB,EAG3B,KAAKe,GAED,GAAIx2F,KAAKy1F,gBAAiB,OAE1B,IAAIgB,EAEJ,GAAuB,gBAAnBz2F,KAAK40F,WAA8B,CACnC,IAAI8B,EAAyC,EAA/B12F,KAAKq1F,iBAAiBrzF,OAAahC,KAAKu1F,qBAClDoB,EAAsBprF,KAAKuF,MAAM9Q,KAAKw1F,cAAgBkB,GACtDE,EAAiB52F,KAAKw1F,cAAgBmB,EAAsBD,EAChED,EAAQz2F,KAAKu1F,qBAAuBqB,EAChCH,GAASz2F,KAAKq1F,iBAAiBrzF,SAC/By0F,EAAQ,EAAIz2F,KAAKq1F,iBAAiBrzF,OAASy0F,GAE/CA,EAAQlrF,KAAKuF,MAAM2lF,QAEnB,GAAuB,QAAnBz2F,KAAK40F,WAAsB,CAC3B,IAAIiC,EAAS72F,KAAKq1F,iBAAiBrzF,OAAShC,KAAKu1F,qBAC7CoB,EAAsBprF,KAAKuF,MAAM9Q,KAAKw1F,cAAgBqB,GACtDD,EAAiB52F,KAAKw1F,cAAgBmB,EAAsBE,EAChEJ,EAAQz2F,KAAKu1F,qBAAuBqB,EACpCH,EAAQlrF,KAAKuF,MAAM2lF,QAGnB,GADAA,EAAQlrF,KAAKuF,MAAM9Q,KAAKu1F,qBAAuBv1F,KAAKw1F,eAChDiB,GAASz2F,KAAKq1F,iBAAiBrzF,OAE/B,YADAhC,KAAKk1F,eAAc,GAK/Bl1F,KAAKw1F,eAAiBgB,EAEtBx2F,KAAKy0F,WAAW,KAAMz0F,KAAKq1F,iBAAiBoB,KC3c9C,MAAO,WAA2B,EAEpC,YAAY/+F,GACR2J,MAAM,gBAAiB3J,EAEnBo/F,cAAc/sF,OACTgtF,GACuB,MAAbA,EAAI70F,OAA8B,GAAb60F,EAAI70F,OAEtCU,IAAKm0F,IACI,CACH32F,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAYg9F,EAAI7+F,SAM5B8H,KAAKD,cAAgB,kCCrBvB,MAAO,WAAkB,EAE3B,YAAYrI,GAER2J,MAAM,OAAQ3J,EAAQ,iEAEtBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAIlDvd,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACvG,CAAE/G,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1Bo+F,EAAmBl1F,EAAW,GAAGlJ,MACjCmc,EAAejT,EAAW,GAAGlJ,MAE7BixF,EAAK,IAAI,GAAW91C,EAAGC,EAAGgjD,EAAUjiF,EAAMrd,EAAO47B,KAAK+M,iBAAkBjoC,GAC5EA,EAAE4K,cAAF,MAA2B6mF,IAE5B,GAAO,EAAO,+IAA+I,IAEpK7pF,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCo+F,EAAmBl1F,EAAW,GAAGlJ,MAChBR,EAAE4K,cAAF,MAElBi0F,YAAYD,KAEhB,GAAO,EAAO,wDAAwD,IAE7Eh3F,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,YAAaqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,aAAcpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1H,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCkvE,EAA+BhmE,EAAW,GAAGlJ,MAC5BR,EAAE4K,cAAF,MAElBk0F,aAAapvB,EAAUxrD,UAAUviB,cAErC,GAAO,EAAO,yHAAyH,IAE9IiG,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCmc,EAAejT,EAAW,GAAGlJ,MACZR,EAAE4K,cAAF,MAElBm0F,QAAQpiF,KAEZ,GAAO,EAAO,oBAAoB,IAEzC/U,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAiBzxF,EAAE4K,cAAF,MAErB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,4DAA4D,IAEjFlD,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACdoK,cAAF,MAErB,IAAI6mF,EAAGC,cAAc,YAErB,OAAOD,EAAGuN,aAEX,GAAO,EAAO,sCAAsC,IAE3Dp3F,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDuM,EACCnN,IAEG,IACI+nF,EADmB/nF,EAAW,GAAGlJ,MACdoK,cAAF,MAErB,IAAI6mF,EAAGC,cAAc,aAErB,OAAOD,EAAGwN,cAEX,GAAO,EAAO,oCAAoC,KAO3D,MAAO,WAAmB,GAkB5B,YAAmBtjD,EAAkBC,EAAkBgjD,EAC5CjiF,EACPkmB,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAHJ,KAAAkO,IAAkB,KAAAC,IAAkB,KAAAgjD,WAC5C,KAAAjiF,OAjBX,KAAA+yD,UAAoB,OAEpB,KAAAwvB,UACI,IAAIrf,KAAKsf,UAAU,CACfj2C,WAAY,QACZD,SAAUrhD,KAAKg3F,SACflkC,UAAW,SACXvR,WAAY,SACZ6jB,KAAM,CAACplE,KAAK6uF,WACZ9lB,OAAQ/oE,KAAK8uF,YACb0I,gBAAiBx3F,KAAK+uF,YACtB0I,YAAY,EACZC,UAAU,EACVC,MAAO,SAOX33F,KAAKgrF,eAAiBj3C,EACtB/zC,KAAKirF,eAAiBj3C,EAEtBh0C,KAAK8uF,YAAc,KACnB9uF,KAAKs3F,UAAUvuB,OAAS,KAExB/oE,KAAK6qF,kBAAoB,GAEzB7qF,KAAKqyC,SACLryC,KAAK4sF,oBAGT,QAAQ7pF,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAiB,IAAI,GAAWrsF,KAAK+zC,EAAG/zC,KAAKg0C,EAAGh0C,KAAKg3F,SAAUh3F,KAAK+U,KAAM/U,KAAKkyE,YAAYj3C,YAAaiX,GAQ5G,OAPAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGvkB,UAAY9nE,KAAK8nE,UAEpBukB,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAIX,SAEI,IAAIk8C,EAAoBpuF,KAAK2nF,cAE7B,GAA0B,MAAtB3nF,KAAK2nF,cACLyG,EAAI,IAAInW,KAAK2f,KAAK53F,KAAK+U,KAAM/U,KAAKs3F,WAClCt3F,KAAK2nF,cAAgByG,EACrBpuF,KAAK2nF,cAAcpP,eAAe6K,UAAUpjF,KAAK+zC,EAAG/zC,KAAKg0C,GACzDh0C,KAAK2nF,cAAc7iB,UAAUue,WAC7BrjF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,OAC7B,CAOH,OANAA,EAAEr5E,KAAO/U,KAAK+U,KACd/U,KAAKs3F,UAAUlyB,KAAOplE,KAAK6uF,UAC3B7uF,KAAKs3F,UAAUvuB,OAAS/oE,KAAK8uF,YAC7B9uF,KAAKs3F,UAAUE,gBAAkBx3F,KAAK+uF,YACtCX,EAAEhM,MAAQpiF,KAAKivF,UACfjvF,KAAKs3F,UAAUj2C,SAAWrhD,KAAKg3F,SACvBh3F,KAAK8nE,WACT,IAAK,OAAQsmB,EAAEyJ,OAAO9jD,EAAI,EAAG,MAC7B,IAAK,SAAUq6C,EAAEyJ,OAAO9jD,EAAI,GAAK,MACjC,IAAK,QAASq6C,EAAEyJ,OAAO9jD,EAAI,EAE/Bq6C,EAAEvzE,MAAQ7a,KAAKs3F,UAKnB,GAFAt3F,KAAKgrF,eAAiB,EACtBhrF,KAAKirF,eAAiB,EACN,MAAbjrF,KAAK+U,KAAa,CACjB,IAAI+iF,EAAK7f,KAAK8f,YAAYC,YAAYh4F,KAAK+U,KAAM/U,KAAKs3F,WAEtDt3F,KAAKgrF,eAAiB8M,EAAGvkD,MAAQ,EACjCvzC,KAAKirF,eAAiB6M,EAAGtkD,OAAS,GAM1C,YAAYwjD,GACRh3F,KAAKg3F,SAAWA,EAChBh3F,KAAKqyC,SAGT,QAAQt9B,GACJ/U,KAAK+U,KAAOA,EACZ/U,KAAKqyC,SAGT,aAAay1B,GACT9nE,KAAK8nE,UAAYA,EACjB9nE,KAAKqyC,SAGT,WAEI,OADwBryC,KAAK2nF,cACpBp0C,MAGb,YAEI,OADwBvzC,KAAK2nF,cACpBn0C,QC/NX,MAAO,WAAkB,EAE3B,YAAY97C,GACR2J,MAAM,OAAQ3J,EAAQ,sIAEtBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKyJ,aAAa,IAAI/I,EAAU,KAAMuO,EAAsBrW,IAAYA,EAAMA,MAAQ2S,KAAKmgE,KAAM,EAAM9xE,EAAWsM,QAAQ,EAAM,iCAChIlG,KAAKyJ,aAAa,IAAI/I,EAAU,IAAKuO,EAAsBrW,IAAYA,EAAMA,MAAQ2S,KAAK0sF,IAAK,EAAMr+F,EAAWsM,QAAQ,EAAM,yBAE9HlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAE7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGyN,EACCzM,GACUyJ,KAAK04B,MAAcniC,EAAW,GAAGlJ,QACzC,GAAO,EAAM,wBAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGyN,EACCzM,GACUyJ,KAAK6xD,MAAct7D,EAAW,GAAGlJ,QACzC,GAAO,EAAM,qEAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGyN,EACCzM,GACUyJ,KAAKmyD,KAAa57D,EAAW,GAAGlJ,QACxC,GAAO,EAAM,gEAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGyN,EACCzM,GACUyJ,KAAKoG,KAAa7P,EAAW,GAAGlJ,QACxC,GAAO,EAAM,sKAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGmO,EACCnN,GACUyJ,KAAK0/D,KAAanpE,EAAW,GAAGlJ,QACxC,GAAO,EAAM,kJAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClDuM,EACCnN,GACUyJ,KAAKq6C,UACb,GAAO,EAAM,0DAEpB5lD,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,QAASqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpG,CAAE/G,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGmO,EACCnN,GACUyJ,KAAKuK,IAAYhU,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,2CAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,cAAeqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GmO,EACCnN,GACmBA,EAAW,GAAGlJ,MAAS2S,KAAKmgE,GAAK,KAClD,GAAO,EAAM,2EAEpB1rE,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,eAAgBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GmO,EACCnN,GACmBA,EAAW,GAAGlJ,MAAS,IAAM2S,KAAKmgE,IACnD,GAAO,EAAM,2EAEpB1rE,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGmO,EACCnN,GACUyJ,KAAK2sF,IAAYp2F,EAAW,GAAGlJ,QACvC,GAAO,EAAM,iCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGmO,EACCnN,GACUyJ,KAAKk7B,IAAY3kC,EAAW,GAAGlJ,QACvC,GAAO,EAAM,oDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGmO,EACCnN,GACUyJ,KAAK4sF,MAAcr2F,EAAW,GAAGlJ,QACzC,GAAO,EAAM,8CAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,cAAeqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GmO,EACCnN,GACUyJ,KAAKsgE,IAAY/pE,EAAW,GAAGlJ,QACvC,GAAO,EAAM,qCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,cAAeqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GmO,EACCnN,GACUyJ,KAAKqgE,IAAY9pE,EAAW,GAAGlJ,QACvC,GAAO,EAAM,uCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,cAAeqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GmO,EACCnN,GACUyJ,KAAK6sF,IAAYt2F,EAAW,GAAGlJ,QACvC,GAAO,EAAM,uCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,eAAgBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC3GmO,EACCnN,GACUyJ,KAAK8sF,KAAav2F,EAAW,GAAGlJ,QACxC,GAAO,EAAM,iDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,iBAAkBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7GmO,EACCnN,GACUyJ,KAAK+sF,KAAax2F,EAAW,GAAGlJ,QACxC,GAAO,EAAM,mDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,iBAAkBqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7GmO,EACCnN,GACUyJ,KAAKgtF,KAAaz2F,EAAW,GAAGlJ,QACxC,GAAO,EAAM,mDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGmO,EACCnN,GACUyJ,KAAKitF,MAAc12F,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACtE,GAAO,EAAM,2LAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,OAAQqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnGmO,EACCnN,GACUyJ,KAAK6pD,IAAYtzD,EAAW,GAAGlJ,QACvC,GAAO,EAAM,qCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,OAAQqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClG0P,EACC1O,GACUyJ,KAAK6pD,IAAYtzD,EAAW,GAAGlJ,QACvC,GAAO,EAAM,qCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyN,EACCzM,GACUyJ,KAAK6pD,IAAYtzD,EAAW,GAAGlJ,QACvC,GAAO,EAAM,qCAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FyN,EACCzM,GACUyJ,KAAK86D,IAAYvkE,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,+CAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC/F,CAAE/G,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/F0P,EACC1O,GACUyJ,KAAK86D,IAAYvkE,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,+CAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGmO,EACCnN,GACUyJ,KAAK86D,IAAYvkE,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,+CAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC7F,CAAE/G,WAAY,IAAKqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC7FyN,EACCzM,GACUyJ,KAAKC,IAAY1J,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,gDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC/F,CAAE/G,WAAY,IAAKqG,KAAMoQ,EAAoBrB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC/F0P,EACC1O,GACUyJ,KAAKC,IAAY1J,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,gDAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGmO,EACCnN,GACUyJ,KAAKC,IAAY1J,EAAW,GAAGlJ,MAAekJ,EAAW,GAAGlJ,QACpE,GAAO,EAAM,iDCpNtB,MAAO,WAAoB,EAM7B,YAAYlB,GACR2J,MAAM,SAAU3J,EAAQ,6FAH5B,KAAA+gG,gBAA0B,EAKtBz4F,KAAK04F,YAAc,IAAI,EAAqBhhG,EAAO4lB,UAAUC,QAAQ,gBAErEvd,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKyJ,aAAa,IAAI/I,EAAU,MAAOhJ,EAAO4lB,UAAUC,QAAQ,eAC3D3kB,IAAYA,EAAMA,MAAQoH,KAAK04F,cAAe,EAAM9+F,EAAWsM,QAAQ,EAAM,6DAElFlG,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAsD7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,oBAAqB,IAAI2B,EAAc,IAC7D6L,EACHzM,GACU6mD,KAAKjmB,MAAQ1iC,KAAKy4F,iBAE3B,GAAO,EAAM,qGAMjB,MAAO,WAAyB,EAElC,YAAY/gG,GACR2J,MAAM,cAAe3J,EAAQ,oHAE7BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IACGpK,EAAO47B,KAAK+M,iBAAiB0J,aAAaxgB,MAAMznB,EAAW,GAAGlJ,SAC/D,GAAO,EAAM,uBAEpBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IACGpK,EAAO47B,KAAK+M,iBAAiB0J,aAAavgB,QAAQ1nB,EAAW,GAAGlJ,SACjE,GAAO,EAAM,wDCrGtB,MAAO,WAAyB,EAElC,YAAYlB,GACR2J,MAAM,cAAe3J,EAAQ,4HAE7BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAE7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvD,KACCZ,IACGpK,EAAO47B,KAAK+M,iBAAiB0J,aAAalH,UAC3C,GAAO,EAAM,0BAEpB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,cAAeqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,eAAgBpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC9H,KACHgB,IACG,IAAIrJ,EAAmBqJ,EAAW,GAAGlJ,MACjC+I,EAAiBlJ,EAAEyK,MAAO4hB,qBAAqB,sBAErC,MAAVnjB,GAEAjK,EAAO47B,KAAK+M,iBAAiBu7C,aAAazB,oBAAoBp2E,KAAM7K,IAEhE,IAAIwI,EAAUC,aAAM,EAANA,EAAQD,QAClBD,EAASE,aAAM,EAANA,EAAQF,OAEjBkgF,EAAyB,CACzB,CACIvhF,KAAM3H,EAAEyK,MACRtK,MAAOH,GAEX,CACI2H,KAAMkL,EACN1S,MAAOM,IAIA,MAAXwI,EACAhK,EAAO47B,KAAK+M,iBAAiB4F,SAAStkC,EAAQggF,EAAe,MAAM,GAClD,MAAVlgF,GACPA,EAAO,QAOrB,GAAO,EAAM,mJAajB,MAAO,WAAoB,EAE7B,YAAY/J,GACR2J,MAAM,cAAe3J,EAAQ,oNAE7BsI,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,MAAOqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACA,MACA,GAAO,EAAO,yDCvEpB,MAAO,WAAiB,EAE1B,YAAY7Y,GACR2J,MAAM,WAAY3J,GAElBsI,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAE/C6N,EACA,MACA,GAAO,EAAO,4CAapB,MAAO,WAAmB,EAK5B,YAAY7Y,GACR2J,MAAM,QAAS3J,EAAQ,yDAJ3B,KAAAmpF,aAA6B,GAC7B,KAAA8X,cAAwB,EAKpB34F,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKmG,YAAYsG,YAAc,IAAI,EAAczM,KAAKmG,aACtDnG,KAAKmG,YAAYsG,YAAY8E,4BAE7BvR,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CACI3I,WAAY,WAAYqG,KAAM1I,EAAO4lB,UAAUC,QAAQ,YACvDpO,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAEtD,CACI/G,WAAY,gBAAiBqG,KAAMmO,EACnCY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAEtDyP,EACCzO,IAEG,IAAI82F,EAAmC92F,EAAW,GAAGlJ,MACjDorC,EAAqBliC,EAAW,GAAGlJ,MAEnCigG,EAAyB,CACzBC,cAAeF,EACf50D,GAAIA,EACJ+0D,cAAe,EACfpvC,SAAS,EACThoD,OAAQi3F,EAAG11F,MAAM+H,UAAU,MAAO,IAAIvI,EAAc,MAWxD1C,KAAK6gF,aAAa98E,KAAK80F,GAEvBryD,QAAQC,IAAI,iCAAmCzC,EAAK,UAErD,GAAO,EAAM,6FAGpBhkC,KAAKg5F,sBAIT,sB,QAEI,GAAIh5F,KAAK6gF,aAAa7+E,OAAS,EAAG,CAC9B,IAAIi5B,EAA+B,QAApB,EAAc,QAAd,EAAGj7B,KAAKtI,cAAM,eAAE47B,YAAI,eAAE+M,iBAErC,GAAmB,MAAfpF,EAAqB,CACrB,IAAKj7B,KAAK24F,cAAgB19D,EAAYwgB,OAASC,GAAiBiO,QAAS,CACrE,IAAI9wD,EAAY4pC,YAAYC,MAC5B,IAAK,IAAIu2D,KAAcj5F,KAAK6gF,aAAc,CACtC,IAAI78C,EAAKnrC,EAAIogG,EAAWF,cACpB/0D,GAAMi1D,EAAWj1D,KACjBhkC,KAAKk5F,SAASD,EAAYh+D,EAAa1vB,KAAK04B,MAAMD,IAClDi1D,EAAWF,cAAgBlgG,IAKvC,OAAQoiC,EAAYwgB,OAChB,KAAKC,GAAiBxhB,KACtB,KAAKwhB,GAAiB1wC,MACtB,KAAK0wC,GAAiBsY,gBAClBh0D,KAAK6gF,aAAe,GACpB7gF,KAAK24F,cAAe,IASpC,IAAI37E,EAAOhd,KAEX2oC,WAAW,KACP3rB,EAAKg8E,uBACN,IAIP,SAASC,EAAwBh+D,EAA0B+I,GACvD,IAAI29C,EAAyB,CACzB,CACIvhF,KAAM64F,EAAWH,cAAc51F,MAC/BtK,MAAOqgG,EAAWH,gBAQ1B94F,KAAK24F,cAAe,EACpB,IAAI37E,EAAOhd,KAEXi7B,EAAYgL,SAASgzD,EAAWt3F,OAAQggF,EAAgB1mD,IACpDje,EAAK27E,cAAe,IACrB,IC3IL,MAAO,WAAiB,EAE1B,YAAYjhG,GAER2J,MAAM,MAAO3J,EAAQ,8DAErB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAEtC47E,EAAuBhrF,EAAYywB,QACvCu6D,EAAMp/F,WAAa,IACnBo/F,EAAMzzF,gBAAiB,EAEvB,IAAI0zF,EAAoB,CACpBr/F,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAM+4F,GAEVn5F,KAAKyF,cAAc1B,KAAKq1F,GAExB,IAAIC,EAAuBlrF,EAAYywB,QACvCy6D,EAAMt/F,WAAa,IACnBs/F,EAAM3zF,gBAAiB,EAEvB,IAAI4zF,EAAoB,CACpBv/F,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMi5F,GAEVr5F,KAAKyF,cAAc1B,KAAKu1F,GAExBt5F,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACA,MACA,GAAM,EAAO,iDAEjBvO,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACA,MACA,GAAM,EAAO,iCAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFoO,EACA,MACA,GAAM,EAAO,oFAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,QAASqG,KAAMi5F,EAAOlqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtFoO,EACA,MACA,GAAM,EAAO,gEAEjBlP,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFu4F,EACA,MACA,GAAM,EAAO,mHAEjBr5F,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpF,CAAE/G,WAAY,QAASqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtFu4F,EACA,MACA,GAAM,EAAO,uQAEjBr5F,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACA,MACA,GAAM,EAAO,2CC/DnB,MAAO,GAOT,YAAoBmjC,EAAqC5K,EAAkCvjC,GAAvE,KAAAmuC,gBAAqC,KAAA5K,cAAkC,KAAAvjC,SAL3F,KAAA6hG,SAAoB,GACpB,KAAAx0D,WAAsB,GAEtB,KAAAniC,IAAuB,IAAI9C,IAK3B,IAAI5G,GACA,OAAO8G,KAAK4C,IAAIpK,IAAIU,EAAIN,OAG5B,IAAIM,EAAYN,GAEZ,IAAI4gG,EAAMx5F,KAAK4C,IAAIpK,IAAIU,EAAIN,OAY3B,OAVU,MAAP4gG,EACCx5F,KAAKu5F,SAASx1F,KAAK7K,GAEnB8G,KAAK+kC,WAAW7tB,OAAOlX,KAAK+kC,WAAWpgC,QAAQ60F,GAAM,GAGzDx5F,KAAK+kC,WAAWhhC,KAAKnL,GAErBoH,KAAK4C,IAAIS,IAAInK,EAAIN,MAAOA,GAEjB4gG,EAIX,uBACI,IAAK,IAAIh2F,KAAKxD,KAAKu5F,SACf,KAAM/1F,EAAEpD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAa0E,QAAQnB,EAAEpD,KAAKrG,aAAe,GAC5H,OAAO,EAGf,IAAK,IAAIyJ,KAAKxD,KAAK+kC,WACf,KAAMvhC,EAAEpD,gBAAgBH,GAAiB,CAAC,SAAU,UAAW,UAAW,UAAW,aAAa0E,QAAQnB,EAAEpD,KAAKrG,aAAe,GAC5H,OAAO,EAGf,OAAO,EAGX,YAEI,GAAIiG,KAAK8lC,uBAAwB,CAC7B,IAAIpsC,EAAI,IACR,IAAK,IAAI/B,EAAI,EAAGA,EAAIqI,KAAKu5F,SAASv3F,OAAQrK,IACtC+B,GAAUsG,KAAKu5F,SAAS5hG,GAAGiB,MAAQ,OAASoH,KAAK+kC,WAAWptC,GAAGiB,MAC3DjB,EAAIqI,KAAKu5F,SAASv3F,OAAS,IAAGtI,GAAK,MAG3C,OAAOA,EAAI,IAGf,IAAIsK,EAAyB,CACzBoF,KAAM,EACNC,OAAQ,EACRrH,OAAQ,GAGRoC,EAA0B,CAC1B,CACIhE,KAAMzG,EAAUoL,KAChBf,SAAUA,EACVM,cAAc,GAElB,CACIlE,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAIlByhC,EAAqB,IAAIrjC,EAAc,IAE3C,IAAK,IAAI/K,EAAI,EAAGA,EAAIqI,KAAK+kC,WAAW/iC,OAAQrK,IAAK,CAE7C,IAAIuB,EAAM8G,KAAKu5F,SAAS5hG,GACpBuB,EAAIkH,gBAAgBH,GAAiB/G,EAAIkH,gBAAgB,EACzDgE,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAOM,EAAIkH,KAAKwO,OAAO1V,EAAKoS,GAAqB1S,MACjDoL,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAUn4B,EAAIkH,KACdxH,MAAOM,EAAIN,MACX0L,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU2nB,WAChB3f,OAAmCzI,EAAIkH,KAAM6K,UAAU,WAAY86B,GACnExkB,aAAa,EACbC,iBAAkB,EAClBld,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAGdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,OACPoL,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAId,IAAIpL,EAAQoH,KAAK+kC,WAAWptC,GACT,MAAfiB,EAAMA,OAAiBA,EAAMwH,gBAAgBH,GAAiBrH,EAAMwH,gBAAgB,EACpFgE,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAsB,MAAfA,EAAMA,MAAgB,OAASA,EAAMwH,KAAKwO,OAAOhW,EAAO0S,GAAqB1S,MACpFoL,SAAUA,EACVM,cAAc,KAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAUz4B,EAAMwH,KAChBxH,MAAOA,EAAMA,MACb0L,cAAc,EACdN,SAAUA,IAEdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU2nB,WAChB3f,OAAmC/I,EAAMwH,KAAM6K,UAAU,WAAY86B,GACrExkB,aAAa,EACbC,iBAAkB,EAClBld,cAAc,EACdN,SAAUA,KAKlBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAGVrM,EAAIqI,KAAK+kC,WAAW/iC,OAAS,IAC7BoC,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,KACPoL,SAAUA,EACVM,cAAc,IAElBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChB0M,SAAUnmB,EACV0Z,SAAUrrB,EAAUsD,KACpBqH,cAAc,EACdN,SAAUA,KAOtBI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAU0tB,aAChBgK,SAAU/lB,EACV1S,MAAO,IACPoL,SAAUA,EACVM,cAAc,IAGlBF,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUorB,SAChBC,SAAUrrB,EAAUsD,KACpBw0B,SAAUnmB,EACVhH,cAAc,EACdN,SAAUA,IAWdI,EAAWL,KAAK,CACZ3D,KAAMzG,EAAUkgB,OAChBiG,iCAAiC,EACjCC,wBAAwB,EACxBzb,cAAc,EACdN,SAAUA,EACVgiC,mBAAmB,IAGvB,IAAItkC,EAAmB,CACnBhK,OAAQsI,KAAKtI,OACb0M,WAAYA,EACZiC,aAAc,MAGd1E,EAAiB,IAAIZ,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EAAqB5J,GAAS,GAAO,GAGxG,OAFA1B,KAAKi7B,YAAYgL,SAAStkC,EAAQ,GAAI,IAAM6kC,QAAQC,IAAI,0BAA0B,GAE3E,GAGX,OACI,OAAOzmC,KAAK+kC,WAAW/iC,OAG3B,UACI,OAAiC,GAA1BhC,KAAK+kC,WAAW/iC,OAG3B,YAAY9I,GACR,OAAkC,MAA3B8G,KAAK4C,IAAIpK,IAAIU,EAAIN,OAG5B,cAAcA,GACV,IAAI,IAAI4K,KAAKxD,KAAK+kC,WACd,GAAGvhC,EAAE5K,OAASA,EAAMA,MAAO,OAAO,EAEtC,OAAO,EAGX,QACIoH,KAAK+kC,WAAa,GAClB/kC,KAAKu5F,SAAW,GAChBv5F,KAAK4C,IAAIigC,SCvQX,MAAO,WAAqB,EAE9B,YAAYnrC,GAER2J,MAAM,UAAW3J,EAAQ,wEAEzB,IAAIyW,EAAazW,EAAO4lB,UAAUC,QAAQ,UAE1Cvd,KAAKqd,aAAoBlP,GAEzB,IAAIgrF,EAAuBhrF,EAAYywB,QACvCu6D,EAAMp/F,WAAa,IACnBo/F,EAAMzzF,gBAAiB,EAEvB,IAAI0zF,EAAoB,CACpBr/F,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAM+4F,GAEVn5F,KAAKyF,cAAc1B,KAAKq1F,GAExB,IAAIC,EAAuBlrF,EAAYywB,QACvCy6D,EAAMt/F,WAAa,IACnBs/F,EAAM3zF,gBAAiB,EAEvB,IAAI4zF,EAAoB,CACpBv/F,WAAY,IACZylB,UAAW,CAAEpW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACzCyd,QAAS,CAAErW,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GACvC5B,KAAMi5F,GAEVr5F,KAAKyF,cAAc1B,KAAKu1F,GAIxB,IAAI1yD,EAA2BlvC,EAAO4lB,UAAUC,QAAQ,OAAQqhB,QAChEgI,EAAanhC,cAAgB,CAAC2zF,EAAKE,GAEnCt5F,KAAK4F,WAAW7B,KAAK6iC,GAErB5mC,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCiuC,EAAK,IAAI,GAAUzuC,EAAGV,EAAO47B,KAAK+M,iBAAkB3oC,GACxDU,EAAE4K,cAAF,UAA+B6jC,IAEhC,GAAO,EAAO,iCAAiC,IAGtD7mC,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACpF,CAAE/G,WAAY,QAASqG,KAAMi5F,EAAOlqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtFu4F,EACCv3F,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCM,EAAa4I,EAAW,GACxBlJ,EAAekJ,EAAW,GAG9B,OAFoB1J,EAAE4K,cAAF,UAEVK,IAAInK,EAAKN,KAEpB,GAAO,EAAO,uQAErBoH,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD,KACCZ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,UAEV6/B,SAGd,GAAO,EAAO,sDAElB7iC,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCM,EAAa4I,EAAW,GAG5B,OAFoB1J,EAAE4K,cAAF,UAEVy2F,YAAYvgG,KAG1B,GAAO,EAAO,oFAElB8G,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,QAASqG,KAAMi5F,EAAOlqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACtFoO,EACCpN,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCA,EAAekJ,EAAW,GAG9B,OAFoB1J,EAAE4K,cAAF,UAEV02F,cAAc9gG,KAG5B,GAAO,EAAO,gEAElBoH,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,CAC/C,CAAE3I,WAAY,MAAOqG,KAAM+4F,EAAOhqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFu4F,EACCv3F,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCM,EAAa4I,EAAW,GAGxB0B,EAFgBpL,EAAE4K,cAAF,UAEFxK,IAAIU,GACtB,OAAY,MAALsK,EAAY,KAAOA,EAAE5K,QAGhC,GAAO,EAAO,mHAGlBoH,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnDwM,EACCpN,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,UAEV0iC,WAGd,GAAO,EAAO,qCAElB1lC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,UAEV2iC,QAGd,GAAO,EAAO,4DAElB3lC,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IAAK4I,EACxDxJ,GAE0BA,EAAW,GAAGlJ,MACfoK,cAAF,UAEV4iC,aAEX,GAAO,KC3JhB,MAAO,WAAsB,EAE/B,YAAYluC,GAER2J,MAAM,WAAY3J,EAAQ,WAE1BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCg6F,EAAyB,GAC7B,IAAI,IAAIj7F,EAAI,EAAGA,GAAK,EAAGA,IACnBi7F,EAAa7uF,KAAKjC,EAAWnK,GAAGiB,OAGpC,IAAIi6F,EAAK,IAAI,GAAcD,GAAc,EAAMl7F,EAAO47B,KAAK+M,iBAAkBjoC,GAC7EA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,kCAAkC,IAEvD7yF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAoBzxF,EAAE4K,cAAF,MAExB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,gEAAgE,KCpCvF,MAAO,WAA2B,EAEpC,YAAYxL,GAER2J,MAAM,gBAAiB3J,EAAQ,uEAE/BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAClD,IAAIo8E,EAAsBjiG,EAAO4lB,UAAUC,QAAQ,aAC/Cq8E,EAAkBliG,EAAO4lB,UAAUC,QAAQ,SAK/Cvd,KAAKwJ,UAAU,IAAIzI,EAAO,MAAO,IAAI2B,EAAc,IAAK1C,KACnD8B,IAEG,IAAI1J,EAAmB,IAAI,EAAc4H,MAIzC,IAAIgD,EAA4C,CAC5C0lD,KAHQ,IAAIC,MAQhB,OAFAvwD,EAAE4K,cAAgBA,EAEX5K,IAER,GAAO,EAAM,6GACd,IAEN4H,KAAKwJ,UAAU,IAAIzI,EAAO,KAAM,IAAI2B,EAAc,CAC9C,CAAE3I,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,aAAcqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAElGd,KACC8B,IAEG,IAAI1J,EAAmB,IAAI,EAAc4H,MACrC65F,EAAetuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACxCkhG,EAAgBvuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACzCmhG,EAAqBxuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAC9CohG,EAAezuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACxCqhG,EAAiB1uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAC1CshG,EAAiB3uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAI9C,IAAIoK,EAA4C,CAC5C0lD,KAHO,IAAIC,KAAKkxC,EAAMC,EAAQ,EAAGC,EAAYC,EAAMC,EAAQC,IAQ/D,OAFA9hG,EAAE4K,cAAgBA,EAEX5K,IAER,GAAO,EAAM,qJACd,IAEN4H,KAAKwJ,UAAU,IAAIzI,EAAO,KAAM,IAAI2B,EAAc,CAC9C,CAAE3I,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAMw5F,EAAWzqF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC1F,CAAE/G,WAAY,aAAcqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAElGd,KACC8B,IAEG,IAAI1J,EAAmB,IAAI,EAAc4H,MACrC65F,EAAetuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACxCkhG,EAA2Bh4F,EAAW,GAAGlJ,MACzCmhG,EAAqBxuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAC9CohG,EAAezuF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OACxCqhG,EAAiB1uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAC1CshG,EAAiB3uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAI9C,IAAIoK,EAA4C,CAC5C0lD,KAHO,IAAIC,KAAKkxC,EAAMC,EAAMx9E,UAAUQ,QAASi9E,EAAYC,EAAMC,EAAQC,IAQ7E,OAFA9hG,EAAE4K,cAAgBA,EAEX5K,IAER,GAAO,EAAM,qJACd,IAEN4H,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuhG,EAAe5uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAExCwhG,EAA8ChiG,EAAE4K,cAAgB0lD,KAChE2xC,EAAgB,IAAI1xC,KAAKyxC,EAAQpjC,UAAiB,GAALmjC,EAAQ,KAAK,KAE1D9J,EAAoB,IAAI,EAAcrwF,MAEtCgD,EAA4C,CAC5C0lD,KAAM2xC,GAKV,OAFAhK,EAAGrtF,cAAgBA,EAEZqtF,IAER,GAAO,EAAO,uIAAuI,IAE5JrwF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,OAAQqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGd,KACC8B,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCuhG,EAAe5uF,KAAKuF,MAAMhP,EAAW,GAAGlJ,OAExCwhG,EAA8ChiG,EAAE4K,cAAgB0lD,KAChE2xC,EAAgB,IAAI1xC,KAAKyxC,EAAQpjC,UAAiB,GAALmjC,EAAQ,KAAK,KAE1D9J,EAAoB,IAAI,EAAcrwF,MAEtCgD,EAA4C,CAC5C0lD,KAAM2xC,GAKV,OAFAhK,EAAGrtF,cAAgBA,EAEZqtF,IAER,GAAO,EAAO,uIAAuI,IAE5JrwF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,OAAQqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFyN,EACCzM,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCy3F,EAAoBvuF,EAAW,GAAGlJ,MAElC0hG,EAA8CliG,EAAE4K,cAAgB0lD,KAAKsO,UACrEujC,EAA8ClK,EAAGrtF,cAAgB0lD,KAAKsO,UAE1E,OAAOzrD,KAAKoG,KAAK2oF,EAAQC,KAE1B,GAAO,EAAO,kJAAkJ,IAEvKv6F,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,OAAQqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpFyN,EACCzM,IACG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCy3F,EAAoBvuF,EAAW,GAAGlJ,MAKtC,OAHkDR,EAAE4K,cAAgB0lD,KAAKsO,UACvBq5B,EAAGrtF,cAAgB0lD,KAAKsO,WAEnE,QAER,GAAO,EAAO,kFAAkF,IAEvGh3D,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAKM,eAE7D,GAAO,EAAO,yBAAyB,IAE9ChpD,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IACzD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAKK,WAAa,GAE1E,GAAO,EAAO,oFAAoF,IAEzG/oD,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IACzD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAKI,WAE7D,GAAO,EAAO,iEAAiE,IAEtF9oD,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAKuX,YAE7D,GAAO,EAAO,+CAA+C,IAEpEjgE,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAKwX,cAE7D,GAAO,EAAO,2BAA2B,IAEhDlgE,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD6L,EACCzM,GAC0BA,EAAW,GAAGlJ,MAEEoK,cAAgB0lD,KAAK8xC,cAE7D,GAAO,EAAO,4BAA4B,IAEjDx6F,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,IACG,IAEI4mD,EAFmB5mD,EAAW,GAAGlJ,MAEMoK,cAAgB0lD,KAEvD+xC,EAAM7hG,GACHA,EAAQ,GAAW,IAAMA,EACrB,GAAKA,EAGhB,MAAO,GAAG6hG,EAAG/xC,EAAKI,cAAc2xC,EAAG/xC,EAAKK,WAAa,MAAM0xC,EAAG/xC,EAAKM,kBAAkByxC,EAAG/xC,EAAKuX,eAAew6B,EAAG/xC,EAAKwX,iBAAiBu6B,EAAG/xC,EAAK8xC,kBAE9I,GAAO,EAAO,yDAAyD,IAE9Ex6F,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxDi3F,EACC73F,IACG,IAEI44F,EAFmB54F,EAAW,GAAGlJ,MAEKoK,cAAgB0lD,KAAKiyC,SAC/D,OAAOhB,EAAcn9E,aAAak+E,EAAM,GAAGrhG,SAE5C,GAAO,EAAO,yHAAyH,IAE9I2G,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpDk3F,EACC93F,IACG,IAEI84F,EAFmB94F,EAAW,GAAGlJ,MAEYoK,cAAgB0lD,KAAKK,WACtE,OAAO6wC,EAAUp9E,aAAao+E,GAAYvhG,SAE3C,GAAO,EAAO,wGAAwG,KAO/H,MAAO,WAAsB,EAE/B,YAAY3B,GACR2J,MAAM,YAAa3J,EAAQ,CACvB,CACI0I,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,UAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,YAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,YAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,cAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,WAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,WAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,aAIpBiG,KAAKD,cAAgB,aAIvB,MAAO,WAAkB,EAE3B,YAAYrI,GACR2J,MAAM,QAAS3J,EAAQ,CACnB,CACI0I,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,UAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,WAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,SAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,OAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,QAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,UAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,aAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,WAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,YAEhB,CACIqG,KAAMzG,EAAU2mB,cAChBtc,SAAU,KACVjK,WAAY,cAIpBiG,KAAKD,cAAgB,SC1XvB,MAAO,WAAkB,EAE3B,YAAYrI,GAER2J,MAAM,OAAQ3J,EAAQ,gDAEtBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCowE,EAAalnE,EAAW,GAAGlJ,MAC3BqwE,EAAannE,EAAW,GAAGlJ,MAC3BswE,EAAapnE,EAAW,GAAGlJ,MAC3BuwE,EAAarnE,EAAW,GAAGlJ,MAI3Bi6F,EAAK,IAAI,GAFgB,CAAC7pB,EAAIC,EAAIC,EAAIC,IAED,EAAOzxE,EAAO47B,KAAK+M,iBAAkBjoC,GAC9EA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,2EAA2E,IAE5F7yF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAoBzxF,EAAE4K,cAAF,MAExB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,uDAAuD,IAExElD,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BsJ,EAAgBJ,EAAW,GAAGlJ,MAC9BixF,EAAoBzxF,EAAE4K,cAAF,MAEpB6mF,EAAGC,cAAc,aAErBD,EAAGgR,SAAS9mD,EAAGC,EAAG9xC,EAAQ,KAE3B,GAAO,EAAO,qGAAqG,IAE1HlC,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCowE,EAAalnE,EAAW,GAAGlJ,MAC3BqwE,EAAannE,EAAW,GAAGlJ,MAC3BswE,EAAapnE,EAAW,GAAGlJ,MAC3BuwE,EAAarnE,EAAW,GAAGlJ,MACnBixF,EAAoBzxF,EAAE4K,cAAF,MAE5B6mF,EAAGC,cAAc,cAErBD,EAAGiR,UAAU9xB,EAAIC,EAAIC,EAAIC,KAE1B,GAAO,EAAO,oGAAoG,KCjFnI,MAAO,WAAqB,EAE9B,YAAYzxE,GAER2J,MAAM,UAAW3J,EAAQ,gDAEzBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,GAClH,CAAElI,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KAClH,KACCH,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAE1BmiG,EAA+B,IAAIj7F,IACvCi7F,EAAS13F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,IACrDgnD,EAAS13F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOo7C,IACrD57C,EAAE6K,gBAAgBI,IAAI,UAAW03F,KAElC,GAAO,EAAO,iFAAiF,IAEtG/6F,KAAKwJ,UAAU,IAAIzI,EAAO,uBAAwB,IAAI2B,EAAc,CAChE,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,GAClH,CAAElI,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACzHjC,KACC8B,IAEG,IAAI1J,EAAmB,IAAI,EAAc4H,MACrCvH,EAAYqJ,EAAW,GAAGlJ,MAC1BoiG,EAAmBl5F,EAAW,GAAGlJ,MAErCoiG,GAAYzvF,KAAKmgE,GAAG,IAEpB,IAAIqvB,EAA+B,IAAIj7F,IAKvC,OAJAi7F,EAAS13F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAO2S,KAAKqgE,IAAIovB,GAAYviG,IAC1EsiG,EAAS13F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAO2S,KAAKsgE,IAAImvB,GAAYviG,IAC1EL,EAAE6K,gBAAgBI,IAAI,UAAW03F,GAE1B3iG,IAER,GAAO,EAAM,6NAA6N,IAEjP4H,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD4I,EACCxJ,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WAIzD,MAAO,IAHSuiG,EAASviG,IAAI,KAAKI,SAClBmiG,EAASviG,IAAI,KAAKI,WAInC,GAAO,EAAO,gEAAgE,IAErFoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvDuM,EACCnN,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9B6yE,EAAQlgE,KAAKitF,MAAMxkD,EAAGD,GAAGxoC,KAAKmgE,GAAG,IAErC,OAAOD,GAAS,EAAIA,EAAQ,IAAMA,IAEnC,GAAO,EAAO,kDAAkD,IAEvEzrE,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvDuM,EACCnN,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9B6yE,EAAQlgE,KAAKitF,MAAMxkD,EAAGD,GAE1B,OAAO03B,GAAS,EAAIA,EAAkB,EAAVlgE,KAAKmgE,GAASD,IAE3C,GAAO,EAAO,sDAAsD,IAE3EzrE,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrDuM,EACCnN,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAElC,OAAO2S,KAAK0/D,KAAKl3B,EAAEA,EAAEC,EAAEA,KAExB,GAAO,EAAO,sCAAsC,IAE3Dh0C,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD1C,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9By3F,EAAoB,IAAI,EAAcrwF,MACtCgC,EAAiBuJ,KAAK0/D,KAAKl3B,EAAEA,EAAIC,EAAEA,GAEpCzoC,KAAK6pD,IAAIpzD,GAAU,OAClB+xC,GAAK/xC,EACLgyC,GAAKhyC,IAEL+xC,EAAI,EACJC,EAAI,GAGR,IAAIinD,EAAgC,IAAIn7F,IAKxC,OAJAm7F,EAAU53F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,IACtDknD,EAAU53F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOo7C,IACtDq8C,EAAGptF,gBAAgBI,IAAI,UAAW43F,GAE3B5K,IAER,GAAO,EAAO,qHAAqH,IAE1IrwF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACvHjC,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9BoJ,EAAiBF,EAAW,GAAGlJ,MAE/BhB,EAAI2T,KAAK0/D,KAAKl3B,EAAEA,EAAIC,EAAEA,GACvBp8C,EAAI,IAEHmjG,EAASviG,IAAI,KAAKI,MAAQm7C,EAAEn8C,EAAEoK,EAC9B+4F,EAASviG,IAAI,KAAKI,MAAQo7C,EAAEp8C,EAAEoK,KAInC,GAAO,EAAO,mHAAmH,IAExIhC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,SAAUqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACxGjC,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAG9BqiG,EADoBn5F,EAAW,GAAGlJ,MACCqK,gBAAgBzK,IAAI,WACvDwwE,EAAaiyB,EAAUziG,IAAI,KAAKI,MAChCqwE,EAAagyB,EAAUziG,IAAI,KAAKI,MAEhCsiG,EAAsB,IAAI,EAAcl7F,MACxCm7F,EAAkC,IAAIr7F,IAK1C,OAJAq7F,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,EAAIi1B,IAC5DmyB,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOo7C,EAAIi1B,IAC5DiyB,EAAKj4F,gBAAgBI,IAAI,UAAW83F,GAE7BD,IAER,GAAO,EAAO,+KAA+K,IAEpMl7F,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,CACjD,CAAE3I,WAAY,SAAUqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACxGjC,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAG9BqiG,EADoBn5F,EAAW,GAAGlJ,MACCqK,gBAAgBzK,IAAI,WACvDwwE,EAAaiyB,EAAUziG,IAAI,KAAKI,MAChCqwE,EAAagyB,EAAUziG,IAAI,KAAKI,MAEhCsiG,EAAsB,IAAI,EAAcl7F,MACxCm7F,EAAkC,IAAIr7F,IAK1C,OAJAq7F,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,EAAIi1B,IAC5DmyB,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOo7C,EAAIi1B,IAC5DiyB,EAAKj4F,gBAAgBI,IAAI,UAAW83F,GAE7BD,IAER,GAAO,EAAO,uLAAuL,IAE5Ml7F,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,CACzD,CAAE3I,WAAY,UAAWqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,GACzG,CAAElI,WAAY,UAAWqG,KAAMJ,KAAMmP,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACzGgN,EACCnN,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAG9BqiG,EADoBn5F,EAAW,GAAGlJ,MACCqK,gBAAgBzK,IAAI,WAI3D,OAAOu7C,EAHUknD,EAAUziG,IAAI,KAAKI,MAGtBo7C,EAFGinD,EAAUziG,IAAI,KAAKI,QAIrC,GAAO,EAAM,sDAAsD,IAG1EoH,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACvHjC,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9Bc,EAAYoI,EAAW,GAAGlJ,MAE1BsiG,EAAsB,IAAI,EAAcl7F,MACxCm7F,EAAkC,IAAIr7F,IAK1C,OAJAq7F,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,EAAEr6C,IAC1DyhG,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOo7C,EAAEt6C,IAC1DwhG,EAAKj4F,gBAAgBI,IAAI,UAAW83F,GAE7BD,IAER,GAAO,EAAO,uLAAuL,IAE5Ml7F,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,WAAYqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,EAAMmB,YAAY,KACzHjC,KACC8B,IAEG,IAEIi5F,EAFmBj5F,EAAW,GAAGlJ,MAEAqK,gBAAgBzK,IAAI,WACrDu7C,EAAYgnD,EAASviG,IAAI,KAAKI,MAC9Bo7C,EAAY+mD,EAASviG,IAAI,KAAKI,MAE9B6yE,GAAiB3pE,EAAW,GAAGlJ,MAAM2S,KAAKmgE,GAAG,IAC7CG,EAActgE,KAAKsgE,IAAIJ,GACvBG,EAAcrgE,KAAKqgE,IAAIH,GAEvByvB,EAAsB,IAAI,EAAcl7F,MACxCm7F,EAAkC,IAAIr7F,IAK1C,OAJAq7F,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,EAAE63B,EAAM53B,EAAE63B,IAClEsvB,EAAY93F,IAAI,IAAK,CAACjD,KAAM6O,EAAqBrW,MAAOm7C,EAAE83B,EAAM73B,EAAE43B,IAClEsvB,EAAKj4F,gBAAgBI,IAAI,UAAW83F,GAE7BD,IAER,GAAO,EAAO,6MAA6M,IAG9Nl7F,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,CACpD,CAAE3I,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,KAAMqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGmO,EACCnN,IACG,IAAIknE,EAAqBlnE,EAAW,GAAGlJ,MACnCqwE,EAAqBnnE,EAAW,GAAGlJ,MAGnC6sE,EAFqB3jE,EAAW,GAAGlJ,MAEzBowE,EACVtD,EAFqB5jE,EAAW,GAAGlJ,MAEzBqwE,EACd,OAAO19D,KAAK0/D,KAAKxF,EAAGA,EAAGC,EAAGA,KAC3B,GAAO,EAAM,0DAIxB1lE,KAAKyJ,aAAa,IAAI/I,EAAU,IAAKuO,EACjC,MAAM,EAAOrV,EAAWsM,QAAQ,EAAO,6BAE3ClG,KAAKyJ,aAAa,IAAI/I,EAAU,IAAKuO,EACjC,MAAM,EAAOrV,EAAWsM,QAAQ,EAAO,8BCjT7C,MAAO,WAA+B,EAExC,YAAYxO,GACR2J,MAAM,gBAAiB3J,EAAQ,uNAE/BsI,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACA,MACA,GAAO,EAAO,kFAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACA,MACA,GAAO,EAAO,+EAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,6EAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,iFAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,mFAOpB,MAAO,WAA0B,EAEnC,YAAY7Y,GACR2J,MAAM,eAAgB3J,EAAQ,4OAE9B,IAAI8qF,EAA4C9qF,EAAO4lB,UAAUC,QAAQ,iBAEzEvd,KAAK4F,WAAW7B,KAAKy+E,GAErBxiF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACA,MACA,GAAO,EAAO,kFAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACA,MACA,GAAO,EAAO,+EAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,6EAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,iFAElBvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChGyP,EACA,MACA,GAAO,EAAO,mFCvFpB,MAAO,WAA6B,EAEtC,YAAY7Y,GACR2J,MAAM,kBAAmB3J,EAAQ,0IAEjC,IAAIyW,EAAoBzW,EAAO4lB,UAAUC,QAAQ,UACjDvd,KAAKqd,aAAalP,GAElBnO,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,UAAWqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACHoK,cAAF,OAC5B2I,EAAkB7J,EAAW,GAAGlJ,MAChCwiG,EAAsBt5F,EAAW,GAAGlJ,MAExCkqF,EAAG9G,KAAKrwE,EAASyvF,KAElB,GAAO,EAAO,+RAA+R,IAEhTp7F,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,YAAaqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACxG,CAAE/G,WAAY,OAAQqG,KAAM+N,EAAYgB,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1FyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACHoK,cAAF,OAC5B9J,EAAc4I,EAAW,GAAGlJ,MAC5BA,EAAuBkJ,EAAW,GAAGlJ,MAEzCkqF,EAAGuY,YAAYniG,EAAKN,KAErB,GAAO,EAAO,+NAA+N,IAEpPoH,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,YAAaqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACxGqN,EACCrM,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACHoK,cAAF,OAC5B9J,EAAc4I,EAAW,GAAGlJ,MAEhC,OAAOkqF,EAAGwY,YAAYpiG,KAEvB,GAAO,EAAO,meAAme,IAExf,IAAIqiG,EAA6D,CAAC,CAACj4F,IAAK,UAAWnL,OAAQ,eAAgBqjG,KAAM,YAChH,CAACl4F,IAAK,eAAgBnL,OAAQ,cAAeqjG,KAAM,iBACpD,CAACl4F,IAAK,WAAYnL,OAAQ,cAAeqjG,KAAM,iBAAkB,CAACl4F,IAAK,WAAYnL,OAAQ,cAAeqjG,KAAM,iBAEhH,IAAK,IAAIrjG,KAAUojG,EACfv7F,KAAKwJ,UAAU,IAAIzI,EAAO5I,EAAOA,OAAQ,IAAIuK,EAAc,IACvD4I,EACCxJ,GAE0BA,EAAW,GAAGlJ,MACHoK,cAAF,OAEtB7K,EAAOmL,MAElB,GAAO,EAAO,YAAcnL,EAAOqjG,KAAO,wBAAwB,IAI7Ex7F,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6L,EACCzM,GAE0BA,EAAW,GAAGlJ,MACHoK,cAAF,OAEtBd,OAEX,GAAO,EAAO,2cAA2c,KAQte,MAAOu5F,GAOT,YAAmB51D,EAAsC61D,EAC7C75F,EAAmBk9D,EAAwBC,EAA6BoV,EAAyBunB,GAD1F,KAAA91D,gBAAsC,KAAA61D,kBAC7C,KAAA75F,KAAmB,KAAAk9D,UAAwB,KAAAC,eAA6B,KAAAoV,WAAyB,KAAAunB,WAN7G,KAAAC,cAAgD,GAChD,KAAA15F,MAAgB,EAET,KAAA25F,WAAqB,EAO5B,KAAKlwF,EAAiByvF,GAClBp7F,KAAK07F,gBAAgBI,aAAa97F,KAAK6B,GAAI8J,EAASyvF,GAGxD,YAAYliG,GACR,OAAO8G,KAAK47F,cAAc1iG,GAG9B,YAAYA,EAAaN,GACrBoH,KAAK47F,cAAc1iG,GAAON,GCvG5B,MAAO,WAAuB,EAEhC,YAAYlB,GACR2J,MAAM,YAAa3J,EAAQ,4SAE3BsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAClD,IAAIw+E,EAA6BrkG,EAAO4lB,UAAUC,QAAQ,mBACtDy+E,EAA+BtkG,EAAO4lB,UAAUC,QAAQ,UAE5Dvd,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,IACrD,KACCZ,I,QAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MAEjCqiC,EAA+B,QAApB,EAAc,QAAd,EAAGj7B,KAAKtI,cAAM,eAAE47B,YAAI,eAAE+M,iBAEjCyiD,EAAK,IAAI,GAAgB1qF,EAAG6iC,EAAa8gE,EAAqBC,GAElE5jG,EAAE4K,cAAF,OAA4B8/E,IAE7B,GAAO,EAAO,2CAA2C,IAEhE9iF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAC1G,CAAE/G,WAAY,WAAYqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCqjG,EAAsBn6F,EAAW,GAAGlJ,MACpCsjG,EAAmBp6F,EAAW,GAAGlJ,MAEjCkqF,EAAsB1qF,EAAE4K,cAAF,OAC1B8/E,EAAGqZ,QAAQF,EAAaC,GAExB9jG,EAAE4K,cAAF,OAA4B8/E,IAE7B,GAAO,EAAO,4RACjB,IAEJ9iF,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,UAAWqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1GyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACToK,cAAF,OACtB2I,EAAkB7J,EAAW,GAAGlJ,MAChCwiG,EAAsBt5F,EAAW,GAAGlJ,MAExCkqF,EAAGsZ,UAAUzwF,EAASyvF,KAEvB,GAAO,EAAO,qTAAqT,IAE1Up7F,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACjGyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACToK,cAAF,OACtBq5F,EAAgBv6F,EAAW,GAAGlJ,MAElCkqF,EAAGwZ,qBAAqBD,KAEzB,GAAO,EAAO,gOAAgO,IAErPr8F,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,CACvD,CAAE3I,WAAY,YAAaqG,KAAM,IAAI,EAAUkL,GAAsB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvHyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACToK,cAAF,OAGtBu5F,EAF2Bz6F,EAAW,GAAGlJ,MAEHgK,IAAK45F,GAAQA,EAAI5jG,OAE3DkqF,EAAG2Z,yBAAyBF,KAE7B,GAAO,EAAO,2MAA2M,IAEhOv8F,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,WAAYqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyP,EACCzO,IAEG,IACIghF,EADmBhhF,EAAW,GAAGlJ,MACToK,cAAF,OACtBk5F,EAAmBp6F,EAAW,GAAGlJ,MAErCkqF,EAAG2Z,yBAAyB,CAACP,MAE9B,GAAO,EAAO,uMAAuM,IAE5Nl8F,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD6N,EACCzO,IAE0BA,EAAW,GAAGlJ,MACToK,cAAF,OAEvB05F,eAEJ,GAAO,EAAO,yKAAyK,IAE9L18F,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD,KACA,MACA,GAAO,EAAO,+EAA+E,IAEjG1C,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,IACnD,KACA,MACA,GAAO,EAAO,8DAA8D,IAEhF1C,KAAKwJ,UAAU,IAAIzI,EAAO,YAAa,IAAI2B,EAAc,CACrD,CAAE3I,WAAY,SAAUqG,KAAM27F,EAAqB5sF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrG,CAAE/G,WAAY,UAAWqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACtG,CAAE/G,WAAY,cAAeqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,0FAA0F,IAE5Gd,KAAKwJ,UAAU,IAAIzI,EAAO,yBAA0B,IAAI2B,EAAc,CAClE,CAAE3I,WAAY,cAAeqG,KAAM27F,EAAqB5sF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,+HAA+H,IAEjJd,KAAKwJ,UAAU,IAAIzI,EAAO,4BAA6B,IAAI2B,EAAc,CACrE,CAAE3I,WAAY,cAAeqG,KAAM27F,EAAqB5sF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1G,KACA,MACA,GAAO,EAAO,uIAAuI,IAEzJd,KAAKwJ,UAAU,IAAIzI,EAAO,iBAAkB,IAAI2B,EAAc,CAC1D,CAAE3I,WAAY,UAAWqG,KAAM,IAAI,EAAU27F,GAAsB5sF,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACrH,CAAE/G,WAAY,WAAYqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACpG,KACA,MACA,GAAO,EAAO,qHAAqH,KAOzI,MAAO,GAgBT,YAAoB+kC,EAAsC5K,EAC9C8gE,EAAoCC,GAD5B,KAAAn2D,gBAAsC,KAAA5K,cAC9C,KAAA8gE,sBAAoC,KAAAC,kBARhD,KAAAW,WAAsC,GACtC,KAAAC,cAAyD,GAIzD,KAAArrD,QAAkB,EA0DlB,KAAAsrD,eAA2B,GArDvB,IAAI95F,EAAsB8iC,EAAc3iC,MAQxClD,KAAK88F,aAAe/5F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,YAAfA,EAAE6J,WAC9C5B,KAAK+8F,cAAgBh6F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,aAAfA,EAAE6J,WAC/C5B,KAAKg9F,gBAAkBj6F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,8CAAfA,EAAE6J,WACjD5B,KAAKi9F,wBAA0Bl6F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,2CAAfA,EAAE6J,WACzD5B,KAAKk9F,2BAA6Bn6F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,8CAAfA,EAAE6J,WAC5D5B,KAAKm9F,qBAAuBp6F,EAAMgD,QAAQ0pB,KAAK13B,GAAoB,0CAAfA,EAAE6J,WAI1D,QAAQq6F,EAAqBC,GAEtBl8F,KAAKi7B,YAAY3H,KAAK+qB,aACrBr+C,KAAKi7B,YAAY6J,eAAe,iKAKpC2F,GAAK,oBAAqB,GAAKW,IAE3B,IAAIV,GAAegK,OAAO0oD,SAASC,SAAS5tF,WAAW,SAAW,SAAW,SAAWilC,OAAO0oD,SAASE,KAAO,aAC/Gt9F,KAAKu9F,WAAa,IAAIC,UAAU9yD,GAEhC1qC,KAAKu9F,WAAWE,QAAWzyF,IAAmBhL,KAAK09F,QAAQ1yF,IAC3DhL,KAAKu9F,WAAWI,QAAW9rD,IAAwB7xC,KAAK49F,QAAQ/rD,IAChE7xC,KAAKu9F,WAAWxuB,UAAal9B,IAA0B7xC,KAAK69F,UAAUhsD,IAEtE7xC,KAAKu9F,WAAWO,OAAUjsD,IACtB,IAAIlH,EAAmC,CACnCliC,QAAS,EACT8N,MAAO60B,EAAS70B,MAChBolF,SAAUO,EACVD,YAAaA,GAGjBj8F,KAAKi7B,YAAYogD,kCAAkCt3E,KAAK/D,KAAKu9F,YAC7Dv9F,KAAKuxC,QAAS,EACdvxC,KAAK+9F,WAAWtjE,KAAKC,UAAUiQ,IAC/B3qC,KAAKg+F,YASjB,WAAWryF,GAEP,GAAK3L,KAAKuxC,OAGN,IACIvxC,KAAKu9F,WAAWvhB,KAAKrwE,GACvB,MAAOuyE,GACL13C,QAAQC,IAAIy3C,QALhBl+E,KAAK68F,eAAe94F,KAAK4H,GAUjC,QAAQkmC,GACJ7xC,KAAKuxC,QAAS,EACdvxC,KAAKi+F,UAAUj+F,KAAK+8F,cAAe,IAGvC,aAAamB,EAAkBjzD,EAAc5Z,GACzC,IAAI1lB,EAAwC,CACxClD,QAAS,EACTwiC,KAAMA,EACN5Z,SAAUA,EACV8sE,aAAcD,GAElBl+F,KAAK+9F,WAAWtjE,KAAKC,UAAU/uB,IAGnC,UAAUs/B,EAAc5Z,GACpB,IAAI1lB,EAAqC,CACrClD,QAAS,EACTwiC,KAAMA,EACN5Z,SAAUA,GAEdrxB,KAAK+9F,WAAWtjE,KAAKC,UAAU/uB,IAGnC,aAII3L,KAAK+9F,WAAWtjE,KAAKC,UAHqB,CACtCjyB,QAAS,KAGbzI,KAAKu9F,WAAW/mD,QAChB,IAAI4nD,EAAMp+F,KAAKi7B,YAAYogD,kCAC3B+iB,EAAIlnF,OAAOknF,EAAIz5F,QAAQ3E,KAAKu9F,YAAa,GAG7C,UAAU1rD,GAEN,IAAIzG,EAA8B3Q,KAAKY,MAAMwW,EAAM5G,MACnD,GAAwB5iC,MAApB+iC,EAAS3iC,QAEb,OAAQ2iC,EAAS3iC,SACb,KAAK,EACD,IAAI41F,EAAsB,IAAI,EAAcr+F,KAAK+7F,qBACjDsC,EAAoB9sF,4BACpB,IAAI+sF,EAA6B,IAAI7C,GAAsB4C,EAAqBr+F,KAAMorC,EAASmzD,QAC3FnzD,EAAS2zB,QAAS3zB,EAAS4zB,aAAc5zB,EAASgpC,SAAUhpC,EAASuwD,UACzE0C,EAAoBr7F,cAApB,OAA8Cs7F,EAC9Ct+F,KAAK28F,WAAW54F,KAAKu6F,GACrBt+F,KAAK48F,cAAcxxD,EAASmzD,SAAWD,EACvCt+F,KAAKi+F,UAAUj+F,KAAKi9F,wBAAyB,CAAC,CAAE78F,KAAMJ,KAAK+7F,oBAAqBnjG,MAAOylG,KACvF,MACJ,KAAK,EACD,IAAIG,EAAex+F,KAAK48F,cAAcxxD,EAASqzD,gBAC/C,GAAoB,MAAhBD,EAAsB,OAC1Bx+F,KAAKi+F,UAAUj+F,KAAKg9F,gBAAiB,CACjC,CAAE58F,KAAMJ,KAAK+7F,oBAAqBnjG,MAAO4lG,EAAa34D,eACtD,CAAEzlC,KAAMkL,EAAqB1S,MAAOwyC,EAASH,MAC7C,CAAE7qC,KAAMkL,EAAqB1S,MAAOwyC,EAAS/Z,YAEjD,MACJ,KAAK,EACD,IAAIqtE,EAAgB1+F,KAAK48F,cAAcxxD,EAASuzD,yBAChD,GAAqB,MAAjBD,EAAuB,OAC3B1+F,KAAK28F,WAAWzlF,OAAOlX,KAAK28F,WAAWh4F,QAAQ+5F,GAAgB,GAC/D1+F,KAAK48F,cAAcxxD,EAASuzD,8BAA2Bt2F,EACvDrI,KAAKi+F,UAAUj+F,KAAKk9F,2BAA4B,CAC5C,CAAE98F,KAAMJ,KAAK+7F,oBAAqBnjG,MAAO8lG,EAAc74D,iBAE3D,MACJ,KAAK,EACD7lC,KAAKg8F,gBAAgBvD,gBAAkBrtD,EAASwzD,iBAAmBj2C,KAAKjmB,MACxE1iC,KAAK6+F,UAAYzzD,EAASyzD,UAC1B,MACJ,KAAK,EACD,MACJ,KAAK,EACD7+F,KAAK8+F,eAAe1zD,IAKhC,eAAeA,GACX,IAAI2zD,EAAoB,EACpBC,EAAwB,GAE5B,IAAK,IAAIC,KAAU7zD,EAAS8zD,QACxB,GAAID,EAAOp9F,IAAM7B,KAAK6+F,UAClBE,EAAYE,EAAO/8F,UAChB,CACH,IAAIi9F,EAAcn/F,KAAK48F,cAAcqC,EAAOp9F,IACzB,MAAfs9F,IACAA,EAAYj9F,MAAQ+8F,EAAO/8F,MAC3B88F,EAAaj7F,KAAK,CACd3D,KAAMJ,KAAK+7F,oBACXnjG,MAAOumG,EAAYt5D,iBAMnC,IAAIu5D,EAAoB,CACpBh/F,KAAM,IAAI,EAAUJ,KAAK+7F,qBACzBnjG,MAAOomG,GAGXh/F,KAAKi+F,UAAUj+F,KAAKm9F,qBAAsB,CAACiC,EAAY,CAAEh/F,KAAMmO,EAAkB3V,MAAOmmG,KAI5F,QAAQ/zF,GACJhL,KAAKi7B,YAAY6J,eAAe,uCAGpC,SACI9kC,KAAKuxC,QAAS,EACXvxC,KAAK68F,eAAe76F,OAAS,IAC5BhC,KAAK68F,eAAe9tF,QAAQhX,GAAKiI,KAAK+9F,WAAWhmG,IACjDiI,KAAK68F,eAAiB,IAE1B78F,KAAKi+F,UAAUj+F,KAAK88F,aAAc,IAGtC,UAAUn7F,EAAgBggF,GACR,MAAVhgF,IACJggF,EAAczqE,OAAO,EAAG,EAAG,CACvB9W,KAAMJ,KAAK6lC,cAAc3iC,MACzBtK,MAAOoH,KAAK6lC,gBAGZ7lC,KAAKi7B,YAAYwgB,OAASC,GAAiBigC,gBAC3C37E,KAAKi7B,YAAYgnD,kCAAkCtgF,EAAOD,QAASigF,GAEnE3hF,KAAKi7B,YAAYgL,SAAStkC,EAAQggF,EAAe,QAAW,IAIpE,qBAAqB0a,GACjB,IAAI1wF,EAAuC,CACvClD,QAAS,EACT4zF,MAAOA,EACPE,UAAW,IAGfv8F,KAAK+9F,WAAWtjE,KAAKC,UAAU/uB,IAGnC,yBAAyB4wF,GACrB,IAAI5wF,EAAuC,CACvClD,QAAS,EACT4zF,MAAOE,EAAUv6F,OACjBu6F,UAAWA,GAGfv8F,KAAK+9F,WAAWtjE,KAAKC,UAAU/uB,KCrYjC,MAAO,WAAwB,EAEjC,YAAmBjU,GAEf2J,MAAM,UAAW3J,EAAQ,qBAFV,KAAAA,SAIfsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,WAClDvd,KAAKD,cAAgB,kYAQU,CAAC,CAAC,SAAU,yCAA0C,CAAC,SAAU,yCAChG,CAAC,UAAW,wDAAyD,CAAC,UAAW,wDACjF,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,UAAW,CAAC,MAAO,cAAe,CAAC,WAAY,6BAA8B,CAAC,SAAU,eAC1I,CAAC,QAAS,8BAA+B,CAAC,SAAU,4BAA6B,CAAC,UAAW,2CAC7F,CAAC,cAAe,+EAChB,CAAC,SAAU,oCAAqC,CAAC,UAAW,oCAAqC,CAAC,SAAU,oCAE5G,CAAC,SAAU,oCACX,CAAC,QAAS,uCACV,CAAC,YAAa,yCACd,CAAC,iBAAkB,4CACnB,CAAC,eAAgB,0CACjB,CAAC,QAAS,gCACV,CAAC,aAAc,wCACf,CAAC,OAAQ,kFACT,CAAC,QAAS,0CAEV,CAAC,UAAW,iGACZ,CAAC,UAAW,sGAICgP,QAAQxJ,IACjBvF,KAAKyJ,aAAa,IAAI/I,EAAU6E,EAAS,GAAIgJ,EAAmBlV,IAAaA,EAAOT,MAAQlB,EAAO47B,KAAK+M,iBAAiBy+C,iBAAiBugB,IAAI95F,EAAS,MACnJ,EAAO3L,EAAWsM,QAAQ,EAAMX,EAAS,OAGf,CAAC,CAAC,QAAS,iCAAkC,CAAC,MAAO,0CACvF,CAAC,MAAO,oCAAqC,CAAC,MAAO,kBAAmB,CAAC,MAAO,mBAGhEwJ,QAAQxJ,IACpBvF,KAAKyJ,aAAa,IAAI/I,EAAU6E,EAAS,GAAI+F,EAAsBjS,IAAaA,EAAOT,MAAQlB,EAAO47B,KAAK+M,iBAAiBy+C,iBAAiBugB,IAAI95F,EAAS,MACtJ,EAAO3L,EAAWsM,QAAQ,EAAMX,EAAS,OAGjDvF,KAAKyJ,aAAa,IAAI/I,EAAU,MAAO0O,EAAoB/V,IAAaA,EAAOT,MAAQlB,EAAO47B,KAAK+M,iBAAiBy+C,iBAAiBugB,IAAInmG,MACrI,EAAOU,EAAWsM,QAAQ,EAAM,2BAGpClG,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD,KACCZ,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCi6F,EAAuB7yF,KAAKs/F,oBAAoBlnG,GACpDA,EAAE4K,cAAF,WAAgC6vF,IAEjC,GAAO,EAAO,wCAAwC,IAE7D7yF,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,OAAQqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACnG,KACCgB,IAEG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WASvBi4B,EAAcvjC,EAAO47B,KAAK+M,iBAC9BpF,EAAYuoB,yBACZqvC,EAAGv/D,OACH2H,EAAYuoB,2BAEb,GAAO,EAAO,kCAAkC,IAEvDxjD,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD,KACCZ,IAEG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WAEvBi4B,EAAcvjC,EAAO47B,KAAK+M,iBAC9BpF,EAAYuoB,yBACZqvC,EAAGv/D,OACH2H,EAAYuoB,2BAEb,GAAO,EAAO,kCAAkC,IAEvDxjD,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD,KACCZ,IAE0BA,EAAW,GAAGlJ,MACRoK,cAAF,WAExBu8F,SAEJ,GAAO,EAAO,yGAAyG,IAE9Hv/F,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,IAClD,KACCZ,IAE0BA,EAAW,GAAGlJ,MACRoK,cAAF,WAExBw8F,WAEJ,GAAO,EAAO,+GAA+G,IAEpIx/F,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACCzO,IAEG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WACvBuwC,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAEnCi6F,EAAG4M,aAAalsD,EAAOC,KAExB,GAAO,EAAO,uEAAuE,IAE5FxzC,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAClGyP,EACCzO,IAEG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WACvBuwC,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAEnCi6F,EAAG4M,aAAalsD,EAAOC,KAExB,GAAO,EAAO,uEAAuE,IAE5FxzC,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,QAASqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GACjG,CAAE/G,WAAY,SAAUqG,KAAMmO,EAAkBY,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAClG,CAAE/G,WAAY,WAAYqG,KAAMkL,EAAqB6D,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACvGyP,EACCzO,IAEG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WACvBuwC,EAAgBzxC,EAAW,GAAGlJ,MAC9B46C,EAAiB1xC,EAAW,GAAGlJ,MAC/BkvF,EAAmBhmF,EAAW,GAAGlJ,MAErCi6F,EAAG/K,SAAWA,EACd+K,EAAG4M,aAAalsD,EAAOC,KAExB,GAAO,EAAO,uEAAuE,IAE5FxzC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD6N,EACA,MAAM,GAAO,EAAO,qOAAqO,IAE7PvQ,KAAKwJ,UAAU,IAAIzI,EAAO,WAAY,IAAI2B,EAAc,IACpD6N,EACA,MAAM,GAAO,EAAO,uZAAuZ,IAE/avQ,KAAKwJ,UAAU,IAAIzI,EAAO,QAAS,IAAI2B,EAAc,IACjD6N,EACA,MAAM,GAAO,EAAO,mXAAmX,IAE3YvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD6N,EACA,MAAM,GAAO,EAAO,4RAA4R,IAEpTvQ,KAAKwJ,UAAU,IAAIzI,EAAO,gBAAiB,IAAI2B,EAAc,IACzD6N,EACA,MAAM,GAAO,EAAO,mRAAmR,IAE3SvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD6N,EACA,MAAM,GAAO,EAAO,4TAA4T,IAEpVvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD6N,EACA,MAAM,GAAO,EAAO,uUAAuU,IAE/VvQ,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD6N,EACA,MAAM,GAAO,EAAO,sRAAsR,IAE9SvQ,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,IACxD6N,EACA,MAAM,GAAO,EAAO,6HAA6H,IAErJvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvD6N,EACA,MAAM,GAAO,EAAO,mHAAmH,IAE3IvQ,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,IACtD6N,EACA,MAAM,GAAO,EAAO,oMAAoM,IAE5NvQ,KAAKwJ,UAAU,IAAIzI,EAAO,cAAe,IAAI2B,EAAc,IACvD6N,EACA,MAAM,GAAO,EAAO,gMAAgM,IA4BxNvQ,KAAK0/F,oBAAoB,QAAS,GAAI,GAClC,6BAEJ1/F,KAAK0/F,oBAAoB,aAAc,CAAC,OAAQlvF,EAC5C,mEAEJxQ,KAAK0/F,oBAAoB,aAAc,CAAC,iBAAkBp0F,EACtD,uQAAwQA,GAE5QtL,KAAK0/F,oBAAoB,aAAc,CAAC,KAAM,KAAM,MAAOlvF,EACvD,wLAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQnxF,EACtC,wBAEJvO,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQp0F,EACtC,wBAEJtL,KAAK0/F,oBAAoB,OAAQ,CAAC,MAAO,SAAU,CAACnxF,EAAkBiC,GAClE,wBAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,QAASlvF,EACvC,wBAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,MAAOlvF,EACjD,6IAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,SAAUlvF,EAC1D,6IAEJxQ,KAAK0/F,oBAAoB,SAAU,GAAI,GACnC,8DAEJ1/F,KAAK0/F,oBAAoB,SAAU,CAAC,OAAQnxF,EACxC,0BAEJvO,KAAK0/F,oBAAoB,SAAU,CAAC,OAAQp0F,EACxC,0BAEJtL,KAAK0/F,oBAAoB,SAAU,CAAC,MAAO,SAAU,CAACnxF,EAAkBiC,GACpE,0BAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,QAASlvF,EACzC,0BAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,KAAM,KAAM,MAAOlvF,EACnD,+IAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,KAAM,KAAM,KAAM,SAAUlvF,EAC5D,+IAEJxQ,KAAK0/F,oBAAoB,eAAgB,CAAC,UAAWlvF,EACjD,2BAEJxQ,KAAK0/F,oBAAoB,WAAY,GAAI,GACrC,qEAEJ1/F,KAAK0/F,oBAAoB,QAAS,CAAC,QAASlvF,EACxC,qDAAsDlF,GAE1DtL,KAAK0/F,oBAAoB,QAAS,CAAC,iBAAkBp0F,EACjD,8NAA+NA,GAEnOtL,KAAK0/F,oBAAoB,QAAS,CAAC,OAAQ,SAAUlvF,EACjD,qDAAsDlF,GAE1DtL,KAAK0/F,oBAAoB,QAAS,CAAC,KAAM,KAAM,MAAOlvF,EAClD,iEAAkElF,GAEtEtL,KAAK0/F,oBAAoB,QAAS,CAAC,KAAM,KAAM,KAAM,SAAUlvF,EAC3D,2EAA4ElF,GAEhFtL,KAAK0/F,oBAAoB,YAAa,CAAC,SAAU,SAAU,KAAM,CAACp0F,EAAqBA,EAAqBkF,GACxG,8JAA+JlF,GAEnKtL,KAAK0/F,oBAAoB,YAAa,CAAC,QAASp0F,EAC5C,8HAEJtL,KAAK0/F,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,CAACp0F,EAAqBkF,GACzE,qLAEJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,OAAQ,QAAS,CAACp0F,EAAqBkF,EAAoBA,EAAoBA,GAClI,qLAEJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,YAAa,CAACp0F,EAAqBkF,EAAoBA,EAAoBA,EAAoBA,GAClK,qLAOJxQ,KAAK0/F,oBAAoB,WAAY,CAAC,QAASp0F,EAC3C,+IAEJtL,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,UAAWlvF,EACjE,oHAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAWlvF,EAC3E,2IAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAW,UAAW,UAAW,WAAYlvF,EAC7G,2IAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,SAAUlvF,EACzD,+FAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,QAAS,UAAWlvF,EACnE,kJAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,OAAQ,MAAO,QAAS,UAAW,UAAW,UAAW,WAAYlvF,EACrG,kJAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,UAAWlvF,EAC3E,+IAEJxQ,KAAK0/F,oBAAoB,UAAW,CAAC,OAAQ,MAAO,QAAS,UAAWlvF,EACpE,qLAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,IAAK,IAAK,UAAWlvF,EACrD,6FAEJxQ,KAAK0/F,oBAAoB,cAAe,CAAC,QAASp0F,EAC9C,kJAGJtL,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,MAAOlvF,EACvD,qDAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EACnE,6DAEJxQ,KAAK0/F,oBAAoB,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EACvE,6EAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EAC/E,uFAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EACjF,0HAEJxQ,KAAK0/F,oBAAoB,QAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EAChF,kJAEJxQ,KAAK0/F,oBAAoB,aAAc,CAAC,IAAK,IAAK,IAAK,IAAK,KAAMlvF,EAC9D,gTAAiTA,GAErTxQ,KAAK0/F,oBAAoB,eAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,KAAMlvF,EAChE,mTAAoTA,GAExTxQ,KAAK0/F,oBAAoB,cAAe,CAAC,KAAM,KAAM,KAAM,KAAM,KAAMlvF,EACnE,qTAAsTA,GAE1TxQ,KAAK0/F,oBAAoB,gBAAiB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAMlvF,EACrE,wTAAyTA,GAG7TxQ,KAAK0/F,oBAAoB,aAAc,GAAI,GACvC,8GAEJ1/F,KAAK0/F,oBAAoB,WAAY,GAAI,GACrC,sCAEJ1/F,KAAK0/F,oBAAoB,aAAc,CAAC,QAASp0F,EAC7C,sNAEJtL,KAAK0/F,oBAAoB,WAAY,CAAC,QAASp0F,EAC3C,2CAEJtL,KAAK0/F,oBAAoB,SAAU,CAAC,IAAK,KAAMlvF,EAC3C,2DAEJxQ,KAAK0/F,oBAAoB,QAAS,CAAC,IAAK,KAAMlvF,EAC1C,yBAEJxQ,KAAK0/F,oBAAoB,MAAO,CAAC,IAAK,IAAK,SAAU,CAAClvF,EAAoBA,EAAoBlF,GAC1F,0CAEJtL,KAAK0/F,oBAAoB,SAAU,CAAC,IAAK,IAAK,KAAMlvF,EAChD,2DAEJxQ,KAAK0/F,oBAAoB,QAAS,CAAC,IAAK,IAAK,KAAMlvF,EAC/C,yBAEJxQ,KAAK0/F,oBAAoB,cAAe,CAAC,IAAK,KAAMlvF,EAChD,kIAEJxQ,KAAK0/F,oBAAoB,cAAe,CAAC,IAAK,IAAK,KAAMlvF,EACrD,kIAEJxQ,KAAK0/F,oBAAoB,MAAO,CAAC,QAASlvF,EACtC,sDAEJxQ,KAAK0/F,oBAAoB,MAAO,CAAC,QAAS,QAAS,SAAUlvF,EACzD,8DAKJxQ,KAAK0/F,oBAAoB,cAAe,GAAI,GACxC,iDAEJ1/F,KAAK0/F,oBAAoB,OAAQ,GAAI,GACjC,gGAEJ1/F,KAAK0/F,oBAAoB,MAAO,GAAI,GAChC,sFAEJ1/F,KAAK0/F,oBAAoB,QAAS,CAAC,UAAWlvF,EAC1C,iDAEJxQ,KAAK0/F,oBAAoB,QAAS,CAAC,UAAW,WAAYlvF,EACtD,iDAEJxQ,KAAK0/F,oBAAoB,QAAS,CAAC,UAAW,UAAW,WAAYlvF,EACjE,iDAEJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,IAAK,KAAMlvF,EAC9C,oDAEJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,IAAK,IAAK,KAAMlvF,EACnD,oDAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,SAAUlvF,EAC1C,4KAEJxQ,KAAK0/F,oBAAoB,UAAW,CAAC,SAAUlvF,EAC3C,2LAEJxQ,KAAK0/F,oBAAoB,UAAW,CAAC,SAAUlvF,EAC3C,2LAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,SAAUlvF,EAC1C,kMAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,SAAUlvF,EAC1C,mMAEJxQ,KAAK0/F,oBAAoB,UAAW,CAAC,SAAUlvF,EAC3C,2LAEJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,QAASp0F,EAC5C,gJAKJtL,KAAK0/F,oBAAoB,WAAY,CAAC,QAASlvF,EAC3C,oCAKJxQ,KAAK0/F,oBAAoB,YAAa,CAAC,UAAWnxF,EAC9C,iHAEJvO,KAAK0/F,oBAAoB,YAAa,CAAC,SAAU,UAAWnxF,EACxD,4KAEJvO,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,IAAK,KAAM,CAACp0F,EAAqBkF,EAAoBA,GAC3F,kBAEJxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,OAAQ,IAAK,IAAK,KAAM,MAAO,CAACp0F,EAAqBkF,EAAoBA,EAAoBA,EAAoBA,GAC/I,wJAKJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,MAAO,QAASlvF,EAChD,sDAAuDA,GAE3DxQ,KAAK0/F,oBAAoB,SAAU,CAAC,QAASlvF,EACzC,oDAAqDA,GAEzDxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAMlvF,EACpC,uCAAwCA,GAE5CxQ,KAAK0/F,oBAAoB,MAAO,CAAC,QAAS,YAAalvF,EACnD,+DAAgEA,GAEpExQ,KAAK0/F,oBAAoB,MAAO,CAAC,IAAK,KAAMlvF,EACxC,6CAA8CA,GAElDxQ,KAAK0/F,oBAAoB,MAAO,CAAC,IAAK,KAAMlvF,EACxC,8CAA+CA,GAEnDxQ,KAAK0/F,oBAAoB,MAAO,CAAC,KAAMlvF,EACnC,qCAAsCA,GAE1CxQ,KAAK0/F,oBAAoB,MAAO,CAAC,KAAMlvF,EACnC,oCAAqCA,GAEzCxQ,KAAK0/F,oBAAoB,MAAO,CAAC,KAAMlvF,EACnC,sCAAuCA,GAE3CxQ,KAAK0/F,oBAAoB,MAAO,CAAC,KAAMlvF,EACnC,sCAAuCA,GAE3CxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAMlvF,EACpC,yCAA0CA,GAE9CxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAMlvF,EACpC,2CAA4CA,GAEhDxQ,KAAK0/F,oBAAoB,UAAW,CAAC,SAAUlvF,EAC3C,oDAAqDA,GAEzDxQ,KAAK0/F,oBAAoB,UAAW,CAAC,SAAUlvF,EAC3C,oDAAqDA,GAEzDxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAMlvF,EACpC,2CAA4CA,GAEhDxQ,KAAK0/F,oBAAoB,QAAS,CAAC,IAAK,KAAMlvF,EAC1C,2CAA4CA,GAEhDxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,IAAK,KAAMlvF,EACzC,4CAA6CA,GAEjDxQ,KAAK0/F,oBAAoB,KAAM,CAAC,IAAK,KAAMlvF,EACvC,sCAAuCA,GAE3CxQ,KAAK0/F,oBAAoB,MAAO,CAAC,KAAMnxF,EACnC,qCAAsCA,GAE1CvO,KAAK0/F,oBAAoB,QAAS,CAAC,KAAMlvF,EACrC,uCAAwCjC,GAE5CvO,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAMlvF,EACpC,oDAAqDjC,GAEzDvO,KAAK0/F,oBAAoB,QAAS,CAAC,KAAMlvF,EACrC,oDAAqDjC,GAEzDvO,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,MAAOlvF,EACvD,0DAA2DA,GAE/DxQ,KAAK0/F,oBAAoB,OAAQ,CAAC,IAAK,IAAK,KAAMlvF,EAC9C,6HAA8HA,GAElIxQ,KAAK0/F,oBAAoB,YAAa,CAAC,QAAS,MAAO,OAAQlvF,EAC3D,oLAAqLA,GAMzLxQ,KAAK0/F,oBAAoB,OAAQ,GAAI,GACjC,sBAAuBnxF,GAE3BvO,KAAK0/F,oBAAoB,QAAS,GAAI,GAClC,qCAAsCnxF,GAE1CvO,KAAK0/F,oBAAoB,MAAO,GAAI,GAChC,kDAAmDnxF,GAEvDvO,KAAK0/F,oBAAoB,OAAQ,GAAI,GACjC,oCAAqCnxF,GAEzCvO,KAAK0/F,oBAAoB,OAAQ,GAAI,GACjC,oCAAqCnxF,GAEzCvO,KAAK0/F,oBAAoB,SAAU,GAAI,GACnC,oCAAqCnxF,GAEzCvO,KAAK0/F,oBAAoB,SAAU,GAAI,GACnC,qCAAsCnxF,GAE1CvO,KAAK0/F,oBAAoB,YAAa,CAAC,KAAMnxF,EACzC,mEAEJvO,KAAK0/F,oBAAoB,YAAa,CAAC,QAASp0F,EAC5C,oCAAqCkF,GAEzCxQ,KAAK0/F,oBAAoB,aAAc,CAAC,QAASp0F,EAC7C,oFAAqFkF,GAEzFxQ,KAAK0/F,oBAAoB,cAAe,CAAC,QAASp0F,EAC9C,wFAAyFkF,GAE7FxQ,KAAK0/F,oBAAoB,cAAe,CAAC,WAAYlvF,EACjD,6DAEJxQ,KAAK0/F,oBAAoB,SAAU,CAAC,QAASp0F,EACzC,+HAEJtL,KAAK0/F,oBAAoB,WAAY,CAAC,QAASp0F,EAC3C,8EAEJtL,KAAK0/F,oBAAoB,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAOlvF,EAC/E,+LAEJxQ,KAAK0/F,oBAAoB,SAAU,GAAI,GACnC,qFAEJ1/F,KAAK0/F,oBAAoB,SAAU,GAAI,GACnC,4GAIR,oBAAoB3lG,EAAoB4lG,EAA0Bp1F,EAA+BpL,EAAiB8B,GAE9G,IAAIa,EAAyB,GAC7B,GAAIyjB,MAAMC,QAAQjb,GACd,IAAK,IAAI5S,EAAI,EAAGA,EAAIgoG,EAAe39F,OAAQrK,IACvCmK,EAAWiC,KAAK,CAAEhK,WAAY4lG,EAAehoG,GAAIyI,KAAMmK,EAAe5S,GAAIwX,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,SAGhIgB,EAAa69F,EAAe/8F,IAAK1K,IAAkB,CAAE6B,WAAY7B,EAAMkI,KAAMmK,EAAgB4E,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAGjI,MAAdG,EACAjB,KAAKwJ,UAAU,IAAIzI,EAAOhH,EAAY,IAAI2I,EAAcZ,GAAa,KAChEA,IACG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WACvB48F,EAAQ99F,EAAW0K,MAAM,GAAG5J,IAAInJ,GAAKA,EAAEb,OAE3Ci6F,EAAGwM,IAAItlG,MAAe6lG,KAEvB,GAAO,EAAOzgG,GAAS,IAE9Ba,KAAKwJ,UAAU,IAAIzI,EAAOhH,EAAY,IAAI2I,EAAcZ,GAAab,EAChEa,IACG,IACI+wF,EADmB/wF,EAAW,GAAGlJ,MACRoK,cAAF,WACvB48F,EAAQ99F,EAAW0K,MAAM,GAAG5J,IAAInJ,GAAKA,EAAEb,OAE3C,OAAOi6F,EAAGwM,IAAItlG,MAAe6lG,KAE9B,GAAO,EAAOzgG,GAAS,IAOtC,oBAAoB0gG,EAAiCpd,EAAiB,IAAKC,EAAe,K,QAEtF,IAAIznD,EAA+B,QAApB,EAAc,QAAd,EAAGj7B,KAAKtI,cAAM,eAAE47B,YAAI,eAAE+M,iBAGrC,GAAoC,MAAhCpF,EAAY6jD,iBAAhB,CAMA,GAA+B,MAA3B7jD,EAAYi3C,YAMhB,OAAO,IAAI,GAAiBlyE,KAAKtI,OAAQujC,EAAa4kE,GAJlD5kE,EAAY6J,eAAe,+FAN3B7J,EAAY6J,eAAe,mEAmBjC,MAAO,GAkBT,YAAoBptC,EAAwBujC,EAAiC4K,G,MAAzD,KAAAnuC,SAAwB,KAAAujC,cAAiC,KAAA4K,gBAX7E,KAAA0N,MAAgB,IAChB,KAAAC,OAAiB,IAKjB,KAAAssD,aAAuB,EAOnB9/F,KAAKi7B,YAAY6jD,iBAAmB9+E,KAEpCA,KAAKikF,gBAAkB77C,OAAO,eAC9B,IAAIg9C,EAAeplF,KAAKtI,OAAO47B,KAAK+M,iBAAiB0J,aAAas7C,iBAElErlF,KAAK+/F,cAAgB,KACjB,IAAIxa,EAAWH,EAAazgC,QAAQ,YAChC6gC,EAAmBD,EAAShyC,QAC5BkyC,EAAoBF,EAAS/xC,SAI7BxzC,KAAKwzC,OAASxzC,KAAKuzC,MAAQkyC,EAAYD,EACvCJ,EAAa54C,IAAI,CACb,MAASxsC,KAAKuzC,MAAQvzC,KAAKwzC,OAASiyC,EAAY,KAChD,OAAUA,EAAY,OAG1BL,EAAa54C,IAAI,CACb,OAAUxsC,KAAKwzC,OAASxzC,KAAKuzC,MAAQiyC,EAAW,KAChD,MAASA,EAAW,QAKhCJ,EAAa56C,IAAI,eACjB46C,EAAal7C,GAAG,cAAelqC,KAAK+/F,eAEpC//F,KAAK+/F,gBAEL//F,KAAK0lF,gBAAkBt9C,OAAO,eAC9BpoC,KAAKikF,gBAAgBv8C,OAAO1nC,KAAK0lF,iBAEjCN,EAAa19C,OAAO1nC,KAAKikF,iBACzBmB,EAAav8C,OAEbu8C,EAAa,GAAGO,cAAgB,SAAU/uE,GACtCA,EAAE6hC,kBAGwB,QAA9B,EAAAz4C,KAAKtI,OAAO47B,KAAK4wD,qBAAa,SAAEC,qBAIpC,aAAa5wC,EAAeC,GACxBxzC,KAAKuzC,MAAQA,EACbvzC,KAAKwzC,OAASA,EACdxzC,KAAK+/F,gBACL//F,KAAKq/F,IAAII,aAAaz/F,KAAKuzC,MAAOvzC,KAAKwzC,OAAQxzC,KAAK8nF,UACpD9nF,KAAKi4C,KAAKxoB,KAAK,UAAU+c,IAAI,CACzB,MAAS,GACT,OAAU,KAKlB,OACQxsC,KAAKi7B,YAAY4/C,aAAc,EAC/B76E,KAAKggG,gBAAgBhgG,KAAK0lF,iBAGlC,gBAAgBztC,GAER,IAAIj7B,EAAOhd,KACPigG,GAA6B,EACjCjgG,KAAKi4C,KAAOA,EAwFhBj4C,KAAKq/F,IAAM,IAAIa,GAtFGA,IAEVA,EAAGC,MAAQ,WACPnjF,EAAK8qE,SAAWoY,EAAGE,IAEnB,IAAIC,EAAqB,KAErBJ,GAAoB,GAOpBtoG,EAAI,EAERqlB,EAAKihF,UAAU,QAAS,KACT,KAALtmG,GAAQ0oG,MAGlBrjF,EAAKihF,UAAU,WAAY,KACZ,KAALtmG,GAAQ0oG,OAMtBH,EAAGxiD,QAAU,WACT1gC,EAAKihF,UAAU,YAGnBiC,EAAGI,KAAO,WACFtjF,EAAKie,YAAYwgB,OAASC,GAAiBiO,SAAY3sC,EAAK8iF,aACvDG,IACDA,GAAoB,EACpBjjF,EAAKihF,UAAU,OAAQ,KACnBgC,GAAoB,KAIhCjjF,EAAKipE,QAMTia,EAAGK,aAAe,WACdvjF,EAAKihF,UAAU,iBAGnBiC,EAAGM,cAAgB,WACfxjF,EAAKihF,UAAU,kBAGnBiC,EAAGO,aAAe,WACdzjF,EAAKihF,UAAU,iBAGnBiC,EAAGQ,aAAe,WACd1jF,EAAKihF,UAAU,iBAGnBiC,EAAGS,aAAe,WACd3jF,EAAKihF,UAAU,iBAGnBiC,EAAGU,YAAc,WACb5jF,EAAKihF,UAAU,gBAGnBiC,EAAGW,WAAa,WACZ7jF,EAAKihF,UAAU,eAGnBiC,EAAGY,WAAa,WACZ9jF,EAAKihF,UAAU,eAGnBiC,EAAGa,YAAc,WACb/jF,EAAKihF,UAAU,iBAODhmD,EAAK,IAC3BA,EAAKxoB,KAAK,UAAU+c,IAAI,CACpB,MAAS,GACT,OAAU,KAMtB,OAEWxsC,KAAKi7B,YAAYwgB,OAASC,GAAiBiO,UAC9C3pD,KAAKi7B,YAAY6gD,cAAc,OAAO,EAAM,IAC5C97E,KAAKi7B,YAAY2/C,cAAe,EAChC56E,KAAKi7B,YAAY6gD,cAAc,OAAO,EAAO,MAKrD,OACI97E,KAAK8/F,aAAc,EAGvB,SACI9/F,KAAK8/F,aAAc,EAGvB,UAAUkB,EAA0Bn3D,EAAuB,MAEvD,IAAI9mC,EAAsB/C,KAAK6lC,cAAc3iC,MACzCvB,EAASoB,EAAM+hB,qBAAqBk8E,EAAmB,MAI3D,GAAe,OAFDr/F,aAAM,EAANA,EAAQD,SAIlB,YADgB,MAAZmoC,GAAkBA,KAI1B,IAAI83C,EAAyB,CACzB,CACIvhF,KAAM2C,EACNnK,MAAOoH,KAAK6lC,gBAIpB7lC,KAAKi7B,YAAYgL,SAAStkC,EAAQggF,EAAgB1mD,IAC9B,MAAZ4O,GAAkBA,KACH,QAApBm3D,GAIP,eACoB,MAAZhhG,KAAKq/F,KAAar/F,KAAKq/F,IAAI16D,SAC/B3kC,KAAKikF,gBAAgBt/C,SACrB3kC,KAAKtI,OAAO47B,KAAK+M,iBAAiB0J,aAAas7C,iBAAiBr8C,OAChEhpC,KAAKi7B,YAAY4/C,aAAc,EAC/B76E,KAAKi7B,YAAY6jD,iBAAmB,MC76BtC,MAAO,WAAoB,EAE7B,YAAYpnF,GAER2J,MAAM,SAAU3J,EAAQ,gOAExBsI,KAAKqd,aAAoB3lB,EAAO4lB,UAAUC,QAAQ,gBAElDvd,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAChG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAE1Bi6F,EAAK,IAAI,GAAa9+C,EAAGC,GAAG,EAAOt8C,EAAO47B,KAAK+M,iBAAkBjoC,GACrEA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,0KAA0K,IAG/L7yF,KAAKwJ,UAAU,IAAIzI,EAAO,SAAU,IAAI2B,EAAc,CAClD,CAAE3I,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,IAAKqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,GAChG,CAAE/G,WAAY,aAAcqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCm7C,EAAYjyC,EAAW,GAAGlJ,MAC1Bo7C,EAAYlyC,EAAW,GAAGlJ,MAC1BqoG,EAAsBn/F,EAAW,GAAGlJ,MAEpCi6F,EAAK,IAAI,GAAa9+C,EAAGC,EAAGitD,EAAYvpG,EAAO47B,KAAK+M,iBAAkBjoC,GAC1EA,EAAE4K,cAAF,MAA2B6vF,IAE5B,GAAO,EAAO,qMAAqM,IAG1N7yF,KAAKwJ,UAAU,IAAIzI,EAAO,UAAW,IAAI2B,EAAc,CACnD,CAAE3I,WAAY,SAAUqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACrG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCoJ,EAAiBF,EAAW,GAAGlJ,MAC/BixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,YAErBD,EAAGqX,QAAQl/F,KAEZ,GAAO,EAAO,iPAAiP,IAEtQhC,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,CAChD,CAAE3I,WAAY,aAAcqG,KAAM6O,EAAqBE,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KACzG,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC6yE,EAAgB3pE,EAAW,GAAGlJ,MAC9BixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,SAErBD,EAAGsX,KAAK11B,KAET,GAAO,EAAO,kVAAkV,IAEvWzrE,KAAKwJ,UAAU,IAAIzI,EAAO,eAAgB,IAAI2B,EAAc,CACxD,CAAE3I,WAAY,eAAgBqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC5G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjC+5F,EAAwB7wF,EAAW,GAAGlJ,MACtCixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,iBAErBD,EAAG8I,aAAaA,KAEjB,GAAO,EAAO,oGAAoG,IAEzH3yF,KAAKwJ,UAAU,IAAIzI,EAAO,aAAc,IAAI2B,EAAc,CACtD,CAAE3I,WAAY,aAAcqG,KAAM8O,EAAsBC,YAAa,KAAMtP,eAAgB,KAAMiB,SAAS,KAC1G,KACCgB,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCqoG,EAAsBn/F,EAAW,GAAGlJ,MACpCixF,EAAmBzxF,EAAE4K,cAAF,MAEnB6mF,EAAGC,cAAc,eAErBD,EAAGuX,cAAcH,KAElB,GAAO,EAAO,oGAAoG,IAEzHjhG,KAAKwJ,UAAU,IAAIzI,EAAO,OAAQ,IAAI2B,EAAc,IAChD1C,KACC8B,IAEG,IAAI1J,EAAmB0J,EAAW,GAAGlJ,MACjCixF,EAAmBzxF,EAAE4K,cAAF,MAEvB,IAAI6mF,EAAGC,cAAc,QAErB,OAAOD,EAAGa,QAAetyF,EAAE8K,SAE5B,GAAO,EAAO,8DAA8D,KAerF,MAAO,WAAqB,GAe9B,YAAYm+F,EAAgBC,EAAwBL,EAChDhmE,EAA0B4K,GAC1BxkC,MAAM45B,EAAa4K,GAF6B,KAAAo7D,aAbpD,KAAAM,aAA8B,GAC9B,KAAA91B,MAAgB,EAEhB,KAAA+1B,UAAoB,EAKpB,KAAAzP,KAAe,EACf,KAAAC,KAAe,EAEf,KAAAyP,wBAAkC,EAM9BzhG,KAAKuhG,aAAax9F,KAAK,CACnBgwC,EAAGstD,EACHrtD,EAAGstD,EACH53E,MAAO,EACP04D,MAAO,EACPsf,UAAW,IAEf1hG,KAAK2hG,gBAEL3hG,KAAK8uF,YAAc,SAEnB9uF,KAAK6qF,kBAAoB,GAEzB,IAAIM,EAAY,IAAIlT,KAAKsO,UACzBvmF,KAAK2nF,cAAgBwD,EAErBnrF,KAAK4hG,YAAc,IAAI3pB,KAAK2X,SAC5BzE,EAAU3E,SAASxmF,KAAK4hG,aAExB5hG,KAAK6hG,OAAS,IAAI5pB,KAAK2X,SACvBzE,EAAU3E,SAASxmF,KAAK6hG,QACxB7hG,KAAK6hG,OAAO3wE,QAAUlxB,KAAKihG,WAC3BjhG,KAAK8hG,WAAWT,EAAQC,EAAQthG,KAAKyrE,OAKrCzrE,KAAKkyE,YAAYgR,MAAMsD,SAASxmF,KAAK2nF,eAErC3nF,KAAK4sF,oBAIT,kBACI,IAAI5qF,EAAShC,KAAKuhG,aAAav/F,OAC3B+/F,EAAkB/hG,KAAKuhG,aAAav/F,EAAS,GACjDhC,KAAK+xF,MAAQgQ,EAAgBhuD,EAC7B/zC,KAAKgyF,MAAQ+P,EAAgB/tD,EAC7Bh0C,KAAKgrF,eAAiBhrF,KAAK+xF,KAAK/vF,EAChChC,KAAKirF,eAAiBjrF,KAAKgyF,KAAKhwF,EAGpC,aAAa2wF,GACLA,GAAgB3yF,KAAKwhG,WACrBxhG,KAAKwhG,SAAW7O,EAChB3yF,KAAKqyC,SACLryC,KAAKyhG,wBAAyB,GAItC,cAAc54D,GACV7oC,KAAK6hG,OAAO3wE,QAAU2X,EAG1B,KAAK4iC,GACDzrE,KAAKyrE,OAASA,EAAQ,IAAMlgE,KAAKmgE,GAGrC,OAAOs2B,EAAwBC,EAAaC,GACxCliG,KAAKmhG,KAAKnhG,KAAKyrE,OACf,IAAIs2B,EAAkB/hG,KAAKuhG,aAAavhG,KAAKuhG,aAAav/F,OAAS,GACnEhC,KAAK8hG,WAAWC,EAAgBhuD,EAAGguD,EAAgB/tD,EAAGh0C,KAAKyrE,OAC3DpqE,MAAMiiF,OAAO0e,EAAgBC,EAAIC,GAGrC,QAAQn/F,GAEJ,IAAImvC,EAAoB,IAAI,EAAcnvC,GACtCspF,EAAmB,IAAI,GAAarsF,KAAKuhG,aAAa,GAAGxtD,EAAG/zC,KAAKuhG,aAAa,GAAGvtD,EACjFh0C,KAAKihG,WAAYjhG,KAAKkyE,YAAYj3C,YAAaiX,GAMnD,OALAA,EAAGlvC,cAAH,MAA4BqpF,EAE5BA,EAAGpJ,SAASjjF,MACZqsF,EAAGh6C,SAEIH,EAGX,QAAQlwC,GAEJ,IAAI+/F,EAA+B/hG,KAAKuhG,aAAavhG,KAAKuhG,aAAav/F,OAAS,GAC5EmgG,EAA8B,CAC9BpuD,EAAGguD,EAAgBhuD,EAAI/xC,EAASuJ,KAAKqgE,IAAI5rE,KAAKyrE,OAC9Cz3B,EAAG+tD,EAAgB/tD,EAAIhyC,EAASuJ,KAAKsgE,IAAI7rE,KAAKyrE,OAC9C/hD,MAAO1pB,KAAK8uF,YACZ1M,MAAOpiF,KAAKsvF,YACZoS,UAAW1hG,KAAK+uF,aAGpB/uF,KAAKuhG,aAAax9F,KAAKo+F,GAEnBniG,KAAKwhG,SACLxhG,KAAKqyC,SAEmB,MAApBryC,KAAK8uF,cACL9uF,KAAK4hG,YAAYn4B,OAAOs4B,EAAgBhuD,EAAGguD,EAAgB/tD,GAC3Dh0C,KAAK4hG,YAAY9R,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IACjFtvF,KAAK4hG,YAAY7O,OAAOoP,EAAepuD,EAAGouD,EAAenuD,IAIjEh0C,KAAK+qF,iBAAkB,EACvB/qF,KAAKyhG,wBAAyB,EAC9BzhG,KAAK2hG,kBACL3hG,KAAK8hG,WAAWK,EAAepuD,EAAGouD,EAAenuD,EAAGh0C,KAAKyrE,OAI7D,WAAW13B,EAAWC,EAAWy3B,GAC7BzrE,KAAK6hG,OAAOh/D,QACZ7iC,KAAK6hG,OAAO/R,UAAU,EAAG,SAAU,EAAG,IACtC9vF,KAAK6hG,OAAOp4B,OAAO11B,EAAGC,GAEtB,IAAIouD,EAAK72F,KAAKqgE,IAAIH,GACd42B,EAAK92F,KAAKsgE,IAAIJ,GAEd62B,GAAO/2F,KAAKsgE,IAAIJ,GAChB82B,EAAMh3F,KAAKqgE,IAAIH,GAMnBzrE,KAAK6hG,OAAOp4B,OAAO11B,EAJC,GAIGquD,EAAoBpuD,EAJvB,GAI2BquD,GAC/CriG,KAAK6hG,OAAO9O,OAAOh/C,EAJE,GAIEquD,EAHD,GAGuBE,EAAuBtuD,EAJ/C,GAImDquD,EAHlD,GAGwEE,GAC9FviG,KAAK6hG,OAAO9O,OAAOh/C,EALE,GAKEquD,EAJD,GAIuBE,EAAuBtuD,EAL/C,GAKmDquD,EAJlD,GAIwEE,GAC9FviG,KAAK6hG,OAAO9O,OAAOh/C,EAPC,GAOGquD,EAAoBpuD,EAPvB,GAO2BquD,GAGnD,SAEI,IAAIjU,EAAmBpuF,KAAK4hG,YAEF,MAAtB5hG,KAAK2nF,eACLyG,EAAI,IAAInW,KAAK2X,SACb5vF,KAAK2nF,cAAgByG,EACrBpuF,KAAKkyE,YAAYgR,MAAMsD,SAAS4H,IAGhCA,EAAEvrD,QAGgB,MAAlB7iC,KAAK6uF,WAAqB7uF,KAAKwhG,UAC/BpT,EAAEyB,UAAU7vF,KAAK6uF,UAAW7uF,KAAKivF,WAGrC,IAAIuT,EAAaxiG,KAAKuhG,aAAa,GACnCnT,EAAE3kB,OAAO+4B,EAAWzuD,EAAGyuD,EAAWxuD,GAE9Bh0C,KAAKwhG,UACLpT,EAAE0B,UAAU9vF,KAAK+uF,YAAa/uF,KAAK8uF,YAAa9uF,KAAKsvF,YAAa,IAEtE,IAAK,IAAI33F,EAAI,EAAGA,EAAIqI,KAAKuhG,aAAav/F,OAAQrK,IAAK,CAC/C,IAAI8qG,EAAkBziG,KAAKuhG,aAAa5pG,GACxB,MAAZ8qG,EAAG/4E,OACE1pB,KAAKwhG,UACNpT,EAAE0B,UAAU2S,EAAGf,UAAWe,EAAG/4E,MAAO+4E,EAAGrgB,MAAO,IAElDgM,EAAE2E,OAAO0P,EAAG1uD,EAAG0uD,EAAGzuD,IAElBo6C,EAAE3kB,OAAOg5B,EAAG1uD,EAAG0uD,EAAGzuD,GAItBh0C,KAAKwhG,UACLpT,EAAE4B,YAGgB,MAAlBhwF,KAAK6uF,WAAqB7uF,KAAKwhG,UAC/BpT,EAAE6B,UAIV,aAAavI,GAENA,aAAuB,IAAgBA,EAAY+Z,wBAClD/Z,EAAYgb,yBAGb1iG,KAAKyhG,wBACJzhG,KAAK0iG,yBAGT,IAAIpX,EAAKtrF,KAAK2nF,cAAc4D,YACxBC,EAAM9D,EAAYC,cAAc4D,YAEpC,QAAID,EAAGh1D,KAAOk1D,EAAI90D,OAAS80D,EAAIl1D,KAAOg1D,EAAG50D,WAErC40D,EAAG92C,IAAMg3C,EAAI5R,QAAU4R,EAAIh3C,IAAM82C,EAAG1R,UAEpC8N,EAAW,OACJA,EAAY2C,aAAarqF,MAGN,MAA1BA,KAAK6qF,mBAA8D,MAAjCnD,EAAYmD,oBAG9C7qF,KAAK+qF,iBAAiB/qF,KAAKyrF,sBAC3B/D,EAAYqD,iBAAiBrD,EAAY+D,sBAEtCpC,GAAsBrpF,KAAK8qF,sBAAuBpD,EAAYoD,0BAIzE,yBACI9qF,KAAK6qF,kBAAoB7qF,KAAKuhG,aAAa3+F,IAAK6/F,IAAe,CAAC1uD,EAAG0uD,EAAG1uD,EAAGC,EAAGyuD,EAAGzuD,MCxQjF,MAAO,GAkDT,YAAYrU,EAAmBrM,GAC3B,GAD2B,KAAAA,OA7C/B,KAAAwxB,oBAAgC,GAIhC,KAAAj+C,gBAA0B,EAE1B,KAAA87F,YAA4B,GAC5B,KAAAC,qBAAiC,GACjC,KAAAC,2BAA2D,GAE3D,KAAAvvF,OAAoB,CAAC,GAAI,GAAI,GAAI,IAyBjC,KAAAwvF,oBAAgE,GAChE,KAAA51C,oBAAgE,GAUhD,MAARvtB,GAA6B,MAAb3/B,KAAKszB,KAAc,OAEvCtzB,KAAK2/B,KAAOA,EAEZ,IAAIurC,EAAOvrC,EAAKznC,KAEZ6qG,EAAa,GAAOC,OAAO93B,GACb,MAAd63B,EACAA,EAAa,EAEbA,IAEJ,GAAOC,OAAO93B,GAAQ63B,EAElBA,EAAa,IAAG73B,GAAQ,KAAO63B,EAAa,KAChD/iG,KAAKgiB,IAAMja,OAAOk7F,IAAIjV,KAAK,CAAE9iB,KAAMA,EAAMg4B,OAAQ,aACjDljG,KAAKoW,MAAQrO,OAAOsP,OAAOmwC,YAAY7nB,EAAK5qB,KAAM,SAAU/U,KAAKgiB,KACjEhiB,KAAKoW,MAAM0hD,cAAc,CAAE/d,QAAS,IAEpC/5C,KAAKkwC,mBAAqBlwC,KAAKoW,MAAM+5B,0BAErC,IAAInzB,EAAOhd,KAEXA,KAAKoW,MAAMysC,mBAAmB,KAC1B,IAAIC,EAAY9lC,EAAK5G,MAAM+5B,0BAS3B,GAPI2S,GAAa9lC,EAAKkzB,qBAClBlzB,EAAK2iB,KAAKiD,OAAQ,EAClB5lB,EAAK2iB,KAAK4N,OAAQ,EAClBvwB,EAAK2iB,KAAKsR,iCAAkC,EAC5Cj0B,EAAKkzB,mBAAqB4S,IAG1B9lC,EAAKsW,KAAK+qB,aAAa,CACvB,IAAI8kD,EAAoB7vE,EACrB6vE,EAAMt1D,mBAAqBs1D,EAAM/2D,KAAKvqC,IACA,MAAlCmb,EAAK2iB,KAAK8nB,sBAAgCzqC,EAAK2iB,KAAKigC,iCACnD5iD,EAAK2iB,KAAKigC,+BAAgC,EAC1C5iD,EAAK2iB,KAAK8nB,qBAAuBzqC,EAAK2iB,KAAK5qB,KAC3CiI,EAAK2iB,KAAK4N,OAAQ,EAClB41D,EAAMnmD,eAAe1Q,YAAY,MAAM,GACvC62D,EAAMlrC,UAAUzO,gBAAgBnB,6BAChC86C,EAAMz2D,gBAAgByzB,qBAAqBnjD,EAAK2iB,OAGpD3iB,EAAK2iB,KAAKigC,+BAAgC,KAO1D,+BAA+B57D,GAE3B,GAA+B,MAA5BhE,KAAK4e,oBAA6B,OAAO,KAE5C,IAAI,IAAI9X,KAAM9G,KAAK4e,oBACf,GAAG9X,EAAG1G,MAAQzG,EAAUY,cAAgBuM,EAAG1G,MAAQzG,EAAUiB,YACzD,IAAI,IAAIwoG,KAAat8F,EAAGf,QACpB,GAAyB,MAAtBq9F,EAAUp/F,UAAyC,MAArBo/F,EAAU3jF,SACpC2jF,EAAUp/F,SAASoF,MAAQpF,EAAS0+C,YAAc0gD,EAAU3jF,QAAQrW,MAAQpF,EAAS0+C,WACpF,OAAO0gD,EAO3B,OAAO,KAKW,uBAACpyD,EAAa1d,GAEhC,IAAI+vE,EAAW,CACXnrG,KAAM84C,EAAE94C,KACR6c,KAAMi8B,EAAEj8B,KACR0yC,qBAAsBzW,EAAEyW,qBACxBgB,eAAgBzX,EAAEyX,eAClBmX,+BAA+B,EAC/Bh9B,OAAO,EACP2K,OAAO,EACPyC,QAASgB,EAAEhB,QACXnuC,GAAImvC,EAAEnvC,GACN6sC,cAAesC,EAAEtC,cACjBC,wBAAyBqC,EAAErC,wBAC3BsC,gCAAiCD,EAAEC,iCAKvC,OAFgB,IAAI,GAAOoyD,EAAI/vE,GAMnC,YAAY6a,GACR,IAAIxO,EAAO3/B,KAAK2/B,KAgBhB,MAfmB,CACf99B,GAAI89B,EAAK99B,GACT3J,KAAMynC,EAAKznC,KACX6c,KAAM4qB,EAAK5qB,KACX0yC,qBAAsB9nB,EAAK8nB,qBAC3BgB,eAAgB9oB,EAAK8oB,eACrBmX,8BAA+BjgC,EAAKigC,8BACpC5vB,QAASrQ,EAAKqQ,QACdtB,cAAe/O,EAAK+O,cACpBC,wBAAyBhP,EAAKgP,wBAC9BsC,gCAAiCtR,EAAKsR,gCACtC/C,aAAcC,EAAUtsC,GACxBwqC,aAAa,GAMrB,uBAAuBvU,EAAkCtX,EACrDitC,EAAoChtC,GAEpC,IAAI4mD,EAAkB,GACtBA,EAAMtjE,KAAK+zB,EAAmB1uB,MAC9B,IAAK,IAAImkD,KAAM/sC,EACP6mD,EAAM1iE,QAAQ4oD,EAAGnkD,MAAQ,GACzBi+D,EAAMtjE,KAAKwpD,EAAGnkD,MAItB,IAAIksB,EAA0B,CAC1BwC,mBAAoBA,EACpBtX,eAAgBA,EAChBitC,gBAAiBA,EACjBhtC,qBAAsBA,GAG1B,IAAK,IAAIrX,KAAQi+D,EAAO,CACpB,IAAIi8B,EAAUtjG,KAAKktD,oBAAoB9jD,GACxB,MAAXk6F,IACAtjG,KAAKktD,oBAAoB9jD,GAAQ,GACjCk6F,EAAUtjG,KAAKktD,oBAAoB9jD,IAEvCk6F,EAAQv/F,KAAKuxB,IAMrB,iBAAiBotB,EAAoB6gD,GACjCvjG,KAAKoiE,mCACuC,MAAxCpiE,KAAKwjG,cAAc9gD,GAAY,IAC/B1iD,KAAKyjG,cAAc/gD,EAAY,GAE/B6gD,GACAvjG,KAAKyiE,6BAIb,cAAcr5D,EAAcu7B,GAAkB,GAE1C,IAAK,IAAIhtC,EAAI,EAAGA,EAAIqI,KAAK2iG,YAAY3gG,OAAQrK,IAAK,CAC9C,IAAIigD,EAAI53C,KAAK2iG,YAAYhrG,GACzB,GAAIigD,EAAExuC,MAAQA,EAKV,OAJApJ,KAAK2iG,YAAYzrF,OAAOvf,EAAG,GACR,MAAfigD,EAAEnyB,YACFmyB,EAAEnyB,UAAU65D,gBAAaj3E,GAEtBuvC,EAIf,OAAO,KAIX,cAAcxuC,EAAcC,GAExB,IAAIi2E,EAAyB,CACzBl2E,KAAMA,EACNC,OAAQA,EACRoc,UAAW,MAMf,OAHAzlB,KAAK0jG,kBAAkBpkB,GACvBt/E,KAAK2iG,YAAY5+F,KAAKu7E,GAEfA,EAIX,kBAAkBA,EAAwBqkB,G,MAEV,MAAxBrkB,EAAW75D,YACX65D,EAAW75D,UAAU65D,gBAAaj3E,GAGnB,MAAfs7F,IAAqBA,EAAc3jG,KAAK4jG,eAE5C,IAAIC,EAA8B,KAC9BC,EAA0B,IAE9B,IAAK,IAAIpiG,KAAWiiG,EAChB,IAAK,IAAIl+E,KAAa/jB,EAAQ0C,WAAY,CAEtC,IAAIgF,EAA0B,QAAtB,EAAGqc,aAAS,EAATA,EAAWzhB,gBAAQ,eAAEoF,KAChC,GAAY,MAARA,GAAgBA,GAAQk2E,EAAWl2E,KAAM,CACrCA,EAAOk2E,EAAWl2E,KAAO06F,IACzBD,EAAmBp+E,EACnBq+E,EAAkB16F,EAAOk2E,EAAWl2E,MAGxC,OAOZk2E,EAAW75D,UAAYo+E,EACC,MAApBA,IACAA,EAAiBvkB,WAAaA,GAUtC,cACI,IAAIqkB,EAAyB,GAM7B,GAJwB,MAApB3jG,KAAKwe,aACLmlF,EAAY5/F,KAAK/D,KAAKwe,aAGJ,MAAlBxe,KAAKsd,UAEL,IAAK,IAAIld,KAAQJ,KAAKsd,UAAU+F,SAC5B,GAAIjjB,aAAgB,EAAO,CACoB,MAAvCA,EAAKgG,gCACLu9F,EAAY5/F,KAAK3D,EAAKgG,gCAE1B,IAAK,IAAIzE,KAAUvB,EAAK2F,QACE,MAAlBpE,EAAOD,SACPiiG,EAAY5/F,KAAKpC,EAAOD,SAGuB,MAAnDtB,EAAK+F,YAAYC,gCACjBu9F,EAAY5/F,KAAK3D,EAAK+F,YAAYC,gCAEtC,IAAK,IAAIzE,KAAUvB,EAAK+F,YAAYJ,QACV,MAAlBpE,EAAOD,SACPiiG,EAAY5/F,KAAKpC,EAAOD,SAQ5C,OAAOiiG,EAIX,6BAEI3jG,KAAKoiE,mCAEL,IAAI/c,EAAqD,GAEzD,IAAK,IAAIi6B,KAAct/E,KAAK2iG,YACxBt9C,EAAYthD,KAAK,CACbqE,MAAO,CAAE2O,gBAAiBuoE,EAAWl2E,KAAM0N,cAAewoE,EAAWl2E,KAAM6N,YAAa,EAAGD,UAAW,GACtGV,QAAS,CACLouC,aAAa,EAAMnrB,UAAW,yBAC9BqgC,cAAe,CACXlwC,MAAO,UACP1lB,SAAU+D,OAAOsP,OAAOyiD,kBAAkBC,MAE9ClY,QAAS,CACLn4B,MAAO,UACP1lB,SAAU+D,OAAOsP,OAAOgvC,gBAAgBC,QAE5Cy9C,gBAAiB,uBACjBC,WAAYj8F,OAAOsP,OAAO4sF,uBAAuBC,6BAGrD5kB,WAAYA,IAIpBt/E,KAAK4iG,qBAAuB5iG,KAAKszB,KAAKixB,kBAAkBE,iBAAiBzkD,KAAK4iG,qBAAsBv9C,GAEpGrlD,KAAK6iG,2BAA6B,GAClC,IAAK,IAAIlrG,EAAI,EAAGA,EAAIqI,KAAK4iG,qBAAqB5gG,OAAQrK,IAClDqI,KAAK6iG,2BAA2B7iG,KAAK4iG,qBAAqBjrG,IAAMqI,KAAK2iG,YAAYhrG,GAKzF,mCACI,IAAK,IAAIwsG,KAAcnkG,KAAKszB,KAAKixB,kBAAkBlC,WAAW+hD,oBAC1D,GAA0C,qBAAtCD,EAAW7tF,QAAQytF,gBAAwC,CAC3D,IAAIzkB,EAAat/E,KAAK6iG,2BAA2BsB,EAAWtiG,IAC1C,MAAdy9E,IACAA,EAAWl2E,KAAO+6F,EAAW/7F,MAAM2O,kBAMnD,0BAA0B3N,EAAcC,GACpC,OAA4B,MAAxBrJ,KAAKqe,gBACE,OAGPjV,EAAOpJ,KAAKqe,gBAAgBtE,WAAW3Q,MACvCA,GAAQpJ,KAAKqe,gBAAgBtE,WAAW3Q,MAAQC,EAASrJ,KAAKqe,gBAAgBtE,WAAW1Q,UAEzFD,EAAOpJ,KAAKqe,gBAAgBtE,WAAW3Q,KACvCC,EAASrJ,KAAKqe,gBAAgBtE,WAAW1Q,OAAS,GAG/CrJ,KAAKqe,gBAAgBjC,oBAAoBhT,EAAMC,IAG1D,gBAEI,IAAIwgB,EAAK,EACT,IAAK,IAAIw6E,KAAMrkG,KAAKsT,OAChB+wF,EAAGt1F,QAAQ/D,GAAS6e,GAAqB,SAAf7e,EAAMiK,MAAmB,EAAI,GAI3D,OAAO4U,EAGX,iBAEI,OAAwB,MAApB7pB,KAAKwe,cAC0B,MAA/Bxe,KAAKwe,YAAYpa,aACdpE,KAAKwe,YAAYpa,WAAWpC,OAAS,GAA2C,GAAtChC,KAAKwe,YAAYpa,WAAWpC,QAAehC,KAAKwe,YAAYpa,WAAW,GAAGhE,MAAQzG,EAAUslB,iBAIjJ,gCACI,OAAOjf,KAAKoW,MAAM/J,SAAStE,OAAOsP,OAAOC,oBAAoBC,IAAI,GAIrE,sBAAsBvT,EAAwB2rB,GAC1C,IAAIU,EAAqCrwB,KAAK8iG,oBAAoB9+F,EAASoF,MACvD,MAAhBinB,IACAA,EAAe,GACfrwB,KAAK8iG,oBAAoB9+F,EAASoF,MAAQinB,GAE9CA,EAAatsB,KAAK,CACdC,SAAUA,EACV2rB,QAASA,IAKjB,kBAAkBvmB,EAAcC,GAE5B,IAAIi7F,EAAkBtkG,KAAK8iG,oBAAoB15F,GAC/C,GAAuB,MAAnBk7F,EAAyB,OAAO,KAEpC,IAAIC,EAAoC,KACxC,IAAK,IAAI9qG,KAAK6qG,EACV,GAAIj7F,GAAU5P,EAAEuK,SAASqF,QAAUA,GAAU5P,EAAEuK,SAASqF,OAAS5P,EAAEuK,SAAShC,OAAQ,CAChFuiG,EAAgB9qG,EAChB,IAAIk2B,EAAU40E,EAAc50E,QAC5B,GAAIA,aAAmB5uB,EACnB,MAAO,CAAEX,KAAMuvB,EAAS/uB,UAAU,GAGtC,IAAIR,EAAcuvB,aAAmBhwB,EAAQgwB,EAAUA,EAAQvvB,KAE/D,OAAImkG,EAAcvgG,SAAShC,OAAS,GAAqB,MAAhB2tB,EAAQvvB,KAEtC,CAAEA,KAAYA,EAAMQ,UAAU,GAGlC,CAAER,KAAMA,EAAMQ,SAAU2jG,EAAcvgG,SAAShC,OAAS,GAKvE,OAAO,KAGX,qBAAqBoH,EAAcC,GAE/B,IAAIi7F,EAAkBtkG,KAAK8iG,oBAAoB15F,GAC/C,GAAuB,MAAnBk7F,EAAyB,OAAO,KAEpC,IAAIE,EAAwC,KAC5C,IAAK,IAAI/qG,KAAK6qG,EACNj7F,GAAU5P,EAAEuK,SAASqF,QAAUA,EAAS5P,EAAEuK,SAASqF,OAAS5P,EAAEuK,SAAShC,QAEnEvI,EAAEuK,SAAShC,OAAS,IACK,MAArBwiG,GAGG/qG,EAAEk2B,mBAAmB5uB,GAAUyjG,EAAkB70E,mBAAmB,KAFvE60E,EAAoB/qG,GAUpC,OAA4B,MAArB+qG,EAA4B,KAAYA,EAAkB70E,QAGrE,OACI,IAAI53B,EAAI,IAAI,GAAOiI,KAAK2/B,KAAM3/B,KAAKszB,MACnCv7B,EAAEqe,MAAQpW,KAAKoW,MACfre,EAAEymB,YAAcxe,KAAKwe,YACrBxe,KAAKwe,YAAc,KACnBzmB,EAAEsmB,gBAAkBre,KAAKqe,gBACzBre,KAAKqe,gBAAkB,KACvBtmB,EAAEulB,UAAYtd,KAAKsd,UAEnBvlB,EAAE4rC,YAAc3jC,KAAK2jC,YACrB5rC,EAAEyrC,2BAA6BxjC,KAAKwjC,2BAEpCzrC,EAAE4qG,YAAc3iG,KAAK2iG,YACrB3iG,KAAK2iG,YAAc,GACnB,IAAI8B,EAAW1sG,EAAE6rG,cAEjBa,EAAS11F,QAAStV,GAAMA,EAAE/B,OAASK,GAEnC,IAAK,IAAI6/C,KAAK7/C,EAAE4qG,YACZ3iG,KAAK2iG,YAAY5+F,KAAK,CAClBqF,KAAMwuC,EAAExuC,KACRC,OAAQuuC,EAAEvuC,OACVoc,UAAW,OAGf1tB,EAAE2rG,kBAAkB9rD,EAAG6sD,GAM3B,OAFAzkG,KAAK2/B,KAAKiD,OAAQ,EAEX7qC,EAGX,QAEIiI,KAAK8iG,oBAAsB,GAEV,MAAb9iG,KAAK2/B,MAAgB3/B,KAAK2/B,KAAKiD,QAE/B5iC,KAAK+S,UAAY,KACjB/S,KAAKsT,OAAO,GAAK,GAGjBtT,KAAKsT,OAAO,GAAK,IAMrBtT,KAAKsT,OAAO,GAAK,GACjBtT,KAAK0yB,UAAY,GACjB1yB,KAAKsd,UAAY,IAAIonF,GAGrB1kG,KAAKsT,OAAO,GAAK,GACjBtT,KAAKqe,gBAAkB,IAAI,EAAY,KAAM,CAAEjV,KAAM,EAAGC,OAAQ,EAAGrH,OAAQ,GAAK,CAAEoH,KAAM,IAAQC,OAAQ,EAAGrH,OAAQ,IACnHhC,KAAKwe,YAAc,KAEnBxe,KAAKktD,oBAAsB,GAC3BltD,KAAKigC,iBAAmB,IAAIngC,IAIhC,YAEI,IAAK,IAAIukG,KAAMrkG,KAAKsT,OAChB,GAAG+wF,EAAG50E,KAAKzkB,GAAwB,SAAfA,EAAMiK,OACtB,OAAO,EAOf,OAAO,EAIX,6BAEI,IAAIurE,EAAgB,GAEpB,IAAK,IAAI6jB,KAAMrkG,KAAKsT,OAChBktE,EAAOA,EAAKj5E,OAAO88F,GAGvB7jB,EAAK7oC,KAAK,CAACzwC,EAAG0wC,IACN1wC,EAAElD,SAASoF,KAAOwuC,EAAE5zC,SAASoF,KACtB,EAEPwuC,EAAE5zC,SAASoF,KAAOlC,EAAElD,SAASoF,MACrB,EAERlC,EAAElD,SAASqF,QAAUuuC,EAAE5zC,SAASqF,OACzB,GAEH,GAGZ,IAAK,IAAI1R,EAAI,EAAGA,EAAI6oF,EAAKx+E,OAAS,EAAGrK,IAAK,CACtC,IAAIkf,EAAK2pE,EAAK7oF,GACVgtG,EAAKnkB,EAAK7oF,EAAI,GACdkf,EAAG7S,SAASoF,MAAQu7F,EAAG3gG,SAASoF,MAAQyN,EAAG7S,SAASqF,OAAS,GAAKs7F,EAAG3gG,SAASqF,SAC7B,GAA9CrJ,KAAK4kG,kBAAkB/tF,EAAG5B,MAAO0vF,EAAG1vF,OACnCurE,EAAKtpE,OAAOvf,EAAI,EAAG,GAEnB6oF,EAAKtpE,OAAOvf,EAAG,GAEnBA,KAIR,OAAO6oF,EAGX,kBAAkBqkB,EAAoBC,GAClC,MAAa,SAAVD,EAA0B,EAChB,SAAVC,EAA0B,EAChB,WAAVD,EAA4B,EAClB,WAAVC,EAA4B,EACxB,EAGX,oB,UACI,IAAIloD,EAAoD,QAA1C,EAA0B,QAA1B,EAAY,QAAZ,EAAG58C,KAAK2/B,YAAI,eAAEuR,oBAAY,eAAEwG,sBAAc,eAAEjoB,KAAK,6BAC/D,GAAkB,MAAdmtB,IAEJA,EAAWntB,KAAK,mBAAmBkV,SAE/B3kC,KAAK2jC,aAAa,CAClB,IAAIohE,EAAkB38D,OAAO,oHAC7BwU,EAAWlV,OAAOq9D,GAClB,IAAI/nF,EAAOhd,KACX+kG,EAAgB76D,GAAG,YAActzB,GAAMA,EAAEo7B,mBACzC+yD,EAAgB76D,GAAG,QAAUtzB,IACzBA,EAAEo7B,kBAEFh1B,EAAKsW,KAAKgxB,gBAAgBtnC,GAE1BA,EAAKsW,KAAK+M,iBAAiBiD,YA7lBhC,GAAA0hE,aAAuB,EA6CvB,GAAAhC,OAAqC,GAyjB1C,MAAO,WAAmB,GAC5B,YAAY1vE,GAERjyB,MAAM,CAAEnJ,KAAM,cAAe6c,KAAM,GAAI0yC,qBAAsB,KAAMgB,eAAgB,KAAMmX,+BAA+B,EAAOh9B,OAAO,EAAO2K,OAAO,EAAMyC,QAAS,EAAIiB,iCAAiC,GAAO3d,GAE/MtzB,KAAK6G,gBAAiB,EACtB7G,KAAKwe,YAAc,KAEnBxe,KAAK6iC,QAGL7iC,KAAKsd,UAAUukB,QAAQtxB,GACvBvQ,KAAKsd,UAAUukB,QAAQtzB,GACvBvO,KAAKsd,UAAUukB,QAAQrxB,GACvBxQ,KAAKsd,UAAUukB,QAAQ5yB,GACvBjP,KAAKsd,UAAUukB,QAAQzyB,GACvBpP,KAAKsd,UAAUukB,QAAQ3yB,GACvBlP,KAAKsd,UAAUukB,QAAQv2B,GACvBtL,KAAKsd,UAAUukB,QAAQ,GACvB7hC,KAAKsd,UAAUukB,QAAQ5wB,GAEvBjR,KAAKsd,UAAUukB,QAAQ3wB,GACvBlR,KAAKsd,UAAUukB,QAAQhwB,GACvB7R,KAAKsd,UAAUukB,QAAQvvB,GACvBtS,KAAKsd,UAAUukB,QAAQtvB,GACvBvS,KAAKsd,UAAUukB,QAAQpvB,GAGvBzS,KAAKsd,UAAUukB,QAAQ,IAAI,GAAc7hC,OACzCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAc7hC,OACzCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAgB7hC,OAC3CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAU7hC,OACrCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAe7hC,OAC1CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAgB7hC,OAC3CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAsB7hC,OACjDA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAS7hC,OACpCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OACxCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAmB7hC,OAC9CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAqB7hC,OAChDA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAS7hC,OACpCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OAExCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OACxCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAU7hC,OACrCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OACxCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAS7hC,OACpCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,EAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAS7hC,OACpCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAiB7hC,OAC5CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAe7hC,OAC1CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAsB7hC,OACjDA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OACxCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAe7hC,OAC1CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAU7hC,OACrCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAe7hC,OAC1CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAmB7hC,OAC9CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAgB7hC,OAC3CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAmB7hC,OAC9CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAa7hC,OACxCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAU7hC,OACrCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAc7hC,OACzCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OAEvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAuB7hC,OAClDA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAkB7hC,OAC7CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAW7hC,OACtCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAgB7hC,OAE9BA,KAAKsd,UAAUC,QAAQ,SAAU0nF,oBAG9CjlG,KAAKsd,UAAUukB,QAAQ,IAAI,GAAiB7hC,OAC5CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAY7hC,OACvCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAiB7hC,OAC5CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAc7hC,OACzCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAU7hC,OACrCA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAmB7hC,OAE9CA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAqB7hC,OAChDA,KAAKsd,UAAUukB,QAAQ,IAAI,GAAe7hC,OAI1CsL,EAAoB5T,OAASsI,KAWjC,sBACI,IAAK,IAAII,KAAQJ,KAAKsd,UAAU+F,SAC5BjjB,EAAKiH,uBAQX,MAAO,GAQT,YAAoBisB,EAAgB4xE,GAA0B,GAA1C,KAAA5xE,OANZ,KAAAz7B,QAAoB,GACpB,KAAAstG,UAAiC,IAAIrlG,IAG7C,KAAA8iC,OAAiB,EAGTsiE,IACAllG,KAAK6/B,WAAa,IAAI,GAAWvM,GACjCtzB,KAAKoxC,UAAUpxC,KAAK6/B,aAI5B,eAAe60B,GACX,IAAI,IAAIh9D,KAAUsI,KAAKnI,QACnB,GAAGH,EAAOioC,KAAK99B,IAAM6yD,EAAW,OAAOh9D,EAE3C,OAAO,KAGJ,gBACH,OAAOsI,KAAK6/B,WAGT,sBACH7/B,KAAK6/B,WAAWx4B,sBAGpB,OACI,IAAI+9C,EAAkB,IAAI,GAAYplD,KAAKszB,MAC3C,IAAK,IAAIv7B,KAAKiI,KAAKnI,QACVE,EAAE8O,gBACHu+C,EAAGhU,UAAUr5C,EAAEuhF,QAGvB,OAAOl0B,EAGX,iBAAiBzlB,GACb,IAAK,IAAI5nC,KAAKiI,KAAKnI,QACf,GAAIE,EAAE4nC,MAAQA,EACV,OAAO5nC,EAGf,OAAO,KAGX,YACI,IAAK,IAAIA,KAAKiI,KAAKnI,QACf,GAAIE,EAAE0rC,YACF,OAAO,EAGf,OAAO,EAGX,iBACI,GAAIzjC,KAAKnI,QAAQmK,OAAS,EACtB,IAAK,IAAImhB,KAAMnjB,KAAKnI,QAChB,IAAKsrB,EAAGtc,eACJ,OAAOsc,EAInB,OAAO,KAGX,UAEI,GAAInjB,KAAK4iC,MAEL,OADA5iC,KAAK4iC,OAAQ,GACN,EAGX,IAAIA,GAAQ,EACZ,IAAK,IAAI7qC,KAAKiI,KAAKnI,QACf,GAAIE,EAAE4nC,KAAKiD,MAAO,CACdA,GAAQ,EACR,MAGR,OAAOA,EAIX,WAAWwiE,EAA+BC,GACtC,IAAIhxE,EAAM,GACV,IAAK,IAAIt8B,KAAKiI,KAAKnI,QACXE,EAAE4nC,KAAKznC,MAAQmtG,IACVttG,EAAE8O,iBAAkBu+F,GACrB/wE,EAAItwB,KAAKhM,IAIrB,OAAOs8B,EAGX,UAAU38B,GACNsI,KAAKnI,QAAQkM,KAAKrM,GAClBsI,KAAKmlG,UAAUztG,EAAOioC,KAAKznC,MAAQR,EAGvC,qBAAqBioC,GACjB,IAAK,IAAI5nC,KAAKiI,KAAKnI,QACf,GAAIE,EAAE4nC,MAAQA,EAAM,CAChB3/B,KAAK+vC,aAAah4C,GAClB,OAKZ,aAAaL,GAELsI,KAAKnI,QAAQ8M,QAAQjN,GAAU,IAEnCsI,KAAKnI,QAAQqf,OAAOlX,KAAKnI,QAAQ8M,QAAQjN,GAAS,GAClDsI,KAAKmlG,UAAUztG,EAAOioC,KAAKznC,WAAQmQ,EACnCrI,KAAK4iC,OAAQ,GAGjB,UAAU0iE,GACN,OAAOtlG,KAAKmlG,UAAUG,GAG1B,QAAQvrG,GACJ,IAAK,IAAIrC,KAAUsI,KAAKnI,QACpB,GAAwB,MAApBH,EAAO4lB,UAAmB,CAC1B,IAAIld,EAAO1I,EAAO4lB,UAAUC,QAAQxjB,GACpC,GAAY,MAARqG,EACA,MAAO,CAAEA,KAAMA,EAAM1I,OAAQA,GAKzC,OAAO,KAGX,uBAAuB6tG,EAAuB79F,GAE1C,IAAIkU,EAAqD,GAEzD,IAAK,IAAIlkB,KAAUsI,KAAKnI,QACpB,GAAwB,MAApBH,EAAO4lB,UACP,IAAK,IAAIld,KAAQ1I,EAAO4lB,UAAU+F,SAC9B,GAAI3rB,GAAU6tG,GAAkBnlG,aAAgB,GAASA,EAAKS,YAAcjH,EAAWsM,QAChFxO,EAAOmP,eAAgB,CAE1B,IAAI6kD,EAAS,SAEY,MAAtBtrD,EAAKL,cACJ2rD,EAAStrD,EAAKL,cACPrI,EAAOmP,iBAEV6kD,EADAtrD,aAAgBH,EACP,sBAEA,gBAIjB,IAAIwrD,EAAO,CACPtpD,MAAO/B,EAAKrG,WACZ2xD,OAAQA,EACRvjD,WAAY/H,EAAKrG,WACjB+N,KAAM1H,aAAgBH,EAClB8H,OAAOC,UAAUC,mBAAmBu9F,OAASz9F,OAAOC,UAAUC,mBAAmBw9F,MACrFr9F,MAAOV,EACPg+F,SAAWtlG,aAAgB,GAASA,aAAgB,IAAcA,EAAKqF,cAAczD,OAAS,GAGlG4Z,EAAgB7X,KAAK0nD,GAMrC,OAAO7vC,GAUT,MAAO8oF,GAAb,cAEI,KAAArhF,SAAmB,GACnB,KAAAsiF,QAA6B,IAAI7lG,IAEjC,QAAQM,GACJJ,KAAKqjB,SAAStf,KAAK3D,GACnBJ,KAAK2lG,QAAQtiG,IAAIjD,EAAKrG,WAAYqG,GAGtC,QACIJ,KAAKqjB,SAASrhB,OAAS,EACvBhC,KAAK2lG,QAAQ9iE,QAGjB,QAAQ9oC,GACJ,OAAOiG,KAAK2lG,QAAQntG,IAAIuB,ICzgC1B,MAAO6rG,GAaT,YAAoB1pC,EACR2pC,EAA4BC,EAC3Bj8D,EAA+Ck8D,GAFxC,KAAA7pC,aACR,KAAA2pC,YAA4B,KAAAC,UAC3B,KAAAj8D,WAA+C,KAAAk8D,YACpD/lG,KAAKgmG,aAGb,aACI,IAAIhpF,EAAOhd,KAEU,MAAlBA,KAAK+lG,WACJ/lG,KAAKk8D,WAAW7gD,SAASi2B,WAAW2tB,KAAK,CAAC/8D,EAAOytB,KAC1CA,GAAW3vB,KAAKk8D,WAAW,KAC1Bl/C,EAAK+oF,UAAY39D,OAAOzY,MAKpC3vB,KAAKimG,WAAa79D,OAAO,kCAEzBpoC,KAAKimG,WAAWz5D,IAAI,CAChB+G,MAAOvzC,KAAK8lG,QAAU,OAAS,MAC/BtyD,OAAQxzC,KAAK8lG,QAAU,MAAQ,OAC/BjiB,OAAQ7jF,KAAK8lG,QAAU,aAAe,eAGvC9lG,KAAK6lG,UACJ7lG,KAAKimG,WAAWz5D,IAAI,CAChBgI,IAAK,MACLle,KAAM,QAGPt2B,KAAK8lG,QACJ9lG,KAAKimG,WAAWz5D,IAAI,CAChBotC,OAAQ,MACRtjD,KAAM,QAGVt2B,KAAKimG,WAAWz5D,IAAI,CAChBgI,IAAK,MACL9d,MAAO,QAKnB12B,KAAKk8D,WAAWx0B,OAAO1nC,KAAKimG,YAE5BjmG,KAAKimG,WAAW/7D,GAAG,YAAcuoC,IAE7B,IAAI1+B,EAAI0+B,EAAG5V,QACP7oB,EAAIy+B,EAAG9O,QAEXv7B,OAAO3tB,UAAUyvB,GAAG,mBAAqB0oC,IACrC,IAAInN,EAAKmN,EAAG/V,QAAU9oB,EAClB2xB,EAAKkN,EAAGjP,QAAU3vB,EAEtBh3B,EAAKkpF,MAAMzgC,EAAIC,GAEf3xB,EAAI6+B,EAAG/V,QACP7oB,EAAI4+B,EAAGjP,UAIXv7B,OAAO3tB,UAAUyvB,GAAG,iBAAkB,KAClC9B,OAAO3tB,UAAU+vB,IAAI,oBACrBpC,OAAO3tB,UAAU+vB,IAAI,sBAM7B7B,WAAW,KACP3rB,EAAKkpF,MAAM,EAAG,IACf,KAIP,SAASx8E,GACL1pB,KAAKimG,WAAWz5D,IAAI,mBAAoB9iB,GAG5C,MAAM+7C,EAAYC,GACd,GAAG1lE,KAAK8lG,QAAQ,CACZ,IAAItyD,EAASpiC,OAAOI,SAASxR,KAAKk8D,WAAW1vB,IAAI,UAAUz8B,QAAQ,KAAM,KACrEo2F,EAAc/0F,OAAOI,SAASxR,KAAK+lG,UAAUv5D,IAAI,UAAUz8B,QAAQ,KAAM,KACzEwiE,EAAYvyE,KAAK6lG,UAAYryD,GAAUkyB,EAAKlyB,GAAUkyB,EACtD0gC,EAAiBpmG,KAAK6lG,UAAYM,GAAezgC,EAAKygC,GAAezgC,EACzE1lE,KAAKk8D,WAAW1vB,IAAI,SAAU+lC,EAAY,MAC1CvyE,KAAK+lG,UAAUv5D,IAAI,SAAU45D,EAAiB,MAC9CpmG,KAAK6pC,SAAS0oC,OACX,CACH,IAAIh/B,EAAQniC,OAAOI,SAASxR,KAAKk8D,WAAW1vB,IAAI,SAASz8B,QAAQ,KAAM,KACnEs2F,EAAaj1F,OAAOI,SAASxR,KAAK+lG,UAAUv5D,IAAI,SAASz8B,QAAQ,KAAM,KACvEuiE,EAAWtyE,KAAK6lG,UAAYtyD,GAASkyB,EAAKlyB,GAASkyB,EACnD6gC,EAAgBtmG,KAAK6lG,UAAYQ,GAAc5gC,EAAK4gC,GAAc5gC,EACtEzlE,KAAKk8D,WAAW1vB,IAAI,QAAS8lC,EAAW,MACxCtyE,KAAK+lG,UAAUv5D,IAAI,QAAS85D,EAAgB,MAC5CtmG,KAAK6pC,SAASyoC,GAElBtyE,KAAKk8D,WAAW1vB,IAAI,OAAQ,aCpG9B,MAAO,GAKT,YAAoB/uB,EAAkC8oF,EAA2CjzE,GAA7E,KAAA7V,cAAkC,KAAA8oF,eAA2C,KAAAjzE,OAFjG,KAAAqa,MAAoB,GAIhB,IAAI3wB,EAAOhd,KAEX,IAAK,IAAItI,KAAU+lB,EAAY2F,YAAW,GAEtCpjB,KAAKwmG,UAAU9uG,GAInB,IAAI+uG,EAAYF,EAAalrF,SACzBqrF,EAAat+D,OAAO,mGACxBq+D,EAAU/+D,OAAOg/D,GAEjBA,EAAWx8D,GAAG,QAAS,KAEnB,IAAIxyC,EAASsI,KAAKszB,KAAKkzE,UAAU,CAAEzxF,KAAM,GAAIrM,MAAO,kBAAmBtI,KAAM,SACzE0wC,EAAW9wC,KAAKwmG,UAAU9uG,GAE9BsI,KAAK42C,cAAc9F,EAAU,KAErB9zB,EAAK2pF,aAAe71D,GACpB9zB,EAAK4pF,WAAW91D,OAQhC,iBACI9wC,KAAK2tC,MAAM5+B,QAAQiiC,GAAKhxC,KAAK6mG,WAAW71D,IAI5C,QAAQ81D,GACJ,IAAI9pF,EAAOhd,KACP+mG,EAAW3+D,OAAO,oHAClB0+D,EAAOp+F,MAAQ,8DACnB1I,KAAKumG,aAAa7+D,OAAOq/D,GAEzB,IAAIj2D,EAAqB,CACrBp5C,OAAQ,KACRqvG,SAAUA,EACV3mG,KAAM,OACN4mG,KAAMF,EAAO/xF,MAGjB/U,KAAK2tC,MAAM5pC,KAAK+sC,GAEhBi2D,EAAS78D,GAAG,QAAU2H,IAClB70B,EAAK4pF,WAAW91D,KAMxB,UAAUp5C,GACN,IAAIslB,EAAOhd,KACP+mG,EAAW3+D,OAAO,wIAE+B1wC,EAAOioC,KAAKznC,4KAGjE8H,KAAKumG,aAAa7+D,OAAOq/D,GAEzB,IAAIj2D,EAAqB,CACrBp5C,OAAQA,EACRqvG,SAAUA,EACV3mG,KAAM,QA8BV,OA3BAJ,KAAK2tC,MAAM5pC,KAAK+sC,GAEhBp5C,EAAOioC,KAAKuR,aAAe,CACvBh5C,KAAMR,EAAOioC,KAAKznC,KAClBw/C,eAAgBqvD,GAGpBA,EAASt3E,KAAK,cAAcya,GAAG,YAActzB,IACzCoG,EAAKiqF,SAASn2D,EAAUl6B,KAG5BmwF,EAASt3E,KAAK,cAAcya,GAAG,QAAUtzB,IAAQA,EAAE6hC,iBAAkB7hC,EAAEo7B,oBAEvE+0D,EAAS78D,GAAG,QAAU2H,IAClB70B,EAAK4pF,WAAW91D,KAGpBi2D,EAAS,GAAG3uD,iBAAiB,eAAe,SAAUvG,GAClDA,EAAM4G,iBACN5E,GAAgB,CAAC,CACbxC,QAAS,aACTxH,SAAU,KACN7sB,EAAK45B,cAAc9F,EAAU,WAEjCe,EAAM6G,MAAO7G,EAAM8G,UACxB,GAEI7H,EAIX,SAASA,EAAoBj0B,GACzBA,EAAG47B,iBACH57B,EAAGm1B,kBACH,IAAIh1B,EAAOhd,KACX6zC,GAAgB,CAAC,CACbxC,QAAS,YACTxH,SAAU,QAGX,CACCwH,QAAS,+BACT3nB,MAAO,UACPmgB,SAAU,KACN7sB,EAAK6pF,WAAW/1D,MAEpBj0B,EAAG67B,MAAQ,EAAG77B,EAAG87B,MAAQ,GAIjC,WAAW7H,GACPA,EAASi2D,SAASpiE,SAClB3kC,KAAKszB,KAAKyc,aAAae,EAASp5C,QAChCsI,KAAK2tC,MAAQ3tC,KAAK2tC,MAAM5jC,OAAQylC,GAAOA,GAAMsB,GACzC9wC,KAAK2mG,aAAe71D,IAChB9wC,KAAK2tC,MAAM3rC,OAAS,EACpBhC,KAAK4mG,WAAW5mG,KAAK2tC,MAAM,KAE3B3tC,KAAKszB,KAAKixB,kBAAkBtU,SAAS,0BACrCjwC,KAAKszB,KAAKixB,kBAAkBuT,cAAc,CAAE9P,UAAU,MAI9DhoD,KAAK2tC,MAAM5+B,QAAS4wB,IACE,MAAfA,EAAKjoC,SACJioC,EAAKjoC,OAAOioC,KAAK4N,OAAQ,KAKrC,aAAa71C,GACT,IAAK,IAAIo5C,KAAY9wC,KAAK2tC,MAClBmD,EAASp5C,QAAUA,GACnBsI,KAAK6mG,WAAW/1D,GAK5B,cAAcA,EAAoBjH,GAC9B,IACIoO,EAAOnH,EAASi2D,SAASt3E,KAAK,gBAC9BopB,EAAW/H,EAASp5C,OAAOioC,KAAKznC,KAAKyM,QAAQ,KAEjDuuC,GAAa+E,EAAMA,EAAOa,IACtBhI,EAASp5C,OAAOioC,KAAKznC,KAAO4gD,EAC5Bb,EAAKzF,KAAKsG,GACM,MAAZjP,GAAkBA,KAJE,MAAZgP,EAAmB,KAAO,CAAEvV,MAAO,EAAGoQ,IAAKmF,IAU/D,qBACQ74C,KAAK2tC,MAAM3rC,OAAS,GACpBhC,KAAK4mG,WAAW5mG,KAAK2tC,MAAM,IAInC,WAAWmD,GACP,GAAgB,MAAZA,EACJ,OAAQA,EAAS1wC,MACb,IAAK,OACDJ,KAAKszB,KAAK4zE,SAASl+D,OACnBhpC,KAAKszB,KAAK6zE,WAAWt+D,OACrB7oC,KAAKszB,KAAKgxB,gBAAgBxT,EAASp5C,QACnCsI,KAAKszB,KAAKixB,kBAAkBna,QAC5B,MACJ,IAAK,OACDpqC,KAAKszB,KAAK6zE,WAAWn+D,OACrBhpC,KAAKszB,KAAK4zE,SAASr+D,OAEnB,IAAIu+D,EAAwC,GACxCtrD,EAAiB,GAGjBurD,EAAM3yD,OAAO4yD,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GAEtB,OADA3rD,EAAK/3C,KAAKyjG,GACH,MAIfH,EAAIvf,SAASl1B,MAAM80C,YAAc,SAAUr0F,EAAQs0F,EAAKrxF,EAASsxF,EAAKC,GAClE,IAAItxF,EAAQlD,EAAOs0F,GAGnB,OAFA7rD,EAAK/3C,KAAKwS,EAAMuxF,SAET,IAGXT,EAAIh1D,OAAOvB,EAASk2D,MAEpBhnG,KAAK85C,SAASgC,EAAMsrD,EAAW,KAE3B,IAAIW,EAAMrzD,OAAO4yD,WAAW,CACxBC,UAAW,SAAUC,EAAKC,GACtB,OAAOL,EAAUI,MAIzBO,EAAIjgB,SAASl1B,MAAM80C,YAAc,SAAUr0F,EAAQs0F,EAAKrxF,EAASsxF,EAAKC,GAClE,IAAItxF,EAAQlD,EAAOs0F,GAEnB,OAAOP,EAAU7wF,EAAMuxF,SAAS/3F,QAAQ,QAAS,KAIrD,IAAIyiC,EAAOu1D,EAAI11D,OAAOvB,EAASk2D,MAC/BhnG,KAAKszB,KAAK4zE,SAAS10D,KAAKA,KAE5BxyC,KAAKumG,aAAa92E,KAAK,YAAYsZ,YAAY,aAC/C+H,EAASi2D,SAASj+D,SAAS,cAKvC,SAASgT,EAAgBksD,EAAqCn+D,GAC1D,IAAI7sB,EAAOhd,KACX,GAAI87C,EAAK95C,OAAS,EAAG,CACjB,IAAIimG,EAAgBnsD,EAAKnoC,MACzB5L,OAAOsP,OAAOyiC,SAASmuD,EAAe,SAAU,CAAEluD,QAAS,IAAKC,KAAMjlC,IAClEizF,EAAQC,GAAiBlzF,EACzBiI,EAAK88B,SAASgC,EAAMksD,EAASn+D,UAIjCA,IAMR,SAASnyC,GACLsI,KAAKumG,aAAa92E,KAAK,YAAYsZ,YAAY,aAE/C/oC,KAAK2mG,YAAc3mG,KAAK2tC,MAAMle,KAAMqhB,GAAaA,EAASp5C,QAAUA,GAE5C,MAApBsI,KAAK2mG,aAAqB3mG,KAAK2mG,YAAYI,SAASj+D,SAAS,cCzQnE,MAAOo/D,GAIF,KAAKt9D,GAER,GAAI8J,OAAOyzD,UAAW,CAElB,IAAIx9D,EAA4B+J,OAAOyzD,UAAU92C,KAAK,SAAU,GAE5Dr0C,EAAOhd,KAEX2qC,EAAQ8yD,QAAU,SAAyC5gF,GACvD2pB,QAAQC,IAAI,4BAA8B5pB,EAAGzc,OAGjDuqC,EAAQy9D,UAAY,SAAyCvrF,GACzDG,EAAKqrF,GAAK19D,EAAQxT,OAClBna,EAAKqrF,GAAG5K,QAAU,SAAS5rD,GAGvBrL,QAAQC,IAAI,oBAAsBoL,EAAMuD,OAAOpqC,MAAMW,UAEvDi/B,KAGND,EAAQ29D,gBAAkB,SAASzrF,GAE/BG,EAAKqrF,GAAKxrF,EAAGu4B,OAAOje,OACFna,EAAKqrF,GAAGE,kBAAkB,UAAW,CAAEC,QAAS,WAAYC,eAAe,IAGjFC,YAAYC,WAAa,SAAS92D,WAOlDrL,QAAQC,IAAI,4BAMb,YAAYmiE,EAAkB9B,GAET9mG,KAAKqoG,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9DC,IAAI,CAClBF,SAAUA,EACV9B,OAAQA,IAKT,aAAa8B,GAEQ5oG,KAAKqoG,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAE9DliE,OAAOiiE,GAKtB,UAAUA,EAAkB/+D,GAE/B,IAEIc,EAFoB3qC,KAAKqoG,GAAGK,YAAY,UAAW,aAAaG,YAAY,WAEhDrwG,IAAIowG,GAEpCj+D,EAAQ8yD,QAAW5rD,IACfhI,EAAS,OAGbc,EAAQy9D,UAAav2D,IACI,MAAlBlH,EAAQxT,OACP0S,EAAS,MAETA,EAASc,EAAQxT,OAAO2vE,UCjDlC,MAAO,GAmFT,YAAY7uD,EAAmC8wD,GAAA,KAAAA,aAvC/C,KAAAxpC,yBAAqC,GAqBrC,KAAA+X,qBAAsB,EACtB,KAAAtnC,QAAkB,EAalB,KAAAg5D,0BAAoC,EAMhChpG,KAAKipG,WAAWhxD,GAEhBj4C,KAAKypD,QAAQxR,GAEbj4C,KAAKkpG,cAELlpG,KAAKmoG,UAAY,IAAID,GACrBloG,KAAKmoG,UAAU92C,KAAK,KAEM,MAAlBrxD,KAAK4jC,OAAO/hC,IACZ7B,KAAKmpG,gBAKbnpG,KAAK03E,eAAiB,IAAIhB,GAAe12E,MAnG7C,aAAwB,OAAO,EAE/B,kBAAkBtI,EAAgByX,IAElC,cACI,OAAOnP,KAAKo8C,SAEhB,iBACI,OAAOp8C,KAAKi7B,YAEhB,sBACI,OAAOj7B,KAAK8vC,iBAEhB,cACI,OAAO9vC,KAAKu3E,SAEhB,kBACI,OAAOv3E,KAAKqX,OAAOA,OAGvB,cACI,OAAOrX,KAAK6sC,SAGhB,eACI,OAAO7sC,KAAKi4D,UAGhB,mBACI,OAAOj4D,KAAK81E,cAGhB,2B,MACI,OAAI91E,KAAK4jC,OAAOC,aACwB,QAApC,EAAO7jC,KAAKopG,aAAazC,mBAAW,eAAEjvG,OAE/BsI,KAAK8vC,iBAAiBryB,YAAY4rF,iBAmEjD,c,MAEqB,QAAjB,EAAArpG,KAAKopG,oBAAY,SAAEE,iBAEnBtpG,KAAKupG,cAAcvpG,KAAK+oG,YAEpB/oG,KAAK4jC,OAAOC,cACZ7jC,KAAKopG,aAAe,IAAI,GAAqBppG,KAAK8vC,iBAAiBryB,YAAazd,KAAKwpG,cAAexpG,MACpGA,KAAKopG,aAAaK,qBAClBzpG,KAAK+oG,WAAWh/F,OAAQ+8F,GAA0B,QAAfA,EAAO1mG,MAAgB2O,QAAS+3F,GAAW9mG,KAAKopG,aAAaM,QAAQ5C,KAExG9mG,KAAKskD,gBAAgBtkD,KAAK8vC,iBAAiBryB,YAAY4rF,kBAM/D,WAAWpxD,GACP,IAAI0xD,EAA8B1xD,EAAKhN,KAAK,eAExCjrC,KAAK4jC,OADS,MAAd+lE,GAA2C,iBAAdA,EACflvE,KAAKY,MAAMsuE,EAAWv5F,MAAM,KAAKtN,KAAK,MAEtC,GAGc,MAA5B9C,KAAK4jC,OAAOC,eAAsB7jC,KAAK4jC,OAAOC,cAAe,GACpC,MAAzB7jC,KAAK4jC,OAAOgmE,YAAmB5pG,KAAK4jC,OAAOgmE,WAAY,GAC5B,MAA3B5pG,KAAK4jC,OAAO46C,cAAqBx+E,KAAK4jC,OAAO46C,aAAc,GAC9B,MAA7Bx+E,KAAK4jC,OAAOimE,gBAAuB7pG,KAAK4jC,OAAOimE,eAAgB,GAChC,MAA/B7pG,KAAK4jC,OAAO26C,kBAAyBv+E,KAAK4jC,OAAO26C,iBAAkB,GAEjEv+E,KAAK4jC,OAAO46C,aAAex+E,KAAK4jC,OAAOgmE,WAAa5pG,KAAK4jC,OAAOC,cAAgB7jC,KAAK4jC,OAAOimE,gBAC9F7pG,KAAK4jC,OAAO26C,iBAAkB,GAG7Bv+E,KAAK4jC,OAAO26C,kBACbv+E,KAAK4jC,OAAOC,cAAe,EAC3B7jC,KAAK4jC,OAAOgmE,WAAY,EACxB5pG,KAAK4jC,OAAO46C,aAAc,EAC1Bx+E,KAAK4jC,OAAOimE,eAAgB,GAMpC,gBAAgBnyG,GAERsI,KAAK4jC,OAAOC,cAAiD,MAAjC7jC,KAAKopG,aAAazC,cAC9C3mG,KAAKopG,aAAazC,YAAYjvG,OAAO2qE,YAAcriE,KAAKukD,kBAAkB+d,iBAG1EtiE,KAAK4jC,OAAOC,cACZ7jC,KAAKopG,aAAaU,SAASpyG,GAS/BsI,KAAKukD,kBAAkBuT,cAAc,CACjC9P,UAAU,EACV9G,oBAAqB,IAEzBlhD,KAAKqX,OAAOA,OAAO6wC,SAASxwD,EAAO0e,OAGT,MAAtB1e,EAAO2qE,aACPriE,KAAKukD,kBAAkBie,iBAAiB9qE,EAAO2qE,aAGnD3qE,EAAO+qE,6BAMX,cAEI,IAAI5qE,EAAUmI,KAAK8vC,iBAAiBryB,YAAY2F,YAAW,GAEvDpG,EAAOhd,KAEXA,KAAKmoG,UAAU4B,UAAU/pG,KAAK4jC,OAAO/hC,GAAKmoG,I,MACtC,GAAsB,MAAlBA,EACAzhE,YAAY,KACRvrB,EAAKitF,eACN,SACA,CAEH,IAAIlB,EAAuBtuE,KAAKY,MAAM2uE,GAClCE,EAAYnB,EAAW/mG,OAE3B,IAAK,IAAItK,KAAUG,EACE,QAAjB,EAAAmlB,EAAKosF,oBAAY,SAAEr5D,aAAar4C,GAChCslB,EAAK+yB,aAAar4C,GAGtB,IAAK,IAAIQ,KAAQ6wG,EAAY,CAEzB,IAAIH,EAAW5oG,KAAK4jC,OAAO/hC,GAAK3J,EAChC8H,KAAKmoG,UAAU4B,UAAUnB,EAAW9B,I,QAChC,GAAc,MAAVA,EAAgB,CAEhB,IAAIpvG,EAASslB,EAAKwpF,UAAU,CACxB99F,MAAOxQ,EACP6c,KAAM+xF,EACN1mG,KAAM,SAGO,QAAjB,EAAA4c,EAAKosF,oBAAY,SAAE5C,UAAU9uG,GAC7BslB,EAAKmtF,aAAatmC,OAAO,KAK7B,GADAqmC,IACiB,GAAbA,IACA3hE,YAAY,KACRvrB,EAAKitF,eACN,KACc,QAAjB,EAAAjtF,EAAKosF,oBAAY,SAAEK,qBACM,MAArBzsF,EAAKosF,cAAsB,CAC3B,IAAIvxG,EAAUmlB,EAAK8yB,iBAAiBryB,YAAY2F,YAAW,GACvDvrB,EAAQmK,OAAS,GAAGgb,EAAKsnC,gBAAgBzsD,EAAQ,WAejF,cAEI,IAAIA,EAAUmI,KAAK8vC,iBAAiBryB,YAAY2F,YAAW,GAEvD2lF,EAAuB,GACvBqB,GAAuB,EAI3B,GAFAvyG,EAAQkX,QAAQhX,GAAKqyG,EAAcA,IAAgBryG,EAAE4nC,KAAK4N,OAEtD68D,EAAa,CAEb,IAAK,IAAI1yG,KAAUG,EAAS,CACxBkxG,EAAWhlG,KAAKrM,EAAOioC,KAAKznC,MAC5B,IAAI0wG,EAAW5oG,KAAK4jC,OAAO/hC,GAAKnK,EAAOioC,KAAKznC,KAC5C8H,KAAKmoG,UAAUkC,YAAYzB,EAAUlxG,EAAOqrC,iCAC5CrrC,EAAOioC,KAAK4N,OAAQ,EAIxBvtC,KAAKmoG,UAAUkC,YAAYrqG,KAAK4jC,OAAO/hC,GAAI44B,KAAKC,UAAUquE,KAKlE,oBACI/oG,KAAKmoG,UAAU4B,UAAU/pG,KAAK4jC,OAAO/hC,GAAKmoG,IACtC,GAAsB,MAAlBA,EAEG,CAEH,IAAIjB,EAAuBtuE,KAAKY,MAAM2uE,GAEtC,IAAK,IAAI9xG,KAAQ6wG,EAAY,CAEzB,IAAIH,EAAW5oG,KAAK4jC,OAAO/hC,GAAK3J,EAChC8H,KAAKmoG,UAAUmC,aAAa1B,GAGhC5oG,KAAKmoG,UAAUmC,aAAatqG,KAAK4jC,OAAO/hC,OASpD,cAAcknG,GACV/oG,KAAK8vC,iBAAmB,IAAI,GAAU,qBAAsB9vC,KAAM,GAGlE,IAAK,IAAI8mG,KAAUiC,EACI,QAAfjC,EAAO1mG,MACPJ,KAAKwmG,UAAUM,GAO3B,UAAUA,GACN,IAAIpvG,EAAiB,GAAOylD,gBAAgB,CACxCt7C,GAAI7B,KAAK8vC,iBAAiBryB,YAAY2F,YAAW,GAAMphB,OACvD9J,KAAM4uG,EAAOp+F,MACbqM,KAAM+xF,EAAO/xF,KACb0yC,qBAAsB,KACtBgB,eAAgB,KAChBmX,+BAA+B,EAC/B5vB,QAAS,EACT9B,aAAc,EACd7B,aAAa,EACb4E,iCAAiC,GAClCjxC,MAEHA,KAAK8vC,iBAAiBryB,YAAY2zB,UAAU15C,GAE5C,IAAIslB,EAAOhd,KAMX,OAJAtI,EAAO0e,MAAMysC,mBAAmB,KAC5B7lC,EAAKutF,mCAGF7yG,EAGX,aAAaA,GACTsI,KAAK8vC,iBAAiBryB,YAAYsyB,aAAar4C,GAInD,QAAQugD,GAIJA,EAAKzL,IAAI,CACL,mBAAoB,OACpB,kBAAmB,SAGvB,IAAIg+D,EAAapiE,OAAO,qCACpBqiE,EAAoBzqG,KAAK0qG,yBAAyBzyD,GAElDu5B,EAAYxxE,KAAK2qG,eAEjBlqD,EAAarY,OAAO,qCACxBpoC,KAAKmnG,WAAa/+D,OAAO,qCACzBpoC,KAAKknG,SAAW9+D,OAAO,iDACvBpoC,KAAKmqG,aAAe/hE,OAAO,mHAE3BqY,EAAW/Y,OAAO1nC,KAAKmnG,WAAYnnG,KAAKknG,SAAUlnG,KAAKmqG,cAEvD,IAAIS,EAAmB5qG,KAAK6qG,sBAC5BpqD,EAAW/Y,OAAOkjE,GAElB5qG,KAAKmqG,aAAanhE,OAElBhpC,KAAKmqG,aAAajgE,GAAG,QAAS,KAAQugE,EAAkB5hE,SAExD7oC,KAAKknG,SAASl+D,OAEd,IAAI8hE,EAAe1iE,OAAO,uCACtB2iE,EAAkB3iE,OAAO,0CAG7B,GAAIpoC,KAAK4jC,OAAO26C,gBAAiB,CAC7B,IAAIx/B,EAAa3W,OAAO,qCAGxB,GAFApoC,KAAKgrG,cAAcD,EAAiBD,GACpC/rD,EAAWrX,OAAOqjE,GACd/qG,KAAK4jC,OAAOC,aAAc,CAC1B,IAAI4iE,EAAYzmG,KAAKirG,eACrBlsD,EAAWpI,QAAQ8vD,GACnB,IAAIb,GAAea,GAAW,GAAO,EAAO,QAEhDzxD,GAAS+1D,GAGTP,EAAW9iE,OAAO+Y,EAAY1B,GAC9B,IAAI6mD,GAAe7mD,GAAY,GAAM,EAAM,KAAQ/+C,KAAKqX,OAAOA,OAAOkpC,gBAEtEiqD,EAAW7zD,QAAQ8J,GAMlBzgD,KAAK4jC,OAAO26C,kBACbisB,EAAW7zD,QAAQm0D,GACnBA,EAAahiE,SAAS,wBACtB2X,EAAWjU,IAAI,CACX,SAAY,WACZ,OAAU,SAIlByL,EAAKnP,SAAS,qBACdmP,EAAKvQ,OAAO8iE,EAAYh5B,GACxB,IAAIo0B,GAAep0B,GAAW,GAAM,EAAO,KACvCppC,OAAO,gBAAgBiN,QAAQ,eAC/Br1C,KAAKqX,OAAOA,OAAOkpC,WAGvBvgD,KAAKqX,OAAS,IAAI,GAAOrX,MAAM,GAAO,GACtCA,KAAKqX,OAAOoyC,QAAQzpD,KAAKmnG,YACzBnnG,KAAKmnG,WAAW13E,KAAK,kBAAkB+c,IAAI,UAAW,MAEzB,MAAzByL,EAAKjM,KAAK,aAAqBiM,EAAKjM,KAAK,WAAY,KACzDhsC,KAAK81E,cAAgB,IAAI,GAAc79B,EAAMj4C,MAC7CA,KAAK81E,cAAcx3B,OAEnBt+C,KAAKi4D,UAAY,IAAI,GAAUj4D,KAAM+qG,EAAiB9yD,GACtDj4C,KAAKi4D,UAAUxO,UAEfzpD,KAAK6sC,SAAW,IAAI,GAAS7sC,KAAMA,KAAKkrG,gBACxClrG,KAAK6sC,SAAS4c,UAEd,IAAI0hD,EAAsB/iE,OAAO,iDAC7BgjE,EAAehjE,OAAO,2CAC1BpoC,KAAKkrG,eAAexjE,OAAOyjE,GAC3BA,EAAoBzjE,OAAO0jE,GAE3BprG,KAAKu3E,SAAW,IAAI,GAASv3E,KAAMA,KAAKk6C,aAAc,MAEtDl6C,KAAKi7B,YAAc,IAAI,GAAYj7B,KAAMA,KAAKu3E,SAC1C,IAAI,GAAsBuzB,EAAcrqD,GACxCzgD,KAAK4nC,SAET,IAAIyjE,EAAcjjE,OAAO,uFACzB0iE,EAAapjE,OAAO2jE,GAEpBA,EAAYnhE,GAAG,YAAcrtB,IACzBA,EAAG47B,iBACH57B,EAAGm1B,kBACH6B,GAAgB,CAAC,CACbxC,QAAS,uBACTgD,KAAM,8BACNxK,SAAU,SAELhtB,EAAG67B,MAAQ,EAAG77B,EAAG87B,MAAQ,KAGtChQ,WAAW,KACP3oC,KAAKi7B,YAAYwuB,UACjBzpD,KAAKqX,OAAOA,OAAOkpC,SACnBvgD,KAAKo8C,SAAW,IAAI,GAASp8C,MAC7BA,KAAK+iD,cACN,KAKP,sBACI,OAAO3a,OAAO,2UAUlB,yBAAyBkjE,GACrB,IAAIC,EAAUnjE,OACV,u4BAwCJ,OAnBAmjE,EAAQviE,OAERsiE,EAAQ5jE,OAAO6jE,GAEfnjE,OAAO,6BAA6B8B,GAAG,QAAS,KAC5CqhE,EAAQviE,SAGZZ,OAAO,yBAAyB8B,GAAG,QAAS,KAExClqC,KAAKkpG,cACLlpG,KAAKwrG,oBAELD,EAAQviE,OACRhpC,KAAKmqG,aAAanhE,OAClBhpC,KAAKgpG,0BAA4B,IAI9BuC,EAGX,2BAA2B5rE,EAAY37B,GAEnC,GAAY,MAAR27B,EACA,OAGJ,GAAI3/B,KAAK4jC,OAAOC,aAAc,CAC1B,IAAIiN,EAAW9wC,KAAKopG,aAAaz7D,MAAMle,KAAMqhB,GAAaA,EAASp5C,OAAOioC,MAAQA,GAClF,GAAgB,MAAZmR,EACA,OAGAA,EAASp5C,QAAUsI,KAAKgjC,4BACxBhjC,KAAKskD,gBAAgBxT,EAASp5C,QAGlCsI,KAAKs/D,qBAAuBxuB,EAASp5C,YAErCsI,KAAKs/D,qBAAuBt/D,KAAK8vC,iBAAiBryB,YAAY4rF,iBAGlE,IAAIjhG,EAAQ,CACR6O,YAAajT,EAASqF,OAAQ0N,gBAAiB/S,EAASoF,KACxD4N,UAAWhT,EAASqF,OAASrF,EAAShC,OAAQ8U,cAAe9S,EAASoF,MAG1EpJ,KAAKukD,kBAAkBse,qCAAqCz6D,GAC5DpI,KAAKu/D,yBAA2Bv/D,KAAKukD,kBAAkBE,iBAAiBzkD,KAAKu/D,yBAA0B,CACnG,CACIn3D,MAAOA,EACPkO,QAAS,CAAEijB,UAAW,0BAA2BmrB,aAAa,IAElE,CACIt8C,MAAOA,EACPkO,QAAS,CAAEysD,uBAAwB,oCAQ/C,6BACQ/iE,KAAKgjC,4BAA8BhjC,KAAKs/D,sBACxCt/D,KAAKukD,kBAAkBE,iBAAiBzkD,KAAKu/D,yBAA0B,IAE3Ev/D,KAAKs/D,qBAAuB,KAC5Bt/D,KAAKu/D,yBAA2B,GAGpC,eAGI,IAAIknC,EAAYr+D,OAAO,wDAEnBqjE,EAAerjE,OAAO,yGAU1B,OARApoC,KAAKwpG,cAAgBphE,OAAO,mDAM5Bq+D,EAAU/+D,OAAO+jE,EAAczrG,KAAKwpG,eAE7B/C,EAGX,aAC4B,MAApBzmG,KAAKkjD,aACLhX,cAAclsC,KAAKkjD,aAGvB,IAAIlmC,EAAOhd,KACXA,KAAKkjD,YAAc3a,YAAY,KAE3BvrB,EAAKolC,kBAEN,KAKP,iB,QAEI,GAA6B,MAAzBpiD,KAAK8vC,kBAEL9vC,KAAK8vC,iBAAiBryB,YAAYwiC,WAClCjgD,KAAKo8C,SAAS/Z,gBAAkB1vB,EAAe4vB,WAC5CviC,KAAKi7B,YAAYwgB,OAASC,GAAiBiO,SAC3C3pD,KAAKi7B,YAAYwgB,OAASC,GAAiBC,OAC9C,IAEI37C,KAAKo8C,SAASG,QAAQv8C,KAAK8vC,iBAAiBryB,aAGrB,QADb,EACD,QADC,EAAGzd,KACbi4D,iBAAS,eAAE/0B,oBAAY,SAAEigB,WAAWnjD,KAAK8vC,kBAEzC9vC,KAAKqX,OAAO49C,0BAA0B,MAEtCj1D,KAAKi/C,eAELj/C,KAAKgwC,UAEL,IAAIipC,EAAsF,MAA1Ej5E,KAAKi7B,YAAYi+C,mBAAmBl5E,KAAK8vC,iBAAiBryB,aAEtEw7D,GACAj5E,KAAKi7B,YAAYwgB,OAASC,GAAiBsY,kBAC3Ch0D,KAAKm5E,yCACLn5E,KAAKi7B,YAAY0oB,SAASjI,GAAiBxhB,OAI1C++C,GACAj5E,KAAKi7B,YAAYwgB,OAASC,GAAiBxhB,MAAQl6B,KAAKi7B,YAAYwgB,OAASC,GAAiB1wC,OAC/FhL,KAAKi7B,YAAY0oB,SAASjI,GAAiBsY,iBAKjD,MAAOp9C,GACL4vB,QAAQx7B,MAAM4L,GACd5W,KAAKo8C,SAAS/Z,eAAiB1vB,EAAe3H,OAM1D,iCACIhL,KAAKgpG,4BACiC,GAAlChpG,KAAKgpG,2BACLhpG,KAAKmqG,aAAatmC,OAAO,KAGjC,eAEI7jE,KAAKi4D,UAAUrO,uBAAuB5pD,KAAK8vC,iBAAkB9vC,KAAKgjC,4BAItE,kBAAkB8qC,IAOlB,yCACI,IAAI1oB,EAAKplD,KAAK8vC,iBAAiBryB,YAAY67D,OAC3Ct5E,KAAKi7B,YAAYxd,YAAc2nC,EAC/BplD,KAAKi7B,YAAYs+C,mBAAqBv5E,KAAKgwC,QAEvChwC,KAAKi7B,YAAYwgB,OAASC,GAAiBsY,iBAAmBh0D,KAAKs3E,qBACnEt3E,KAAKi7B,YAAY0oB,SAASjI,GAAiBxhB,MAOnD,cAAc6kB,EAAiCnC,GAE3C,IAAI8uD,EAAetjE,OAAO,sCAC1BsjE,EAAal/D,IAAI,WAAY,YAC7B,IAAIm/D,EAAevjE,OAAO,yDAE1B,GAAIpoC,KAAK4jC,OAAO46C,YAAa,CACzB,IAAIotB,EAAkBxjE,OAAO,2IAE7BujE,EAAajkE,OAAOkkE,GAKxB,GAFAD,EAAajkE,OAAOkV,GAEhB58C,KAAK4jC,OAAOimE,cAAe,CAC3B,IAAIgC,EAAYzjE,OAAO,0GACvBsjE,EAAahkE,OAAOmkE,GAIxB,GAAI7rG,KAAK4jC,OAAO46C,YAAa,CACzB,IAAIstB,EAAa1jE,OAAO,iHACxBsjE,EAAahkE,OAAOokE,GAGxB,GAAI9rG,KAAK4jC,OAAOgmE,UAAW,CACvB,IAAImC,EAAW3jE,OAAO,8FACtBsjE,EAAahkE,OAAOqkE,GAGxBL,EAAahkE,OAAOikE,GAEpB5sD,EAAWrX,OAAOgkE,GAElB,IAAIh6B,EAAQtpC,OAAO,6CAEnB,GAAIpoC,KAAK4jC,OAAOimE,cAAe,CAC3B,IAAImC,EAAY5jE,OAAO,4DACvBspC,EAAMhqC,OAAOskE,GAGjB,GAAIhsG,KAAK4jC,OAAO46C,YAAa,CACzB,IAAIytB,EAAc7jE,OACd,uPASJspC,EAAMhqC,OAAOukE,GAGjB,GAAIjsG,KAAK4jC,OAAOgmE,UAAW,CACvB,IAAIsC,EAAY9jE,OAAO,sDACvBspC,EAAMhqC,OAAOwkE,GAGjBntD,EAAWrX,OAAOgqC,GAItB,eAEI,IAAIF,EAAYppC,OAAO,oCACvBpoC,KAAKkrG,eAAiB9iE,OAAO,yCAC7BopC,EAAU9pC,OAAO1nC,KAAKkrG,gBAGtB,IAAIQ,EAAetjE,OAAO,sCAC1BsjE,EAAal/D,IAAI,WAAY,YAC7B,IAAI2/D,EAAS/jE,OAAO,qGAChBgkE,EAAehkE,OAAO,qHAC1BsjE,EAAahkE,OAAOykE,EAAQC,GAC5BpsG,KAAKkrG,eAAexjE,OAAOgkE,GAE3B,IAAIh6B,EAAQtpC,OAAO,6CACfikE,EAAMjkE,OAAO,uEACjBpoC,KAAKk6C,aAAe9R,OAAO,uCAE3B,IAAIkkE,EAAmBlkE,OAAO,6sBA8C9B,OAjCAikE,EAAI3kE,OAAO1nC,KAAKk6C,aAAcoyD,GAE9BtsG,KAAK4nC,QAAUQ,OACX,0tBAyBJspC,EAAMhqC,OAAO1nC,KAAK4nC,QAASykE,GAC3BrsG,KAAKkrG,eAAexjE,OAAOgqC,GAE3B18B,GAASw8B,GAEFA,EAGX,oBACI,OAAOxxE,KAAK03E,gBChzBd,MAAO,GAAb,cAGI,KAAAxC,gBAAkB,EAIlB,KAAAq3B,iBAAmC,GAEnC,UAEIvsG,KAAK83E,YAEL93E,KAAK+3E,uBAEL/3E,KAAKg4E,uBAELC,KAAKC,MAAMC,YAEXn4E,KAAKs2E,aAAe,IAAIr8D,EAG5B,uBAEIg+D,KAAKG,UAAU7+E,UAAU8+E,gBAAkB,SAAUC,GACjD,IAAIpmD,EAAKlyB,KAAKu4E,eAOd,GANIv4E,KAAKw4E,WAAax4E,KAAKy4E,kBACvBz4E,KAAKy4E,gBAAkBz4E,KAAKw4E,SAE5Bx4E,KAAK04E,WAAa,GAGlB14E,KAAK04E,YAAcJ,EAAgBK,SAAU,CAE7C,IAAI55D,EAAKu5D,EAAgBM,eACrBC,EAAK74E,KAAK44E,eACdC,EAAG3xE,EAAKgrB,EAAGhrB,EAAI6X,EAAG7X,EAAMgrB,EAAG0lB,EAAI74B,EAAG/mB,EAClC6gF,EAAGjhC,EAAK1lB,EAAGhrB,EAAI6X,EAAG64B,EAAM1lB,EAAG0lB,EAAI74B,EAAG9mB,EAClC4gF,EAAG7gF,EAAKk6B,EAAGl6B,EAAI+mB,EAAG7X,EAAMgrB,EAAGj6B,EAAI8mB,EAAG/mB,EAClC6gF,EAAG5gF,EAAKi6B,EAAGl6B,EAAI+mB,EAAG64B,EAAM1lB,EAAGj6B,EAAI8mB,EAAG9mB,EAClC4gF,EAAGC,GAAM5mD,EAAG4mD,GAAK/5D,EAAG7X,EAAMgrB,EAAG6mD,GAAKh6D,EAAG/mB,EAAK+mB,EAAG+5D,GAC7CD,EAAGE,GAAM7mD,EAAG4mD,GAAK/5D,EAAG64B,EAAM1lB,EAAG6mD,GAAKh6D,EAAG9mB,EAAK8mB,EAAGg6D,GAE7C/4E,KAAK04E,UAAYJ,EAAgBK,SAEjC34E,KAAK24E,aAOjB,cACI,IAAI,GAAYr6B,OAChBt+C,KAAK+3E,uBAGT,uBACI/3E,KAAKk1E,kBACuB,GAAxBl1E,KAAKk1E,iBACLl1E,KAAKsjC,QAIb,YACI/yB,EAAkB+tC,OAClB/vC,EAAiB+vC,OACjB9tC,EAAmB8tC,OACnBrvC,EAAoBqvC,OACpBpvC,EAAqBovC,OACrBhzC,EAAoBgzC,OACpBlvC,EAAkBkvC,OAElBptC,EAAYotC,OACZzsC,EAAUysC,OACVhsC,EAAWgsC,OACX/rC,EAAc+rC,OACd7rC,EAAY6rC,OAGhB,QAEIt+C,KAAKwsG,qBAST,qBAEIpkE,OAAO,gBAAgB62B,KAAK,CAAC/8D,EAAeytB,KACxC,IAAIsoB,EAAO7P,OAAOzY,GACdo5E,EAAyB,GAC7B9wD,EAAKxoB,KAAK,UAAUwvC,KAAK,CAAC/8D,EAAeytB,KACrC,IAAI88E,EAAUrkE,OAAOzY,GACjBvvB,EAAmB,OACI,MAAxBqsG,EAAQxhE,KAAK,UAAiB7qC,EAAoBqsG,EAAQxhE,KAAK,SAClE,IAAI67D,EAAmB,CACnB1mG,KAAMA,EACNsI,MAAO+jG,EAAQzgE,KAAK,SACpBj3B,KAAM03F,EAAQ13F,OAAOlF,QAEzBk5F,EAAWhlG,KAAK+iG,KAGpB9mG,KAAK0sG,QAAQz0D,EAAM8wD,KAM3B,QAAQ9wD,EAA2B8wD,GAER,IAAI,GAAa9wD,EAAM8wD,IAMtD3gE,QAAO,WAEH,IAAIukE,EAAkB,IAAI,GAEtBjX,EAAS,GACTkX,EAAa,2BAEU,MAAxBl4D,OAAOihD,gBAEND,EAAShhD,OAAOihD,eAIU,MAA3BjhD,OAAOm4D,mBAEND,EAAal4D,OAAOm4D,kBAIxBn4D,OAAOo4D,QAAQlpE,OAAO,CAAEmpE,MAAO,CAAE,GAAMrX,EAASkX,KAEhDl4D,OAAOo4D,QAAQlpE,OAAO,CAClB,SAAU,CACNopE,mBAAoB,CAChB,IAAK,OAGbC,uBAAwB,CAAC,2BAG7Bv4D,OAAOo4D,QAAQ,CAAC,0BAA0B,WAEtCH,EAAgBO,aAChBP,EAAgBljD,aAKpBwuB,KAAK4d,OACA1P,OAAO7gD,IAAIowD,EAAS,oCACpByX,KAAK","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||, !\r\n    ampersand, // &\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) continue;\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let typeLeft: Klass = <Klass>(<RuntimeObject>firstOperand.value).class;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedSignatures: string[] = [];\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                        } else {\r\n                            implementedSignatures.push(m.getSignatureWithReturnParameter());\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                for (let m of abstractMethods) {\r\n\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingAbstractMethods.push(m);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.identifier);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.identifier), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % parameters.length) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    attributeValues: Map<string, Map<string, Value>> = new Map();\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        // while (klass != null) {\r\n        //     let map: Map<string, Value> = new Map();\r\n        //     this.attributeValues.set(klass.identifier, map);\r\n        //     for (let attribute of klass.attributes) {\r\n        //         let value: Value = {\r\n        //             type: attribute.type,\r\n        //             value: null\r\n        //         };\r\n\r\n        //         if (attribute.type instanceof PrimitiveType) {\r\n        //             value.value = attribute.type.initialValue;\r\n        //         }\r\n        //         map.set(attribute.identifier, value);\r\n        //     }\r\n        //     klass = klass.baseClass;\r\n        // }\r\n\r\n    }\r\n\r\n    getValue(identifier: string):Value{\r\n\r\n        let klass = this.class;\r\n        \r\n        while(klass != null){\r\n            let av = this.attributeValues.get(klass.identifier).get(identifier);\r\n            if(av != null) \r\n            {\r\n                if(av.updateValue != null){\r\n                    av.updateValue(av);\r\n                }\r\n                return av;\r\n            }\r\n\r\n            // let attribute = klass.attributeMap.get(identifier);\r\n            // if(attribute != null && attribute.updateValue != null){\r\n            //     return attribute.updateValue({type: this.class, value: this});\r\n            // }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    initializeAttributeValues(){\r\n\r\n        this.attributeValues = new Map();\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n            \r\n            let map:Map<string, Value> = new Map();\r\n            this.attributeValues.set(klass.identifier, map);\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                map.set(att.identifier, v);\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if(operation == TokenType.keywordInstanceof){\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"int\": stringPrimitiveType, \r\n            \"float\": stringPrimitiveType, \"double\": doublePrimitiveType, \r\n            \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value)); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for(let s of strings){\r\n                    values.push({type: stringPrimitiveType, value: s});\r\n                }\r\n                \r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushError(\"| gefunden. Gemeint ist wohl || (Oder-Operator)?\", 1);\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if(base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if(base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if(base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if(base == 16) return (charCode >= 48 && charCode <= 57 ) || (charCode >= 97 && charCode <= 102) ||\r\n         (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if(!(lastCharWasNewline && char == \" \")){\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            } \r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if(this.currentChar == '-'){\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if(this.currentChar == '-'){\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if(this.currentChar == 'd' || this.currentChar == 'f'){\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if(radix != 10){\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if(exponent != 0) value *= Math.pow(10, exponent);       \r\n        \r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation(){\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at,text, line, column, text.length + 1);        \r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n            if (c != null && c.baseClass?.hasConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = true;\r\n                    if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                        let stm = methodNode.statements[0].statements;\r\n                        if (stm.length > 0 && stm[0].type == TokenType.superConstructorCall) {\r\n                            error = false;\r\n                        }\r\n                    } else if (methodNode.statements[0].type == TokenType.superConstructorCall) {\r\n                        error = false;\r\n                    }\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt Konstruktoren, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode) {\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIdentifier: node.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        klass: (<Klass>objectType).staticClass,\r\n                        attributeIdentifier: node.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIdentifier: node.identifier,\r\n                            klass: objectType\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n            this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let superclassType: Klass = <Klass>classContext.baseClass;\r\n        if (superclassType instanceof StaticClass) {\r\n            this.pushError(\"Statische Methoden haben keine super-Methoden.\", node.position);\r\n            return { type: null, isAssignable: false };\r\n        }\r\n        if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: true,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even iv method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n    [TokenType.or], [TokenType.and],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                term = {\r\n                    type: TokenType.keywordThis,\r\n                    position: position\r\n                };\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if(klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null){\r\n            return null; \r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let attributeValues = rto.attributeValues.get(klass.identifier);\r\n            if (attributeValues != null) {\r\n                let first: boolean = true;\r\n                let serializedAttributes: any;\r\n                for (let attribute of klass.attributes) {\r\n                    if (!attribute.isStatic && !attribute.isTransient) {\r\n                        if (first) {\r\n                            first = false;\r\n                            serializedAttributes = {};\r\n                            serializedObject[klass.identifier] = serializedAttributes;\r\n                        }\r\n                        serializedAttributes[attribute.identifier] = this.toJsonObj(attributeValues.get(attribute.identifier));\r\n                    }\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for(let vtr of this.valuesToResolve){\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if(value != null){\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore, \r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n            \r\n            while (klass != null) {\r\n                let attributeValues = rto.attributeValues.get(klass.identifier);\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributeValues != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributeValues.set(attribute.identifier, this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = {type: klass1, value: rto};\r\n            this.indexToObjectMap[index] = value;\r\n            return value; \r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n    }\r\n\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                if (m != null) {\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Ändert das Element an der Position index der Liste. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index < this.objectArray.length && index >= 0){\r\n                this.valueArray[index] = r;\r\n                this.objectArray[index] = r.value;\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n        \r\n        if(this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n\r\n        this.main.workspaceList.push(w);\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\"\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(\"mousedown\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n        if (ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        let newValue = <string>$input.val();\r\n        renameDoneCallback(newValue);\r\n        elementToReplace.show()\r\n        $input.remove();\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number):JQuery<HTMLElement> {\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if(mi.link != null){\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") +  '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if(mi.link == null){\r\n            $item.on('mousedown.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(\"mousedown.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(\"mousedown\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n        \r\n        $item.on('mousemove.contextmenu', () => {\r\n            if(mi != parentMenuItem && $openSubMenu != null){\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if(mi.subMenu != null){\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(\"mousedown.contextmenu\", () => {\r\n        jQuery(document).off(\"mousedown.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n    \r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(\"mousedown.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    headings.on(\"mousedown\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: {[id: string]: any}): JQuery<HTMLDivElement>{\r\n\r\n    let s = \"\";\r\n    if(id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if(klass != null && klass != \"\") s += ` class=\"${klass}\"`; \r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if(css !=  null){\r\n        div.css(css);\r\n    }\r\n\r\n    if(text != null && text != \"\"){\r\n        div.text(text);\r\n    }\r\n    \r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>){\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\" id=\"workspace\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            this.$buttonNew.on('mousedown', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\"\r\n                }\r\n\r\n                that.elements.push(ae);\r\n\r\n                let $element = that.renderElement(ae);\r\n                that.$listElement.prepend($element);\r\n\r\n                that.$listElement.scrollTop(0);\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n\r\n        $ce.on('mousedown', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements(){\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n            return (aName.localeCompare(bName));\r\n        });\r\n        this.elements.forEach((element) => {this.$listElement.append(element.$htmlFirstLine)});\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let that = this;\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass}\">\r\n        <div class=\"jo_fileimage\"></div><div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active\"></div>' : \"\"}\r\n        </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        element.$htmlFirstLine.on('mousedown', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n        });\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (that.contextMenuProvider != null) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        }, false);\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on('mousedown', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if(ae != null){\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n    \r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string){\r\n        if(element != null){\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n        \r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElementData(): any {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null)\r\n            that.executeKeyDownEvent(event); \r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Identifier: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        this.$consoleTabHeading.trigger(\"mousedown\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace)\r\n                .map(ci => {\r\n                    ci.sortText = \"aa\" + ci.label;\r\n                    return ci;\r\n                })\r\n                );\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($0);\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($0);\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { System } from \"pixi.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        that.$outer.on('mousedown', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on('mousemove.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.speedcontrol', () => {\r\n                jQuery(document).off('mouseup.speedcontrol');\r\n                jQuery(document).off('mousemove.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.interpreter.stepsPerSecond = speed;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(speed);\r\n        if(speed >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"2\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                that.main.networkManager.sendUpdates(() => {\r\n                    that.setWorkspaceActive(workspace);\r\n                });\r\n            }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('mousedown', (e) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository'\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository'\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n        \r\n        $zoomcontrolBar.on('mousedown', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on('mousemove.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.zoomcontrol', () => {\r\n                jQuery(document).off('mouseup.zoomcontrol');\r\n                jQuery(document).off('mousemove.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(\"mouseenter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(\"mouseleave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n                line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.staticClass.classObject.initializeAttributeValues();\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.pause();\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIdentifier);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIdentifier);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null) {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n                object.initializeAttributeValues();\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.actActors.length > 0) || this.processingHelper != null) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({type: tvo.type, value: tvo.value}));                \r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n        object.initializeAttributeValues();\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute){\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : \"\") + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass)}\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + a.identifier;\r\n                text += \":\" + a.type.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a)}\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface,\r\n                    onClick: this.isSystemClass ? undefined : () => {this.jumpToDeclaration(m)}\r\n                });\r\n\r\n            }); \r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if(event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                s += this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[], \r\n    displaySystemClasses: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[]\r\n    displaySystemClasses: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            openContextMenu([{\r\n                caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                callback: () => {\r\n                    that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                    that.drawDiagram(that.currentWorkspace, false);\r\n                }\r\n            }\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout(){\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if(cbs != null){\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.currentClassBoxes.displaySystemClasses){\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n         \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while(arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributeValues[k.identifier][a.identifier];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        jQuery('#slider1').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#leftpanel');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(\"mousemove.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width + dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth - dx) + \"px\");\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider1\", () => {\r\n                jQuery(document).off(\"mousemove.slider1\");\r\n                jQuery(document).off(\"mouseup.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let ee = jQuery('#bottomdiv-outer');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                let height = Number.parseInt(ee.css('height').replace('px', ''));\r\n                ee.css('height', (height - dy) + \"px\");\r\n\r\n                let meheight = Number.parseInt(me.css('height').replace('px', ''));\r\n                me.css('height', (meheight + dy) + \"px\");\r\n\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider2\", () => {\r\n                jQuery(document).off(\"mousemove.slider2\");\r\n                jQuery(document).off(\"mouseup.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#rightdiv');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(\"mousemove.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width - dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth + dx) + \"px\");\r\n                \r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                width += dx;\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider3\", () => {\r\n                jQuery(document).off(\"mousemove.slider3\");\r\n                jQuery(document).off(\"mouseup.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.rufname + \" \" + ud.familienname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val()\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    jQuery('#login').show();\r\n                    jQuery('#bitteWarten').css('display', 'none');\r\n                    jQuery('#login-message').empty();\r\n                    this.main.interpreter.setState(InterpreterState.not_initialized);\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n                    this.main.bottomDiv?.console?.clear();\r\n                    this.main.interpreter.printManager.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred \": 0xCD5C5C,\r\n        \"indigo \": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Point } from \"pixi.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.on(listenerType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        this.$containerInner.on(\"mousemove\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseenter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseleave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                this.interpreter.timerStopped = false;\r\n                this.interpreter.timerFunction(33.33, false, 0.08);\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => {return mls.shapeHelper.runtimeObject == listener});\r\n        if(index >= 0){\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(angleInDeg);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if(sh1.isDestroyed){\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"setCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"setCenter\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if(!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)){\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n        \r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n    }\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n    \r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelper(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelper extends ShapeHelper {\r\n\r\n    private colorArray: Float32Array;\r\n    private colorBuffer: PIXI.Buffer;\r\n\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelper = new BitmapHelper(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n\r\n        for (let i = 0; i < this.colorArray.length; i++) bh.colorArray[i] = this.colorArray[i];\r\n        bh.colorBuffer.update();\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n        if (this.displayObject == null) {\r\n            this.initGraphics();\r\n            this.worldHelper.stage.addChild(this.displayObject);\r\n        }\r\n\r\n    };\r\n\r\n    protected initGraphics() {\r\n\r\n        let vertexArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 2);\r\n        this.colorArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 4);\r\n        let vertexIndexArray = new Int32Array(this.anzahlX * this.anzahlY * 6); // Anzahl der Dreieckseckpunkte\r\n\r\n        let xStep = this.width / this.anzahlX;\r\n        let yStep = this.height / this.anzahlY;\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let left = x * xStep + this.left;\r\n                let top = y * yStep + this.top;\r\n                let index = (x + y * (this.anzahlX)) * 8;\r\n                vertexArray[index] = left;\r\n                vertexArray[index + 1] = top;\r\n                vertexArray[index + 2] = left + xStep;\r\n                vertexArray[index + 3] = top;\r\n                vertexArray[index + 4] = left;\r\n                vertexArray[index + 5] = top + yStep;\r\n                vertexArray[index + 6] = left + xStep;\r\n                vertexArray[index + 7] = top + yStep;\r\n\r\n                let color = (x + y) % 2;\r\n                index = (x + y * (this.anzahlX)) * 16;\r\n                for (let i = 0; i < 16; i++) {\r\n                    this.colorArray[index + i] = color;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let i: number = 0; // index des Dreieckspunktes\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n\r\n                let index = (x + y * this.anzahlX) * 4;\r\n                i = (x + y * this.anzahlX) * 6;\r\n                vertexIndexArray[i] = index;\r\n                vertexIndexArray[i + 1] = index + 1;\r\n                vertexIndexArray[i + 2] = index + 2;\r\n                vertexIndexArray[i + 3] = index + 1;\r\n                vertexIndexArray[i + 4] = index + 3;\r\n                vertexIndexArray[i + 5] = index + 2;\r\n\r\n            }\r\n        }\r\n\r\n\r\n        let vertexBuffer = new PIXI.Buffer(vertexArray, true);\r\n        this.colorBuffer = new PIXI.Buffer(this.colorArray, false);\r\n        let VertexIndexBuffer = new PIXI.Buffer(vertexIndexArray, true, true);\r\n\r\n\r\n\r\n        const geometry = new PIXI.Geometry()\r\n            .addAttribute('aVertexPosition', // the attribute name\r\n                vertexBuffer, // x, y\r\n                2).addIndex(VertexIndexBuffer) // the size of the attribute\r\n\r\n            .addAttribute('aColor', // the attribute name\r\n                this.colorBuffer,\r\n                4); // the size of the attribute\r\n\r\n        const shader = PIXI.Shader.from(`\r\n    \r\n        precision mediump float;\r\n        attribute vec2 aVertexPosition;\r\n        attribute vec4 aColor;\r\n    \r\n        uniform mat3 translationMatrix;\r\n        uniform mat3 projectionMatrix;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n    \r\n            vColor = aColor;\r\n            gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    \r\n        }`,\r\n\r\n            `precision mediump float;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n            gl_FragColor = vColor;\r\n        }\r\n    \r\n    `);\r\n\r\n        this.displayObject = new PIXI.Mesh(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLES);\r\n\r\n        this.displayObject.position.set(this.left, this.top);\r\n\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        let r = this.colorArray[i];\r\n        let g = this.colorArray[i + 1];\r\n        let b = this.colorArray[i + 2];\r\n        let a = this.colorArray[i + 3];\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: Math.round(r * 255),\r\n            green: Math.round(g * 255),\r\n            blue: Math.round(b * 255),\r\n            hex: ColorHelper.intColorToHexRGB(Math.round(r * 255) * 0x10000 + Math.round(g * 255) * 0x100 + Math.round(b * 255))\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        let r1 = this.colorArray[i];\r\n        let g1 = this.colorArray[i + 1];\r\n        let b1 = this.colorArray[i + 2];\r\n\r\n        return Math.abs(r - r1) < 0.5 && Math.abs(g - g1) < 0.5 && Math.abs(b - b1) < 0.5;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let i = (x + y * (this.anzahlX)) * 16;\r\n\r\n                let r = ((c & 0xff0000) >> 16) / 255;\r\n                let g = ((c & 0xff00) >> 8) / 255;\r\n                let b = ((c & 0xff)) / 255;\r\n\r\n                this.colorArray[i] = r;\r\n                this.colorArray[i + 1] = g;\r\n                this.colorArray[i + 2] = b;\r\n                this.colorArray[i + 3] = alpha;\r\n                this.colorArray[i + 4] = r;\r\n                this.colorArray[i + 5] = g;\r\n                this.colorArray[i + 6] = b;\r\n                this.colorArray[i + 7] = alpha;\r\n                this.colorArray[i + 8] = r;\r\n                this.colorArray[i + 9] = g;\r\n                this.colorArray[i + 10] = b;\r\n                this.colorArray[i + 11] = alpha;\r\n                this.colorArray[i + 12] = r;\r\n                this.colorArray[i + 13] = g;\r\n                this.colorArray[i + 14] = b;\r\n                this.colorArray[i + 15] = alpha;\r\n            }\r\n        }\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let i = (x + y * this.anzahlX) * 16;\r\n        return Math.trunc(this.colorArray[i] * 255) * 0x10000 +\r\n            Math.trunc(this.colorArray[i + 1] * 255) * 0x100 +\r\n            Math.trunc(this.colorArray[i + 2] * 255);\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = '---';\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \" oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if(max < min){\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Point, PRECISION, TilingSprite } from \"pixi.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.remove(shape);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n                        rto.initializeAttributeValues();\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: {x: number, y: number}[];\r\n\r\n                for(let i = 0; i < points.length - 1; i += 2){\r\n                        sh.addPoint(points[i].value, points[i+1].value, i >= points.length -2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if(!closeAndFill){\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(this.hitPolygonInitial.length > 0){\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n    \r\n    setPoint(x: number, y: number, index: number) {\r\n        if(index == 0 || index == 1){\r\n            this.hitPolygonInitial[index] = {x: x, y: y};\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{x: x1,y: y1}, {x: x2,y: y2}];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. Falls scale ungleich 1 ist wird die Bitmap des Sprites VOR dem Rendern um den Faktor scale gestreckt. Dabei wird die nearest neighbour-Interpolation verwendet damit aus Einzelpixeln schöne Quadrate werden. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.setTexture(null, index);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).\"', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n        (parameters) => {\r\n            return Date.now() + this.deltaTimeMillis;\r\n        }    \r\n        , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI/180.0;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: Math.cos(alphaDeg) * r});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: Math.sin(alphaDeg) * r});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x)/Math.PI*180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return Math.sqrt(x*x+y*y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x*x + y*y);\r\n\r\n                if(Math.abs(length) > 0.00000000001){\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                let valueMap1: Map<string, Value> = new Map();\r\n                valueMap1.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap1.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o1.attributeValues.set(\"Vector2\", valueMap1);\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x*x + y*y);\r\n                if(l > 0){\r\n\r\n                    valueMap.get(\"x\").value = x/l*length;\r\n                    valueMap.get(\"y\").value = y/l*length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x + x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y + y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x - x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y - y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[2].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                return x*x1 + y*y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n        \r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*s});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y*s});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle: number = -parameters[1].value*Math.PI/180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*cos - y*sin});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: x*sin + y*cos});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n                    \r\n            this.addMethod(new Method(\"distance\", new Parameterlist([\r\n                { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n                    let x1: number = <number>parameters[1].value;\r\n                    let y1: number = <number>parameters[2].value;\r\n                    let x2: number = <number>parameters[3].value;\r\n                    let y2: number = <number>parameters[4].value;\r\n                    let dx = x2 - x1;\r\n                    let dy = y2 - y1;\r\n                    return Math.sqrt(dx*dx+dy*dy);\r\n                }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                clientRuntimeObject.initializeAttributeValues();\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TilingSprite } from \"pixi.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"Processing\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n            this.interpreter.timerExtern = true;\r\n            this.setupProcessing(this.$containerInner);\r\n        }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n            let that = this;\r\n            let drawMethodPending: boolean = true;\r\n            this.$div = $div;\r\n\r\n            let sketch = (p5: p5) => {\r\n\r\n                p5.setup = function () {\r\n                    that.renderer = p5.P2D;\r\n\r\n                    let afterFinishingBoth = () => {\r\n                        // p5.createCanvas(that.width, that.height, that.renderer);\r\n                        drawMethodPending = false\r\n                        // $div.find('canvas').css({\r\n                        //     'width': '',\r\n                        //     'height': ''\r\n                        // })            \r\n                    }\r\n\r\n                    let i = 2;\r\n\r\n                    that.runMethod('setup', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n                    that.runMethod('settings', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n\r\n                };\r\n\r\n                p5.preload = function () {\r\n                    that.runMethod('preload');\r\n                };\r\n\r\n                p5.draw = function () {\r\n                    if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                        if (!drawMethodPending) {\r\n                            drawMethodPending = true;\r\n                            that.runMethod(\"draw\", () => {\r\n                                drawMethodPending = false;\r\n                            });\r\n                        }\r\n                    }\r\n                    that.tick();\r\n                    // p5.background(50);\r\n                    // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n                };\r\n\r\n                p5.mousePressed = function () {\r\n                    that.runMethod('mousePressed');\r\n                };\r\n\r\n                p5.mouseReleased = function () {\r\n                    that.runMethod('mouseReleased');\r\n                };\r\n\r\n                p5.mouseClicked = function () {\r\n                    that.runMethod('mouseClicked');\r\n                };\r\n\r\n                p5.mouseDragged = function () {\r\n                    that.runMethod('mouseDragged');\r\n                };\r\n\r\n                p5.mouseEntered = function () {\r\n                    that.runMethod('mouseEntered');\r\n                };\r\n\r\n                p5.mouseExited = function () {\r\n                    that.runMethod('mouseExited');\r\n                };\r\n\r\n                p5.mouseMoved = function () {\r\n                    that.runMethod('mouseMoved');\r\n                };\r\n\r\n                p5.keyPressed = function () {\r\n                    that.runMethod('keyPressed');\r\n                };\r\n\r\n                p5.keyReleased = function () {\r\n                    that.runMethod('keyReleased');\r\n                };\r\n\r\n\r\n            }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n            $div.find('canvas').css({\r\n                'width': '',\r\n                'height': ''\r\n            })\r\n\r\n        }\r\n\r\n\r\n    tick() {\r\n\r\n            if(this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter;\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter(){\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum/length;\r\n        this.centerYInitial = this.ySum/length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean){\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.borderColor,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        if (this.isFilled) {\r\n            this.render();\r\n        } else {\r\n            if (this.borderColor != null) {\r\n                this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n                this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n                this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n            }\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n\r\n    }\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = 20;\r\n        let lengthBackward = 10;\r\n        let lengthBackwardP = 10;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if(shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty){\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if(this.initialHitPolygonDirty){\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon(){\r\n        this.hitPolygonInitial = this.lineElements.map((le) => {return {x: le.x, y: le.y}});\r\n    }\r\n\r\n}\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean = true) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = true;\r\n        if (this.config.withPCode == null) this.config.withPCode = true;\r\n        if (this.config.withConsole == null) this.config.withConsole = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withPCode = false;\r\n            this.config.withConsole = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über Java-Online ...\",\r\n                link: \"https://java.mathe-pabst.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}