{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/Zeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/Rechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","push","position","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","ln","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","lexShiftLeft","lexShiftRight","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","scopeNode","stm","superConstructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","conditionType","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","stackposOfVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","pushLocalVariableToStack","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","updateWorkspaces","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","window","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","elements","dontSortElements","addPanel","$captionElement","$listElement","fixed","enabled","$buttonNew","$accordionDiv","close","$element","renderElement","prepend","renameElement","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","$htmlFirstLine","sort","b","aName","sortName","bName","cssClass","$div","addElementActionCallback","$elementAction","addEventListener","contextMenuItems","renameCallback","contextMenuProvider","cmi","preventDefault","pageX","pageY","deleteCallback","pointPos","selection","newText","invokeCallback","ae1","findElement","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","Workspace","restoreFromData","currentFileId","currentlyOpenModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","showProgramPointerAndVariables","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","newPosition","intervalBorders","maxStepsPerSecond","intervalDelta","intervalIndex","intervalMin","speed","stepsPerSecond","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","max","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","clearTimeout","inDebounce","hash","position1Cm","position2Cm","sqrt","path","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","pe","me","mm","mewidth","ee","meheight","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","loginRequest","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","showLoginForm","clearAfterLogout","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","restart","spriteAnimations","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","actActors","getModule","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","aktionsempfaengerList","gngTaktgeberEnabled","gngTaktdauer","gngLastTakt","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p1","p2","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","abstandPunktZuStrecke","q","lambda","fx","fy","s2","shapeType","helper","getCenterX","getCenterY","sh","testdestroyed","angleInDeg","centerX","centerY","isOutsideView","shape","sh1","collidesWith","angleDeg","setVisible","tint","react","getCopy","bringToFront","sendToBack","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","centerXInitial","centerYInitial","setHitPolygonDirty","container","highestIndex","getChildIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","polygonBerührtPolygonExakt","apply","bounds","screen","cX","cY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","anzahlX","anzahlY","addToDefaultGroup","bh","BitmapHelper","colorArray","colorBuffer","update","initGraphics","vertexArray","Float32Array","vertexIndexArray","Int32Array","xStep","yStep","vertexBuffer","Buffer","VertexIndexBuffer","geometry","Geometry","addIndex","shader","Shader","from","Mesh","DRAW_MODES","TRIANGLES","g","red","green","blue","hex","intColorToHexRGB","r1","g1","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","colorName","intColor","intColorToRGB","o1","d1","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","closeAndFill","pointsNumber","ph","addPoint","PolygonHelper","lineTo","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","sprite","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","h","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","scaleMode","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","texture","textures","Sprite","dynamicTexture1","RenderTexture","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","atan2","deltaTimeMillis","printStream","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","xIndex","yIndex","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","forward","turn","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","aktionsempfaengerType","aktionsempfaenger","dauer","grad","farbe","GNGFArben","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","el","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","lib","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FA/LJ,CAAYA,MAAS,KAkMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK,IAWvB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AUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QAEvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,GAAJ,QACvB,EAAKxlB,UAAUwlB,QAAQ,IAAI,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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor){\r\n                if(currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0){\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if(method.isConstructor){\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if(firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let implementedSignatures: string[] = [];\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for(let m1 of implementedMethods){\r\n                                if(m1.implements(m)){\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if(!isImplemented){\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for(let m1 of implementedMethods){\r\n                        if(m1.implements(m)){\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(!isImplemented){\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if(this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null){\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for(let a of this.attributes){\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound , staticClass: this};\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value)); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight(){\r\n        this.next(); // Consume first > of >>\r\n\r\n        if(this.nextChar == \">\"){\r\n            this.lexShiftRightUnsigned();\r\n        } else if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned(){\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if(this.nextChar == \"=\"){\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft(){\r\n        this.next(); // Consume first < of <<\r\n\r\n        if(this.nextChar == '='){\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else{\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n            if (c != null && c.baseClass?.hasConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = true;\r\n                    if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                        let stm = methodNode.statements[0].statements;\r\n                        if (stm.length > 0 && stm[0].type == TokenType.superConstructorCall) {\r\n                            error = false;\r\n                        }\r\n                    } else if (methodNode.statements[0].type == TokenType.superConstructorCall) {\r\n                        error = false;\r\n                    }\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt Konstruktoren, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if(nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos,  conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} \r\n               = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n            this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let superclassType: Klass = <Klass>classContext.baseClass;\r\n        if (superclassType instanceof StaticClass) {\r\n            this.pushError(\"Statische Methoden haben keine super-Methoden.\", node.position);\r\n            return { type: null, isAssignable: false };\r\n        }\r\n        if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: true,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even iv method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while(scc != null && scc.attributes.indexOf(attribute) == -1){\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if(opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType){\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                    {\r\n                        title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                        text: TokenTypeReadable[node.operator]\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    \r\n                    });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                term = {\r\n                    type: TokenType.keywordThis,\r\n                    position: position\r\n                };\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null) {\r\n            return null;\r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Ändert das Element an der Position index der Liste. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index < this.objectArray.length && index >= 0){\r\n                this.valueArray[index] = r;\r\n                this.objectArray[index] = r.value;\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n        \r\n        if(this.main.user == null || this.main.user.is_testuser){\r\n            callback();\r\n            return;\r\n        } \r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        if(this.main.user.is_testuser){\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n\r\n        this.main.workspaceList.push(w);\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\"\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(\"mousedown\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number):JQuery<HTMLElement> {\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if(mi.link != null){\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") +  '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if(mi.link == null){\r\n            $item.on('mousedown.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(\"mousedown.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(\"mousedown\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n        \r\n        $item.on('mousemove.contextmenu', () => {\r\n            if(mi != parentMenuItem && $openSubMenu != null){\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if(mi.subMenu != null){\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(\"mousedown.contextmenu\", () => {\r\n        jQuery(document).off(\"mousedown.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n    \r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(\"mousedown.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    headings.on(\"mousedown\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: {[id: string]: any}): JQuery<HTMLDivElement>{\r\n\r\n    let s = \"\";\r\n    if(id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if(klass != null && klass != \"\") s += ` class=\"${klass}\"`; \r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if(css !=  null){\r\n        div.css(css);\r\n    }\r\n\r\n    if(text != null && text != \"\"){\r\n        div.text(text);\r\n    }\r\n    \r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>){\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\" id=\"workspace\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            this.$buttonNew.on('mousedown', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\"\r\n                }\r\n\r\n                that.elements.push(ae);\r\n\r\n                let $element = that.renderElement(ae);\r\n                that.$listElement.prepend($element);\r\n\r\n                that.$listElement.scrollTop(0);\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n\r\n        $ce.on('mousedown', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements(){\r\n        if(this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n            return (aName.localeCompare(bName));\r\n        });\r\n        this.elements.forEach((element) => {this.$listElement.append(element.$htmlFirstLine)});\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let that = this;\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass}\">\r\n        <div class=\"jo_fileimage\"></div><div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active\"></div>' : \"\"}\r\n        </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        element.$htmlFirstLine.on('mousedown', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n        });\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (that.contextMenuProvider != null) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        }, false);\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on('mousedown', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if(ae != null){\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n    \r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if(scrollIntoView){\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string){\r\n        if(element != null){\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n        \r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElementData(): any {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\"\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        this.$consoleTabHeading.trigger(\"mousedown\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { System } from \"pixi.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        that.$outer.on('mousedown', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on('mousemove.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.speedcontrol', () => {\r\n                jQuery(document).off('mouseup.speedcontrol');\r\n                jQuery(document).off('mousemove.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.interpreter.stepsPerSecond = speed;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(speed);\r\n        if(speed >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"2\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                that.main.networkManager.sendUpdates(() => {\r\n                    that.setWorkspaceActive(workspace);\r\n                });\r\n            }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('mousedown', (e) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository'\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository'\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n        \r\n        $zoomcontrolBar.on('mousedown', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on('mousemove.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.zoomcontrol', () => {\r\n                jQuery(document).off('mouseup.zoomcontrol');\r\n                jQuery(document).off('mousemove.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(\"mouseenter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(\"mouseleave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n                line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        jQuery('#slider1').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#leftpanel');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(\"mousemove.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width + dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth - dx) + \"px\");\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider1\", () => {\r\n                jQuery(document).off(\"mousemove.slider1\");\r\n                jQuery(document).off(\"mouseup.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let ee = jQuery('#bottomdiv-outer');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                let height = Number.parseInt(ee.css('height').replace('px', ''));\r\n                ee.css('height', (height - dy) + \"px\");\r\n\r\n                let meheight = Number.parseInt(me.css('height').replace('px', ''));\r\n                me.css('height', (meheight + dy) + \"px\");\r\n\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider2\", () => {\r\n                jQuery(document).off(\"mousemove.slider2\");\r\n                jQuery(document).off(\"mouseup.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#rightdiv');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(\"mousemove.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width - dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth + dx) + \"px\");\r\n                \r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                width += dx;\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider3\", () => {\r\n                jQuery(document).off(\"mousemove.slider3\");\r\n                jQuery(document).off(\"mouseup.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.rufname + \" \" + ud.familienname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val(),\r\n                language: 0\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    user.is_testuser = loginRequest.username == \"Testuser\" && loginRequest.password == \"\";\r\n\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.pause();\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break; \r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break; \r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break; \r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break; \r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break; \r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break; \r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break; \r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null) {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.actActors.length > 0) || this.processingHelper != null) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({type: tvo.type, value: tvo.value}));                \r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred \": 0xCD5C5C,\r\n        \"indigo \": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Point } from \"pixi.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport type AktionsempfaengerData = {\r\n    methodIdentifier: \"Ausführen()\" | \"Taste(char)\" | \"SonderTaste(int)\" | \"Geklickt(int, int, int)\",\r\n    method: Method,\r\n    runtimeObject: RuntimeObject\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    aktionsempfaengerList: AktionsempfaengerData[] = [];\r\n    gngTaktgeberEnabled: boolean = false;\r\n    gngTaktdauer: number = 300; \r\n    gngLastTakt: number = 0;\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.on(listenerType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        this.$containerInner.on(\"mousemove\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseenter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseleave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                this.interpreter.timerStopped = false;\r\n                this.interpreter.timerFunction(33.33, false, 0.08);\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => {return mls.shapeHelper.runtimeObject == listener});\r\n        if(index >= 0){\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(angleInDeg);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if(sh1.isDestroyed){\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"setCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"setCenter\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront(){\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if( index < highestIndex){\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack(){\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if( index > 0){\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if(!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)){\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n        \r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n    }\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n    \r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelper(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelper extends ShapeHelper {\r\n\r\n    private colorArray: Float32Array;\r\n    private colorBuffer: PIXI.Buffer;\r\n\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelper = new BitmapHelper(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n\r\n        for (let i = 0; i < this.colorArray.length; i++) bh.colorArray[i] = this.colorArray[i];\r\n        bh.colorBuffer.update();\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n        if (this.displayObject == null) {\r\n            this.initGraphics();\r\n            this.worldHelper.stage.addChild(this.displayObject);\r\n        }\r\n\r\n    };\r\n\r\n    protected initGraphics() {\r\n\r\n        let vertexArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 2);\r\n        this.colorArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 4);\r\n        let vertexIndexArray = new Int32Array(this.anzahlX * this.anzahlY * 6); // Anzahl der Dreieckseckpunkte\r\n\r\n        let xStep = this.width / this.anzahlX;\r\n        let yStep = this.height / this.anzahlY;\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let left = x * xStep + this.left;\r\n                let top = y * yStep + this.top;\r\n                let index = (x + y * (this.anzahlX)) * 8;\r\n                vertexArray[index] = left;\r\n                vertexArray[index + 1] = top;\r\n                vertexArray[index + 2] = left + xStep;\r\n                vertexArray[index + 3] = top;\r\n                vertexArray[index + 4] = left;\r\n                vertexArray[index + 5] = top + yStep;\r\n                vertexArray[index + 6] = left + xStep;\r\n                vertexArray[index + 7] = top + yStep;\r\n\r\n                let color = (x + y) % 2;\r\n                index = (x + y * (this.anzahlX)) * 16;\r\n                for (let i = 0; i < 16; i++) {\r\n                    this.colorArray[index + i] = color;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let i: number = 0; // index des Dreieckspunktes\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n\r\n                let index = (x + y * this.anzahlX) * 4;\r\n                i = (x + y * this.anzahlX) * 6;\r\n                vertexIndexArray[i] = index;\r\n                vertexIndexArray[i + 1] = index + 1;\r\n                vertexIndexArray[i + 2] = index + 2;\r\n                vertexIndexArray[i + 3] = index + 1;\r\n                vertexIndexArray[i + 4] = index + 3;\r\n                vertexIndexArray[i + 5] = index + 2;\r\n\r\n            }\r\n        }\r\n\r\n\r\n        let vertexBuffer = new PIXI.Buffer(vertexArray, true);\r\n        this.colorBuffer = new PIXI.Buffer(this.colorArray, false);\r\n        let VertexIndexBuffer = new PIXI.Buffer(vertexIndexArray, true, true);\r\n\r\n\r\n\r\n        const geometry = new PIXI.Geometry()\r\n            .addAttribute('aVertexPosition', // the attribute name\r\n                vertexBuffer, // x, y\r\n                2).addIndex(VertexIndexBuffer) // the size of the attribute\r\n\r\n            .addAttribute('aColor', // the attribute name\r\n                this.colorBuffer,\r\n                4); // the size of the attribute\r\n\r\n        const shader = PIXI.Shader.from(`\r\n    \r\n        precision mediump float;\r\n        attribute vec2 aVertexPosition;\r\n        attribute vec4 aColor;\r\n    \r\n        uniform mat3 translationMatrix;\r\n        uniform mat3 projectionMatrix;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n    \r\n            vColor = aColor;\r\n            gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    \r\n        }`,\r\n\r\n            `precision mediump float;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n            gl_FragColor = vColor;\r\n        }\r\n    \r\n    `);\r\n\r\n        this.displayObject = new PIXI.Mesh(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLES);\r\n\r\n        this.displayObject.position.set(this.left, this.top);\r\n\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        let r = this.colorArray[i];\r\n        let g = this.colorArray[i + 1];\r\n        let b = this.colorArray[i + 2];\r\n        let a = this.colorArray[i + 3];\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: Math.round(r * 255),\r\n            green: Math.round(g * 255),\r\n            blue: Math.round(b * 255),\r\n            hex: ColorHelper.intColorToHexRGB(Math.round(r * 255) * 0x10000 + Math.round(g * 255) * 0x100 + Math.round(b * 255))\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        let r1 = this.colorArray[i];\r\n        let g1 = this.colorArray[i + 1];\r\n        let b1 = this.colorArray[i + 2];\r\n\r\n        return Math.abs(r - r1) < 0.5 && Math.abs(g - g1) < 0.5 && Math.abs(b - b1) < 0.5;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let i = (x + y * (this.anzahlX)) * 16;\r\n\r\n                let r = ((c & 0xff0000) >> 16) / 255;\r\n                let g = ((c & 0xff00) >> 8) / 255;\r\n                let b = ((c & 0xff)) / 255;\r\n\r\n                this.colorArray[i] = r;\r\n                this.colorArray[i + 1] = g;\r\n                this.colorArray[i + 2] = b;\r\n                this.colorArray[i + 3] = alpha;\r\n                this.colorArray[i + 4] = r;\r\n                this.colorArray[i + 5] = g;\r\n                this.colorArray[i + 6] = b;\r\n                this.colorArray[i + 7] = alpha;\r\n                this.colorArray[i + 8] = r;\r\n                this.colorArray[i + 9] = g;\r\n                this.colorArray[i + 10] = b;\r\n                this.colorArray[i + 11] = alpha;\r\n                this.colorArray[i + 12] = r;\r\n                this.colorArray[i + 13] = g;\r\n                this.colorArray[i + 14] = b;\r\n                this.colorArray[i + 15] = alpha;\r\n            }\r\n        }\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let i = (x + y * this.anzahlX) * 16;\r\n        return Math.trunc(this.colorArray[i] * 255) * 0x10000 +\r\n            Math.trunc(this.colorArray[i + 1] * 255) * 0x100 +\r\n            Math.trunc(this.colorArray[i + 2] * 255);\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = '---';\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \" oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if(max < min){\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Point, PRECISION, TilingSprite } from \"pixi.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: {x: number, y: number}[];\r\n\r\n                for(let i = 0; i < points.length - 1; i += 2){\r\n                        sh.addPoint(points[i].value, points[i+1].value, i >= points.length -2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if(!closeAndFill){\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(this.hitPolygonInitial.length > 0){\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n    \r\n    setPoint(x: number, y: number, index: number) {\r\n        if(index == 0 || index == 1){\r\n            this.hitPolygonInitial[index] = {x: x, y: y};\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{x: x1,y: y1}, {x: x2,y: y2}];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. Falls scale ungleich 1 ist wird die Bitmap des Sprites VOR dem Rendern um den Faktor scale gestreckt. Dabei wird die nearest neighbour-Interpolation verwendet damit aus Einzelpixeln schöne Quadrate werden. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.setTexture(null, index);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TilingSprite } from \"pixi.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter;\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter(){\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum/length;\r\n        this.centerYInitial = this.ySum/length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean){\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.borderColor,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        if (this.isFilled) {\r\n            this.render();\r\n        } else {\r\n            if (this.borderColor != null) {\r\n                this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n                this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n                this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n            }\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n\r\n    }\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = 20;\r\n        let lengthBackward = 10;\r\n        let lengthBackwardP = 10;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if(shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty){\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if(this.initialHitPolygonDirty){\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon(){\r\n        this.hitPolygonInitial = this.lineElements.map((le) => {return {x: le.x, y: le.y}});\r\n    }\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"../graphics/Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"../graphics/Shape.js\";\r\nimport { WorldHelper } from \"../graphics/World.js\";\r\nimport { GNGSymbolArtClass } from \"./SymbolArt.js\";\r\n\r\nexport class GNGZeichenfensterClass extends Klass {\r\n\r\n    constructor(public module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        // let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\r\n        let symbolArtType = <GNGSymbolArtClass>module.typeStore.getType(\"SymbolArt\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n\r\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return Math.round(this.getWorldHelper().width);\r\n\r\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\r\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let wh = this.getWorldHelper();\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n                let klass = <Klass>aktionsempfaenger.class;\r\n\r\n                let methodList = [\"Ausführen()\", \"Taste(char)\", \"SonderTaste(int)\", \"Geklickt(int, int, int)\"];\r\n\r\n                for (let ms of methodList) {\r\n                    let method: Method = klass.getMethodBySignature(ms);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        wh.aktionsempfaengerList.push({\r\n                            //@ts-ignore\r\n                            methodIdentifier: ms,\r\n                            method: method,\r\n                            runtimeObject: aktionsempfaenger\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\r\n\r\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\r\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let wh = this.getWorldHelper();\r\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\r\n\r\n                wh.aktionsempfaengerList = wh.aktionsempfaengerList.filter(ae => ae.runtimeObject != aktionsempfaenger);\r\n\r\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                this.getWorldHelper().gngTaktgeberEnabled = true;\r\n\r\n            }, false, true, 'Startet den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                this.getWorldHelper().gngTaktgeberEnabled = false;\r\n\r\n            }, false, true, 'Stoppt den Taktgeber', false));\r\n\r\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\r\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let wh = this.getWorldHelper();\r\n                let dauer: number = parameters[1].value;\r\n                wh.gngTaktdauer = dauer;\r\n\r\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\r\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\r\n            worldObject.intrinsicData[\"World\"] = wh;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\n\r\nexport class GNGRechteckClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"größeSetzen\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"größeSetzen\")) return;\r\n\r\n                sh.height = höhe / sh.displayObject.scale.y;\r\n                sh.width = breite / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\r\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\r\n\r\nexport class GNGBaseFigurClass extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"GNGBaseFigur\", module, \"Der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\r\n\r\n        // this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\r\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"Verschieben\")) return;\r\n\r\n                sh.move(x, y);\r\n\r\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\r\n\r\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\r\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let grad: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"Drehen\")) return;\r\n\r\n                sh.rotate(grad);\r\n\r\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\r\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let farbe: string = parameters[1].value;\r\n\r\n                let color: number = GNGFArben[farbe.toLocaleLowerCase()];\r\n                if (color == null) color = 0x000000; // default: schwarz\r\n\r\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\r\n\r\n                sh.setFillColor(color);\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\r\n\r\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\r\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let winkel: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\r\n\r\n                sh.rotate(winkel - sh.angle);\r\n\r\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\r\n\r\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\r\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sichtbarkeit: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\r\n\r\n                sh.setVisible(sichtbarkeit);\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"Entfernen\")) return;\r\n\r\n                sh.destroy;\r\n\r\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\r\n\r\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\r\n\r\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\r\n\r\n                return sh.bringOnePlaneFurtherToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class GNGAktionsempfaengerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\r\n\r\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\r\n\r\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\r\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\r\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"Gecklickt\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/Zeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/Rechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = true;\r\n        if (this.config.withPCode == null) this.config.withPCode = true;\r\n        if (this.config.withConsole == null) this.config.withConsole = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withPCode = false;\r\n            this.config.withConsole = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://learnj.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}