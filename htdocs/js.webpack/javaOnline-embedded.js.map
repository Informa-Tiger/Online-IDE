{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/ColorLexer.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/compiler/types/TypeHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NotifierClient.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceImporter.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/MyColorProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/WorkspaceSettingsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/workspace/InconsistencyFixer.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/tools/GamepadTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sector.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Arc.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../src/client/tools/ConvexHull.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../src/client/runtimelibrary/Gamepad.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/MathToolsClass.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGEreignisbehandlung.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGZeichenfenster.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGRechteck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFarben.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGBaseFigur.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGAktionsempfaenger.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGDreieck.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGKreis.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGTurtle.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGText.ts","webpack:///../../../../src/client/runtimelibrary/gng/GNGFigur.ts","webpack:///../../../src/client/runtimelibrary/Random.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Direction.ts","webpack:///../../../../src/client/compiler/parser/Patcher.ts","webpack:///../../../../src/client/runtimelibrary/graphics/KeyEvent.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ANDAssigment","XORAssigment","ORAssigment","shiftLeftAssigment","shiftRightAssigment","shiftRightUnsignedAssigment","OR","XOR","tilde","shiftLeft","shiftRight","shiftRightUnsigned","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","canCastTo","length","myParameter","mParameter","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","class","initializeAttributeValues","attributeIndex","av","attributes","Array","numberOfAttributesIncludingBaseClass","fill","att","v","baseClass","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","insertPosition","insertedLength","ln","position","switchStatement","push","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","set","indexOf","newNode","ntr","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","setupAttributeIndicesRecursive","numberOfAttributesInBaseClasses","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","hasConstructorWithParameters","hasParameterlessConstructor","getParameterlessConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","shouldImplement","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedMethods","missingInterfaceMethods","hierarchy","abstractMethods","isImplemented","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","detail","color","Color","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","methodsWithSubInterfaces","visitedInterfaces","visitedMethods","todo","pop","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","caseFirst","sensitivity","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","ColorLexer","hexColorRegExp","rgbColorRegExp","rgbaColorRegExp","m1","red","green","blue","alpha","m2","m3","LexerState","ColorHelper","predefinedColors","substr","colorLexer","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","colorInformation","colorIndices","tokens","errors","currentChar","nextChar","mainState","bracketOpen","bracketClosed","setBracketError","processColorIndices","colorIndex","colorToken","previousToken","getLastNonSpaceToken","tt","nextTokens","getNextNonSpaceTokens","compareTokenTypes","startLineNumber","startColumn","endLineNumber","endColumn","colorIdentifier","colorValue","tokenTypeList","tokenIndex","count","foundToken","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexShiftLeft","lexShiftRight","lexCharacterConstant","lexTripleQuoteStringConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","lexShiftRightUnsigned","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","pushError","parseStringLiteralEscapeCharacter","getColorInfo","StringLines","restOfLine","currentStringLine","lastLine","indent","hex","fromCodePoint","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","splice","delta","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","nextNonSpaceToken","getNextNonSpaceToken","lastTokenIsOperator","nextTokenIsOperator","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","arrayType","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","annotation","getMethodBySignature","cie","signatureMap","cieType","editsProvider","uri","resource","edit","nodes","superconstructorCallsFound","isFirstStatement","superConstructorCall","scopeNode","getSuperconstructorCalls","checkIfMethodIsVirtual","getParameterList","superconstructorCalls","superconstructorCallEnsured","quickFix","methodCall","severity","MarkerSeverity","Error","baseClassConstructor","pushLocalVariableToStack","stackposOfVariable","actorClass","getType","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeStore","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","conditionType","binaryOp","operator","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","constructorCall","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","empty","dimension","elementCount","ec","pushEmptyArray","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","positionsAfterParameterStatements","allStatements","constructorOperands","staticClassContext","castingStatements","correctPositionsAfterInsert","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","isSuperConstructorCall","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","isSystemMethod","callInputMethod","setPauseDuration","pause","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","opIndex","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","parseUnary","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","considerIntDivisionWarning","toTokenType","leftConstant","rightConstant","isIntegerType","floor","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","asError","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","primitiveTypes","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","setupAttributeIndices","cl","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","TypeResolver","WATCHDOG","classOrInterface","watchdog","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","setBaseClass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","collectionInterface","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","addAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","ListHelper","getIteratorMethod","iteratorWithError","execute","objWithError","iterator","nextMethod","hasNextMethod","iteratorAsValue","isInteger","executeImmediatelyInNewStackframe","iterableInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","adAll","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","PerformanceCollector","url","startTime","pe","performanceData","sumTime","performanceDataCount","lastTimeSent","request","data","ajax","successCallback","errorCallback","showNetworkBusy","time","$","async","contentType","success","response","registerPerformanceEntry","jqXHR","statusText","status","busy","networkManager","unsentMessages","connect","state","window","location","protocol","host","connection","WebSocket","onerror","onError","onclose","event","onClose","onmessage","onMessage","onopen","sendIntern","forcedUpdateEvery","counterTillForcedUpdate","send","exception","sendUpdates","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdatesInARow","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","user","doForceUpdate","$rect","css","sendDataToServer","notifierClient","sendIfNothingIsDirty","sendBeacon","is_testuser","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","language","currentWorkspaceId","currentWorkspace","getModifiedWorkspaces","navigator","workspaces","updateWorkspaces","filesToForceUpdate","updateFiles","w","random","entity","workspace_id","workspace","klasse","student_ids","class_id","repositoryId","read","write","repository_id","newSecretRead","newSecretWrite","alert","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","removeModule","setValue","lastSavedVersionId","getAlternativeVersionId","version","remoteFile","createFile","workspaceListPanel","sortElements","filesFromServer","fileIdToLocalModuleMap","withSort","createNewWorkspace","path","isFolder","remoteWorkspaceSettings","setAdditionalLibraries","libraries","panelElement","externalElement","iconClass","addElement","renderSynchronizeButton","fileData","ae","f","identical_to_repository_version","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","mousePointer","PointerEvent","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","$link","top","leftRight","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","jo_mouseDetected","animateToTransparent","$element","cssProperty","startColorRgb","duration","colorPraefix","animate","downloadFile","filename","isBlob","blob","Blob","msSaveOrOpenBlob","createEvent","createElement","download","href","URL","createObjectURL","dataset","downloadurl","initEvent","dispatchEvent","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","expression","pmEntry","compilation","compile","getDebugger","lastSymboltable","evaluate","evaluator","libaries","Workspace","restoreFromData","currentFileId","currentlyOpenModule","toExportedModule","withFiles","sql_baseDatabase","sql_history","sql_manipulateDatabaseStatements","$buttonDiv","$htmlFirstLine","myMain","$button","synchronizeWithRepository","synchronizationManager","synchronizeWithWorkspace","Dialog","$dialog","$dialogMain","$div","colorStyle","placeholder","$buttonRow","button","$message","ischecked","$checkbox","$description","prop","is","dialog","init","heading","pathDescription","$fileInputButton","addDiv","exportedWorkspaces","$errorDiv","$workspacePreviewDiv","registerFiles","reader","FileReader","onload","ew","readAsText","originalEvent","$dropZone","evt","preventDefault","dataTransfer","dropEffect","waitMessage","buttons","close","firstWorkspace","wse","alterAdditionalLibraries","sendCreateWorkspace","text_before_revision","submitted_date","student_edited_after_revision","sendCreateFile","setWorkspaceActive","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","withFolders","enableDrag","acceptDropKinds","elements","dontSortElements","addPanel","$newFolderAction","addFolder","newElement","newFolderCallback","addAction","$collapseAllAction","collapseAll","hasClass","slideUp","$captionElement","$listElement","fixed","grow","enabled","$buttonNew","pathArray","selectedElement","getSelectedElement","name1","path1","isFolder1","name2","path2","isFolder2","cmp","compareWithPath","insertIndex","getElementIndex","$elements","prepend","elementAtIndex","before","renderElement","insertElement","renameElement","$accordionDiv","getCurrentlySelectedPath","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","targetGrow","parts","AccordionPanel","currentlyDraggedElementKind","element1","currentlyDraggedElement","moveElement","expanded","sort","b","aName","sortName","bName","cssClass","expandedCollapsed","pathHtml","addElementActionCallback","$elementAction","$filedragpart","effectAllowed","ctrlKey","dropElementCallback","pathIsCollapsed","slideDown","pressTimer","contextmenuHandler","contextMenuItems","renameCallback","contextMenuProvider","cmi","pageX","pageY","addEventListener","clearTimeout","getChildElements","deleteCallback","elementToMove","destinationFolder","destinationPath","movedElements","sourcePath","oldPathLength","el","moveCallback","folder","pointPos","selection","newText","invokeCallback","ae1","findElement","pathString","elPath","ps","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","accordionElement","$secondLine","$rightTextInFirstLine","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","evaluateWatcherExpressions","watcherElement","InterpreterState","paused","$rightTextAfterFilename","we","SoundTools","praefix","javaOnlineDir","isInitialized","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","executeKeyDownEvent","isEmbedded","running","getMonacoEditor","hasTextFocus","actionIdentifier","action","active","activeElement","tagName","keyCode","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","guides","bracketPairs","highlightActiveIndentation","indentation","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","showProgramPointerAndVariables","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","moduleWithWorkspace","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","_widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","MyColorProvider","getCompiler","colorInfo","oldColor","red256","green256","blue256","hex6Digits","toHex2Digits","rgbCommaSeparated","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","insertMode","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerColorProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","US_COMMA","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","rejectReason","resourceEdits","usagePositionsInModule","$userSettingsButton","$oldPassword","$newPassword1","$newPassword2","waitDiv","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","serverURL","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","confirm","initMenu","menu","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","stepsPerSecond","intervalBorders","maxStepsPerSecond","max","gripIntervalLength","gripPosition","setInterpreterSpeed","newPosition","intervalDelta","intervalIndex","intervalMin","speed","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","subHeading","currentLibraries","library","cbs","addCheckbox","checkboxState","changed","newLibs","lib","used","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","enableNewButton","removeWorkspace","setCaption","droppedElement","dropEffekt","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","toExportedWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","$g","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","inDebounce","hash","position1Cm","position2Cm","sqrt","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","routingInput","drawArrows","routingWorker","terminate","Worker","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","mm","moveLeftPanel","moveBottomDiv","moveRightDiv","sliderknobLeft","sliderknobRight","$editor","mewidth","meheight","$leftPanel","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","isLoginWithTicket","startAnimations","$loginSpinner","loginHappened","sendLoginRequest","showLoginForm","closeAllWebsockets","clearAfterLogout","disconnect","ticket","servlet","loginRequest","username","password","isTestuser","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","folderButtonDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","initializeNotifierClient","startupComplete","errorMessage","removePanels","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","rightDivWidth","editorWidth","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","updateNeeded","newFolder","folderList","ws1","identicalFolders","ws2","folderPathAndNames","fnap","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","matchMedia","matches","login","hashIndex","loginWithTicket","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","fixInconsistencies","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","GamepadTool","gamepads","gamepad","axes","gamepadIndex","buttonIndex","gp","getGamepads","pressed","axisIndex","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","gamepadTool","timerId","timerFunction","req","startFunction","pauseFunction","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueList","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","pauseUntil","resetRuntime","getTimerClass","getModule","forceRun","maxWorkloadFactor","timeBetweenSteps","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","gngEreignisbehandlungHelper","detachEvents","restart","spriteAnimations","cacheAsBitmap","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","hasActors","hasAktionsEmpfaenger","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","socket","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","constructor","groupType","shapeType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","projectionTransform","identity","translate","computeCurrentWorldBounds","shapesNotAffectedByWorldTransforms","shape","frameWidth","shapeHelper","moveX","moveY","shapeX","getCenterX","shapeY","getCenterY","outsideRight","currentLeft","currentWidth","outsideLeft","outsideBottom","currentTop","currentHeight","outsideTop","angleRad","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","WorldContainer","sourceFrame","destinationFrame","Container","renderer","projection","projectionMatrix","renderTexture","current","batch","flush","world","actActors","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","TARGET_FPMS","globalScale","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","pixiApp","app","resize","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Rectangle","addChild","view","kpa","runActorWhenKeyEvent","listenerType","eventType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","gngEreignisbehandlung","handleMouseClickedEvent","p1","p2","setHitPolygonDirty","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","displayObject","destroy","parseColorToOpenGL","scaleMin","brt","BaseRenderTexture","scaleMode","LINEAR","RenderTexture","removeChildren","sprite","Sprite","onChange","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","isGamepadButtonPressed","isGamepadConnected","getGamepadAxisValue","setTimerPaused","isPressed","streckeSchneidetStrecke","p0","p3","schnittpunkt","a1","a2","b1","b2","c1","c2","det","schneidet","abstand","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","schnittpunkteKreisStrecke","schnittpunkte","determiante","t1","t2","abstandPunktZuStrecke","q","lambda","fx","fy","s2","abstandPunktZuGerade","polygonBerührtPolygonExakt","punkte1","punkte2","istGeschlossen1","istGeschlossen2","normaleDerBerührtenGerade1","endIndex1","endIndex2","minAbstand","minIndex","p1a","p1b","p2a","p2b","directionType","vector2Class","helper","sh","testdestroyed","angleInDeg","centerX","centerY","mirrorXY","isOutsideView","sh1","collidesWith","collidesWithAnyShape","keepColliding","moveBackFrom","directionRelativeTo","defineCenter","defineCenterRelative","angleDeg","setVisible","setStatic","tint","react","directionRad","distance","forward","getCopy","bringToFront","sendToBack","getHitPolygon","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","scaleFactor","lastMoveDx","lastMoveDy","centerXInitial","centerYInitial","container","highestIndex","getChildIndex","setChildIndex","transformHitPolygon","bb","getBounds","bb1","dx1","dx2","dy1","dy2","enuminfo","pairs","lmdx","lmdy","parameterMax","currentParameter","newParameter","parameterMin","isColliding","np","apply","bounds","cX","cY","scaleX","scaleY","belongsToGroup","index1","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","getCopyOrClone","anzahlX","anzahlY","bitmapToCopy","isBigEndian","uInt32","Uint32Array","uInt8","Uint8Array","buffer","initGraphics","addToDefaultGroup","bh","BitmapHelperNew","u8Array","texture","bufferResource","BufferResource","bt","BaseTexture","Texture","baseTexture","update","intColorToHexRGB","uploadData","g","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","radius1","radius2","d1","d2","startAngle","endAngle","drawRadii","startAngleRad","endAngleRad","SectorHelper","arc","lineTo","atan2","towPI","normalizedStartAngle","normalizedEndAngle","ri","ra","ArcHelper","beginHole","endHole","r2","colorName","intColor","intColorToRGB","cid","o1","h","hslToRgb","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","doCache","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","hasOverlappingBoundingBoxWith","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","convexhull","makeHull","newPoints","POINT_COMPARATOR","makeHullPresorted","upperHull","lowerHull","shapeClass","closeAndFill","pointsNumber","ph","extractPoints","addPoint","insertPoint","movePointTo","isClosed","points1","PolygonHelper","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","isTransparent","scaleModeClass","spriteLibraryEntry","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","getWidth","getHeight","makeTiling","isTileSprite","TileHelper","copyFromOtherShape","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","copyBitmapFromShape","tileSprite","TilingSprite","mipmap","MIPMAP_MODES","OFF","setParent","tilePosition","dob","SpriteHelper","prefix","sheet","Loader","resources","spritesheet","nameWithIndex","textures","dynamicTexture1","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","tileScale","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","vectorArrayClass","xIndex","yIndex","returnArray","pVector","deltaTimeMillis","printStream","setSpeedInStepsPerSecond","timerRunning","timerStarted","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","alphaDeg","oRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","sendToAll","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","clientList","client","idToClientMap","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","turn","penIsDown","setShowTurtle","xStart","yStart","lineElements","turtleAngleDeg","isFilled","initialHitPolygonDirty","turtleSize","lastLineWidth","lastColor","lastAlpha","lastTurtleAngleDeg","renderJobPresent","lineWidth","calculateCenter","lineGraphic","turtle","initTurtle","moveTurtleTo","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","turtleAngleRad","newLineElement","newTurtleX","newTurtleY","newAngleDeg","vx","vy","vxp","vyp","lengthForward","lengthBackward","lengthBackwardP","firstPoint","le","setupInitialHitPolygon","polygonBerührtPolygon","farbe","GNGEreignisbehandlung","getHelper","registerEvents","dauer","taktdauer","bindEvents","aktionsempfaengerTypes","methodSignatureList","methodToAktionsempfaengerTypeMap","keyToKeyCodeMap","aktionsempfaengerMap","remainingTime","onKeyDownMethod","invokeMethod","unshift","liste","aktionsempfaengerType","aktionsempfaenger","unregisterEvents","GNGFarben","moveAnchor","grad","winkel","sichtbarkeit","bringOnePlaneFurtherToFront","bringOnePlaneFurtherToBack","setAllPointsUntransformed","größe","länge","touchesAtLeastOneFigure","farbeString","touchesColor","objectShapeHelper","touchesShape","polygonClass","circleClass","ellipseClass","rectangleClass","FigurHelper","drawInitialTriangle","groesse","newFactor","partHelper","x3","y3","triangle","rectangleHelper","ellipseHelper","triangleClass","th","gngEreignisbehandlungsHelper","bound","from","Patcher","patches","patch","new","patchedText","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","bracketColorizationOptions","formatter","applyEdits","main1","methodAST","forceUpdate","file_type","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","e2","errorLevelCompare","level1","level2","$startButtonDiv","patched","maxUriNumber","registerWorldType","withBaseModule","additionalLibraries","moduleMap","addLibraryModule","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","hideStartPanel","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","hideEditor","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","eraseDokuwikiSearchMarkup","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","$buttonOpen","loadWorkspaceFromFile","$buttonSave","saveWorkspaceToFile","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","prompt","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BAEA,oCACA,oCACA,kCACA,gDACA,kDACA,kEACA,gBACA,kBAEA,sBACA,gDACA,gCACA,8BAEA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,2CAGA,6BACA,2BACA,6DACA,2DACA,6DACA,2DACA,mDACA,uCACA,2CACA,qCACA,uDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,2CACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FACA,6CACA,uBAlMJ,CAAYA,MAAS,KAqMd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAA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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||\r\n    ampersand, // &\r\n\r\n    ANDAssigment,\r\n    XORAssigment,\r\n    ORAssigment,\r\n    shiftLeftAssigment,\r\n    shiftRightAssigment,\r\n    shiftRightUnsignedAssigment,\r\n    OR, // |\r\n    XOR, // ^\r\n    // AND, // & see TokenType.ampersand above\r\n    tilde, // ~\r\n    shiftRightUnsigned, // >>>\r\n    shiftRight, // >>\r\n    shiftLeft, // <<\r\n\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,    // !\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    constructorCall,       // call constructor with this() inside another constructor\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n    setPauseDuration,\r\n    pause\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n\r\n    [TokenType.ANDAssigment]: \"&=\",\r\n    [TokenType.XORAssigment]: \"^=\",\r\n    [TokenType.ORAssigment]: \"|=\",\r\n    [TokenType.shiftLeftAssigment]: \"<<=\",\r\n    [TokenType.shiftRightAssigment]: \">>=\",\r\n    [TokenType.shiftRightUnsignedAssigment]: \">>>=\",\r\n    // [TokenType.AND]: \"&\", \r\n    [TokenType.OR]: \"|\",\r\n    [TokenType.XOR]: \"^\",\r\n    [TokenType.tilde]: \"~\",\r\n    [TokenType.shiftLeft]: \"<<\",\r\n    [TokenType.shiftRight]: \">>\",\r\n    [TokenType.shiftRightUnsigned]: \">>>\",\r\n\r\n\r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n\r\n    \"^\": TokenType.XOR,\r\n    \"~\": TokenType.tilde,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n\r\n    index: number;\r\n\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    implements(m: Method): boolean {\r\n        if(this.identifier != m.identifier) return false;\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            if(m.returnType != null && m.returnType.identifier != \"void\") return false;\r\n        } else {\r\n\r\n            if(m.returnType instanceof PrimitiveType){\r\n                if(m.returnType != this.returnType) {\r\n                    return false;\r\n                }\r\n            } else if(!this.returnType.canCastTo(m.returnType)){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if(this.parameterlist.parameters.length != m.parameterlist.parameters.length) return false;\r\n\r\n        for(let i = 0; i < this.parameterlist.parameters.length; i++){\r\n            let myParameter = this.parameterlist.parameters[i];\r\n            let mParameter = m.parameterlist.parameters[i];\r\n\r\n            if(mParameter.type instanceof PrimitiveType){\r\n                if(mParameter.type != myParameter.type){\r\n                    return false;\r\n                }\r\n            } else if(!mParameter.type.canCastTo(myParameter.type)) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    // attributeValues: Map<string, Map<string, Value>> = new Map();\r\n    attributes: Value[];\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        this.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    getValue(attributeIndex: number):Value{\r\n\r\n        let av: Value = this.attributes[attributeIndex];\r\n        if(av?.updateValue != null){\r\n            av.updateValue(av);\r\n        }\r\n        return av;\r\n\r\n    }\r\n\r\n    private initializeAttributeValues(){\r\n\r\n        this.attributes = Array(this.class.numberOfAttributesIncludingBaseClass).fill(null);\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                this.attributes[att.index] = v;\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    correctPositionsAfterInsert(insertPosition: number, insertedLength: number) {\r\n        for(let ln of this.labeledNodes){\r\n            if(ln.position != null && ln.position >= insertPosition){\r\n                ln.position += insertedLength;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[ln.position];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType, voidPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\", \"Shape\", \"FilledShape\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if (i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if (i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor) {\r\n                if (currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0) {\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isConstructor) {\r\n            method.returnType = null;\r\n        }\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if (firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public hasParameterlessConstructor() {\r\n        let hasConstructorWithParameters: boolean = false;\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) {\r\n                if (m.parameterlist.parameters.length == 0) {\r\n                    return true;\r\n                } else {\r\n                    hasConstructorWithParameters = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasConstructorWithParameters && this.baseClass != null) {\r\n            return this.baseClass.hasParameterlessConstructor();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public getParameterlessConstructor(): Method {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor && m.parameterlist.parameters.length == 0) return m;\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n            return this.baseClass.getParameterlessConstructor();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while (klass != null) {\r\n                for (let i of klass.implements) {\r\n                    let shouldImplement = type.getNonGenericIdentifier();\r\n                    // look recursively into interface inheritance chain:                    \r\n                    if (i.getThisOrExtendedInterface(shouldImplement) != null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedMethods: Method[] = [];\r\n\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                            let isImplemented: boolean = false;\r\n                            for (let m1 of implementedMethods) {\r\n                                if (m1.implements(m)) {\r\n                                    isImplemented = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!isImplemented) {\r\n                                missingAbstractMethods.push(m);\r\n                            }\r\n                        } else {\r\n                            implementedMethods.push(m);\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0 && !this.isAbstract) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    let isImplemented: boolean = false;\r\n                    for (let m1 of implementedMethods) {\r\n                        if (m1.implements(m)) {\r\n                            isImplemented = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!isImplemented) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.index);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n    public numberOfAttributesIncludingBaseClass: number = null;\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    setupAttributeIndicesRecursive() {\r\n        if (this.baseClass != null && this.baseClass.numberOfAttributesIncludingBaseClass == null) {\r\n            this.baseClass.setupAttributeIndicesRecursive();\r\n        }\r\n        let numberOfAttributesInBaseClasses = this.baseClass == null ? 0 : this.baseClass.numberOfAttributesIncludingBaseClass;\r\n\r\n        for (let a of this.attributes) {\r\n            a.index = numberOfAttributesInBaseClasses++;\r\n            // console.log(this.identifier + \".\" + a.identifier+ \": \" + a.index);\r\n        }\r\n\r\n        this.numberOfAttributesIncludingBaseClass = numberOfAttributesInBaseClasses;\r\n\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type?.debugOutput(object.getValue(attribute.index), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            \r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                //@ts-ignore\r\n                detail: attribute.color? attribute.color : undefined,\r\n                //@ts-ignore\r\n                kind: attribute.color? monaco.languages.CompletionItemKind.Color : monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass } {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound, staticClass: this };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String): Interface {\r\n        if (this.getNonGenericIdentifier() == identifier) return this;\r\n        for (let if1 of this.extends) {\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if (if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        method.isAbstract = true;\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    methodsWithSubInterfaces: Method[];\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        if (this.extends.length == 0) return this.methods;\r\n\r\n        if (this.methodsWithSubInterfaces != null) return this.methodsWithSubInterfaces;\r\n\r\n        let visitedInterfaces: { [key: string]: boolean } = {};\r\n        let visitedMethods: { [signature: string]: boolean } = {};\r\n\r\n        this.methodsWithSubInterfaces = this.methods.slice(0);\r\n        for (let m of this.methods) visitedMethods[m.signature] = true;\r\n        visitedInterfaces[this.identifier] = true;\r\n\r\n        let todo: Interface[] = this.extends.slice(0);\r\n\r\n        while (todo.length > 0) {\r\n            let interf = todo.pop();\r\n            for (let m of interf.methods) {\r\n                if (!visitedMethods[m.signature]) {\r\n                    this.methodsWithSubInterfaces.push(m);\r\n                    visitedMethods[m.signature] = true;\r\n                }\r\n            }\r\n            for (let i of interf.extends) {\r\n                if (!visitedInterfaces[i.identifier]) {\r\n                    todo.push(i);\r\n                    visitedInterfaces[i.identifier] = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.methodsWithSubInterfaces;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if (suits && isEllipsis) {\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n\r\n                    for (let j = i; j < parameterTypes.length; j++) {\r\n                        let givenType = parameterTypes[i];\r\n\r\n                        if (givenType == null) {\r\n                            suits = false; break;\r\n                        }\r\n\r\n                        if (mParameterTypeEllispsis == givenType) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                            howManyCastings++;\r\n                            continue;\r\n                        }\r\n\r\n                        suits = false;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if (parameterTypes.length == 0) {\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type?.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n            if (identifier == 'setCenter') {\r\n                error += ' Tipp: Die Methode setCenter der Klasse Shape wurde umbenannt in \"moveTo\".'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        let m = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n        (parameters) => {\r\n            if(parameters[0].value instanceof RuntimeObject){\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n            } else {\r\n                return parameters[0].value;\r\n            }\r\n\r\n\r\n        }, false, false);\r\n        m.isVirtual = true;\r\n        \r\n        this.addMethod(m);\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.tilde]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n\r\n            // binary ops\r\n            [TokenType.OR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.XOR]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.ampersand]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftLeft]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRight]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.shiftRightUnsigned]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.tilde:\r\n                return ~value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n            case TokenType.OR:\r\n                return value | <number>(secondOperand.value);\r\n\r\n            case TokenType.XOR:\r\n                return value ^ <number>(secondOperand.value);\r\n\r\n            case TokenType.ampersand:\r\n                return value & <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftLeft:\r\n                return value << <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRight:\r\n                return value >> <number>(secondOperand.value);\r\n\r\n            case TokenType.shiftRightUnsigned:\r\n                return value >>> <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType, \"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: {\r\n                \"String\": stringPrimitiveType, \"int\": stringPrimitiveType,\r\n                \"float\": stringPrimitiveType, \"double\": doublePrimitiveType,\r\n                \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType\r\n            },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { caseFirst: 'upper' }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"compareToIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value), 'de', { sensitivity: \"accent\" }); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for (let s of strings) {\r\n                    values.push({ type: stringPrimitiveType, value: s });\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) < 0;\r\n                // return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) > 0;\r\n                // return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) <= 0;\r\n                // return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value.localeCompare(<string>(secondOperand.value), 'de', { caseFirst: 'upper' }) >= 0;\r\n                // return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","export class ColorLexer {\r\n    hexColorRegExp = /^#([a-fA-F0-9]{6})$/;\r\n    rgbColorRegExp = /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/;\r\n    rgbaColorRegExp = /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*(?:\\.\\d+)?)\\)$/;\r\n\r\n    getColorInfo(s: string): monaco.languages.IColor {\r\n\r\n        if(s.startsWith('#')){\r\n            let m1 = s.match(this.hexColorRegExp);\r\n            if(m1 == null) return null;\r\n\r\n            let value = Number.parseInt(m1[1], 16);\r\n            return {\r\n                red: (value >> 16)/255,\r\n                green: ((value >> 8) & 0xff) / 255,\r\n                blue: (value & 0xff)/255,\r\n                alpha: 1\r\n            }\r\n\r\n        } else if(s.startsWith('rgb')){\r\n\r\n            if(s.startsWith('rgba')){\r\n                let m2 = s.match(this.rgbaColorRegExp);\r\n                if(m2 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m2[1])/255,\r\n                    green: Number.parseInt(m2[2]) / 255,\r\n                    blue: Number.parseInt(m2[3])/255,\r\n                    alpha: Number.parseFloat(m2[4])\r\n                }\r\n            } else {\r\n                let m3 = s.match(this.rgbColorRegExp);\r\n                if(m3 == null) return null;\r\n\r\n                return {\r\n                    red: Number.parseInt(m3[1])/255,\r\n                    green: Number.parseInt(m3[2]) / 255,\r\n                    blue: Number.parseInt(m3[3])/255,\r\n                    alpha: 1\r\n                }\r\n    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred\": 0xCD5C5C,\r\n        \"indigo\": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\nimport { ColorLexer } from \"./ColorLexer.js\";\r\nimport { ColorHelper } from \"../../runtimelibrary/graphics/ColorHelper.js\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    colorInformation: monaco.languages.IColorInformation[];\r\n    colorLexer: ColorLexer = new ColorLexer();\r\n\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n    colorIndices: number[];\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string, colorInformation: monaco.languages.IColorInformation[] } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n        this.colorInformation = [];\r\n        this.colorIndices = []; // indices of identifier 'Color' inside tokenList\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null, colorInformation: [] };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        this.processColorIndices();\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError,\r\n            colorInformation: this.colorInformation\r\n        };\r\n\r\n    }\r\n\r\n    processColorIndices() {\r\n\r\n        for (let colorIndex of this.colorIndices) {\r\n\r\n            // new Color(100, 100, 100, 0.1)\r\n            // new Color(100, 100, 100)\r\n            // Color.red\r\n\r\n            let colorToken = this.tokenList[colorIndex];\r\n            let previousToken = this.getLastNonSpaceToken(colorIndex)\r\n\r\n            if (previousToken?.tt == TokenType.keywordNew) {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 7);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.leftBracket, TokenType.integerConstant, TokenType.comma,\r\n                TokenType.integerConstant, TokenType.comma, TokenType.integerConstant,\r\n                TokenType.rightBracket])) {\r\n                    this.colorInformation.push({\r\n                        color: {\r\n                            red: <number>nextTokens[1].value / 255,\r\n                            green: <number>nextTokens[3].value / 255,\r\n                            blue: <number>nextTokens[5].value / 255,\r\n                            alpha: 1\r\n                        },\r\n                        range: {\r\n                            startLineNumber: previousToken.position.line, startColumn: previousToken.position.column,\r\n                            endLineNumber: nextTokens[6].position.line, endColumn: nextTokens[6].position.column + 1\r\n                        }\r\n                    })\r\n                }\r\n            } else {\r\n                let nextTokens = this.getNextNonSpaceTokens(colorIndex, 2);\r\n                if (this.compareTokenTypes(nextTokens, [TokenType.dot, TokenType.identifier])) {\r\n                    let colorIdentifier = <string>nextTokens[1].value;\r\n                    let colorValue = ColorHelper.predefinedColors[colorIdentifier];\r\n                    if (colorValue != null) {\r\n                        this.colorInformation.push({\r\n                            color: {\r\n                                red: (colorValue >> 16) / 255,\r\n                                green: ((colorValue >> 8) & 0xff) / 255,\r\n                                blue: (colorValue & 0xff) / 255,\r\n                                alpha: 1\r\n                            }, range: {\r\n                                startLineNumber: colorToken.position.line, startColumn: colorToken.position.column,\r\n                                endLineNumber: nextTokens[1].position.line, endColumn: nextTokens[1].position.column + colorIdentifier.length\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    compareTokenTypes(tokenList: Token[], tokenTypeList: TokenType[]) {\r\n        if (tokenList.length != tokenTypeList.length) return false;\r\n        for (let i = 0; i < tokenList.length; i++) {\r\n            if (tokenList[i].tt != tokenTypeList[i]) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getNextNonSpaceTokens(tokenIndex: number, count: number): Token[] {\r\n        let tokens: Token[] = [];\r\n        let d = tokenIndex;\r\n        while (tokens.length < count && d + 1 < this.tokenList.length) {\r\n            let foundToken = this.tokenList[d + 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                tokens.push(foundToken);\r\n            }\r\n            d++;\r\n        }\r\n\r\n        return tokens;\r\n\r\n    }\r\n\r\n    getLastNonSpaceToken(tokenIndex: number) {\r\n        let d = tokenIndex;\r\n        while (d - 1 > 0) {\r\n            let foundToken = this.tokenList[d - 1];\r\n            if ([TokenType.space, TokenType.newline].indexOf(foundToken.tt) < 0) {\r\n                return foundToken;\r\n            }\r\n            d--;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ANDAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.ORAssigment, \"&=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.OR, \"|\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.XOR:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.XORAssigment, \"^=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.XOR, \"^\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '<') {\r\n                        this.lexShiftLeft();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '>') {\r\n                        this.lexShiftRight();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.stringConstant, TokenType.rightBracket, TokenType.rightSquareBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    // triple double quote?\r\n                    if (this.nextChar == \"\\\"\" && this.pos + 3 < this.input.length && this.input[this.pos + 2] == \"\\\"\") {\r\n                        this.lexTripleQuoteStringConstant();\r\n                    } else {\r\n                        this.lexStringConstant();\r\n                    }\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    lexShiftRight() {\r\n        this.next(); // Consume first > of >>\r\n\r\n        if (this.nextChar == \">\") {\r\n            this.lexShiftRightUnsigned();\r\n        } else if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightAssigment, \">>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRight, \">>\");\r\n            this.next(); // Consume second >\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftRightUnsigned() {\r\n        this.next(); // Consume second > of >>>\r\n\r\n        if (this.nextChar == \"=\") {\r\n            this.pushToken(TokenType.shiftRightUnsignedAssigment, \">>>=\")\r\n            this.next(); // Consume second >\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftRightUnsigned, \">>>\");\r\n            this.next(); // Consume next\r\n        }\r\n        return;\r\n    }\r\n\r\n    lexShiftLeft() {\r\n        this.next(); // Consume first < of <<\r\n\r\n        if (this.nextChar == '=') {\r\n            this.pushToken(TokenType.shiftLeftAssigment, \"<<=\")\r\n            this.next(); // Consume second <\r\n            this.next(); // Consume =\r\n        } else {\r\n            this.pushToken(TokenType.shiftLeft, \"<<\")\r\n            this.next(); // Consume second <\r\n        }\r\n        return;\r\n    }\r\n\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if (base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if (base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if (base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if (base == 16) return (charCode >= 48 && charCode <= 57) || (charCode >= 97 && charCode <= 102) ||\r\n            (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                char = this.parseStringLiteralEscapeCharacter();   \r\n                text += char;\r\n                continue;             \r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    lexTripleQuoteStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let StringLines: string[] = [];\r\n\r\n        // skip \"\"\" and all characters in same line\r\n\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n        this.next(); // skip \"\r\n\r\n        let restOfLine: string = \"\";\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) < 0 && this.currentChar != endChar) {\r\n            restOfLine += this.currentChar;\r\n            this.next();\r\n        }\r\n\r\n        restOfLine = restOfLine.trim();\r\n        if(restOfLine.length > 0 && !restOfLine.startsWith(\"//\") && !restOfLine.startsWith(\"/*\")){\r\n            this.pushError('Eine Java-Multiline-Stringkonstante beginnt immer mit \"\"\" und einem nachfolgenden Zeilenumbruch. Alle nach \"\"\" folgenden Zeichen werden überlesen!', restOfLine.length + 3);\r\n        }\r\n\r\n        while ([\"\\n\", \"\\r\"].indexOf(this.currentChar) >= 0) {\r\n            this.next();\r\n        }\r\n\r\n        let currentStringLine: string = \"\";\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                currentStringLine += this.parseStringLiteralEscapeCharacter();\r\n            } else if (char == '\"' && this.nextChar == '\"' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == '\"') {\r\n                this.next();\r\n                this.next();\r\n                this.next();\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if (char == endChar) {\r\n                let length = 0;\r\n                for(let s of StringLines) length += s.length;\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Textende erreicht.',length, \"error\", line, column);\r\n                StringLines.push(currentStringLine);\r\n                break;\r\n            } else if ([\"\\n\", \"\\r\"].indexOf(char) >= 0){\r\n                StringLines.push(currentStringLine);\r\n                currentStringLine = \"\";\r\n                while([\"\\n\", \"\\r\"].indexOf(this.currentChar) >= 0){\r\n                    this.next();\r\n                }\r\n                continue;\r\n            } else {\r\n                currentStringLine += char;\r\n            }\r\n            this.next();\r\n        }\r\n\r\n        if(StringLines.length == 0) return;\r\n        let lastLine = StringLines.pop();\r\n        let indent = 0;\r\n        while(lastLine.length > indent && lastLine.charAt(indent) == \" \"){\r\n            indent++;\r\n        }\r\n\r\n        let text: string = \"\"; \r\n        text = StringLines.map(s => s.substring(indent)).join(\"\\n\");\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n        let color = this.colorLexer.getColorInfo(text);\r\n\r\n        if (color != null) {\r\n            this.colorInformation.push({\r\n                color: color,\r\n                range: { startLineNumber: line, endLineNumber: line, startColumn: column + 1, endColumn: this.column - 1 }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    parseStringLiteralEscapeCharacter(): string {\r\n        this.next(); // skip \\\r\n        if(this.currentChar == \"u\"){\r\n            let hex: string = \"\";\r\n            this.next();\r\n            while(\"abcdef0123456789\".indexOf(this.currentChar) >= 0 && hex.length < 4){\r\n                hex += this.currentChar;\r\n                this.next();\r\n            }\r\n            if(hex.length < 4){\r\n                this.pushError('Die Escape-Sequenz \\\\u' + hex + ' gibt es nicht.', 1 + hex.length);\r\n                return \"\";\r\n            } else {\r\n                return String.fromCodePoint(parseInt(hex,16));\r\n            }\r\n        } else if(EscapeSequenceList[this.currentChar] != null){\r\n            let c = EscapeSequenceList[this.currentChar];\r\n            this.next();\r\n            return c;\r\n        } else {\r\n            this.pushError('Die Escape-Sequenz \\\\' + this.currentChar + ' gibt es nicht.', 2);\r\n            this.next();\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if (!(lastCharWasNewline && char == \" \")) {\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            }\r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if (this.currentChar == '-') {\r\n            sign = -1;\r\n            this.next();\r\n        } else if (this.currentChar == '+') {\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if (this.currentChar == '-') {\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if (this.currentChar == 'd' || this.currentChar == 'f') {\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if (exponent != 0) value *= Math.pow(10, exponent);\r\n\r\n        this.pushToken(tt, value, line, column);\r\n\r\n        if (radix == 16 && this.column - column == 8) {\r\n            this.colorInformation.push({\r\n                color: {\r\n                    red: (value >> 16) / 255,\r\n                    green: ((value >> 8) & 0xff) / 255,\r\n                    blue: (value & 0xff) / 255,\r\n                    alpha: 1\r\n                },\r\n                range: {\r\n                    startLineNumber: line, endLineNumber: line, startColumn: column, endColumn: this.column\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    lexAnnotation() {\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n\r\n        this.next(); // consume @\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at, text, line, column, text.length + 1);\r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (text == 'Color') {\r\n            this.colorIndices.push(this.tokenList.length);\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                case TokenType.keywordDefault:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            if(lastNonSpaceToken.position.line == t.position.line){\r\n                                this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let nextNonSpaceToken = this.getNextNonSpaceToken(i, tokenlist);\r\n\r\n                        // no additional indent after \"case 12 :\"\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt) && lastNonSpaceToken?.tt != TokenType.colon;\r\n                        let nextTokenIsOperator = this.isBinaryOperator(nextNonSpaceToken.tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline || nextNonSpaceToken.tt == TokenType.comment) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList.value;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}\r\n","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion, ConstructorCallNode } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment,\r\n    TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.ANDAssigment, TokenType.ORAssigment,\r\n    TokenType.XORAssigment, TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: parameterNodes[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n                let m: Method = methodNode.resolvedType;\r\n                if (m != null && m.annotation == \"@Override\") {\r\n                    if (klass.baseClass != null) {\r\n                        if (klass.baseClass.getMethodBySignature(m.signature) == null) {\r\n                            this.pushError(\"Die Methode \" + m.signature + \" ist mit @Override annotiert, überschreibt aber keine Methode gleicher Signatur einer Oberklasse.\", methodNode.position, \"warning\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getSuperconstructorCalls(nodes: ASTNode[], superconstructorCallsFound: ASTNode[], isFirstStatement: boolean): boolean {\r\n        for (let node of nodes) {\r\n            if (node == null) continue;\r\n            if (node.type == TokenType.superConstructorCall) {\r\n\r\n                if (!isFirstStatement) {\r\n                    if (superconstructorCallsFound.length > 0) {\r\n                        this.pushError(\"Ein Konstruktor darf nur einen einzigen Aufruf des Superkonstruktors enthalten.\", node.position, \"error\");\r\n                    } else {\r\n                        this.pushError(\"Vor dem Aufruf des Superkonstruktors darf keine andere Anweisung stehen.\", node.position, \"error\");\r\n                    }\r\n                }\r\n\r\n                superconstructorCallsFound.push(node);\r\n                isFirstStatement = false;\r\n            } else if (node.type == TokenType.scopeNode && node.statements != null) {\r\n                isFirstStatement = isFirstStatement && this.getSuperconstructorCalls(node.statements, superconstructorCallsFound, isFirstStatement);\r\n            } else {\r\n                isFirstStatement = false;\r\n            }\r\n        }\r\n        return isFirstStatement;\r\n    }\r\n\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass && methodNode.statements != null) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n\r\n            let superconstructorCalls: ASTNode[] = [];\r\n            this.getSuperconstructorCalls(methodNode.statements, superconstructorCalls, true);\r\n\r\n            let superconstructorCallEnsured: boolean = superconstructorCalls.length > 0;\r\n\r\n            // if (methodNode.statements.length > 0 && methodNode.statements[0].type == TokenType.scopeNode) {\r\n            //     let stm = methodNode.statements[0].statements;\r\n            //     if (stm.length > 0 && [TokenType.superConstructorCall, TokenType.constructorCall].indexOf(stm[0].type) >= 0) {\r\n            //         superconstructorCallEnsured = true;\r\n            //     }\r\n            // } else if ([TokenType.superConstructorCall, TokenType.constructorCall].indexOf(methodNode.statements[0].type) >= 0) {\r\n            //     superconstructorCallEnsured = true;\r\n            // }\r\n\r\n            if (c != null && c.baseClass?.hasConstructor() && !c.baseClass?.hasParameterlessConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = !superconstructorCallEnsured;\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt keinen parameterlosen Konstruktor, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            } else if (!superconstructorCallEnsured && c.baseClass?.hasParameterlessConstructor()) {\r\n                // invoke parameterless constructor\r\n                let baseClassConstructor = c.baseClass.getParameterlessConstructor();\r\n                this.pushStatements([\r\n                    // Push this-object to stack:\r\n                    {\r\n                        type: TokenType.pushLocalVariableToStack,\r\n                        position: methodNode.position,\r\n                        stackposOfVariable: 0\r\n                    },\r\n                    {\r\n                        type: TokenType.callMethod,\r\n                        method: baseClassConstructor,\r\n                        isSuperCall: true,\r\n                        position: methodNode.position,\r\n                        stackframeBegin: -1 // this-object followed by parameters\r\n                    }\r\n\r\n                ])\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.resolvedType.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIndex: attribute.resolvedType.index,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode, conditionType?: Type) {\r\n        if (nodeFrom == null) return;\r\n\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, conditionType == booleanPrimitiveType ? \"warning\" : \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        if (this.currentProgram.labelManager != null) {\r\n            this.currentProgram.labelManager.removeNode(lst);\r\n        }\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.constructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type?.identifier + \") kann nicht in den Datentyp \" + targetType?.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        this.checkIfAssignmentInstedOfEqual(node.condition, conditionType?.type);\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            if(collectionType.typeVariables.length == 0){\r\n                collectionElementType = objectType;\r\n            } else {\r\n                collectionElementType = collectionType.typeVariables[0].type;\r\n            }\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            // for (let p of node.constructorOperands) {\r\n            for (let j = 0; j < node.constructorOperands.length; j++) {\r\n                let p = node.constructorOperands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                let ok = (resolvedType == classContext || resolvedType != staticClassContext || (classContext instanceof StaticClass && resolvedType == classContext.Klass));\r\n                if (!ok) {\r\n                    this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n                }\r\n            }\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n\r\n                let srcType = parameterTypes[i];\r\n                // for (let st of parameterStatements[i]) {\r\n                //     this.currentProgram.statements.push(st);\r\n                // }\r\n                let programPosition = allStatements.length;\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n                if (allStatements.length > programPosition) {\r\n                    let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                    allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                    this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError: { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass }\r\n                = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIndex: attributeWithError.attribute.index,\r\n                        attributeIdentifier: attributeWithError.attribute.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIndex: staticAttributeWithError.attribute.index,\r\n                        attributeIdentifier: staticAttributeWithError.attribute.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIndex: staticAttributeWithError.attribute.index,\r\n                            attributeIdentifier: staticAttributeWithError.attribute.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode | ConstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        let isSuperConstructorCall: boolean = node.type == TokenType.superConstructorCall;\r\n\r\n        if (isSuperConstructorCall) {\r\n            if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n                this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n            }\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Konstruktors oder des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n\r\n        let superclassType: Klass | StaticClass;\r\n\r\n        if (isSuperConstructorCall) {\r\n            superclassType = <Klass>classContext.baseClass;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine super-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n            if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n        } else {\r\n            superclassType = <Klass>classContext;\r\n            if (superclassType instanceof StaticClass) {\r\n                this.pushError(\"Statische Methoden haben keine this-Methodenaufrufe.\", node.position);\r\n                return { type: null, isAssignable: false };\r\n            }\r\n        }\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: isSuperConstructorCall,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even if method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while (scc != null && scc.attributes.indexOf(attribute) == -1) {\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIndex: attribute.index,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n                node.attribute = attribute;\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface && (node.object[\"variable\"] != null || node.object[\"attribute\"] != null || node.object[\"termInsideBrackets\"] != null)) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                if (objectNode.type instanceof Interface) {\r\n                    this.pushError('Methodendefinitionen eines Interfaces können nicht statisch aufgerufen werden.', node.position);\r\n                } else {\r\n                    this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        // let parameterStatements: Statement[][] = [];\r\n        let positionsAfterParameterStatements: number[] = []\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            // for (let p of node.operands) {\r\n            for (let j = 0; j < node.operands.length; j++) {\r\n                let p = node.operands[j];\r\n                // let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                // parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                positionsAfterParameterStatements.push(allStatements.length);\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n\r\n            // Marker 1\r\n            let srcType = parameterTypes[i];\r\n            // for (let st of parameterStatements[i]) {\r\n            //     this.currentProgram.statements.push(st);\r\n            // }\r\n            let programPosition = allStatements.length;\r\n\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            if (allStatements.length > programPosition) {\r\n                let castingStatements = allStatements.splice(programPosition, allStatements.length - programPosition);\r\n                allStatements.splice(positionsAfterParameterStatements[i], 0, ...castingStatements);\r\n                this.currentProgram.labelManager.correctPositionsAfterInsert(positionsAfterParameterStatements[i], castingStatements.length);\r\n            }\r\n\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        let isSystemMethod: boolean = false;        \r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass)){\r\n                let classIdentifier = objectNode.type.Klass.identifier;\r\n\r\n                switch (classIdentifier) {\r\n                    case \"Input\":\r\n                        this.pushStatements({\r\n                            type: TokenType.callInputMethod,\r\n                            method: method,\r\n                            position: node.position,\r\n                            stepFinished: true,\r\n                            stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n                        });\r\n                        isSystemMethod = true;\r\n                        break;\r\n                    case \"SystemTools\":\r\n                        if(method.identifier == \"pause\"){\r\n                            this.pushStatements([{\r\n                                type: TokenType.setPauseDuration,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            },{\r\n                                type: TokenType.pause,\r\n                                position: node.position,\r\n                                stepFinished: true\r\n                            }\r\n                        ]);\r\n                            isSystemMethod = true;    \r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            if(!isSystemMethod) {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                    leftType.type = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                let bitOperators = [TokenType.ampersand, TokenType.OR];\r\n                let booleanOperators = [\"&& (boolescher UND-Operator)\", \"|| (boolescher ODER-Operator)\"];\r\n                let betterOperators = [\"& &\", \"||\"];\r\n                let opIndex = bitOperators.indexOf(node.operator);\r\n                if (opIndex >= 0 && leftType.type == booleanPrimitiveType && rightType.type == booleanPrimitiveType) {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert. Du meintest wahrscheinlich den Operator \" + booleanOperators[opIndex] + \".\", node.position, \"error\",\r\n                        {\r\n                            title: \"Operator \" + betterOperators[opIndex] + \" verwenden statt \" + TokenTypeReadable[node.operator],\r\n                            editsProvider: (uri) => {\r\n                                return [\r\n                                    {\r\n                                        resource: uri,\r\n                                        edit: {\r\n                                            range: { startLineNumber: node.position.line, startColumn: node.position.column, endLineNumber: node.position.line, endColumn: node.position.column },\r\n                                            text: TokenTypeReadable[node.operator]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n\r\n                        });\r\n                } else {\r\n                    this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                }\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (secondType != null && type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap, voidPrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType, Type } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, \r\n        TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment, \r\n        TokenType.ANDAssigment, TokenType.XORAssigment, TokenType.ORAssigment, \r\n        TokenType.shiftLeftAssigment, TokenType.shiftRightAssigment, TokenType.shiftRightUnsignedAssigment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n\r\n    [TokenType.or], [TokenType.and], [TokenType.OR], [TokenType.XOR], [TokenType.ampersand],\r\n    [TokenType.equal, TokenType.notEqual],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual],\r\n    [TokenType.shiftLeft, TokenType.shiftRight, TokenType.shiftRightUnsigned],\r\n\r\n    // [TokenType.or], [TokenType.and],\r\n    // [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    \r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel && this.errorList.length < 3) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseUnary();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        // 28.05.2021: This broke evalation of ternery operator, so i commented it out.\r\n        // Don't know why it was there in the first place, so i expect some havoc to come...\r\n        // 15 Minutes later:\r\n        // This if-clause was here to make terms aber case possible, e.g. switch(a){ case 7 + 2: println(\"Here!\")}\r\n        // -> Bad idea. I changed this to only parse unary Terms left of the colon so i can comment out this if-clause here\r\n        // and fix the ternary operator.\r\n        //\r\n        // if (this.tt == TokenType.colon) {\r\n        //     return left;\r\n        // }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n\r\n                        this.considerIntDivisionWarning(operator, typeLeft, pcLeft.constant, typeRight, pcRight.constant, position);\r\n\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    considerIntDivisionWarning(operator: TokenType, typeLeft: Type, leftConstant: any, typeRight: Type, rightConstant: any, position: TextPosition) {\r\n    \r\n        if(operator == TokenType.division){\r\n            if(this.isIntegerType(typeLeft) && this.isIntegerType(typeRight)){\r\n                if(rightConstant != 0 && leftConstant/rightConstant != Math.floor(leftConstant/rightConstant)){\r\n                    this.pushError(\"Da \" + leftConstant + \" und \" + rightConstant + \" ganzzahlige Werte sind, wird diese Division als Ganzzahldivision ausgeführt und ergibt den Wert \" + Math.floor(leftConstant/rightConstant) + \". Falls das nicht gewünscht ist, hänge '.0' an einen der Operanden.\", \"info\", position);\r\n                }\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    isIntegerType(type: Type): boolean {\r\n        return type == intPrimitiveType;\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n            case TokenType.tilde:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.constructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordThis,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n\r\n        if(this.tt != TokenType.identifier && this.tt != TokenType.keywordVoid){\r\n            this.pushError(\"Erwartet wird ein Datentyp. Dieser muss mit einem Bezeichner beginnen. Gefunden wurde: \" + this.cct.value, \"error\", this.getCurrentPosition());\r\n                this.nextToken();\r\n            return {\r\n                type: TokenType.type,\r\n                position: this.getCurrentPosition(),\r\n                arrayDimension: 0,\r\n                identifier: \"int\",\r\n                genericParameterTypes: []\r\n            };\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        //@ts-ignore\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n                this.nextToken();\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if(isConstructor) {\r\n                type = {\r\n                    identifier: \"void\",\r\n                    arrayDimension: 0,\r\n                    position: type.position,\r\n                    type: TokenType.type\r\n                }\r\n            }\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n        let asError: boolean = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    if(isAbstract && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    if(isStatic && !asError){\r\n                        this.pushError(\"Die Modifier 'abstract' und 'static' können nicht kombiniert werden.\");\r\n                        asError = true;\r\n                    }\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    primitiveTypes: String[] = [\"String\", \"Integer\", \"Double\", \"Boolean\", \"Float\", \"Character\"];\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if (klass.module.isSystemModule) {\r\n            return null;\r\n        }\r\n\r\n        while (klass != null) {\r\n            let first: boolean = true;\r\n            let serializedAttributes: any;\r\n            for (let attribute of klass.attributes) {\r\n                if (!attribute.isStatic && !attribute.isTransient) {\r\n                    if (first) {\r\n                        first = false;\r\n                        serializedAttributes = {};\r\n                        serializedObject[klass.identifier] = serializedAttributes;\r\n                    }\r\n                    serializedAttributes[attribute.identifier] = this.toJsonObj(rto.attributes[attribute.index]);\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for (let vtr of this.valuesToResolve) {\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if (value != null) {\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && this.primitiveTypes.indexOf(type.identifier) < 0) {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore,\r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n\r\n            while (klass != null) {\r\n                let attributes = rto.attributes;\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributes != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributes[attribute.index] = this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = { type: klass1, value: rto };\r\n            this.indexToObjectMap[index] = value;\r\n            return value;\r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    static WATCHDOG: number = 5;\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n        this.setupAttributeIndices();\r\n\r\n    }\r\n    \r\n    setupAttributeIndices() {\r\n        for(let cl of this.classes){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n        for(let cl of this.enums){\r\n            cl.resolvedType.setupAttributeIndicesRecursive();\r\n            if(cl.resolvedType.staticClass != null){\r\n                cl.resolvedType.staticClass.setupAttributeIndicesRecursive();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci, TypeResolver.WATCHDOG);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface, watchdog: number) {\r\n\r\n        if(watchdog <= 0) return;\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables, watchdog - 1);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables, watchdog - 1);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass, watchdog - 1);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext, watchdog - 1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true, watchdog - 1);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[], watchdog: number): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true, watchdog - 1);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false, watchdog - 1);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean, watchdog: number): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false, watchdog - 1);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface, watchdog - 1);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive, watchdog - 1);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if (m != null) {\r\n                    if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                att.resolvedType = attribute;\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            m.colorInformation = lexed.colorInformation;\r\n            \r\n            if(m.file.name == this.main.getCurrentlyEditedModule()?.file?.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType, getTypeIdentifier } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { getTypeFromValue } from \"../../compiler/types/TypeHelper.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\"));\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Fügt das Element an der Position index der Liste ein. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    addAll(object: RuntimeObject): boolean {\r\n\r\n        if(object.intrinsicData[\"ListHelper\"] instanceof ListHelper){\r\n            let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n            if (ah != null) {\r\n                this.valueArray = this.valueArray.concat(ah.valueArray.map(v => {return {type: v.type, value: v.value}}));\r\n                this.objectArray = this.objectArray.concat(ah.objectArray);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        let getIteratorMethod = object.class.getMethod(\"iterator\", new Parameterlist([]));\r\n        if(getIteratorMethod == null){\r\n            this.interpreter.throwException(\"Der an die Methode addAll übergebene Paramter besitzt keine Methode iterator().\");\r\n            return false;\r\n        }\r\n\r\n        if(getIteratorMethod.invoke){\r\n\r\n            let iterator: RuntimeObject = getIteratorMethod.invoke([{value: object, type: object.class}]);\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(hasNextMethod.invoke([iteratorAsValue])){\r\n                let obj: any = nextMethod.invoke([iteratorAsValue]);\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({\r\n                    value: obj,\r\n                    type: getTypeFromValue(obj)\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            let iteratorWithError = this.execute(getIteratorMethod, [{value: object, type: object.class}]);            \r\n            if(iteratorWithError.error != null){this.interpreter.throwException(\"Fehler beim holen des Iterators.\"); return false;}\r\n            let iterator = iteratorWithError.value.value;\r\n\r\n            let nextMethod = iterator.class.getMethod(\"next\", new Parameterlist([]));\r\n            let hasNextMethod = iterator.class.getMethod(\"hasNext\", new Parameterlist([]));\r\n            let type = nextMethod.returnType;\r\n            let iteratorAsValue: Value = {value: iterator, type: iterator.class};\r\n\r\n            while(true){\r\n                let hasNext = this.execute(hasNextMethod, [iteratorAsValue]);\r\n                if(hasNext.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der hasNext-Methode\"); return false;}\r\n                if(hasNext.value.value != true) break;\r\n                let objWithError = this.execute(nextMethod, [iteratorAsValue]);\r\n                if(objWithError.error != null){this.interpreter.throwException(\"Fehler beim Ausführen der next-Methode\"); return false;}\r\n                let obj = objWithError.value.value;\r\n                this.objectArray.push(obj);\r\n                this.valueArray.push({value: obj, type: type});\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    execute(method: Method, parameters: Value[]): {error: string, value: Value} {\r\n        if(method.invoke){\r\n            return {value: {value: method.invoke([]), type: method.returnType}, error: null};\r\n        } else {\r\n            return this.interpreter.executeImmediatelyInNewStackframe(method.program, parameters);\r\n        }\r\n    }\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push({type: r.type, value: r.value});\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index <= this.objectArray.length && index >= 0){\r\n                this.valueArray.splice(index, 0, {type: r.type, value: r.value});\r\n                this.objectArray.splice(index, 0, r.value);\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push({type: object.type, value: object.value});\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, {type: object.type, value: object.value});\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\n\r\nexport function getTypeFromValue(value: any){\r\n    if(typeof value == \"string\"){\r\n        return stringPrimitiveType;\r\n    } else if(typeof value == \"number\"){\r\n        if(Number.isInteger(value)) return intPrimitiveType;\r\n        return floatPrimitiveType;\r\n    } else if(typeof value == \"boolean\"){\r\n        return booleanPrimitiveType;\r\n    } else if(value instanceof RuntimeObject){\r\n        return value.class;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++].value;\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--].value;\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input?.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest, PerformanceData } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\nexport class PerformanceCollector {\r\n    static performanceData: PerformanceData[] = [];\r\n    static performanceDataCount: number = 0;\r\n    static lastTimeSent: number = performance.now();\r\n\r\n    static registerPerformanceEntry(url: string, startTime: number) {\r\n        let pe: PerformanceData = PerformanceCollector.performanceData.find(pe => pe.url == url);\r\n        if (pe == null) {\r\n            pe = { count: 0, sumTime: 0, url: url };\r\n            PerformanceCollector.performanceData.push(pe);\r\n        }\r\n        pe.count++; //Test\r\n        let dt = Math.round(performance.now() - startTime);\r\n        pe.sumTime += dt;\r\n        PerformanceCollector.performanceDataCount++;\r\n        // console.log(\"Performance entry for path \" + pe.url + \": \" + dt + \" ms, aggregated: \" + pe.sumTime + \" for \" + pe.count + \" requests.\");\r\n    }\r\n\r\n    static sendDataToServer() {\r\n        if (performance.now() - PerformanceCollector.lastTimeSent > 3 * 60 * 1000) {\r\n            let request = {\r\n                data: PerformanceCollector.performanceData\r\n            }\r\n\r\n            PerformanceCollector.performanceData = [];\r\n            PerformanceCollector.performanceDataCount = 0;\r\n            PerformanceCollector.lastTimeSent = performance.now();\r\n\r\n            ajax(\"collectPerformanceData\", request, () => { })\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n\r\n    errorCallback?: (message: string) => void) {\r\n\r\n    showNetworkBusy(true);\r\n    let time = performance.now();\r\n\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: \"servlet/\" + url,\r\n        success: function (response: any) {\r\n\r\n            PerformanceCollector.registerPerformanceEntry(url, time);\r\n\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\nimport { ajax } from \"./AjaxHelper.js\";\nimport { GetWebSocketTokenResponse } from \"./Data.js\";\nimport { NetworkManager } from \"./NetworkManager.js\";\n\ntype SubscriptionMessageFromClient = {\n    command: number,  // 1 == \"subscribe\", 2 == \"disconnect\"\n    // 3 == \"keepalive request\"\n    token?: string   // when \"subscribe\"\n}\n\ntype SubscriptionMessageFromServer = {\n    command: number // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n}\n\ntype NotifierState = \"connecting\" | \"connected\" | \"subscribed\" | \"disconnected\";\n\nexport class NotifierClient {\n\n    connection: WebSocket;\n    state: NotifierState;\n\n    constructor(private main: Main, private networkManager: NetworkManager){\n        this.connect();\n    }\n\n    connect() {\n        this.state = \"connecting\";\n\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\n\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/subscriptionwebsocket\";\n            this.connection = new WebSocket(url);\n\n            this.connection.onerror = (error: Event) => { this.onError(error); }\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\n\n            this.connection.onopen = (event: Event) => {\n                let request: SubscriptionMessageFromClient = {\n                    command: 1,   // \"subscribe\"\n                    token: response.token\n                }\n\n                this.state = \"connected\";\n                this.sendIntern(JSON.stringify(request));\n\n            }\n\n            let that = this;\n            setTimeout(() => {\n                if(this.state != \"subscribed\"){\n                    this.networkManager.forcedUpdateEvery = 1;\n                    this.networkManager.counterTillForcedUpdate = 1;\n                }\n            }, 7000);\n\n        });\n    }\n\n    disconnect(){\n        let request: SubscriptionMessageFromClient = {\n            command: 2   // \"disconnect\"\n        }\n\n        this.state = \"connected\";\n        this.sendIntern(JSON.stringify(request));\n\n    }\n\n    unsentMessages: string[] = [];\n    sendIntern(message: string) {\n\n        if (this.state != \"disconnected\") {\n            try {\n                this.connection.send(message);\n            } catch (exception) {\n                console.log(exception);\n            }\n        }\n    }\n\n    onClose(event: CloseEvent) {\n        this.state = \"disconnected\";\n    }\n\n    onMessage(event: MessageEvent) {\n\n        let response: SubscriptionMessageFromClient = JSON.parse(event.data);\n        if (response.command == undefined) return;\n\n        // 1 == Acknoledge Connection, 2 == Notify, 3 == disconnect, 4 == keep alive response\n        switch (response.command) {\n            case 1: // Acknoledge Connection\n                this.state = \"subscribed\";\n                break;\n            case 2: // Notify\n                this.networkManager.sendUpdates(() => {}, true);\n                break;\n            case 3: // disconnect\n                this.state = \"disconnected\";\n                break;\n            case 4: // keep alive response\n                break;\n        }\n    }\n\n    onError(error: Event) {\n        console.log(\"Fehler beim Notifier-Websocket\");\n    }\n\n}","import { Main } from \"../main/Main.js\";\r\nimport { ajax, PerformanceCollector } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse, CollectPerformanceDataRequest, SetRepositorySecretRequest, SetRepositorySecretResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { AccordionElement, AccordionPanel } from \"../main/gui/Accordion.js\";\r\nimport {WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { response } from \"express\";\r\nimport { NotifierClient } from \"./NotifierClient.js\";\r\n\r\nexport class NetworkManager {\r\n\r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 25;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 25;\r\n    forcedUpdateEvery: number = 25;\r\n    forcedUpdatesInARow: number = 0;\r\n\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    counterTillForcedUpdate: number;\r\n\r\n    notifierClient: NotifierClient;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if (this.interval != null) clearInterval(this.interval);\r\n\r\n        this.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            if (that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if (that.secondsTillNextUpdate < 0) {\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                that.counterTillForcedUpdate--;\r\n                let doForceUpdate = that.counterTillForcedUpdate == 0;\r\n                if (doForceUpdate) {\r\n                    this.forcedUpdatesInARow++;\r\n                    that.counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                    if (this.forcedUpdatesInARow > 50) {\r\n                        that.counterTillForcedUpdate = this.forcedUpdateEvery * 10;\r\n                    }\r\n                }\r\n\r\n\r\n                that.sendUpdates(() => { }, doForceUpdate, false);\r\n\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n\r\n            if (that.errorHappened) {\r\n                $rect.css('fill', '#c00000');\r\n                this.$updateTimerDiv.attr('title', \"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');\r\n                this.$updateTimerDiv.attr('title', that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n            PerformanceCollector.sendDataToServer();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    initializeNotifierClient(){\r\n        this.notifierClient = new NotifierClient(this.main, this);\r\n    }\r\n\r\n    sendUpdates(callback?: () => void, sendIfNothingIsDirty: boolean = false, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user == null || this.main.user.is_testuser) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if (classDiagram?.dirty || this.main.userDataDirty) {\r\n\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => { }, sendBeacon);\r\n            this.forcedUpdatesInARow = 0;\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for (let ws of this.main.workspaceList) {\r\n\r\n            if (!ws.saved) {\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n                this.forcedUpdatesInARow = 0;\r\n            }\r\n\r\n            for (let m of ws.moduleStore.getModules(false)) {\r\n                if (!m.file.saved) {\r\n                    this.forcedUpdatesInARow = 0;\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList,\r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id,\r\n            language: 0,\r\n            currentWorkspaceId: this.main.currentWorkspace?.id,\r\n            getModifiedWorkspaces: sendIfNothingIsDirty\r\n        }\r\n\r\n        let that = this;\r\n        if (wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty) {\r\n\r\n            if (sendBeacon) {\r\n                navigator.sendBeacon(\"sendUpdates\", JSON.stringify(request));\r\n            } else {\r\n\r\n                ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                    that.errorHappened = !response.success;\r\n                    if (!that.errorHappened) {\r\n\r\n                        // if (this.main.workspacesOwnerId == this.main.user.id) {\r\n                            if (response.workspaces != null) {\r\n                                that.updateWorkspaces(request, response);\r\n                            }\r\n                            if (response.filesToForceUpdate != null) {\r\n                                that.updateFiles(response.filesToForceUpdate);\r\n                            }\r\n\r\n                            if (callback != null) {\r\n                                callback();\r\n                                return;\r\n                            }\r\n                        // }\r\n                    }\r\n                }, () => {\r\n                    that.errorHappened = true;\r\n                });\r\n\r\n            }\r\n\r\n        } else {\r\n            if (callback != null) {\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            w.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            m.file.id = Math.round(Math.random() * 10000000);\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\", null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id,\r\n            language: 0\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids,\r\n                language: 0\r\n            }\r\n\r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n\r\n        }, false);\r\n\r\n    }\r\n\r\n    sendSetSecret(repositoryId: number, read: boolean, write: boolean, callback: (response: SetRepositorySecretResponse) => void){\r\n        let request: SetRepositorySecretRequest = {repository_id: repositoryId, newSecretRead: read, newSecretWrite: write};\r\n\r\n        ajax(\"setRepositorySecret\", request, (response: SetRepositorySecretResponse) => {\r\n            callback(response)\r\n        }, (message) => {alert(message)});\r\n\r\n    }\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(\"Diese Aktion ist für den Testuser nicht möglich.\");\r\n            return;\r\n        }\r\n\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n\r\n            ajax(\"createRepository\", request, (response: { success: boolean, message?: string, repository_id?: number }) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n\r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if (response.success) {\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void, sendBeacon: boolean = false) {\r\n\r\n        if (this.main.user.is_testuser) {\r\n            callback(null);\r\n            return;\r\n        }\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        if (sendBeacon) {\r\n            navigator.sendBeacon(\"updateUserSettings\", JSON.stringify(request));\r\n        } else {\r\n            ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n                if (response.success) {\r\n                    callback(null);\r\n                } else {\r\n                    callback(\"Netzwerkfehler!\");\r\n                }\r\n            }, callback);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse) {\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if (remoteWorkspace != null) {\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n\r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for (let module of workspace.moduleStore.getModules(false)) {\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if (remoteFileData == null) {\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if (fileIdsSended.indexOf(fileId) < 0 && module.file.text != remoteFileData.text) {\r\n                        module.file.text = remoteFileData.text;\r\n                        module.model.setValue(remoteFileData.text);\r\n\r\n                        module.file.saved = true;\r\n                        module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                    }\r\n                    module.file.version = remoteFileData.version;\r\n                }\r\n\r\n\r\n                // add files if necessary\r\n                for (let remoteFile of remoteWorkspace.files) {\r\n                    if (idToModuleMap.get(remoteFile.id) == null) {\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newWorkspaceNames.length > 0) {\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    private updateFiles(filesFromServer: FileData[]) {\r\n        let fileIdToLocalModuleMap: Map<number, Module> = new Map();\r\n\r\n        for (let workspace of this.main.workspaceList) {\r\n            for (let module of workspace.moduleStore.getModules(false)) {\r\n                fileIdToLocalModuleMap[module.file.id] = module;\r\n            }\r\n        }\r\n\r\n        for (let remoteFile of filesFromServer) {\r\n            let module = fileIdToLocalModuleMap[remoteFile.id];\r\n            if (module != null && module.file.text != remoteFile.text) {\r\n                module.file.text = remoteFile.text;\r\n                module.model.setValue(remoteFile.text);\r\n                module.file.saved = true;\r\n                module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                module.file.version = remoteFile.version;\r\n            }\r\n        }\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false): Workspace {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n        w.path = remoteWorkspace.path;\r\n        w.isFolder = remoteWorkspace.isFolder;\r\n        w.moduleStore.dirty = true;\r\n\r\n        if(remoteWorkspace.settings != null && remoteWorkspace.settings.startsWith(\"{\")){\r\n            let remoteWorkspaceSettings:WorkspaceSettings = JSON.parse(remoteWorkspace.settings);\r\n            w.settings = remoteWorkspaceSettings;\r\n            w.moduleStore.setAdditionalLibraries(remoteWorkspaceSettings.libraries);\r\n        }\r\n\r\n        this.main.workspaceList.push(w);\r\n        let path = remoteWorkspace.path.split(\"/\");\r\n        if (path.length == 1 && path[0] == \"\") path = [];\r\n        \r\n        let panelElement: AccordionElement = {\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\",\r\n            isFolder: remoteWorkspace.isFolder,\r\n            path: path\r\n        };\r\n\r\n        this.main.projectExplorer.workspaceListPanel.addElement(panelElement, true);\r\n        w.panelElement = panelElement;\r\n\r\n        if(w.repository_id != null){\r\n            w.renderSynchronizeButton(panelElement);\r\n        }\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if (withSort) {\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae, true);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: true,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.index), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type?.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s == null ? \"\" : s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]) - 1, Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(mousePointer + \"down\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\" || ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focusout.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        $input.off(\"focusout.me\");\r\n        $input.remove();\r\n        elementToReplace.show();\r\n        let newValue = escapeHtml(<string>$input.val());\r\n        renameDoneCallback(newValue);\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number): JQuery<HTMLElement> {\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if (mi.link != null) {\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") + '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if (mi.link == null) {\r\n            $item.on(mousePointer + 'up.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n                jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n            $item.on(mousePointer + 'down.contextmenu', (ev) => {\r\n                ev.stopPropagation();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(mousePointer + \"up\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n            $link.on(mousePointer + \"down\", (event) => {\r\n                event.stopPropagation();\r\n            })\r\n\r\n        }\r\n\r\n        $item.on(mousePointer + 'move.contextmenu', () => {\r\n            if (mi != parentMenuItem && $openSubMenu != null) {\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if (mi.subMenu != null) {\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(mousePointer + \"down.contextmenu\", (e) => {\r\n        jQuery(document).off(mousePointer + \"down.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n\r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(mousePointer + \"up.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n    headings.on(mousePointer + \"down\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: { [id: string]: any }): JQuery<HTMLDivElement> {\r\n\r\n    let s = \"\";\r\n    if (id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if (klass != null && klass != \"\") s += ` class=\"${klass}\"`;\r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if (css != null) {\r\n        div.css(css);\r\n    }\r\n\r\n    if (text != null && text != \"\") {\r\n        div.text(text);\r\n    }\r\n\r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>) {\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n\r\nexport var jo_mouseDetected: boolean = false;\r\nexport function checkIfMousePresent() {\r\n    if (matchMedia('(pointer:fine)').matches) {\r\n        jo_mouseDetected = true;\r\n    }\r\n}\r\n\r\nexport function animateToTransparent($element: JQuery<HTMLElement>, cssProperty: string, startColorRgb: number[], duration: number) {\r\n    let colorPraefix = 'rgba(' + startColorRgb[0] + \", \" + startColorRgb[1] + \", \" + startColorRgb[2] + \", \";\r\n    let value = 1.0;\r\n    let delta = value / (duration / 20);\r\n\r\n    let animate = () => {\r\n        $element.css(cssProperty, colorPraefix + value + \")\");\r\n        value -= delta;\r\n        if (value < 0) {\r\n            $element.css(cssProperty, \"\");\r\n        } else {\r\n            setTimeout(animate, 20);\r\n        }\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nexport function downloadFile(obj: any, filename: string, isBlob: boolean = false) {\r\n    var blob = isBlob? obj : new Blob([JSON.stringify(obj)], { type: 'text/plain' });\r\n    //@ts-ignore\r\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        //@ts-ignore\r\n        window.navigator.msSaveOrOpenBlob(blob, filename);\r\n    } else {\r\n        var e = document.createEvent('MouseEvents'),\r\n            a = document.createElement('a');\r\n        a.download = filename;\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.dataset.downloadurl = ['text/plain', a.download, a.href].join(':');\r\n        //@ts-ignore\r\n        e.initEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n        a.dispatchEvent(e);\r\n        a.remove();\r\n    }\r\n}\r\n\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    try {\r\n        var successful = document.execCommand('copy');\r\n    } catch (err) {\r\n        console.error('Fallback: Oops, unable to copy', err);\r\n    }\r\n\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nexport function copyTextToClipboard(text) {\r\n    if (!navigator.clipboard) {\r\n        fallbackCopyTextToClipboard(text);\r\n        return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(function () {\r\n    }, function (err) {\r\n        console.error('Async: Could not copy text: ', err);\r\n    });\r\n}\r\n","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData, WorkspaceSettings } from \"../communication/Data.js\";\r\nimport { ExportedWorkspace, Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    path: string;\r\n    isFolder: boolean;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n\r\n    settings: WorkspaceSettings = {\r\n        libraries: []\r\n    };\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main, true, this.settings.libraries);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n\r\n    toExportedWorkspace(): ExportedWorkspace {\r\n        return {\r\n            name: this.name,\r\n            modules: this.moduleStore.getModules(false).map(m => m.toExportedModule()),\r\n            settings: this.settings\r\n        }\r\n    }\r\n\r\n\r\n    alterAdditionalLibraries() {\r\n        this.moduleStore.setAdditionalLibraries(this.settings.libraries);\r\n        this.moduleStore.dirty = true;\r\n    }\r\n\r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            path: this.path,\r\n            isFolder: this.isFolder,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository,\r\n            language: 0,\r\n            sql_baseDatabase: \"\",\r\n            sql_history: \"\",\r\n            sql_manipulateDatabaseStatements: \"\",\r\n            settings: JSON.stringify(this.settings)\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let settings: WorkspaceSettings = (ws.settings != null && ws.settings.startsWith(\"{\")) ? JSON.parse(ws.settings) : {libraries: []}; \r\n\r\n        //@ts-ignore\r\n        if(settings.libaries){\r\n            //@ts-ignore\r\n            settings.libraries = settings.libaries;\r\n        }\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.path = ws.path;\r\n        w.isFolder = ws.isFolder;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n        w.settings = settings;\r\n\r\n        if(w.settings.libraries == null){\r\n            w.settings.libraries = [];\r\n        }\r\n\r\n        if(w.settings.libraries.length > 0){\r\n            w.moduleStore.setAdditionalLibraries(w.settings.libraries);\r\n        }\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport type CheckboxState = () => boolean;\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    addDiv($div: JQuery<HTMLElement>){\r\n        this.$dialogMain.append($div);\r\n    }\r\n\r\n    subHeading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-subheading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n    addCheckbox(description: string, ischecked: boolean, name: string): CheckboxState {\r\n        let cb: string = '<input type=\"checkbox\" name=\"' + name + '\"' + (ischecked ? ' checked' : '') + '>';\r\n        let $checkbox = jQuery(cb);\r\n        let $description = jQuery('<label for=\"' + name + '\">' + description + \"</label>\");\r\n        \r\n        let $div = jQuery('<div class=\"jo_checkbox_div\"></div>')\r\n        $div.append($checkbox, $description);\r\n\r\n        $description.on('click', () => {$checkbox.prop(\"checked\", !$checkbox.prop(\"checked\"))})\r\n\r\n        this.$dialogMain.append($div);\r\n        return () => {\r\n            return $checkbox.is(':checked');\r\n        }\r\n    }\r\n\r\n\r\n}","import { ExportedWorkspace, File, Module } from \"../../compiler/parser/Module.js\";\nimport { Workspace } from \"../../workspace/Workspace.js\";\nimport { Main } from \"../Main.js\";\nimport { Dialog } from \"./Dialog.js\";\n\nexport class WorkspaceImporter {\n\n    dialog: Dialog;\n\n    constructor(private main: Main, private path: string[] = []) {\n\n        this.dialog = new Dialog();\n        \n    }\n\n    show() {\n        let that = this;\n        this.dialog.init();\n        this.dialog.heading(\"Workspace importieren\");\n        this.dialog.description(\"Bitte klicken Sie auf den Button 'Datei auswählen...' oder ziehen Sie eine Datei auf das gestrichelt umrahmte Feld.\")\n        let pathDescription = \"Dieser Workspace wird auf unterster Ordnerebene in der Workspaceliste importiert.\";\n        if(this.path.length  > 0){\n            pathDescription = \"Dieser Workspace wird in den Ordner \" + this.path.join(\"/\") + \" importiert.\";\n        }\n        this.dialog.description(pathDescription);\n\n        let $fileInputButton = jQuery('<input type=\"file\" id=\"file\" name=\"file\" multiple />');\n        this.dialog.addDiv($fileInputButton);\n        \n        let exportedWorkspaces: ExportedWorkspace[] = [];\n        \n        let $errorDiv = this.dialog.description(\"\", \"red\");\n        let $workspacePreviewDiv = jQuery(`<ul></ul>`);\n        \n        let registerFiles = (files: FileList) => {\n            for (let i = 0; i < files.length; i++) {\n                let f = files[i];\n                var reader = new FileReader();\n                reader.onload = (event) => {\n                    let text: string = <string>event.target.result;\n                    if (!text.startsWith(\"{\")) {\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n                    \n                    let ew: ExportedWorkspace = JSON.parse(text);\n                    \n                    if(ew.modules == null || ew.name == null || ew.settings == null){\n                        $errorDiv.append(jQuery(`<div>Das Format der Datei ${f.name} passt nicht.</div>`));\n                        return;\n                    }\n\n                    exportedWorkspaces.push(ew);\n                    $workspacePreviewDiv.append(jQuery(`<li>Workspace ${ew.name} mit ${ew.modules.length} Dateien</li>`));\n\n                };\n                reader.readAsText(f);\n            }\n        }\n\n        $fileInputButton.on('change', (event) => {\n            //@ts-ignore\n            var files: FileList = event.originalEvent.target.files;\n            registerFiles(files);\n        })\n\n        let $dropZone = jQuery(`<div class=\"jo_workspaceimport_dropzone\">Dateien hierhin ziehen</div>`);\n        this.dialog.addDiv($dropZone);\n        this.dialog.description('<b>Diese Workspaces werden importiert:</b>');\n\n\n\n        $dropZone.on('dragover', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n            evt.originalEvent.dataTransfer.dropEffect = 'copy';\n        })\n        $dropZone.on('drop', (evt) => {\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            var files = evt.originalEvent.dataTransfer.files;\n            registerFiles(files);\n        })\n\n        this.dialog.addDiv($workspacePreviewDiv);\n\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\n\n        this.dialog.buttons([\n            {\n                caption: \"Abbrechen\",\n                color: \"#a00000\",\n                callback: () => { this.dialog.close() }\n            },\n            {\n                caption: \"Importieren\",\n                color: \"green\",\n                callback: () => {\n                    \n                    let networkManager = this.main.networkManager;\n                    let projectExplorer = this.main.projectExplorer;\n\n                    let owner_id: number = this.main.user.id;\n                    if (this.main.workspacesOwnerId != null) {\n                        owner_id = this.main.workspacesOwnerId;\n                    }\n\n                    let count = 0;\n                    for(let wse of exportedWorkspaces) count += 1 + wse.modules.length;\n\n                    let firstWorkspace: Workspace;\n\n                    for(let wse of exportedWorkspaces){\n\n                        let ws: Workspace = new Workspace(wse.name, this.main, owner_id);\n                        if(firstWorkspace == null) firstWorkspace = ws;\n                        ws.isFolder = false;\n                        ws.path = this.path.join(\"/\");\n                        ws.settings = wse.settings;\n                        this.main.workspaceList.push(ws);\n                        ws.alterAdditionalLibraries();\n\n                        networkManager.sendCreateWorkspace(ws, owner_id, (error: string) => {\n                            count--;\n                            if (error == null) {\n                                projectExplorer.workspaceListPanel.addElement({\n                                    name: ws.name,\n                                    externalElement: ws,\n                                    iconClass: \"workspace\",\n                                    isFolder: false,\n                                    path: that.path\n                                }, true);\n\n                                for(let mo of wse.modules){\n                                    let f: File = {\n                                        name: mo.name,\n                                        dirty: false,\n                                        saved: true,\n                                        text: mo.text,\n                                        text_before_revision: null,\n                                        submitted_date: null,\n                                        student_edited_after_revision: false,\n                                        version: 1,\n                                        is_copy_of_id: null,\n                                        repository_file_version: null,\n                                        identical_to_repository_version: null\n                                    };\n                                    let m = new Module(f, this.main);\n                                    ws.moduleStore.putModule(m);\n                                    networkManager.sendCreateFile(m, ws, owner_id,\n                                        (error: string) => {\n                                            count--;\n                                            if (error == null) {\n                                                projectExplorer.workspaceListPanel.sortElements();\n                                                this.dialog.close();\n                                                if(firstWorkspace != null) projectExplorer.setWorkspaceActive(firstWorkspace, true);\n                                            } else {\n                                                alert('Der Server ist nicht erreichbar!');\n                    \n                                            }\n                                        });\n                                }\n\n                            } else {\n                                alert('Der Server ist nicht erreichbar!');\n        \n                            }\n                        });\n\n\n\n                    }\n\n                }\n            },\n        ])\n    }\n\n}","import { openContextMenu, makeEditable, ContextMenuItem, jo_mouseDetected, animateToTransparent } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\nimport { isJSDocThisTag, isThisTypeNode } from \"typescript\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n\r\n    isFolder: boolean;\r\n    path: string[];\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    dontSortElements: boolean = false;\r\n\r\n    static currentlyDraggedElement: AccordionElement;\r\n    static currentlyDraggedElementKind: string;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    newFolderCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n    moveCallback: (ae: AccordionElement | AccordionElement[]) => void;\r\n    dropElementCallback: (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => void;\r\n\r\n    $newFolderAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean, private withFolders: boolean,\r\n        private kind: \"workspace\" | \"file\" | \"class\" | \"student\", private enableDrag: boolean, private acceptDropKinds: string[]) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        if (withFolders) {\r\n            let that = this;\r\n            this.$newFolderAction = jQuery('<div class=\"img_add-folder-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Neuen Ordner auf oberster Ebene anlegen\">');\r\n            this.$newFolderAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                let pathArray: string[] = [];\r\n\r\n                this.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                    this.newFolderCallback(newElement, () => {\r\n                        this.sortElements();\r\n                        newElement.$htmlFirstLine[0].scrollIntoView();\r\n                        animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                    });\r\n                });\r\n\r\n            })\r\n\r\n            this.addAction(this.$newFolderAction);\r\n\r\n\r\n            let $collapseAllAction = jQuery('<div class=\"img_collapse-all-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n                ' title=\"Alle Ordner zusammenfalten\">');\r\n            $collapseAllAction.on(mousePointer + 'down', (e) => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n\r\n                that.collapseAll();\r\n\r\n            })\r\n\r\n            this.addAction($collapseAllAction);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    collapseAll() {\r\n        for (let element of this.elements) {\r\n            if (element.isFolder) {\r\n                if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                    element.$htmlFirstLine.removeClass('jo_expanded');\r\n                    element.$htmlFirstLine.addClass('jo_collapsed');\r\n                }\r\n            }\r\n            if (element.path.length > 0) {\r\n                element.$htmlFirstLine.slideUp(200);\r\n            }\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.grow();\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    getCurrentlySelectedPath(): string[] {\r\n        let pathArray: string[] = [];\r\n        let selectedElement = this.getSelectedElement();\r\n        if (selectedElement != null) {\r\n            pathArray = selectedElement.path.slice(0);\r\n            if (selectedElement.isFolder) pathArray.push(selectedElement.name);\r\n        }\r\n        return pathArray;\r\n    }\r\n\r\n    compareWithPath(name1: string, path1: string[], isFolder1: boolean, name2: string, path2: string[], isFolder2: boolean) {\r\n\r\n        path1 = path1.slice();\r\n        path1.push(name1);\r\n        name1 = \"\";\r\n\r\n        path2 = path2.slice();\r\n        path2.push(name2);\r\n        name2 = \"\";\r\n\r\n        let i = 0;\r\n        while (i < path1.length && i < path2.length) {\r\n            let cmp = path1[i].localeCompare(path2[i]);\r\n            if (cmp != 0) return cmp;\r\n            i++;\r\n        }\r\n\r\n        if (path1.length < path2.length) return -1;\r\n        if (path1.length > path2.length) return 1;\r\n\r\n        return name1.localeCompare(name2);\r\n\r\n\r\n        // let nameWithPath1 = path1.join(\"/\");\r\n        // if (nameWithPath1 != \"\" && name1 != \"\") nameWithPath1 += \"/\";\r\n        // nameWithPath1 += name1;\r\n\r\n        // let nameWithPath2 = path2.join(\"/\");\r\n        // if (nameWithPath2 != \"\" && name2 != \"\") nameWithPath2 += \"/\";\r\n        // nameWithPath2 += name2;\r\n\r\n        // return nameWithPath1.localeCompare(nameWithPath2);\r\n    }\r\n\r\n\r\n    getElementIndex(name: string, path: string[], isFolder: boolean): number {\r\n\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let element = this.elements[i];\r\n\r\n            if (this.compareWithPath(name, path, isFolder, element.name, element.path, element.isFolder) < 0) return i;\r\n\r\n        }\r\n        return this.elements.length;\r\n    }\r\n\r\n    insertElement(ae: AccordionElement) {\r\n        let insertIndex = this.getElementIndex(ae.name, ae.path, ae.isFolder);\r\n        // if (ae.path.length == 0) insertIndex = this.elements.length;\r\n        this.elements.splice(insertIndex, 0, ae);\r\n\r\n        let $elements = this.$listElement.find('.jo_file');\r\n\r\n        if (insertIndex == 0) {\r\n            this.$listElement.prepend(ae.$htmlFirstLine);\r\n        } else if(insertIndex == $elements.length){\r\n            this.$listElement.append(ae.$htmlFirstLine);\r\n        } else {\r\n            let elementAtIndex = $elements.get(insertIndex);\r\n            jQuery(elementAtIndex).before(ae.$htmlFirstLine);\r\n        }\r\n\r\n    }\r\n\r\n    addFolder(name: string, path: string[], callback: (newPanel: AccordionElement) => void) {\r\n\r\n        let ae: AccordionElement = {\r\n            name: name,\r\n            isFolder: true,\r\n            path: path\r\n        }\r\n\r\n        let $element = this.renderElement(ae, true);\r\n\r\n        this.insertElement(ae);\r\n\r\n        $element[0].scrollIntoView();\r\n\r\n        this.renameElement(ae, () => {\r\n\r\n            callback(ae);\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\">\r\n        <div class=\"jo_captiontext\">` + this.caption + `</div><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n            this.$buttonNew.on(mousePointer + 'down', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let path = that.getCurrentlySelectedPath();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\",\r\n                    isFolder: false,\r\n                    path: path\r\n                }\r\n\r\n                let insertIndex = this.getElementIndex(\"\", path, false);\r\n                this.elements.splice(insertIndex, 0, ae);\r\n                let $element = this.renderElement(ae, true);\r\n\r\n\r\n                if (insertIndex == 0) {\r\n                    this.$listElement.prepend($element);\r\n                } else {\r\n                    let elementAtIndex = this.$listElement.find('.jo_file').get(insertIndex - 1);\r\n                    jQuery(elementAtIndex).after($element);\r\n                }\r\n\r\n                $element[0].scrollIntoView();\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $ce.on(mousePointer + 'down', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n        $ce.on('dragover', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                $ce.addClass('jo_file_dragover');\r\n                event.preventDefault();\r\n            }\r\n        })\r\n\r\n        $ce.on('dragleave', (event) => {\r\n            $ce.removeClass('jo_file_dragover');\r\n        })\r\n\r\n        $ce.on('drop', (event) => {\r\n            if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                event.preventDefault();\r\n                $ce.removeClass('jo_file_dragover');\r\n                let element1 = AccordionPanel.currentlyDraggedElement;\r\n                if (element1 != null) {\r\n                    that.moveElement(element1, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    grow() {\r\n        let $li = this.$listElement.parent();\r\n        let targetGrow = $li.data('grow');\r\n        $li.css('flex-grow', targetGrow);\r\n        this.$captionElement.addClass('jo_expanded');\r\n    }\r\n\r\n    addElement(element: AccordionElement, expanded: boolean) {\r\n        // this.elements.push(element);\r\n        // element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        // this.$listElement.prepend(element.$htmlFirstLine);\r\n        element.$htmlFirstLine = this.renderElement(element, expanded);\r\n        this.insertElement(element);\r\n    }\r\n\r\n    sortElements() {\r\n        if (this.dontSortElements) return;\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n\r\n            return this.compareWithPath(aName, a.path, a.isFolder, bName, b.path, b.isFolder);\r\n\r\n        });\r\n        this.elements.forEach((element) => { this.$listElement.append(element.$htmlFirstLine) });\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement, expanded: boolean): JQuery<HTMLElement> {\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        let that = this;\r\n\r\n        let expandedCollapsed = \"\";\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n        if (element.isFolder) {\r\n            element.iconClass = \"folder\";\r\n            expandedCollapsed = expanded ? \" jo_expanded\" : \" jo_collapsed\";\r\n        }\r\n\r\n        let pathHtml = \"\";\r\n        if (element.path == null) element.path = [];\r\n        for (let i = 0; i < element.path.length; i++) {\r\n            pathHtml += '<div class=\"jo_folderline\"></div>';\r\n        }\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass} ${expandedCollapsed}\">\r\n        <div class=\"jo_folderlines\">${pathHtml}</div>\r\n           <div class=\"jo_fileimage\"></div>\r\n           <div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active' + (false ? \" jo_delete_always\" : \"\") + '\"></div>' : \"\"}\r\n           ${!jo_mouseDetected ? '<div class=\"jo_settings_button img_ellipsis-dark jo_button jo_active\"></div>' : \"\"}\r\n           </div>`);\r\n\r\n        if (!expanded && element.path.length > 0) {\r\n            element.$htmlFirstLine.hide();\r\n        }\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        if (this.withFolders) {\r\n            if (element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (AccordionPanel.currentlyDraggedElementKind == that.kind) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            that.moveElement(element1, element);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withFolders || this.enableDrag) {\r\n            let $filedragpart = element.$htmlFirstLine.find('.jo_filename');\r\n            $filedragpart.attr('draggable', 'true');\r\n            $filedragpart.on('dragstart', (event) => {\r\n                AccordionPanel.currentlyDraggedElement = element;\r\n                AccordionPanel.currentlyDraggedElementKind = that.kind;\r\n                event.originalEvent.dataTransfer.effectAllowed = element.isFolder ? \"move\" : \"copyMove\";\r\n            })\r\n        }\r\n\r\n        if (this.acceptDropKinds != null && this.acceptDropKinds.length > 0) {\r\n            if (!element.isFolder) {\r\n                element.$htmlFirstLine.on('dragover', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        element.$htmlFirstLine.addClass('jo_file_dragover');\r\n\r\n                        if (event.ctrlKey) {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n                        } else {\r\n                            event.originalEvent.dataTransfer.dropEffect = \"move\";\r\n                        }\r\n\r\n                        event.preventDefault();\r\n                    }\r\n                })\r\n\r\n                element.$htmlFirstLine.on('dragleave', (event) => {\r\n                    element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n                })\r\n\r\n                element.$htmlFirstLine.on('drop', (event) => {\r\n                    if (this.acceptDropKinds.indexOf(AccordionPanel.currentlyDraggedElementKind) >= 0) {\r\n                        event.preventDefault();\r\n                        element.$htmlFirstLine.removeClass('jo_file_dragover');\r\n\r\n                        let element1 = AccordionPanel.currentlyDraggedElement;\r\n                        AccordionPanel.currentlyDraggedElement = null;\r\n                        if (element1 != null) {\r\n                            if (that.dropElementCallback != null) that.dropElementCallback(element, element1, event.ctrlKey ? \"copy\" : \"move\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        element.$htmlFirstLine.on(mousePointer + 'up', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n\r\n                if (element.isFolder) {\r\n\r\n                    if (element.$htmlFirstLine.hasClass('jo_expanded')) {\r\n                        element.$htmlFirstLine.removeClass('jo_expanded');\r\n                        element.$htmlFirstLine.addClass('jo_collapsed');\r\n                    } else {\r\n                        element.$htmlFirstLine.addClass('jo_expanded');\r\n                        element.$htmlFirstLine.removeClass('jo_collapsed');\r\n                    }\r\n\r\n                    let pathIsCollapsed: { [path: string]: boolean } = {};\r\n                    for (let e of this.elements) {\r\n                        if (e.isFolder) {\r\n                            let path = e.path.join(\"/\");\r\n                            if (path != \"\") path += \"/\";\r\n                            path += e.name;\r\n                            pathIsCollapsed[path] = e.$htmlFirstLine.hasClass('jo_collapsed');\r\n                            if (pathIsCollapsed[e.path.join(\"/\")]) pathIsCollapsed[path] = true;\r\n                        }\r\n                    }\r\n                    pathIsCollapsed[\"\"] = false;\r\n\r\n                    for (let e of this.elements) {\r\n                        if (pathIsCollapsed[e.path.join(\"/\")]) {\r\n                            e.$htmlFirstLine.slideUp(200);\r\n                        } else {\r\n                            e.$htmlFirstLine.slideDown(200);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n\r\n        let contextmenuHandler = function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            if (element.isFolder) {\r\n                contextMenuItems = contextMenuItems.concat([\r\n                    {\r\n                        caption: \"Neuen Unterordner anlegen (unterhalb '\" + element.name + \"')...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            // that.$newFolderAction.trigger(mousePointer + 'down');\r\n                            let pathArray = that.getCurrentlySelectedPath();\r\n\r\n                            that.addFolder(\"Neuer Ordner\", pathArray, (newElement: AccordionElement) => {\r\n                                that.newFolderCallback(newElement, () => {\r\n                                    that.sortElements();\r\n                                    newElement.$htmlFirstLine[0].scrollIntoView();\r\n                                    animateToTransparent(newElement.$htmlFirstLine.find('.jo_filename'), 'background-color', [0, 255, 0], 2000);\r\n                                });\r\n                            });\r\n\r\n                        }\r\n                    }, {\r\n                        caption: \"Neuer Workspace...\",\r\n                        callback: () => {\r\n                            that.select(element.externalElement);\r\n                            that.$buttonNew.trigger(mousePointer + 'down');\r\n                        }\r\n                    }, {\r\n                        caption: \"Workspace importieren...\",\r\n                        callback: () => {\r\n                            new WorkspaceImporter(<Main>that.accordion.main, element.path.concat([element.name])).show();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n\r\n            if (that.contextMenuProvider != null && !element.isFolder) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        };\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", contextmenuHandler, false);\r\n\r\n        // long press for touch devices\r\n        let pressTimer: number;\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.on('pointerup', () => {\r\n                clearTimeout(pressTimer);\r\n                return false;\r\n            }).on('pointerdown', (event) => {\r\n                pressTimer = window.setTimeout(() => {\r\n                    contextmenuHandler(event);\r\n                }, 500);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (!jo_mouseDetected) {\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('pointerdown', (e) => {\r\n                contextmenuHandler(e);\r\n            });\r\n            element.$htmlFirstLine.find('.jo_settings_button').on('mousedown click', (e) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            });\r\n        }\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on(mousePointer + 'down', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n\r\n                        if (element.isFolder) {\r\n                            if (that.getChildElements(element).length > 0) {\r\n                                alert('Dieser Ordner kann nicht gelöscht werden, da er nicht leer ist.');\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    moveElement(elementToMove: AccordionElement, destinationFolder: AccordionElement) {\r\n        let destinationPath: string[] = destinationFolder == null ? [] : destinationFolder.path.slice(0).concat([destinationFolder.name]);\r\n        if (elementToMove.isFolder) {\r\n            let movedElements: AccordionElement[] = [elementToMove];\r\n\r\n            let sourcePath = elementToMove.path.concat([elementToMove.name]).join(\"/\");\r\n\r\n            if(destinationPath.join('/').indexOf(sourcePath) == 0) return;\r\n\r\n            let oldPathLength = elementToMove.path.length;\r\n            elementToMove.path = destinationPath.slice(0);\r\n\r\n            for (let element of this.elements) {\r\n                if (element.path.join(\"/\").startsWith(sourcePath)) {\r\n                    element.path.splice(0, oldPathLength);\r\n                    element.path = destinationPath.concat(element.path);\r\n                    movedElements.push(element);\r\n                }\r\n            }\r\n\r\n            for (let el of movedElements) {\r\n                el.$htmlFirstLine.remove();\r\n                this.elements.splice(this.elements.indexOf(el), 1);\r\n            }\r\n            for (let el of movedElements) {\r\n                this.renderElement(el, true);\r\n                this.insertElement(el);\r\n            }\r\n\r\n            this.moveCallback(movedElements);\r\n        } else {\r\n            elementToMove.path = destinationPath;\r\n            elementToMove.$htmlFirstLine.remove();\r\n            this.elements.splice(this.elements.indexOf(elementToMove), 1);\r\n            this.renderElement(elementToMove, true);\r\n            this.insertElement(elementToMove);\r\n            this.select(elementToMove.externalElement);\r\n            elementToMove.$htmlFirstLine[0].scrollIntoView();\r\n            this.moveCallback(elementToMove);\r\n        }\r\n    }\r\n\r\n    getChildElements(folder: AccordionElement): AccordionElement[] {\r\n        let path = folder.path.slice(0).concat(folder.name).join(\"/\");\r\n        return this.elements.filter((element) => element.path.join(\"/\").startsWith(path));\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        this.dontSortElements = true;\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n            $div[0].scrollIntoView();\r\n            this.dontSortElements = false;\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true, scrollIntoView: boolean = false) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if (ae != null) {\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n\r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n                if (scrollIntoView) {\r\n                    let pathString = ae.path.join(\"/\");\r\n                    for (let el of this.elements) {\r\n                        let elPath = el.path.slice(0);\r\n                        if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                            if (el.isFolder) {\r\n                                elPath.push(el.name);\r\n                                if (pathString.startsWith(elPath.join(\"/\"))) {\r\n                                    el.$htmlFirstLine.removeClass(\"jo_collapsed\");\r\n                                    el.$htmlFirstLine.addClass(\"jo_expanded\");\r\n                                }\r\n                            }\r\n                            el.$htmlFirstLine.show();\r\n                        }\r\n\r\n                    }\r\n\r\n                    ae.$htmlFirstLine[0].scrollIntoView();\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    getPathString(ae: AccordionElement) {\r\n        let ps: string = ae.path.join(\"/\");\r\n        if (ae.isFolder) {\r\n            if (ps != \"\") ps += \"/\";\r\n            ps += ae.name;\r\n        }\r\n        return ps;\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string) {\r\n        if (element != null) {\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n\r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('.jo_captiontext').html(text);\r\n    }\r\n\r\n    getSelectedElement(): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor(public main: MainBase, $html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion(main, $debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false, false, \"file\", false, []);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true, false, \"file\", false, []);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable && oldDe.$debuggerElement != null) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    //@ts-ignore\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    private static isInitialized: boolean = false;\r\n\r\n    public static init(){\r\n        let praefix: string = \"\";\r\n        //@ts-ignore\r\n        if(window.javaOnlineDir != null){\r\n            //@ts-ignore\r\n            praefix = window.javaOnlineDir;\r\n        }\r\n        if(!SoundTools.isInitialized){\r\n            SoundTools.isInitialized = true;\r\n            for(let sound of SoundTools.sounds){\r\n                //@ts-ignore\r\n                sound.player = new Howl({src: [praefix + sound.url], preload: true})\r\n                SoundTools.soundMap.set(sound.name, sound);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null){\r\n                that.executeKeyDownEvent(event); \r\n\r\n                /*\r\n                 * Event is bubbling down to body element\r\n                 * when pressing space bar in embedded mode while program runs.\r\n                 * This leads to scrolling page down. To prevent this:\r\n                 */\r\n                if(event.key == \" \" && that.main.isEmbedded() && \r\n                   that.main.getInterpreter().state == InterpreterState.running && !that.main.getMonacoEditor().hasTextFocus()){\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n            button.on(mousePointer + 'down', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\"){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Attribut: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.index), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            guides: {\r\n                bracketPairs: false,\r\n                highlightActiveIndentation: false,\r\n                indentation: false\r\n            },\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n                interpreter.showProgramPointerAndVariables();\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        this.$consoleTabHeading.trigger(mousePointer + \"down\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        if(this.$consoleTab == null){\r\n            return;\r\n        }\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 800);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\")\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton);\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('jo_active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace, true);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_homeworkTabheading').trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        jQuery('.jo_tabheadings').children().first().trigger(mousePointer + \"down\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"]?.widget;\r\n            if (sw != null && sw._widget != null && this.first) {\r\n                sw._widget.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"else {}\",\r\n                    insertText: \"else {\\n\\t$0\\n}\",\r\n                    detail: \"else-Zweig\",\r\n                    filterText: 'el',\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n            ]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.methods) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"|\": \"```\\na | b\\n```  \\n (sprich: 'a or b') berechnet die **bitweise oder-Verknüpfung** der Werte a und b.\",\r\n        \"&\": \"```\\na & b\\n```  \\n (sprich: 'a und b') berechnet die **bitweise und-Verknüpfung** der Werte a und b.\",\r\n        \"^\": \"```\\na ^ b\\n```  \\n (sprich: 'a xor b') berechnet die **bitweise exklusiv-oder-Verknüpfung** der Werte a und b.\",\r\n        \">>\": \"```\\na >> b\\n```  \\n (sprich: 'a right shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach rechts verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a/(2 hoch b).\",\r\n        \"<<\": \"```\\na >> b\\n```  \\n (sprich: 'a left shift b') berechnet den Wert, der entsteht, wenn man den Wert von a **bitweise um b Stellen nach links verschiebt**. Dieser Wert ist identisch mit dem nach unten abgerundeten Wert von a*(2 hoch b).\",\r\n        \"~\": \"```\\n~a\\n```  \\n (sprich: 'nicht a') berechnet den Wert, der entsteht, wenn man **alle Bits von a umkehrt**.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwort ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n        \"var\": \"```\\nvar\\n```  \\nWird einer Variable beim Deklarieren sofort ein Startwert zugewiesen (z.B. Circle c = new Circle(100, 100, 10)), so kann statt des Datentyps das Schlüsselwort ```var``` verwendet werden (also var c = new Circle(100, 100, 10)).\",\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null && element.identifier != \"var\") {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"src/client/compiler/parser/Module.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyColorProvider implements monaco.languages.DocumentColorProvider {\r\n    \r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    provideDocumentColors(model: monaco.editor.ITextModel, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorInformation[]> {\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        let isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n    \r\n        if(this.main.getCompiler() == null){\r\n            let that = this;\r\n            let i = 3;\r\n            return new Promise(function(resolve, reject){\r\n\r\n                let f = () => {\r\n                    if(that.main.getCompiler() != null){\r\n                        that.main.compileIfDirty();\r\n                        resolve(module.colorInformation);\r\n                    } else {\r\n                        i--;\r\n                        if(i == 0){\r\n                            resolve([]);\r\n                        } else {\r\n                            setTimeout(f, 500);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(f, 500);       \r\n            })\r\n        }\r\n\r\n        this.main.compileIfDirty();\r\n        \r\n        return module.colorInformation;\r\n\r\n    }\r\n\r\n    provideColorPresentations(model: monaco.editor.ITextModel, colorInfo: monaco.languages.IColorInformation, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.IColorPresentation[]> {\r\n        var color = colorInfo.color;\r\n        var oldColor: string = model.getValueInRange(colorInfo.range);\r\n\r\n        var red256 = Math.round(color.red * 255);\r\n        var green256 = Math.round(color.green * 255);\r\n        var blue256 = Math.round(color.blue * 255);\r\n        var label;\r\n\r\n        let hex6Digits = this.toHex2Digits(red256) + this.toHex2Digits(green256) + this.toHex2Digits(blue256);\r\n        let rgbCommaSeparated = red256 + ', ' + green256 + ', ' + blue256;\r\n\r\n        if(oldColor.startsWith('#')){\r\n            label = '#' + hex6Digits; \r\n        } else if(oldColor.startsWith('0x') ){\r\n            label = '0x' + hex6Digits;\r\n        } else if(oldColor.startsWith('rgb')){\r\n            if(color.alpha < 0.999){\r\n                label = 'rgba(' + rgbCommaSeparated + ', ' + color.alpha + ')';\r\n            } else {\r\n                label = 'rgb(' + rgbCommaSeparated + ')';\r\n            }\r\n        } else if(oldColor.startsWith(\"new\") || oldColor.startsWith('Color')){\r\n            label = 'new Color(' + rgbCommaSeparated + ')';\r\n        }\r\n\r\n        return [\r\n            {\r\n                label: label\r\n            }\r\n        ];\r\n    }\r\n\r\n    toHex2Digits(n: number){\r\n        let hex = n.toString(16);\r\n        while(hex.length < 2){\r\n            hex = '0' + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { MySemanticTokenProvider } from \"./MySemanticTokenProvider.js\";\r\nimport { MyColorProvider } from \"./MyColorProvider.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n\r\n                // semantic tokens:\r\n                {token: 'property', foreground: 'ffffff' ,fontStyle: 'bold'},\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            \"semanticHighlighting.enabled\": true,\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                insertMode: \"replace\"\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule()?.file?.id;\r\n            if(currentModelId == null) return;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n//        monaco.languages.registerDocumentRangeSemanticTokensProvider('myJava', new MySemanticTokenProvider(this.main));\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n        monaco.languages.registerColorProvider('myJava', new MyColorProvider(this.main));\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        // console.log(this.editor.getSupportedActions().map(a => a.id));\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        let module = this.main.getCurrentlyEditedModule();\r\n        if(module == null) return;\r\n        \r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n\r\n        if(this.main.isEmbedded() || historyEntry == null) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // Strg + # funktioniert bei Firefox nicht, daher alternativ Strg + ,:\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Toggle line comment',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Zeilenkommentar ein-/ausschalten',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_COMMA ],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'insert',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                console.log('Hier!');\r\n                ed.getAction('editor.action.commentLine').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        // console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    resolveRenameLocation(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.RenameLocation & monaco.languages.Rejection> {\r\n\r\n            let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n            if (currentlyEditedModule == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n            \r\n            let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n            if (element == null || element.declaration == null) {\r\n                return {\r\n                    range: null,\r\n                    text: \"Dieses Symbol kann nicht umbenannt werden.\",\r\n                    rejectReason: \"Dieses Symbol kann nicht umbenannt werden.\"\r\n                };\r\n            }\r\n    \r\n            let pos = element.declaration.position;\r\n\r\n            return {\r\n                range: {startColumn: position.column, startLineNumber: position.lineNumber, endLineNumber: position.lineNumber, endColumn: position.column + pos.length},\r\n                text: element.identifier\r\n            };\r\n\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n//        console.log(resourceEdits);\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                // beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                beforeText: /^(\\t|(\\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface', 'var'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { WorkspaceImporter } from \"./WorkspaceImporter.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData, serverURL: string) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Workspace importieren\",\r\n                                action: () => { new WorkspaceImporter(this.main).show(); }\r\n                            },\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Kurze Video-Tutorials zur Bedienung dieser IDE\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:ide_manual:start\"\r\n                            },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Materialien für Lehrkräfte\",\r\n                                link: \"servlet/teachers/index.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: serverURL + \"api_documentation.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: serverURL + \"spriteLibrary.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: serverURL + \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette (F1)\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        that.main.getMonacoEditor().focus();\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: serverURL + \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: serverURL + \"statistics.html\"\r\n                        },{\r\n                            identifier:\"Shutdown server...\",\r\n                            action: () => {\r\n                                if(confirm(\"Server wirklich herunterfahren?\")){\r\n                                    ajax(\"shutdown\", {}, () => {\r\n                                        alert('Server erfolgreich heruntergefahren.');\r\n                                    }, (message) => {\r\n                                        alert(message);\r\n                                    })\r\n                                }\r\n                            }\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n        \r\n        that.$outer.on(mousePointer + 'down', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.speedcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.speedcontrol');\r\n                jQuery(document).off(mousePointer + 'move.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeedInStepsPerSecond(stepsPerSecond: number | \"max\"){\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        if(stepsPerSecond == \"max\") stepsPerSecond = this.interpreter.maxStepsPerSecond;\r\n        stepsPerSecond = Math.min(stepsPerSecond, this.interpreter.maxStepsPerSecond);\r\n        stepsPerSecond = Math.max(stepsPerSecond, 1);\r\n\r\n        for(let i = 0; i < intervalBorders.length - 1; i++){\r\n            let left = intervalBorders[i];\r\n            let right = intervalBorders[i+1];\r\n            if(stepsPerSecond >= left && stepsPerSecond <= right){\r\n                let gripIntervalLength = this.xMax/(intervalBorders.length - 1);\r\n                let gripPosition = Math.round(gripIntervalLength * i + gripIntervalLength * (stepsPerSecond - left)/(right - left));\r\n                this.$grip.css('left', gripPosition + 'px');\r\n                this.position = gripPosition;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setInterpreterSpeed(stepsPerSecond);\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.setInterpreterSpeed(speed);\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n    setInterpreterSpeed(stepsPerSecond: number){\r\n        this.interpreter.stepsPerSecond = stepsPerSecond;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(stepsPerSecond);\r\n        if(stepsPerSecond >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n    }\r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Workspace } from \"src/client/workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { CheckboxState, Dialog } from \"./Dialog.js\";\r\n\r\n\r\ntype Library = {\r\n    identifier: string,\r\n    description: string,\r\n    checkboxState?: CheckboxState\r\n}\r\n\r\nexport class WorkspaceSettingsDialog{\r\n\r\n    libraries: Library[] = [\r\n        {identifier: \"gng\", description: \"Graphics'n Games-Bibliothek zu den Informatikbüchern des Cornelsen-Verlages für das Land Bayern (Bemerkung: Die Klassen Turtle und Text heißen hier GTurtle und GText)\"}\r\n    ]\r\n\r\n    constructor(private workspace: Workspace, private main: Main){\r\n\r\n    }\r\n\r\n    open(){\r\n        let dialog = new Dialog();\r\n        dialog.init();\r\n        dialog.heading(\"Einstellungen zum Workspace \" + this.workspace.name);\r\n        dialog.subHeading(\"A. Verwendete Bibliotheken:\");\r\n\r\n        let currentLibraries = this.workspace.settings.libraries;\r\n\r\n        for(let library of this.libraries){\r\n            let cbs = dialog.addCheckbox(library.description, currentLibraries.indexOf(library.identifier) >= 0, library.identifier);\r\n            library.checkboxState = cbs;\r\n        }\r\n\r\n        dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    let changed: boolean = false;\r\n                    let newLibs: string[] = [];\r\n                    for(let lib of this.libraries){\r\n                        let used = lib.checkboxState();\r\n                        changed = changed || (used != (currentLibraries.indexOf(lib.identifier) >= 0));\r\n                        if(used) newLibs.push(lib.identifier);\r\n                    }\r\n\r\n                    if(changed){\r\n                        this.workspace.settings.libraries = newLibs;\r\n                        this.workspace.saved = false;\r\n                        this.workspace.alterAdditionalLibraries();\r\n                        this.main.networkManager.sendUpdates(null, true);\r\n                    }\r\n\r\n                    dialog.close();\r\n                }\r\n            },\r\n        ])\r\n \r\n\r\n    }\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { downloadFile, makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\nimport { WorkspaceSettingsDialog } from \"./WorkspaceSettingsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.main, this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true, false, \"file\", true, []);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n\r\n        this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n\r\n                    let module: Module = element.externalElement;\r\n\r\n                    let f: File = {\r\n                        name: module.file.name + \" - Kopie\",\r\n                        dirty: true,\r\n                        saved: false,\r\n                        text: module.file.text,\r\n                        text_before_revision: null,\r\n                        submitted_date: null,\r\n                        student_edited_after_revision: false,\r\n                        version: module.file.version,\r\n                        panelElement: null,\r\n                        identical_to_repository_version: false\r\n                    };\r\n\r\n                    let m = new Module(f, that.main);\r\n                    let workspace = that.main.currentWorkspace;\r\n                    let modulStore = workspace.moduleStore;\r\n                    modulStore.putModule(m);\r\n                    that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                        (error: string) => {\r\n                            if (error == null) {\r\n                                let element: AccordionElement = {\r\n                                    isFolder: false,\r\n                                    name: f.name,\r\n                                    path: [],\r\n                                    externalElement: m\r\n                                }\r\n                                f.panelElement = element;\r\n                                that.fileListPanel.addElement(element, true);\r\n                                that.fileListPanel.sortElements();\r\n                                that.setModuleActive(m);\r\n                                that.fileListPanel.renameElement(element);\r\n                            } else {\r\n                                alert('Der Server ist nicht erreichbar!');\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n            if (!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)) {\r\n                let module: Module = <Module>accordionElement.externalElement;\r\n                let file = module.file;\r\n\r\n                if (file.submitted_date == null) {\r\n                    cmiList.push({\r\n                        caption: \"Als Hausaufgabe markieren\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = dateToString(new Date());\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n                        }\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Hausaufgabenmarkierung entfernen\",\r\n                        callback: (element: AccordionElement) => {\r\n\r\n                            let file = (<Module>element.externalElement).file;\r\n                            file.submitted_date = null;\r\n                            file.saved = false;\r\n                            that.main.networkManager.sendUpdates(null, true);\r\n                            that.renderHomeworkButton(file);\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n\r\n        \r\n\r\n        this.$synchronizeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if (file.submitted_date != null) {\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if (file.text_before_revision) {\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        }\r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if (klass.indexOf(\"jo_active\") >= 0) {\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"3\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true, true, \"workspace\", false, [\"file\"]);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if (that.main.workspacesOwnerId != null) {\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                w.isFolder = false;\r\n                w.path = accordionElement.path.join(\"/\");\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.clear();\r\n                        that.fileListPanel.setCaption('Bitte Workspace selektieren');\r\n                        this.$synchronizeAction.hide();\r\n                        that.fileListPanel.enableNewButton(false);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                if (!workspace.isFolder) {\r\n                    that.main.networkManager.sendUpdates(() => {\r\n                        that.setWorkspaceActive(workspace);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        this.workspaceListPanel.newFolderCallback = (newElement: AccordionElement, successCallback) => {\r\n            let owner_id: number = that.main.user.id;\r\n            if (that.main.workspacesOwnerId != null) {\r\n                owner_id = that.main.workspacesOwnerId;\r\n            }\r\n\r\n            let folder: Workspace = new Workspace(newElement.name, that.main, owner_id);\r\n            folder.isFolder = true;\r\n\r\n            folder.path = newElement.path.join(\"/\");\r\n            folder.panelElement = newElement;\r\n            newElement.externalElement = folder;\r\n            that.main.workspaceList.push(folder);\r\n\r\n            that.main.networkManager.sendCreateWorkspace(folder, that.main.workspacesOwnerId, (error: string) => {\r\n                if (error == null) {\r\n                    successCallback(folder);\r\n                } else {\r\n                    alert(\"Fehler: \" + error);\r\n                    that.workspaceListPanel.removeElement(newElement);\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        this.workspaceListPanel.moveCallback = (ae: AccordionElement | AccordionElement[]) => {\r\n            if (!Array.isArray(ae)) ae = [ae];\r\n            for (let a of ae) {\r\n                let ws: Workspace = a.externalElement;\r\n                ws.path = a.path.join(\"/\");\r\n                ws.saved = false;\r\n            }\r\n            this.main.networkManager.sendUpdates();\r\n        }\r\n\r\n        this.workspaceListPanel.dropElementCallback = (dest: AccordionElement, droppedElement: AccordionElement, dropEffekt: \"copy\" | \"move\") => {\r\n            let workspace: Workspace = dest.externalElement;\r\n            let module: Module = droppedElement.externalElement;\r\n\r\n            if (workspace.moduleStore.getModules(false).indexOf(module) >= 0) return; // module is already in destination workspace\r\n\r\n            let f: File = {\r\n                name: module.file.name,\r\n                dirty: true,\r\n                saved: false,\r\n                text: module.file.text,\r\n                text_before_revision: null,\r\n                submitted_date: null,\r\n                student_edited_after_revision: false,\r\n                version: module.file.version,\r\n                panelElement: null,\r\n                identical_to_repository_version: false\r\n            };\r\n\r\n            if (dropEffekt == \"move\") {\r\n                // move file\r\n                let oldWorkspace = that.main.currentWorkspace;\r\n                oldWorkspace.moduleStore.removeModule(module);\r\n                that.fileListPanel.removeElement(module);\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, () => { });\r\n            }\r\n\r\n            let m = new Module(f, that.main);\r\n            let modulStore = workspace.moduleStore;\r\n            modulStore.putModule(m);\r\n            that.main.networkManager.sendCreateFile(m, workspace, that.main.workspacesOwnerId,\r\n                (error: string) => {\r\n                    if (error == null) {\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n\r\n        }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('pointerdown', (e) => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n        })\r\n\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                let path = workspaceData.path.split(\"/\");\r\n                                if (path.length == 1 && path[0] == \"\") path = [];\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository',\r\n                                    isFolder: false,\r\n                                    path: path\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement, true);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            },\r\n            {\r\n                caption: \"Exportieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    let ws: Workspace = <Workspace>element.externalElement;\r\n                    let name: string = ws.name.replace(/\\//g, \"_\");\r\n                    downloadFile(ws.toExportedWorkspace(), name + \".json\")\r\n                }\r\n            } \r\n            );\r\n\r\n            if (this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0) {\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" +\r\n                                            dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                    {\r\n                        caption: \"An einzelne Schüler/innen austeilen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                            let workspace: Workspace = element.externalElement;\r\n                            new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                        },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                        // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                        //     if (error == null) {\r\n                        //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                        //         workspace.renderSynchronizeButton();\r\n                        //         this.showRepositoryButtonIfNeeded(workspace);\r\n                        //     } else {\r\n                        //         alert(error);\r\n                        //     }\r\n                        // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            cmiList.push({\r\n                caption: \"Einstellungen...\",\r\n                callback: (element: AccordionElement) => {\r\n                    let workspace: Workspace = element.externalElement;\r\n                    new WorkspaceSettingsDialog(workspace, this.main).open();\r\n                }\r\n            })\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m,\r\n                    isFolder: false,\r\n                    path: []\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement, true);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            let path = w.path.split(\"/\");\r\n            if (path.length == 1 && path[0] == \"\") path = [];\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository',\r\n                isFolder: w.isFolder,\r\n                path: path\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement, false);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n        // setTimeout(() => {\r\n        //     this.workspaceListPanel.collapseAll();\r\n        // }, 500);\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace) {\r\n        if (w.repository_id != null && w.owner_id == this.main.user.id) {\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace, scrollIntoView: boolean = false) {\r\n\r\n        this.workspaceListPanel.select(w, false, scrollIntoView);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            this.fileListPanel.setCaption('Keine Datei vorhanden');\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if (this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if (m.file.text_before_revision != null) {\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WS\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        $zoomcontrolBar.on(mousePointer + 'down', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger(mousePointer + 'down', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on(mousePointer + 'down', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on(mousePointer + 'move.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + 'up.zoomcontrol', () => {\r\n                jQuery(document).off(mousePointer + 'up.zoomcontrol');\r\n                jQuery(document).off(mousePointer + 'move.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(mousePointer + \"enter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(mousePointer + \"leave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\",\r\n                \"dominant-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n\r\n                line.$element.css(\"transform\", \"translate(0cm,0cm)\");\r\n                // line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                // if(line.onClick != null){\r\n                //     line.$element.addClass(\"clickable\");\r\n                //     line.$element.on(\"mousedown\", (event) => {\r\n                //         //@ts-ignore\r\n                //         line.onClick();\r\n                //         event.stopPropagation();\r\n                //     })\r\n                // }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n\r\n                // Unfortunately we have to wrap Text-Elements in <g> due to a bug in safari,\r\n                // see \r\n                //@ts-ignore\r\n                let $g = this.createElement(\"g\", $group[0]);\r\n                $g.append(line.$element);\r\n                //@ts-ignore\r\n                line.$element = $g;\r\n\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : ( this.klass.isAbstract ? \"<<abstract>> \" : \"\")) + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface || this.klass.isAbstract,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface || m.isAbstract,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        if(this.currentClassBoxes == null) return;\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributes[a.index];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { jo_mouseDetected } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        jQuery('#slider1').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                \r\n                that.moveLeftPanel(dx);\r\n\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider1\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider1\");\r\n                jQuery(document).off(mousePointer + \"up.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                that.moveBottomDiv(dy);\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider2\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider2\");\r\n                jQuery(document).off(mousePointer + \"up.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                that.moveRightDiv(dx);\r\n\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider3\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider3\");\r\n                jQuery(document).off(mousePointer + \"up.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n        let sliderknobLeft = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"left: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobLeft);\r\n        sliderknobLeft.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobleft\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveLeftPanel(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobleft\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobleft\");\r\n                jQuery(document).off(mousePointer + \"up.knobleft\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n        let sliderknobRight = jQuery('<div class=\"jo_sliderknob img_knob jo_button jo_active\" style=\"right: -8px\" draggable=\"false\"></div>');\r\n        jQuery('#slider2').append(sliderknobRight);\r\n        sliderknobRight.on(mousePointer + 'down', (md: JQuery.MouseDownEvent) => {\r\n            let y = md.clientY;\r\n            let x = md.clientX;\r\n\r\n            md.stopPropagation();\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(mousePointer + \"move.knobright\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n                let dx = mm.clientX - x;\r\n                mm.stopPropagation();\r\n\r\n                that.moveRightDiv(dx);\r\n                that.moveBottomDiv(dy);\r\n\r\n                x += dx;\r\n                y += dy;\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.knobright\", () => {\r\n                jQuery(document).off(mousePointer + \"move.knobright\");\r\n                jQuery(document).off(mousePointer + \"up.knobright\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    moveRightDiv(dx: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $rightDiv = jQuery('#rightdiv');\r\n\r\n        let width = Number.parseInt($rightDiv.css('width').replace('px', ''));\r\n        $rightDiv.css('width', (width - dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth + dx) + \"px\");\r\n        \r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n        jQuery('.jo_graphics').trigger('sizeChanged');\r\n        width += dx;\r\n}\r\n    moveBottomDiv(dy: number) {\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n        let $bottomDiv = jQuery('#bottomdiv-outer');\r\n\r\n        let height = Number.parseInt($bottomDiv.css('height').replace('px', ''));\r\n        $bottomDiv.css('height', (height - dy) + \"px\");\r\n\r\n        let meheight = Number.parseInt($editor.css('height').replace('px', ''));\r\n        $editor.css('height', (meheight + dy) + \"px\");\r\n\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n}\r\n\r\n    moveLeftPanel(dx: number) {\r\n        let $leftPanel = jQuery('#leftpanel');\r\n        let $editor = jQuery('#editor>.monaco-editor');\r\n\r\n        let width = Number.parseInt($leftPanel.css('width').replace('px', ''));\r\n        $leftPanel.css('width', (width + dx) + \"px\");\r\n\r\n        let mewidth = Number.parseInt($editor.css('width').replace('px', ''));\r\n        $editor.css('width', (mewidth - dx) + \"px\");\r\n        this.main.getMonacoEditor().layout();\r\n        if(this.main.bottomDiv.homeworkManager.diffEditor != null){\r\n            this.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false, false, \"student\", false, []);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id,\r\n                    language: 0\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces, false);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace, true);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false, false, \"class\", false, []);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return -1;\r\n            if (b.familienname > a.familienname) return 1;\r\n            if (a.rufname > b.rufname) return -1;\r\n            if (b.rufname > a.rufname) return 1;\r\n            return 0;\r\n        })\r\n\r\n        for(let i = 0; i < userDataList.length; i++){\r\n            let ud = userDataList[i];\r\n            let ae: AccordionElement = {\r\n                name: ud.familienname + \", \" + ud.rufname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.studentPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd,\r\n                isFolder: false,\r\n                path: []\r\n            }\r\n            this.classPanel.addElement(ae, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, TicketLoginRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI(isLoginWithTicket: boolean) {\r\n\r\n        let that = this;\r\n        if(!isLoginWithTicket){\r\n            jQuery('#login').css('display','flex');\r\n            jQuery('#bitteWarten').css('display','none');\r\n            this.startAnimations();\r\n        }\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n\r\n        jQuery('#jo_testuser-login-button').on('click', () => {\r\n            jQuery('#login-username').val('Testuser');\r\n            jQuery('#login-password').val('');\r\n            jQuery('#login-button').trigger('click');\r\n\r\n        })\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            this.sendLoginRequest(null);\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            if(that.main.user.is_testuser){\r\n                that.showLoginForm();\r\n                return;\r\n            }\r\n\r\n            this.main.interpreter.closeAllWebsockets();\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    that.showLoginForm();\r\n\r\n                });\r\n            });\r\n\r\n            this.main.networkManager.notifierClient.disconnect();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    sendLoginRequest(ticket: string){\r\n        let that = this;\r\n\r\n        let servlet = \"login\";\r\n\r\n        let loginRequest: LoginRequest|TicketLoginRequest = {\r\n            username: <string>jQuery('#login-username').val(),\r\n            password: <string>jQuery('#login-password').val(),\r\n            language: 0\r\n        }\r\n\r\n        if(ticket != null){\r\n            servlet = \"ticketLogin\";\r\n            loginRequest = {\r\n                ticket: ticket,\r\n                language: 0\r\n            }\r\n        }\r\n\r\n        ajax(servlet, loginRequest, (response: LoginResponse) => {\r\n\r\n            if (!response.success) {\r\n                jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                jQuery('#login-spinner>img').hide();\r\n            } else {\r\n\r\n                // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                // Alternatively we now set a long expiry interval for cookie.\r\n                // credentials.username = loginRequest.username;\r\n                // credentials.password = loginRequest.password;\r\n\r\n                jQuery('#login').hide();\r\n                jQuery('#main').css('visibility', 'visible');\r\n\r\n                jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                let user: UserData = response.user;\r\n                user.is_testuser = response.isTestuser;\r\n\r\n                if (user.settings == null || user.settings.helperHistory == null) {\r\n                    user.settings = {\r\n                        helperHistory: {\r\n                            consoleHelperDone: false,\r\n                            newFileHelperDone: false,\r\n                            newWorkspaceHelperDone: false,\r\n                            speedControlHelperDone: false,\r\n                            homeButtonHelperDone: false,\r\n                            stepButtonHelperDone: false,\r\n                            repositoryButtonDone: false,\r\n                            folderButtonDone: false\r\n                        },\r\n                        viewModes: null,\r\n                        classDiagram: null\r\n                    }\r\n                }\r\n                \r\n                that.main.user = user;\r\n\r\n                this.main.waitForGUICallback = () => {\r\n                    \r\n                    that.main.mainMenu.initGUI(user, \"\");\r\n                    \r\n                    jQuery('#bitteWarten').hide();\r\n                    let $loginSpinner = jQuery('#login-spinner>img');\r\n                    $loginSpinner.hide();\r\n                    jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n                    \r\n                    new UserMenu(that.main).init();\r\n                    \r\n                    if (user.is_teacher) {\r\n                        that.main.initTeacherExplorer(response.classdata);\r\n                    }\r\n                    \r\n\r\n                    that.main.workspacesOwnerId = user.id;\r\n                    that.main.restoreWorkspaces(response.workspaces, true);\r\n\r\n                    that.main.networkManager.initializeTimer();\r\n\r\n                    that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                    that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                    that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                    if (user.settings.classDiagram != null) {\r\n                        that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                    }\r\n\r\n                    that.main.viewModeController.initViewMode();\r\n                    that.main.bottomDiv.hideHomeworkTab();\r\n                    \r\n                    if (!this.main.user.settings.helperHistory.folderButtonDone && that.main.projectExplorer.workspaceListPanel.elements.length > 5) {\r\n                        \r\n                        Helper.showHelper(\"folderButton\", this.main, jQuery('.img_add-folder-dark'));\r\n        \r\n                    }\r\n        \r\n                    that.main.networkManager.initializeNotifierClient();\r\n\r\n                }\r\n\r\n                if (this.main.startupComplete == 0) {\r\n                    this.main.waitForGUICallback();\r\n                    this.main.waitForGUICallback = null;\r\n                }\r\n\r\n            }\r\n\r\n        }, (errorMessage: string) => {\r\n            jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            jQuery('#login-spinner>img').hide();\r\n        }\r\n        );\r\n\r\n    }\r\n\r\n    loginWithTicket(ticket: string) {\r\n        jQuery('#login').hide();\r\n        jQuery('#main').css('visibility', 'visible');\r\n\r\n        jQuery('#bitteWartenText').html('Bitte warten ...');\r\n        jQuery('#bitteWarten').css('display', 'flex');\r\n        this.sendLoginRequest(ticket);\r\n\r\n    }\r\n\r\n\r\n    private showLoginForm(){\r\n        jQuery('#login').show();\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        jQuery('#bitteWarten').css('display', 'none');\r\n        jQuery('#login-message').empty();\r\n        this.main.interpreter.setState(InterpreterState.not_initialized);\r\n        this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n        this.main.projectExplorer.fileListPanel.clear();\r\n        this.main.projectExplorer.fileListPanel.setCaption('');\r\n        this.main.projectExplorer.workspaceListPanel.clear();\r\n        this.main.bottomDiv?.console?.clear();\r\n        this.main.interpreter.printManager.clear();\r\n\r\n        if (this.main.user.is_teacher) {\r\n            this.main.teacherExplorer.removePanels();\r\n            this.main.teacherExplorer = null;\r\n        }\r\n\r\n        this.main.currentWorkspace = null;\r\n        this.main.user = null;\r\n\r\n    }\r\n\r\n\r\n    startAnimations() {\r\n        // let $loginAnimationDiv = $('#jo_login_animations');\r\n        // $loginAnimationDiv.empty();\r\n\r\n\r\n        // let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        // $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        // let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        // let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        // $gifAnimation.css({\r\n        //     \"left\": left,\r\n        //     \"top\": top\r\n        // })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    rightDivWidth: number;\r\n    editorWidth: number;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 8px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').css('width', this.rightDivWidth + \"px\");\r\n            jQuery('#editor>.monaco-editor').css('width', this.editorWidth + 'px');\r\n\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            \r\n            this.rightDivWidth = Number.parseInt(jQuery('#rightdiv').css('width').replace('px', ''));\r\n            this.editorWidth = Number.parseInt(jQuery('#editor>.monaco-editor').css('width').replace('px', ''));\r\n\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"./Workspace.js\";\r\n\r\nexport class InconsistencyFixer {\r\n    start(workspaceList: Workspace[], networkManager: NetworkManager, main: MainBase) {\r\n        let updateNeeded: boolean = false;\r\n\r\n        // is there a folder which contains files?\r\n        for (let ws of workspaceList) {\r\n            if (ws.isFolder && ws.moduleStore.getModules(false).length > 0) {\r\n\r\n                console.log(\"Folder \" + ws.path + \"/\" + ws.name + \" contains files. -> Make new folder and transforming existing one to workspace.\")\r\n\r\n                // create new Folder\r\n                let newFolder: Workspace = new Workspace(ws.name, main, ws.owner_id);\r\n                newFolder.isFolder = true;\r\n                newFolder.path = ws.path;\r\n                workspaceList.push(newFolder);\r\n\r\n                networkManager.sendCreateWorkspace(newFolder, newFolder.owner_id, (error: string) => {\r\n                    if(error == null || error == \"\"){\r\n                        console.log(\"Successfully created new Folder.\");\r\n                    } else {\r\n                        console.log(\"Error creating folder: \" + error);\r\n                    }\r\n                });\r\n\r\n                // transform old folder into real workspace\r\n                ws.isFolder = false;\r\n                ws.name += \" (ws)\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n\r\n            }\r\n        }\r\n\r\n        // Are there several folders with identical path and name?\r\n        let folderList = workspaceList.filter(ws => ws.isFolder);\r\n\r\n        for (let ws1 of folderList) {\r\n            let identicalFolders: Workspace[] = [];\r\n            for (let ws2 of folderList) {\r\n                if (ws2 != ws1 && ws2.path == ws1.path && ws2.name == ws1.name) {\r\n                    identicalFolders.push(ws2);\r\n                }\r\n            }\r\n            if (identicalFolders.length > 0) {\r\n                console.log(\"\" + (identicalFolders.length + 1) + \" folders with name \" + ws1.path + \"/\" + ws1.name + \"=> renaming them with suffixes (1), (2), ...\");\r\n                for (let i = 0; i < identicalFolders.length; i++) {\r\n                    identicalFolders[i].name += \" (\" + (i + 1) + \")\";\r\n                    identicalFolders[i].saved = false;\r\n                }\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n        // Is there a workspace which belongs to a folder that doesn't exist?\r\n        let folderPathAndNames: string[] = [];\r\n        for (let folder of folderList) {\r\n            let fnap = folder.path;\r\n            if (fnap != \"\" && !fnap.endsWith(\"/\")) fnap += \"/\";\r\n            fnap += folder.name;\r\n            folderPathAndNames.push(fnap);\r\n        }\r\n\r\n        for (let ws of workspaceList) {\r\n            if (!ws.isFolder && ws.path != \"\" && ws.path != null && folderPathAndNames.indexOf(ws.path) < 0) {\r\n                console.log(\"Found workspace (\" + ws.path + \"/\" + ws.name + \") with path not corresponding to any folder => Set path = ''.\");\r\n                ws.path = \"\";\r\n                ws.saved = false;\r\n                updateNeeded = true;\r\n            }\r\n        }\r\n\r\n\r\n        if(updateNeeded){ \r\n            networkManager.sendUpdates(()=> {}, true);\r\n        }\r\n\r\n    }\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { checkIfMousePresent } from \"../tools/HtmlTools.js\";\r\nimport { InconsistencyFixer } from \"../workspace/InconsistencyFixer.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        checkIfMousePresent();\r\n        \r\n        this.login = new Login(this);\r\n        let hashIndex: number = window.location.href.indexOf('#');\r\n        if(hashIndex > 0){\r\n    \r\n            var ticket = window.location.href.substr(hashIndex + 1);\r\n            window.history.replaceState({}, \"Online-IDE\", window.location.href.substr(0, hashIndex));\r\n            this.login.initGUI(true);\r\n            this.login.loginWithTicket(ticket);\r\n    \r\n        } else {\r\n            this.login.initGUI(false);\r\n        }\r\n    \r\n\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n//        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n        $(window).on('unload', function() {\r\n            \r\n            if(navigator.sendBeacon && that.user != null){\r\n                that.networkManager.sendUpdates(null, false, true);\r\n                that.networkManager.sendUpdateUserSettings(() => {});\r\n                that.interpreter.closeAllWebsockets();\r\n            }\r\n            \r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces, fixInconsistencies: boolean) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Find inconsistencies and fix them\r\n         */\r\n        if(fixInconsistencies){\r\n            new InconsistencyFixer().start(this.workspaceList, this.networkManager, this);\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace, true);\r\n        } else {\r\n            this.projectExplorer.setModuleActive(null);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"folderButton\":\r\n                    text = `Mit diesem Button können Sie in der Liste der Workspaces Ordner anlegen. \r\n                    <ul>\r\n                    <li>Bestehende Workspaces lassen sich mit der Maus in Ordner ziehen.</li>\r\n                    <li>Wollen Sie einen Workspace in die oberste Ordnerebene bringen, so ziehen Sie ihn einfach auf den \"Workspaces\"-Balken.</li>\r\n                    <li>Über das Kontextmenü der Ordner lassen sich Workspaces und Unterordner anlegen.</li>\r\n                    </ul>`,\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // in ActionManager.init there is a \r\n            if(that.main.isEmbedded && key == \" \"){\r\n                for(let kpc of that.keyPressedCallbacks){\r\n                    kpc(key);\r\n                }    \r\n            }\r\n\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { Main } from \"../main/Main.js\";\r\n\r\nexport class GamepadTool {\r\n\r\n    gamepads: Gamepad[] = [];\r\n\r\n    constructor(){\r\n        let that = this;\r\n        window.addEventListener(\"gamepadconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n              e.gamepad.index, e.gamepad.id,\r\n              e.gamepad.buttons.length, e.gamepad.axes.length);\r\n              if(that.gamepads.indexOf(e.gamepad) < 0){\r\n                  that.gamepads.push(e.gamepad);\r\n              }\r\n          });\r\n\r\n          window.addEventListener(\"gamepaddisconnected\", function(e: GamepadEvent) {\r\n            console.log(\"Gamepad disconnected from index %d: %s\",\r\n              e.gamepad.index, e.gamepad.id);\r\n              let i = that.gamepads.indexOf(e.gamepad);\r\n              if(i >= 0){\r\n                that.gamepads.splice(i, 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    isGamepadButtonPressed(gamepadIndex: number, buttonIndex: number): boolean{\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return false;\r\n        let button = gp.buttons[buttonIndex];\r\n        if(button){\r\n            // return typeof(button) == \"object\" ? button.pressed : (button == 1.0);\r\n            return button.pressed;\r\n        } else {return false;}\r\n    }\r\n\r\n    getGamepadAxisValue(gamepadIndex: number, axisIndex: number): number {\r\n        let gp: Gamepad = navigator.getGamepads()[gamepadIndex];\r\n        if(gp == null) return 0;\r\n        return gp.axes[axisIndex];\r\n    }\r\n\r\n    isGamepadConnected(gamepadIndex: number){\r\n        return navigator.getGamepads()[gamepadIndex] != null;\r\n    }\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\nimport { GNGEreignisbehandlungHelper } from \"../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GamepadTool } from \"../tools/GamepadTool.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    gngEreignisbehandlungHelper: GNGEreignisbehandlungHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n    gamepadTool: GamepadTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n    pauseUntil?: number;\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.gamepadTool = new GamepadTool();\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                // let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                let staticValueList = klass.staticClass.classObject.attributes;\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    // staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                    staticValueList[enumInfo.ordinal].value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.pauseUntil = null;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n        this.getTimerClass().startTimer();\r\n\r\n    }\r\n\r\n    getTimerClass(): TimerClass {\r\n        let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n        return <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n    }\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused || this.state == InterpreterState.waitingForInput) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n        this.gngEreignisbehandlungHelper?.detachEvents();\r\n        this.gngEreignisbehandlungHelper = null;\r\n\r\n        this.main.hideProgramPointerPosition();\r\n\r\n        this.getTimerClass().stopTimer();\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.cacheAsBitmap();\r\n        }\r\n\r\n        this.heap = {};\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.showProgramPointerAndVariables();\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (typeof this.currentProgram == \"undefined\") {\r\n                debugger;\r\n            }\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIndex);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!(stack[stackTop - 1].type instanceof PrimitiveType)) {\r\n                    stack[stackTop - 1].type = value.type;\r\n                }\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.ANDAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value &= value.value;\r\n                break;\r\n            case TokenType.ORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value |= value.value;\r\n                break;\r\n            case TokenType.XORAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value ^= value.value;\r\n                break;\r\n            case TokenType.shiftLeftAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value <<= value.value;\r\n                break;\r\n            case TokenType.shiftRightAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>= value.value;\r\n                break;\r\n            case TokenType.shiftRightUnsignedAssigment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value >>>= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIndex);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    if (object.value instanceof RuntimeObject) {\r\n                        method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                    } else {\r\n                        method = (<Klass>object.type).getMethodBySignature(method.signature);\r\n                    }\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null && rt.identifier != 'void') {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.hasActors()) || this.processingHelper != null\r\n                    || (this.gngEreignisbehandlungHelper != null && this.gngEreignisbehandlungHelper.hasAktionsEmpfaenger())) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                // this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n\r\n                // if (this.worldHelper != null) {\r\n                //     this.worldHelper.spriteAnimations = [];\r\n                // }\r\n                // this.gngEreignisbehandlungHelper?.detachEvents();\r\n                // this.gngEreignisbehandlungHelper = null;\r\n\r\n                // this.main.hideProgramPointerPosition();\r\n\r\n                // if(this.worldHelper != null){\r\n                //     this.worldHelper.cacheAsBitmap();\r\n                // }\r\n\r\n                this.currentProgramPosition--;\r\n                this.stop();\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({ type: tvo.type, value: tvo.value }));\r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.setPauseDuration:\r\n                let duration = this.stack.pop().value;\r\n                if (this.pauseUntil == null) {\r\n                    this.pauseUntil = performance.now() + duration;\r\n                }\r\n                break;\r\n            case TokenType.pause:\r\n                if (this.pauseUntil != null && performance.now() < this.pauseUntil) {\r\n                    this.currentProgramPosition--;\r\n                } else {\r\n                    this.pauseUntil = null;\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.closeAllWebsockets();\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n            this.gngEreignisbehandlungHelper?.detachEvents();\r\n            this.gngEreignisbehandlungHelper = null;\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    closeAllWebsockets() {\r\n        this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n        this.webSocketsToCloseAfterProgramHalt = [];\r\n    }\r\n\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\nimport { ShapeClass, ShapeHelper } from \"./Shape.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let shapeType = <ShapeClass>module.typeStore.getType(\"Shape\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe wird als integer-Zahl erwartet. Am besten schreibt man sie als Hexadezimalzahl, also z.B. setBackgroundColor(0xff8080).\"', false));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-x, -y));\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"follow\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"margin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"xMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMin\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yMax\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let frameWidth: number = parameters[2].value;\r\n                let xMin: number = parameters[3].value;\r\n                let xMax: number = parameters[4].value;\r\n                let yMin: number = parameters[5].value;\r\n                let yMax: number = parameters[6].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                let moveX: number = 0;\r\n                let moveY: number = 0;\r\n\r\n                let shapeX: number = shapeHelper.getCenterX();\r\n                let shapeY: number = shapeHelper.getCenterY();\r\n\r\n                let outsideRight = shapeX - (wh.currentLeft + wh.currentWidth - frameWidth);\r\n                if (outsideRight > 0 && wh.currentLeft + wh.currentWidth < xMax) {\r\n                    moveX = -outsideRight;\r\n                }\r\n\r\n                let outsideLeft = (wh.currentLeft + frameWidth) - shapeX;\r\n                if (outsideLeft > 0 && wh.currentLeft > xMin) {\r\n                    moveX = outsideLeft;\r\n                }\r\n\r\n                let outsideBottom = shapeY - (wh.currentTop + wh.currentHeight - frameWidth);\r\n                if (outsideBottom > 0 && wh.currentTop + wh.currentHeight <= yMax) {\r\n                    moveY = -outsideBottom;\r\n                }\r\n\r\n                let outsideTop = (wh.currentTop + frameWidth) - shapeY;\r\n                if (outsideTop > 0 && wh.currentTop >= yMin) {\r\n                    moveY = outsideTop;\r\n                }\r\n\r\n                if (moveX != 0 || moveY != 0) {\r\n                    let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                    wh.stage.projectionTransform.identity();\r\n                    wh.stage.projectionTransform.translate(moveX, moveY);\r\n                    wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                    wh.computeCurrentWorldBounds();\r\n                    wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.move(-moveX, -moveY));\r\n                }\r\n\r\n\r\n            }, false, false, 'Verschiebt die Welt so, dass das übergebene graphische Objekt (shape) sichtbar wird. Verschoben wird nur, wenn das Objekt weniger als frameWidth vom Rand entfernt ist und die Welt nicht über die gegebenen Koordinaten xMin, xMax, yMin und yMax hinausragt.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n\r\n                let angleRad = -angle / 180 * Math.PI;\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.rotate(angleRad);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach(\r\n                    (shape) => {\r\n                        shape.rotate(-angle, x, y);\r\n                    });\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.projectionTransform);\r\n                wh.stage.projectionTransform.identity();\r\n                wh.stage.projectionTransform.translate(-x, -y);\r\n                wh.stage.projectionTransform.scale(factor, factor);\r\n                wh.stage.projectionTransform.translate(x, y);\r\n                wh.stage.projectionTransform.prepend(matrix);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => shape.scale(1 / factor, x, y));\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                wh.stage.projectionTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.projectionTransform.translate(-left, -top);\r\n                wh.stage.projectionTransform.scale(wh.initialWidth / width, wh.initialHeight / height);\r\n                wh.computeCurrentWorldBounds();\r\n                wh.shapesNotAffectedByWorldTransforms.forEach((shape) => {\r\n                    shape.scale(width / wh.initialWidth, left, top);\r\n                    shape.move(left, top);\r\n                });\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentWidth);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentHeight);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getTop\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentTop);\r\n\r\n            }, false, false, 'Gibt die y-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLeft\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.currentLeft);\r\n\r\n            }, false, false, 'Gibt die x-Koordinate der linken oberen Ecke zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n            debugger;\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.projectionTransform.scale(wh.width / breite, wh.width / höhe);\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\n/**\r\n * @see https://javascript.plainenglish.io/inside-pixijs-projection-system-897872a3dc17\r\n */\r\nclass WorldContainer extends PIXI.Container {\r\n\r\n    projectionTransform: PIXI.Matrix;\r\n\r\n    constructor(public sourceFrame: PIXI.Rectangle, public destinationFrame: PIXI.Rectangle) {\r\n        super();\r\n        this.projectionTransform = new PIXI.Matrix();\r\n    }\r\n\r\n    render(renderer: PIXI.Renderer) {\r\n\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = this.projectionTransform;\r\n        renderer.renderTexture.bind(\r\n            renderer.renderTexture.current,\r\n            this.sourceFrame,\r\n            this.destinationFrame,\r\n        );\r\n        super.render(renderer);\r\n        renderer.batch.flush();\r\n\r\n        renderer.batch.flush();\r\n        renderer.projection.projectionMatrix.identity();\r\n        renderer.projection.transform = null;\r\n        renderer.renderTexture.bind(null);\r\n    }\r\n}\r\n\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: WorldContainer;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n\r\n    shapes: ShapeHelper[] = [];     // all shapes incl. groups that aren't part of a group\r\n\r\n    currentLeft: number;\r\n    currentTop: number;\r\n    currentWidth: number;\r\n    currentHeight: number;\r\n\r\n    shapesNotAffectedByWorldTransforms: ShapeHelper[] = [];\r\n\r\n    globalScale: number;\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.globalScale = 1;\r\n\r\n        while (height > 1000 || width > 2000) {\r\n            this.globalScale *= 2;\r\n            height /= 2;\r\n            width /= 2;\r\n        }\r\n\r\n        this.initialHeight = this.height;\r\n        this.initialWidth = this.width;\r\n\r\n        this.currentLeft = 0;\r\n        this.currentTop = 0;\r\n        this.currentWidth = this.width;\r\n        this.currentHeight = this.height;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            if($jo_tabs.length == 0){\r\n                $jo_tabs = $graphicsDiv.parents(\".joe_rightDivInner\");\r\n            }\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        if (this.module.main.pixiApp) {\r\n            this.app = this.module.main.pixiApp;\r\n            this.app.renderer.resize(width, height);\r\n            this.app.renderer.backgroundColor = 0x0;\r\n        } else {\r\n            this.app = new PIXI.Application({\r\n                antialias: true,\r\n                width: width, height: height,\r\n                //resizeTo: $containerInner[0]\r\n            });\r\n            this.module.main.pixiApp = this.app;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        let sourceFrame = new PIXI.Rectangle(0, 0, this.width, this.height);\r\n        let destinationFrame = new PIXI.Rectangle(0, 0, width, height);\r\n        this.stage = new WorldContainer(sourceFrame, destinationFrame);\r\n        this.stage.projectionTransform = new PIXI.Matrix();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n\r\n            let eventType = listenerType;\r\n            if (window.PointerEvent) {\r\n                eventType = eventType.replace('mouse', 'pointer');\r\n            }\r\n\r\n            this.$containerInner.on(eventType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n                this.stage.projectionTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n                if (listenerType == \"mousedown\") {\r\n                    let gngEreignisbehandlung = this.interpreter.gngEreignisbehandlungHelper;\r\n                    if (gngEreignisbehandlung != null) {\r\n                        gngEreignisbehandlung.handleMouseClickedEvent(x, y);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$containerInner.on(mousePointer + \"move\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x * this.globalScale, y * this.globalScale);\r\n            this.stage.projectionTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"enter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(mousePointer + \"leave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    computeCurrentWorldBounds() {\r\n\r\n        let p1: PIXI.Point = new PIXI.Point(0, 0);\r\n        this.stage.projectionTransform.applyInverse(p1, p1);\r\n\r\n        let p2: PIXI.Point = new PIXI.Point(this.initialWidth, this.initialHeight);\r\n        this.stage.projectionTransform.applyInverse(p2, p2);\r\n\r\n        this.currentLeft = p1.x;\r\n        this.currentTop = p1.y;\r\n        this.currentWidth = Math.abs(p2.x - p1.x);\r\n        this.currentHeight = Math.abs(p2.y - p1.y);\r\n    }\r\n\r\n\r\n    hasActors(): boolean {\r\n        return this.actActors.length > 0 || this.keyPressedActors.length > 0 || this.keyUpActors.length > 0\r\n            || this.keyDownActors.length > 0 || this.mouseListeners.length > 0 || this.mouseListenerShapes.length > 0;\r\n    }\r\n\r\n    setAllHitpolygonsDirty() {\r\n        for (let shape of this.shapes) {\r\n            shape.setHitPolygonDirty(true);\r\n        }\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n        \r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n                    this.summedDelta += delta;\r\n                    for (let spriteHelper of this.spriteAnimations) {\r\n                        spriteHelper.tick(delta);\r\n                    }\r\n                    \r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n                    \r\n                    if(this.interpreter.pauseUntil != null){\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n            \r\n            this.summedDelta = 0;\r\n            \r\n            if (this.interpreter.state == InterpreterState.running) {\r\n                if (this.actActors.length > 0) {\r\n                    this.interpreter.timerFunction(33.33, true, 0.5);\r\n                    //@ts-ignore\r\n                    if (this.interpreter.state == InterpreterState.running) {\r\n                        this.interpreter.timerStopped = false;\r\n                        this.interpreter.timerFunction(33.33, false, 0.08);\r\n                    }\r\n                } else {\r\n                    this.interpreter.timerFunction(33.33, false, 0.7);\r\n                }\r\n            }\r\n        }\r\n            \r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string | number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.app.renderer.backgroundColor = c.color;\r\n        } else {\r\n            this.app.renderer.backgroundColor = color;\r\n        }\r\n\r\n    }\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n    cacheAsBitmap() {\r\n\r\n        let scaleMin = 1.0;\r\n        if (this.currentWidth * this.currentHeight > 2500000) scaleMin = Math.sqrt(2500000 / (this.currentWidth * this.currentHeight));\r\n        if (this.currentWidth * this.currentHeight < 1024 * 1024) scaleMin = Math.sqrt(1024 * 1024 / (this.currentWidth * this.currentHeight));\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: PIXI.SCALE_MODES.LINEAR,\r\n                width: Math.round(this.currentWidth * scaleMin),\r\n                height: Math.round(this.currentHeight * scaleMin)\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let transform = new PIXI.Matrix().scale(scaleMin, scaleMin);\r\n\r\n        setTimeout(() => {\r\n            this.app.renderer.render(this.stage, {\r\n                renderTexture: rt,\r\n                transform: transform\r\n            });            \r\n        }, 150);   // necessary to await Turtle's deferred rendering\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            this.stage.children.forEach(c => c.destroy());\r\n            this.stage.removeChildren();\r\n\r\n            let sprite = new PIXI.Sprite(rt);\r\n            sprite.localTransform.scale(this.globalScale, this.globalScale);\r\n            //@ts-ignore\r\n            sprite.transform.onChange();\r\n            this.stage.projectionTransform = new PIXI.Matrix();\r\n            this.stage.addChild(sprite);\r\n\r\n        }, 300);\r\n    }\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n\r\n        this.app.stage.children.forEach(c => c.destroy());\r\n        this.app.stage.removeChildren();\r\n        jQuery(this.app.view).detach();\r\n\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => { return mls.shapeHelper.runtimeObject == listener });\r\n        if (index >= 0) {\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null \r\n                        // || method?.invoke != null\r\n                        ) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadButtonDown\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let buttonIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\r\n\r\n        this.addMethod(new Method(\"isGamepadConnected\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\r\n\r\n        this.addMethod(new Method(\"getGamepadAxisValue\", new Parameterlist([\r\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gamepadIndex: number = parameters[1].value;\r\n                let axisIndex: number = parameters[2].value;\r\n\r\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\r\n\r\n            }, false, false, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                let worldHelper = interpreter.worldHelper;\r\n                if (worldHelper == null) {\r\n                    let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n                    worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n                }        \r\n                return worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null,\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            () => {\r\n                \r\n            },\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n            if(runtimeObject.intrinsicData[\"isGNG\"]){\r\n                worldHelper.setBackgroundColor(\"#e6e6e6\");\r\n            }\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    if(punkte1.length == 0 || punkte2.length == 0) return false;\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon, polygonBerührtPolygonExakt } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\nimport { Enum, EnumInfo } from \"src/client/compiler/types/Enum.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let directionType = <Enum>(<any>module.typeStore.getType(\"Direction\"));\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.mirrorXY(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWithAnyShape\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWithAnyShape\")) return;\r\n\r\n                return sh.collidesWithAnyShape();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt mit irgendeinem anderen Grafikobjekt kollidiert.\", false));\r\n\r\n        this.addMethod(new Method(\"moveBackFrom\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"keepColliding\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let keepColliding: boolean = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode moveBackFrom darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"moveBackFrom\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode moveBackFrom als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                sh.moveBackFrom(sh1, keepColliding);\r\n\r\n            }, false, false, \"Rückt das Objekt entlang der letzten durch move vorgegebenen Richtung zurück, bis es das übergebene Objekt gerade noch (keepColliding == true) bzw. gerade nicht mehr (keepColliding == false) berührt.\", false));\r\n\r\n        this.addMethod(new Method(\"directionRelativeTo\", new Parameterlist([\r\n            { identifier: \"otherShape\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), directionType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der erste Parameter der Methode directionRelativeTo darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"directionRelativeTo\")) return;\r\n\r\n                if (sh1.isDestroyed) {\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode directionRelativeTo als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.directionRelativeTo(sh1, directionType);\r\n\r\n            }, false, false, \"Gibt die Richtung (top, right, bottom oder left) zurück, in der das graphische Objekt relativ zum übergebenen graphischen Objekt steht.\", false));\r\n\r\n        this.addMethod(new Method(\"moveTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"moveTo\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenter\")) return;\r\n\r\n                sh.defineCenter(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\", false));\r\n\r\n        this.addMethod(new Method(\"defineCenterRelative\", new Parameterlist([\r\n            { identifier: \"xRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"yRel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"defineCenterRelative\")) return;\r\n\r\n                sh.defineCenterRelative(x, y);\r\n\r\n            }, false, false, \"Setzt fest, wo der 'Mittelpunkt' des Objekts liegen soll. Dabei bedeutet (XRel/YRel) = (0/0) die linke obere Ecke der Bounding Box des Objekts, (XRel/YRel) = (1/1) die rechte untere Ecke. Defaultwert ist (XRel/YRel) = (0.5/0.5), also der Diagonalenschnittpunkt der Bounding Box. Dieser Punkt wird als Drehpunkt der Methode rotate, als Zentrum der Methode Scale und als Referenzpunkt der Methode moveTo benutzt.\\n\\nVORSICHT: Diese Methode arbeitet nicht mehr korrekt, wenn das Objekt schon gedreht wurde!\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"setStatic\", new Parameterlist([\r\n            { identifier: \"isStatic\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let isStatic: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setStatic\")) return;\r\n\r\n                sh.setStatic(isStatic);\r\n\r\n            }, false, false, \"setStatic(true) hat zur Folge, dass die Ansicht des Objekts durch Transformationen des World-Objekts nicht verändert wird.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => {}, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => {}, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => {}, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => {}, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType, () => {}, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n            this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsInt\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht. Die Farbe wird als int-Wert angegeben, praktischerweise hexadezimal, also z.B. tint(0x303030).', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"defineDirection\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let direction: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"defineDirection\")) return;\r\n\r\n                sh.directionRad = direction / 180 * Math.PI;\r\n\r\n            }, false, false, 'Setzt die Blickrichtung des graphischen Objekts. Dies ist die Richtung, in die es durch Aufruf der Methode forward bewegt wird. \\nBemerkung: die Methode rotate ändert auch die Blickrichtung!', false));\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"distance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let distance: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(distance);\r\n\r\n            }, false, false, 'Bewegt das Objekt um die angegebene Länge in Richtung seiner Blickrichtung.\\nBemerkung: Die Blickrichtung kann mit defineDirection gesetzt werden.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, true, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"getHitPolygon\", new Parameterlist([\r\n        ]), new ArrayType(vector2Class),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHitPolygon\")) return;\r\n\r\n                return sh.getHitPolygon(vector2Class);\r\n\r\n            }, false, false, \"Gibt ein Array zurück, das die vier Eckpunkte des Hit-Polygons in Form von Vector2-Ortsvektoren enthält. Bei den Klassen Rectangle, Triangle und Polygon sind dies die Eckpunkte.\", false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    scaleFactor: number = 1.0;\r\n\r\n    directionRad: number = 0;\r\n\r\n    lastMoveDx: number = 0;\r\n    lastMoveDy: number = 0;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n        if (this.worldHelper.defaultGroup == null) {\r\n            this.worldHelper.shapes.push(this);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringOnePlaneFurtherToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index < highestIndex) {\r\n            container.setChildIndex(this.displayObject, index + 1);\r\n        }\r\n    }\r\n\r\n    bringOnePlaneFurtherToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let index = container.getChildIndex(this.displayObject);\r\n        if (index > 0) {\r\n            container.setChildIndex(this.displayObject, index - 1);\r\n        }\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = <PIXI.Container>this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    tint(color: string|number) {\r\n        let c: number;\r\n        if(typeof color == 'string'){\r\n            c = ColorHelper.parseColorToOpenGL(color).color;\r\n        } else {\r\n            c = color;\r\n        }\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWithAnyShape(): boolean {\r\n        this.displayObject.updateTransform();\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n\r\n        for(let shapeHelper of this.worldHelper.shapes){\r\n            if(this == shapeHelper) continue;\r\n\r\n            if (shapeHelper[\"shapes\"] || shapeHelper[\"turtle\"]) {\r\n                if (shapeHelper.collidesWith(this)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            if(this[\"turtle\"]){\r\n                if (this.collidesWith(shapeHelper)) {\r\n                    return true;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let bb = this.displayObject.getBounds();\r\n            let bb1 = shapeHelper.displayObject.getBounds();\r\n    \r\n            if (bb.left > bb1.right || bb1.left > bb.right) continue;\r\n    \r\n            if (bb.top > bb1.bottom || bb1.top > bb.bottom) continue;\r\n    \r\n            // boundig boxes collide, so check further:\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n    \r\n            // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n            if(polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true)){\r\n                return true;\r\n            }\r\n    \r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if (this[\"lineElements\"] == null && (shapeHelper[\"lineElements\"] != null)) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if(this.displayObject == null || shapeHelper.displayObject == null) return;\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        // return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n        return polygonBerührtPolygonExakt(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed, true, true);\r\n\r\n    }\r\n\r\n    directionRelativeTo(shapeHelper: ShapeHelper, directionType: Enum) {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        let dx1 = bb1.left - bb.right;  // positive if left\r\n        let dx2 = bb.left - bb1.right;  // positive if right\r\n\r\n        let dy1 = bb1.top - bb.bottom;  // positive if top\r\n        let dy2 = bb.top - bb1.bottom;  // positive if bottom\r\n\r\n        let enuminfo = directionType.enumInfoList;\r\n        let pairs: { distance: number, ei: EnumInfo }[] = [];\r\n\r\n        if (this.lastMoveDx > 0) {\r\n            pairs.push({ distance: dx1, ei: enuminfo[3] });\r\n        } else if (this.lastMoveDx < 0) {\r\n            pairs.push({ distance: dx2, ei: enuminfo[1] });\r\n        }\r\n\r\n        if (this.lastMoveDy > 0) {\r\n            pairs.push({ distance: dy1, ei: enuminfo[0] });\r\n        } else if (this.lastMoveDy < 0) {\r\n            pairs.push({ distance: dy2, ei: enuminfo[2] });\r\n        }\r\n\r\n        if (pairs.length == 0) {\r\n            pairs = [\r\n                { distance: dx1, ei: enuminfo[3] },\r\n                { distance: dx2, ei: enuminfo[1] },\r\n                { distance: dy1, ei: enuminfo[0] },\r\n                { distance: dy2, ei: enuminfo[2] }\r\n            ]\r\n        }\r\n\r\n\r\n        let max = pairs[0].distance;\r\n        let ei = pairs[0].ei;\r\n        for (let i = 1; i < pairs.length; i++) {\r\n            if (pairs[i].distance > max) {\r\n                max = pairs[i].distance;\r\n                ei = pairs[i].ei;\r\n            }\r\n        }\r\n\r\n        return ei.object;\r\n    }\r\n\r\n\r\n    moveBackFrom(sh1: ShapeHelper, keepColliding: boolean) {\r\n\r\n        // subsequent calls to move destroy values in this.lastMoveDx and this.lastMoveDy, so:\r\n        let lmdx = this.lastMoveDx;\r\n        let lmdy = this.lastMoveDy;\r\n\r\n        let length = Math.sqrt(lmdx * lmdx + lmdy * lmdy);\r\n        if (length < 0.001) return;\r\n\r\n        if (!this.collidesWith(sh1)) return;\r\n\r\n        let parameterMax = 0;       // collision with this parameter\r\n        this.move(-lmdx, -lmdy);\r\n\r\n        let currentParameter = -1;  // move to parameterMin\r\n\r\n        while (this.collidesWith(sh1)) {\r\n            parameterMax = currentParameter;    // collision at this parameter\r\n            let newParameter = currentParameter * 2;\r\n            this.move(lmdx * (newParameter - currentParameter), lmdy * (newParameter - currentParameter));\r\n            currentParameter = newParameter;\r\n            if ((currentParameter + 1) * length < -100) {\r\n                this.move(lmdx * (-1 - currentParameter), lmdy * (-1 - currentParameter));\r\n                return;\r\n            }\r\n        }\r\n        let parameterMin = currentParameter;\r\n\r\n        let isColliding: boolean = false;\r\n        // Situation now: no collision at parameterMin == currentParameter, collision at parameterMax\r\n        while ((parameterMax - parameterMin) * length > 1) {\r\n            let np = (parameterMax + parameterMin) / 2;\r\n            this.move(lmdx * (np - currentParameter), lmdy * (np - currentParameter));\r\n            if (isColliding = this.collidesWith(sh1)) {\r\n                parameterMax = np;\r\n            } else {\r\n                parameterMin = np;\r\n            }\r\n            currentParameter = np;\r\n        }\r\n\r\n        if (keepColliding && !isColliding) {\r\n            this.move(lmdx * (parameterMax - currentParameter), lmdy * (parameterMax - currentParameter));\r\n        } else if (isColliding && !keepColliding) {\r\n            this.move(lmdx * (parameterMin - currentParameter), lmdy * (parameterMin - currentParameter));\r\n        }\r\n\r\n        this.lastMoveDx = lmdx;\r\n        this.lastMoveDy = lmdy;\r\n    }\r\n\r\n\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let wh = this.worldHelper;\r\n        return bounds.right < wh.currentLeft || bounds.left > wh.currentLeft + wh.currentWidth\r\n            || bounds.bottom < wh.currentTop || bounds.top > wh.currentTop + wh.currentHeight;\r\n    }\r\n\r\n    defineCenter(x: number, y: number) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n    }\r\n\r\n    defineCenterRelative(x: number, y: number) {\r\n        let bounds = this.displayObject.getBounds(false);\r\n        this.defineCenter(bounds.left + bounds.width * x, bounds.top + bounds.height * y);\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n\r\n        if (dx != 0 || dy != 0) {\r\n            this.lastMoveDx = dx;\r\n            this.lastMoveDy = dy;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    forward(distance: number) {\r\n        let dx = distance * Math.cos(this.directionRad);\r\n        let dy = -distance * Math.sin(this.directionRad);\r\n        this.move(dx, dy);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.updateTransform();       // necessary if world coordinate system is scaled\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n        this.directionRad += angleInDeg / 180 * Math.PI;\r\n    }\r\n\r\n    mirrorXY(scaleX: number, scaleY: number) {\r\n        let cX: number, cY: number;\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.localTransform.apply(p, p);\r\n        cX = p.x;\r\n        cY = p.y;\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(scaleX, scaleY);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.scaleFactor *= factor;\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.x;\r\n    }\r\n\r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(this);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        let index1 = this.worldHelper.shapesNotAffectedByWorldTransforms.indexOf(this);\r\n        if (index1 >= 0) {\r\n            this.worldHelper.shapesNotAffectedByWorldTransforms.splice(index1, 1);\r\n        }\r\n\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n    getHitPolygon(vector2Class: Klass): Value[] {\r\n\r\n        if (this.hitPolygonDirty) {\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let ret: Value[] = [];\r\n        for (let p of this.hitPolygonTransformed) {\r\n            let ro = new RuntimeObject(vector2Class);\r\n            ro.attributes = [{ type: doublePrimitiveType, value: p.x }, { type: doublePrimitiveType, value: p.y }];\r\n            ret.push({ type: vector2Class, value: ro });\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setStatic(isStatic: boolean) {\r\n        let list = this.worldHelper.shapesNotAffectedByWorldTransforms;\r\n        if (isStatic) {\r\n            list.push(this);\r\n        } else {\r\n            let index = list.indexOf(this);\r\n            if (index >= 0) {\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\nimport { isPrefixUnaryExpression } from \"typescript\";\r\nimport { BufferResource } from \"@pixi/core\";\r\nimport { FORMATS } from \"@pixi/constants\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayWidth\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"displayHeight\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelperNew(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clone\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelperNew = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clone\")) return;\r\n\r\n                return sh.getCopyOrClone(<Klass>o.class, true);\r\n\r\n            }, false, false, 'Erstellt ein weiteres Bitmap-Objekt, das auf dieselben Pixeldaten zurückgreift.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelperNew extends ShapeHelper {\r\n\r\n    texture: PIXI.Texture;\r\n    data: Uint32Array;\r\n\r\n    isBigEndian: boolean = true;\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        return this.getCopyOrClone(klass, false)\r\n    }\r\n\r\n    getCopyOrClone(klass: Klass, clone: boolean = false): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelperNew = new BitmapHelperNew(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro, this, clone);\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let uInt32 = new Uint32Array([0x11223344]);\r\n        let uInt8 = new Uint8Array(uInt32.buffer);\r\n     \r\n        if(uInt8[0] === 0x44) {\r\n            this.isBigEndian = false;\r\n        } else if (uInt8[0] === 0x11) {\r\n            this.isBigEndian = true;\r\n        }\r\n\r\n        // TODO: Little Endian...\r\n\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.initGraphics(bitmapToCopy, clone);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        sprite.localTransform.scale(width/anzahlY, height/anzahlY);\r\n        sprite.localTransform.translate(left, top);\r\n        //@ts-ignore\r\n        sprite.transform.onChange();\r\n\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        sprite.localTransform.applyInverse(p, p);\r\n        this.centerXInitial = p.x;\r\n        this.centerYInitial = p.y;\r\n\r\n\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    protected initGraphics(bitmapToCopy?: BitmapHelperNew, clone: boolean = false) {\r\n\r\n        if(bitmapToCopy == null){\r\n            this.data = new Uint32Array(this.anzahlX * this.anzahlY);\r\n        } else {\r\n            if(clone){\r\n                this.data = bitmapToCopy.data;\r\n            } else {\r\n                this.data = new Uint32Array(bitmapToCopy.data);\r\n            }\r\n        }\r\n        \r\n        let u8Array = new Uint8Array(this.data.buffer);\r\n\r\n        if(!clone){\r\n            let bufferResource = new PIXI.BufferResource(u8Array, {width: this.anzahlX, height: this.anzahlY});\r\n            let bt = new PIXI.BaseTexture(bufferResource, {\r\n                scaleMode: PIXI.SCALE_MODES.NEAREST \r\n            });\r\n            this.texture = new PIXI.Texture(bt);\r\n        } else {\r\n            this.texture = bitmapToCopy.texture;\r\n        }\r\n\r\n        this.displayObject = new PIXI.Sprite(this.texture);\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n    }\r\n\r\n    uploadData(){\r\n        this.texture.baseTexture.update();\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        // let a = this.data[i + 3];\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let c = this.data[i];\r\n\r\n        let red = c & 0xff;\r\n        let green = (c & 0xff00) >> 8;\r\n        let blue = (c & 0xff0000) >> 16;\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            hex: ColorHelper.intColorToHexRGB(c >> 8)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let c1 = this.data[i];\r\n        let red = c1 & 0xff;\r\n        let green = (c1 & 0xff00) >> 8;\r\n        let blue = (c1 & 0xff0000) >> 16;\r\n\r\n\r\n        return c == red*0x10000 + green * 0x100 + blue;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n\r\n        let i = (x + y * (this.anzahlX));\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        this.data[i] = Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16);\r\n        \r\n        this.uploadData();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        this.data.fill(Math.round(alpha * 255) * 0x1000000 + ((c & 0xff) << 16) + (c & 0xff00) + ((c & 0xff0000) >> 16));\r\n        // this.data.fill(0xffff0000);\r\n        \r\n        this.uploadData();\r\n    }\r\n    \r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let c = alpha * 0xff000000 + b*0x10000 + g * 0x100 + r;\r\n        let i = (x + y * (this.anzahlX));\r\n        this.data[i] = c;\r\n        this.uploadData();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let c = this.data[x + y * this.anzahlX] & 0xffffff;\r\n        return (c & 0xff) << 16 + (c & 0xff00) + (c & 0xff0000) >> 16;\r\n    }\r\n\r\n    public getAlpha(x: number, y: number): number {\r\n        return (this.data[x + y * this.anzahlX] & 0xff000000) >> 24 / 255;\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = Number.NaN;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n\r\n            this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            if(alpha != null) this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (shapeHelper instanceof CircleHelper) {\r\n\r\n            let p1 = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.updateTransform();\r\n            this.displayObject.transform.worldTransform.apply(p1, p1);\r\n\r\n            let radius1 = this.r * this.displayObject.scale.x\r\n            \r\n            let p2 = new PIXI.Point(shapeHelper.centerXInitial, shapeHelper.centerYInitial);\r\n            shapeHelper.displayObject.updateTransform();\r\n            shapeHelper.displayObject.transform.worldTransform.apply(p2, p2);\r\n            \r\n            let radius2 = shapeHelper.r * shapeHelper.displayObject.scale.x\r\n\r\n            let d1 = p1.x - p2.x;\r\n            let d2 = p1.y - p2.y;\r\n\r\n            return d1*d1 + d2*d2 <= (radius1 + radius2) * (radius1 + radius2);\r\n\r\n\r\n        } else {\r\n            return super.collidesWith(shapeHelper);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class SectorClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Sector\", module, \"Kreisbogen/Kreissektor\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Sector\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let r: number = parameters[3].value;\n                let startAngle: number = parameters[4].value;\n                let endAngle: number = parameters[5].value;\n\n                let rh = new SectorHelper(mx, my, r, startAngle/180*Math.PI, endAngle/180*Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen bzw. (falls die Füllfarbe nicht null ist) Kreissektor. (mx, my) ist der Mittelpunt, r sein Radius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n            this.addMethod(new Method(\"drawRadii\", new Parameterlist([\n                { identifier: \"radiiZeichnen\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let r: boolean = parameters[1].value;\n                    let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n    \n                    if (sh.testdestroyed(\"drawRadii\")) return;\n    \n                    sh.drawRadii = r;\n                    sh.render();\n    \n                }, false, false, 'Legt fest, ob beim Zeichnen des Umrisses auch die beiden Radii ( = Strecken vom Mittelpunkt zur Kreislinie) mitgezeichnet werden sollen.', false));\n    \n\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n\n                sh.setRadius(r);\n\n            }, false, false, 'Setzt den Radius des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.startAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n            this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if(angle < 0){\n                    angle += Math.ceil(-angle/360) * 360;\n                }\n\n                if(angle > 360){\n                    angle -= Math.trunc(angle/360) * 360;\n                }\n\n                sh.endAngleRad = angle/180*Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.r * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad/Math.PI*180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: SectorHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Sector-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class SectorHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public r: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: SectorHelper = new SectorHelper(this.mx, this.my, this.r, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.r * Math.cos(alpha),\n                y: this.my + this.r * Math.sin(alpha)\n            });\n        }\n        this.hitPolygonInitial.push({x: this.mx, y: this.my});\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n        if(Math.abs(this.startAngleRad - this.endAngleRad) < 0.00000001){\n            g.drawCircle(this.mx, this.my, this.r);\n        } else {\n            if(this.drawRadii){\n                g.moveTo(this.mx, this.my);\n            }\n            g.arc(this.mx, this.my, this.r, -this.startAngleRad, -this.endAngleRad, true);\n            if(this.drawRadii){\n                g.lineTo(this.mx, this.my);\n            }\n        }\n        if(this.drawRadii){\n            g.closePath();\n        }\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    setRadius(r: number) {\n        this.r = r;\n        this.render();\n    }\n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        if (dx * dx + dy * dy <= this.r * this.r) {\n            let towPI = 2*Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if(normalizedStartAngle <= normalizedEndAngle){\n                return ret;\n            } else {\n                return !ret;\n            }  \n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { FilledShapeHelper } from \"./FilledShape.js\";\nimport { WorldHelper } from \"./World.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { ShapeHelper } from \"./Shape.js\";\n\nexport class ArcClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Arc\", module, \"Kreisbogenumriss (wahlweise gefüllt)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\n\n        this.addMethod(new Method(\"Arc\", new Parameterlist([\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"startAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"endAngle\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let mx: number = parameters[1].value;\n                let my: number = parameters[2].value;\n                let ri: number = parameters[3].value;\n                let ra: number = parameters[4].value;\n                let startAngle: number = parameters[5].value;\n                let endAngle: number = parameters[6].value;\n\n                let rh = new ArcHelper(mx, my, ri, ra, startAngle / 180 * Math.PI, endAngle / 180 * Math.PI, true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert einen neuen Kreisbogen. (mx, my) ist der Mittelpunt, ri sein Innenradius, ra sein Außenradius. Der Kreisbogen wird von startAngle bis endAngle (beides in Grad) gegen den Uhrzeigersinn gezogen.', true));\n\n        this.addMethod(new Method(\"setInnerRadius\", new Parameterlist([\n            { identifier: \"innerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ri = r;\n                sh.render();\n\n            }, false, false, 'Setzt den inneren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setOuterRadius\", new Parameterlist([\n            { identifier: \"outerRadius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let r: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setRadius\")) return;\n                sh.ra = r;\n                sh.render();\n\n            }, false, false, 'Setzt den äußeren Radius des Kreisbogens\"', false));\n\n        this.addMethod(new Method(\"setStartAngle\", new Parameterlist([\n            { identifier: \"startWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setStartAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.startAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Startwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"setEndAngle\", new Parameterlist([\n            { identifier: \"endWinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let angle: number = parameters[1].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"setEndAngle\")) return;\n\n                if (angle < 0) {\n                    angle += Math.ceil(-angle / 360) * 360;\n                }\n\n                if (angle > 360) {\n                    angle -= Math.trunc(angle / 360) * 360;\n                }\n\n                sh.endAngleRad = angle / 180 * Math.PI;\n                sh.render();\n\n            }, false, false, 'Setzt den Endwinkel des Kreisbogens/Kreissektors.\"', false));\n\n        this.addMethod(new Method(\"getInnerRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getRadius\")) return;\n\n                return sh.ri * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den inneren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getOuterRadius\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getOuterRadius\")) return;\n\n                return sh.ra * sh.displayObject.scale.x;\n\n            }, false, false, \"Gibt den äußeren Radius zurück.\", false));\n\n        this.addMethod(new Method(\"getStartAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getStartAngle\")) return;\n\n                return sh.startAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Startwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"getEndAngle\", new Parameterlist([\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"getEndAngle\")) return;\n\n                return sh.endAngleRad / Math.PI * 180;\n\n            }, false, false, \"Gibt den Endwinkel in Grad zurück.\", false));\n\n        this.addMethod(new Method(\"copy\", new Parameterlist([\n        ]), this,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: ArcHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"copy\")) return;\n\n                return sh.getCopy(<Klass>o.class);\n\n            }, false, false, 'Erstellt eine Kopie des Arc-Objekts und git sie zurück.', false));\n\n\n    }\n\n}\n\nexport class ArcHelper extends FilledShapeHelper {\n\n    constructor(public mx: number, public my: number, public ri: number,\n        public ra: number,\n        public startAngleRad: number, public endAngleRad: number,\n        public drawRadii: boolean,\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\n        super(interpreter, runtimeObject);\n        this.centerXInitial = mx;\n        this.centerYInitial = my;\n\n        this.render();\n        this.addToDefaultGroup();\n\n    }\n\n    getCopy(klass: Klass): RuntimeObject {\n\n        let ro: RuntimeObject = new RuntimeObject(klass);\n        let rh: ArcHelper = new ArcHelper(this.mx, this.my, this.ri, this.ra, this.startAngleRad, this.endAngleRad, this.drawRadii, this.worldHelper.interpreter, ro);\n        ro.intrinsicData[\"Actor\"] = rh;\n\n        rh.copyFrom(this);\n        rh.render();\n\n        return ro;\n    }\n\n\n    render(): void {\n\n        this.hitPolygonInitial = [];\n\n        let deltaAlpha = this.endAngleRad - this.startAngleRad;\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.startAngleRad + deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ra * Math.cos(alpha),\n                y: this.my + this.ra * Math.sin(alpha)\n            });\n        }\n\n        for (let i = 0; i < 16; i++) {\n            let alpha = this.endAngleRad - deltaAlpha * i;\n            this.hitPolygonInitial.push({\n                x: this.mx + this.ri * Math.cos(alpha),\n                y: this.my + this.ri * Math.sin(alpha)\n            });\n        }\n\n        this.hitPolygonDirty = true;\n\n        let g: PIXI.Graphics = <any>this.displayObject;\n\n        if (this.displayObject == null) {\n            g = new PIXI.Graphics();\n            this.displayObject = g;\n            this.worldHelper.stage.addChild(g);\n\n        } else {\n            g.clear();\n        }\n\n        if (this.fillColor != null) {\n            g.beginFill(this.fillColor, this.fillAlpha);\n        }\n        if (this.borderColor != null) {\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\n        }\n\n\n        if (this.startAngleRad === void 0) { this.startAngleRad = 0; }\n        if (this.endAngleRad === void 0) { this.endAngleRad = Math.PI * 2; }\n        if (Math.abs(this.endAngleRad - this.startAngleRad) >= Math.PI * 2) {\n            g.drawCircle(this.mx, this.my, this.ra)\n                .beginHole()\n                .drawCircle(this.mx, this.my, this.ri)\n                .endHole();\n        } else {\n            g.moveTo(this.mx + this.ra * Math.cos(this.startAngleRad), this.my - this.ra * Math.sin(this.startAngleRad));\n            g.lineTo(this.mx + this.ri * Math.cos(this.startAngleRad), this.my - this.ri * Math.sin(this.startAngleRad));\n            g.arc(this.mx, this.my, this.ri, -this.startAngleRad, -this.endAngleRad, true)\n                .arc(this.mx, this.my, this.ra, -this.endAngleRad, -this.startAngleRad, false)\n        }\n\n        g.closePath();\n\n\n        if (this.fillColor != null) {\n            g.endFill();\n        }\n\n    };\n\n    \n\n    isOutsideView() {\n\n        return super.isOutsideView();\n\n    }\n\n    containsPoint(x: number, y: number) {\n\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\n\n        let p: PIXI.Point = new PIXI.Point(x, y);\n        let m = this.displayObject.transform.worldTransform;\n\n        m.applyInverse(p, p);\n\n        let dx = p.x - this.mx;\n        let dy = p.y - this.my;\n        let angle = Math.atan2(-dy, dx);\n\n        let r2 = dx * dx + dy * dy;\n\n        if ( r2 <= this.ra * this.ra && r2 >= this.ri * this.ri) {\n            let towPI = 2 * Math.PI;\n            let normalizedStartAngle = this.startAngleRad < 0 ? towPI + this.startAngleRad : this.startAngleRad;\n            let normalizedEndAngle = this.endAngleRad < 0 ? towPI + this.endAngleRad : this.endAngleRad;\n            let normalizedAngle = angle < 0 ? towPI + angle : angle;\n            let ret = (normalizedAngle >= normalizedStartAngle && normalizedStartAngle <= normalizedEndAngle);\n            if (normalizedStartAngle <= normalizedEndAngle) {\n                return ret;\n            } else {\n                return !ret;\n            }\n        } else {\n            return false;\n        }\n\n    }\n\n\n\n\n}\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            let a: Attribute = new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \") oder \" + ColorHelper.intColorToRGB(intColor));\r\n\r\n            //@ts-ignore\r\n            a.color = ColorHelper.intColorToHexRGB(intColor);\r\n\r\n            this.addAttribute(a);\r\n        }\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if (max < min) {\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"toInt\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let cid = <ColorClassIntrinsicData>(o.intrinsicData);\r\n\r\n                return 0x10000 * cid.red + 0x100 * cid.green + cid.blue;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen int-Wert um, genauer: gibt 0x10000 * red + 0x100 * green + blue zurück.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                r = Math.min(r, 255); r = Math.max(0, r);\r\n                g = Math.min(g, 255); g = Math.max(0, g);\r\n                b = Math.min(b, 255); b = Math.max(0, b);\r\n\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSLA\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n                a = Math.min(a, 1); a = Math.max(0, a);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                let color: string = (rgb.r * 0x1000000 + rgb.g * 0x10000 + rgb.b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromHSL\", new Parameterlist([\r\n            { identifier: \"hue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"saturation\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"luminance\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let h: number = parameters[1].value;\r\n                let s: number = parameters[2].value;\r\n                let l: number = parameters[3].value;\r\n\r\n                h = Math.min(h, 360); h = Math.max(0, h);\r\n                s = Math.min(s, 100); s = Math.max(0, s);\r\n                l = Math.min(l, 100); l = Math.max(0, l);\r\n\r\n                let rgb = this.hslToRgb(h, s, l);\r\n\r\n                return (rgb.r * 0x10000 + rgb.g * 0x100 + rgb.b);\r\n\r\n            }, false, true, 'Berechnet Hue (0 - 360), Saturation (0 - 100) und Luminance (0 - 100)die Farbe.', false));\r\n\r\n\r\n    }\r\n\r\n    hslToRgb(h: number, s: number, l: number): { r: number, g: number, b: number } {\r\n\r\n        s /= 100;\r\n        l /= 100;\r\n\r\n        let c = (1 - Math.abs(2 * l - 1)) * s,\r\n            x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n            m = l - c / 2,\r\n            r = 0,\r\n            g = 0,\r\n            b = 0;\r\n\r\n        if (0 <= h && h < 60) {\r\n            r = c; g = x; b = 0;\r\n        } else if (60 <= h && h < 120) {\r\n            r = x; g = c; b = 0;\r\n        } else if (120 <= h && h < 180) {\r\n            r = 0; g = c; b = x;\r\n        } else if (180 <= h && h < 240) {\r\n            r = 0; g = x; b = c;\r\n        } else if (240 <= h && h < 300) {\r\n            r = x; g = 0; b = c;\r\n        } else if (300 <= h && h < 360) {\r\n            r = c; g = 0; b = x;\r\n        }\r\n        r = Math.round((r + m) * 255);\r\n        g = Math.round((g + m) * 255);\r\n        b = Math.round((b + m) * 255);\r\n\r\n\r\n        return {r: r, g: g, b: b}\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"add\")) return;\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"get\")) return;\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"remove\")) return;\r\n\r\n                sh.remove(shape);\r\n                sh.worldHelper.shapes.push(shape.intrinsicData[\"Actor\"]);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"destroyAllChildren\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"renderAsStaticBitmap\", new Parameterlist([\r\n            { identifier: \"renderAsStaticBitmap\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n                let doCache: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"renderAsStaticBitmap\")) return;\r\n\r\n                sh.cacheAsBitmap(doCache);\r\n\r\n                return;\r\n\r\n            }, false, false, 'Zeichnet alle Objekte dieser Group in ein Bild und verwendet fortan nur noch dieses Bild, ohne die Kindelemente der Group erneut zu zeichnen. Mit dieser Methode können komplexe Bilder (z.B. ein Sternenhimmel) aufgebaut und dann statisch gemacht werden. Nach dem Aufbau brauchen sie daher kaum mehr Rechenzeit.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n\r\n    cacheAsBitmap(doCache: boolean) {\r\n        let container = <PIXI.Container>this.displayObject;\r\n\r\n        // If you set doCache to false and shortly afterwards to true: \r\n        // make shure there's at least one rendercycle in between.\r\n        if (doCache) {\r\n            setTimeout(() => {\r\n                container.cacheAsBitmap = true;\r\n            }, 300);\r\n        } else {\r\n            container.cacheAsBitmap = doCache;\r\n        }\r\n    }\r\n\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        if(shape == null) return;\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        } else {\r\n            let index = this.worldHelper.shapes.indexOf(shapeHelper);\r\n            if (index >= 0) this.worldHelper.shapes.splice(index, 1);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        this.displayObject.parent.updateTransform();\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        //@ts-ignore\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    hasOverlappingBoundingBoxWith(shapeHelper: ShapeHelper): boolean {\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n        return true;\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        if (!this.hasOverlappingBoundingBoxWith(shapeHelper)) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        this.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n\r\n        if (x < bb.left || x > bb.left + bb.width || y < bb.top || y > bb.top + bb.height) {\r\n            return false;\r\n        }\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    tint(color: string) {\r\n        for (let child of this.shapes) {\r\n            (<ShapeHelper>child.intrinsicData[\"Actor\"]).tint(color);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n\r\n    }\r\n\r\n}","/* \n * Convex hull algorithm - Library (TypeScript)\n * \n * Copyright (c) 2020 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\nexport namespace convexhull {\n    \n    export interface Point {\n        x: number;\n        y: number;\n    }\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\texport function makeHull<P extends Point>(points: Array<P>): Array<P> {\n\t\tlet newPoints: Array<P> = points.slice();\n\t\tnewPoints.sort(convexhull.POINT_COMPARATOR);\n\t\treturn convexhull.makeHullPresorted(newPoints);\n\t}\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\texport function makeHullPresorted<P extends Point>(points: Array<P>): Array<P> {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tlet upperHull: Array<P> = [];\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tconst q: P = upperHull[upperHull.length - 1];\n\t\t\t\tconst r: P = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tlet lowerHull: Array<P> = [];\n\t\tfor (let i = points.length - 1; i >= 0; i--) {\n\t\t\tconst p: P = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tconst q: P = lowerHull[lowerHull.length - 1];\n\t\t\t\tconst r: P = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t}\n\t\n\t\n\texport function POINT_COMPARATOR(a: Point, b: Point): number {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t}\n\t\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n        let shapeClass = <Klass>module.typeStore.getType(\"Shape\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if(shape == null){\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let shapeHelper: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n                shapeHelper.displayObject.getBounds();  // seems to work magic in updating transforms of children...\r\n                \r\n                let points: convexhull.Point[] = [];\r\n                points = this.extractPoints(shapeHelper, points);\r\n                points = convexhull.makeHull(points);\r\n\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let p of points){\r\n                    pointsNumber.push(p.x);\r\n                    pointsNumber.push(p.y);\r\n                }\r\n\r\n                if(pointsNumber.length > 0){\r\n                    pointsNumber = pointsNumber.concat(pointsNumber.slice(0, 2))\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o, true);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Seine Punkte sind die Punkte des Hitpolygons der übergebenen Figur.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: { x: number, y: number }[];\r\n\r\n                for (let i = 0; i < points.length - 1; i += 2) {\r\n                    sh.addPoint(points[i].value, points[i + 1].value, i >= points.length - 2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n        this.addMethod(new Method(\"insertPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.insertPoint(x, y, index);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt als \"index-ter\" Punkt hinzu. index == 0 => ganz am Anfang; index == Anzahl der bisherigen Punkte => ganz am Ende;\"', false));\r\n\r\n        this.addMethod(new Method(\"movePointTo\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let index: number = parameters[3].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"insertPoint\")) return;\r\n\r\n                sh.movePointTo(x, y, index);\r\n\r\n            }, false, false, 'schiebt den index-ten Punkt nach (x, y). index == 0 => erster Punkt, index == 1 => zweiter Punkt usw.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"close\")) return;\r\n\r\n                sh.isClosed = true;\r\n                sh.render();\r\n\r\n            }, false, false, 'Schließt das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"open\")) return;\r\n\r\n                sh.isClosed = false;\r\n                sh.render();\r\n\r\n            }, false, false, 'Öffnet das Polygon. Diese Methode hat bei gefüllten Polygonen keinen Effekt.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[]{\r\n        if(shapeHelper instanceof GroupHelper){\r\n            let points1: convexhull.Point[] = [];\r\n            for(let sh of shapeHelper.shapes){\r\n                points1 = this.extractPoints(sh.intrinsicData[\"Actor\"], points1);\r\n            }\r\n            return points.concat(points1);\r\n        } else {\r\n            if(shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function(punkt){return {x: punkt.x, y: punkt.y}}));\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    isClosed: boolean = false;\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, isClosed: boolean = false) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.isClosed = isClosed;\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if (!closeAndFill) {\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if (this.hitPolygonInitial.length > 0) {\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill || this.isClosed) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n\r\n    insertPoint(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.splice(index, 0, { x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    movePointTo(x: number, y: number, index: number) {\r\n        if (index < 0) index = 0;\r\n        if (index > this.hitPolygonInitial.length) index = this.hitPolygonInitial.length;\r\n        if(this.hitPolygonInitial.length == 0) return;\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial[index].x = p.x;\r\n        this.hitPolygonInitial[index].y = p.y;\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setPoint(x: number, y: number, index: number) {\r\n        if (index == 0 || index == 1) {\r\n            this.hitPolygonInitial[index] = { x: x, y: y };\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{ x: x1, y: y1 }, { x: x2, y: y2 }];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n    setAllPointsUntransformed(points: number[]) {\r\n        this.hitPolygonInitial = [];\r\n        for (let i = 0; i < points.length; i += 2) {\r\n            this.hitPolygonInitial.push({ x: points[i], y: points[i + 1] })\r\n        }\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.centerXInitial = sh.left + sh.width/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.centerYInitial = sh.top + sh.height/2;\r\n\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.scaleFactor;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\nimport { RenderTexture } from \"@pixi/core\";\r\nimport { convexhull } from \"../../tools/ConvexHull.js\";\r\nimport { GroupHelper } from \"./Group.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, null, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[2].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Die übergebene Figur ist null.\");\r\n                    return;\r\n                }\r\n\r\n                let rh = new SpriteHelper(0, 0, \"\", 0, module.main.getInterpreter(), o, shape.intrinsicData[\"Actor\"], \"linear\");\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Zeichnet das graphische Objekt (shape) in eine Bitmap und macht daraus ein Sprite. Dieses wird an der Position (x, y) dargestellt.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Aufzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (Math.abs(toIndex - fromIndex) < 10000) {\r\n                    let delta = Math.sign(toIndex - fromIndex);\r\n                    for (let i = fromIndex; i != toIndex; i = i + delta) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.isDestroyed) return;\r\n\r\n                sh.stopAnimation(false);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"makeTiling\", new Parameterlist([\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"makeTiling\")) return;\r\n\r\n                sh.makeTiling(width, height);\r\n\r\n            }, false, false, \"Fügt das identische Bild nach rechts und unten kachelartig ('tile'!) so oft hinzu, bis die angegebene Breite erreicht ist. \\nTIPP: Mit der Methode getTileImage() erhält man ein Tile-Objekt, dessen Methoden move, scale, mirrorX und mirrorY sich gleichzeitig auf jede einzelne Kachel auswirken.\", false));\r\n\r\n        this.addMethod(new Method(\"getTileImage\", new Parameterlist([\r\n        ]), <Klass>module.typeStore.getType(\"Tile\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getTileImage\")) return;\r\n\r\n                if(!sh.isTileSprite){\r\n                    sh.worldHelper.interpreter.throwException(\"Das Sprite hat kein TileImage. Sie müssen es zuerst mit der Methode makeTiling in ein Kachel-Sprite umwandeln.\")\r\n                    return;\r\n                }\r\n\r\n                let ret: RuntimeObject = new RuntimeObject(<Klass>module.typeStore.getType(\"Tile\"));\r\n\r\n                ret.intrinsicData[\"Actor\"] = new TileHelper(sh);\r\n\r\n                return ret;\r\n\r\n            }, false, false, \"Nachdem das Sprite mittels der Methode 'makeTiling' zum TileSprite gemacht wurde, kann wirken die Methoden move, scale und rotate immer auf den ganzen gekachelten Bereich. Will man das verfielfachte Bild ändern, so bekommt man über diese Methode das Sprite-Objekt, das diesem Bild entspricht. Ruft man für dieses Objekt die Methoden move, rotate oder scale auf, so wirken sie auf jede der einzelnen Kacheln.\", false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    isTileSprite: boolean = false;\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, copyFromOtherShape?: ShapeHelper,\r\n        public scaleMode: string = \"nearest_neighbour\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        if (copyFromOtherShape == null) {\r\n            this.setTexture(null, index);\r\n        } else {\r\n            this.copyBitmapFromShape(copyFromOtherShape);\r\n            let bounds = copyFromOtherShape.displayObject.getBounds();\r\n            this.x = bounds.left + bounds.width / 2;\r\n            this.y = bounds.top + bounds.height / 2;\r\n        }\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        //@ts-ignore\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    makeTiling(width: number, height: number) {\r\n        width /= this.scaleFactor;\r\n        height /= this.scaleFactor;\r\n        let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n        let tileSprite = new PIXI.TilingSprite(sprite.texture, width, height);\r\n        sprite.texture.baseTexture.mipmap = PIXI.MIPMAP_MODES.OFF;\r\n        tileSprite.setParent(sprite.parent);\r\n        tileSprite.transform.localTransform.copyFrom(sprite.transform.localTransform);\r\n        //@ts-ignore\r\n        tileSprite.transform.onChange();\r\n        tileSprite.updateTransform();\r\n        // tileSprite.clampMargin = -0.5;\r\n        this.displayObject = tileSprite;\r\n        this.centerXInitial += -sprite.width / 2 + width / 2;\r\n        this.centerYInitial += -sprite.height / 2 + height / 2;\r\n        let left = this.centerXInitial - width / 2;\r\n        let top = this.centerYInitial - height / 2;\r\n        let right = left + width;\r\n        let bottom = top + height;\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: right, y: top }, { x: right, y: bottom }, { x: left, y: bottom }\r\n        ];\r\n        this.setHitPolygonDirty(true);\r\n        sprite.destroy();\r\n        this.isTileSprite = true;\r\n    }\r\n\r\n    setTileOffset(x: number, y: number) {\r\n        if (this.isTileSprite) {\r\n            let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.displayObject;\r\n            tileSprite.tilePosition.set(x, y);\r\n        }\r\n    }\r\n\r\n\r\n    copyBitmapFromShape(copyFromOtherShape: ShapeHelper) {\r\n\r\n        let bounds = copyFromOtherShape.displayObject.getBounds();\r\n\r\n        let width = bounds.width;\r\n        let height = bounds.height;\r\n\r\n        const brt = new PIXI.BaseRenderTexture(\r\n            {\r\n                scaleMode: this.scaleMode == \"nearest_neighbour\" ? PIXI.SCALE_MODES.NEAREST : PIXI.SCALE_MODES.LINEAR,\r\n                width: width,\r\n                height: height\r\n            }\r\n        );\r\n        let rt: PIXI.RenderTexture = new PIXI.RenderTexture(brt);\r\n\r\n        let dob = copyFromOtherShape.displayObject;\r\n        this.worldHelper.app.renderer.render(dob, {\r\n            renderTexture: rt,\r\n            transform: new PIXI.Matrix().translate(-bounds.left, -bounds.top)\r\n        });\r\n\r\n        let points: convexhull.Point[] = [];\r\n        points = this.extractPoints(copyFromOtherShape, points);\r\n\r\n        for (let p of points) {\r\n            p.x -= bounds.left;\r\n            p.y -= bounds.top;\r\n        }\r\n\r\n        this.hitPolygonInitial = points;\r\n        this.hitPolygonInitial = convexhull.makeHull(points);\r\n\r\n        this.hitPolygonDirty = true;\r\n\r\n        this.displayObject = new PIXI.Sprite(rt);\r\n\r\n        copyFromOtherShape.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    extractPoints(shapeHelper: ShapeHelper, points: convexhull.Point[]): convexhull.Point[] {\r\n        if (shapeHelper instanceof GroupHelper) {\r\n            for (let sh of shapeHelper.shapes) {\r\n                points = this.extractPoints(sh.intrinsicData[\"Actor\"], points);\r\n            }\r\n            return points;\r\n        } else {\r\n            if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n            return points.concat(shapeHelper.hitPolygonTransformed.map(function (punkt) { return { x: punkt.x, y: punkt.y } }));\r\n\r\n        }\r\n    }\r\n\r\n    getWidth(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.width * this.scaleFactor;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n        return sprite.height * this.scaleFactor;\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"].spritesheet;\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"linear\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, {\r\n                        renderTexture: dynamicTexture1\r\n                    });\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            if (i >= 0) spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = Math.max(2 * this.animationIndices.length - 0.1 - image, 0);\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n\r\nexport class TileClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Tile\", module, \"Eine Kachel in einem Sprite, das mithilfe der Methode makeTiling zu einer Kachelfläche gemacht wurde.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, factor);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorX\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(-1, 1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in X-Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"mirrorY\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TileHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"mirrorX\")) return;\r\n\r\n                sh.scale(1, -1);\r\n\r\n            }, false, false, \"Spiegelt das Objekt in Y-Richtung.\", false));\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class TileHelper {\r\n    constructor(public spriteHelper: SpriteHelper) {\r\n    }\r\n\r\n    move(dx: number, dy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tilePosition.x += dx;\r\n        tileSprite.tilePosition.y += dy;\r\n    }\r\n    \r\n    scale(fx: number, fy: number){\r\n        let tileSprite: PIXI.TilingSprite = <PIXI.TilingSprite>this.spriteHelper.displayObject;\r\n        tileSprite.tileScale.x *= fx;\r\n        tileSprite.tileScale.y *= fy;\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        return this.spriteHelper.testdestroyed(method);\r\n    }\r\n\r\n\r\n}","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"font-family\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n                let fontFamily: string = parameters[5].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o, fontFamily);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text: string,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject, public fontFamily?: string) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n        if(fontFamily != null){\r\n            this.textStyle.fontFamily = fontFamily;\r\n        }\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        this.textStyle.fill = this.fillColor;\r\n        this.textStyle.stroke = this.borderColor;\r\n        this.textStyle.strokeThickness = this.borderWidth;\r\n        this.textStyle.fontSize = this.fontsize;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            //@ts-ignore\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            g.alpha = this.fillAlpha;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        if(this.fontsize == 0) this.fontsize = 10;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Module } from \"../compiler/parser/Module.js\";\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class GamepadClass extends Klass {\n\n    constructor(module: Module) {\n        super(\"Gamepad\", module, \"Klasse mit statischen Methoden zur Abfrage der Gamepads\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n        // this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\n\n        this.staticClass.setupAttributeIndicesRecursive();\n\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\n\n        this.addMethod(new Method(\"isButtonDown\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"buttonIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let buttonIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadButtonPressed(gamepadIndex, buttonIndex);\n\n            }, false, true, \"Gibt genau dann true zurück, wenn der Button buttonIndex des Gamepads GamepadIndex gedrückt ist.\", false));\n\n        this.addMethod(new Method(\"isConnected\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n\n                return module.main.getInterpreter().gamepadTool.isGamepadConnected(gamepadIndex);\n\n            }, false, true, \"Gibt true zurück, falls das Gamepad mit dem übergebenen Index angeschlossen ist. VORSICHT: Das erste Gamepad hat Index 0.\", false));\n\n        this.addMethod(new Method(\"getAxisValue\", new Parameterlist([\n            { identifier: \"gamepadIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"axisIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let gamepadIndex: number = parameters[1].value;\n                let axisIndex: number = parameters[2].value;\n\n                return module.main.getInterpreter().gamepadTool.getGamepadAxisValue(gamepadIndex, axisIndex);\n\n            }, false, true, \"Gibt den Wert des Gamepad-Steuerknüppels mit Index axisIndex zurück.\", false));\n\n\n    }\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { abstandPunktZuGerade, abstandPunktZuStrecke, polygonEnthältPunkt, Punkt, schnittpunkteKreisStrecke, streckeSchneidetStrecke, vektorVonPolarkoordinaten } from \"../tools/MatheTools.js\";\r\nimport { param } from \"jquery\";\r\n\r\nexport class MathToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MathTools\", module, \"Klasse mit mathematischen Hilfsfunktionen als statische Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        let vector2Class = <Klass>module.typeStore.getType(\"Vector2\");\r\n        let vectorArrayClass = new ArrayType(vector2Class);\r\n\r\n        let xIndex = vector2Class.attributeMap.get(\"x\").index;\r\n        let yIndex = vector2Class.attributeMap.get(\"y\").index;\r\n\r\n\r\n        this.addMethod(new Method(\"intersectCircleWithPolygon\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vectorArrayClass,\r\n            (parameters) => {\r\n\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n                let points: Value[] = parameters[4].value;\r\n\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let schnittpunkte: Punkt[] = [];\r\n                let m: Punkt = {x: mx, y: my};\r\n                for(let i = 0; i < punkte.length; i++){\r\n                    let p1 = punkte[i];\r\n                    let p2 = punkte[(i+1)%punkte.length];\r\n                    schnittpunkteKreisStrecke(m, r, p1, p2, schnittpunkte);\r\n                }\r\n\r\n                let returnArray: Value[] = []\r\n\r\n                for(let p of schnittpunkte){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: p.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: p.y};\r\n                    returnArray.push({type: vector2Class, value:pVector});\r\n                }\r\n\r\n                return returnArray;\r\n\r\n            }, false, true, \"Zu einem gegebenen Kreis werden die Punkte berechnet, die auf den Seiten eines gegebenen Polygons liegen.\"));\r\n\r\n        this.addMethod(new Method(\"intersectLineSegments\", new Parameterlist([\r\n            { identifier: \"p0\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p1\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p2\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p3\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), vector2Class,\r\n            (parameters) => {\r\n\r\n                let p: Punkt[] = [];\r\n                for(let i = 0; i < 4; i++){\r\n                    let att = parameters[i].value.attributes;\r\n                    p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                }\r\n\r\n                let ps: Punkt = {x: 0, y: 0};\r\n                if(streckeSchneidetStrecke(p[0], p[1], p[2], p[3], ps)){\r\n                    let pVector = new RuntimeObject(vector2Class);\r\n                    pVector.attributes[xIndex] = {type: doublePrimitiveType, value: ps.x};\r\n                    pVector.attributes[yIndex] = {type: doublePrimitiveType, value: ps.y};\r\n                    return pVector;\r\n                } else {\r\n                    return null;                    \r\n                }\r\n\r\n            }, false, true, \"Berechnet den Schnittpunkt der Strecken [p0, p1] und [p2, p3]. Gibt null zurück, wenn sich die Strecken nicht schneiden oder wenn sie parallel sind und teilweise aufeinander liegen.\"));\r\n\r\n        this.addMethod(new Method(\"polygonContainsPoint\", new Parameterlist([\r\n            { identifier: \"polygonPoints\", type: vectorArrayClass, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let points = parameters[1].value;\r\n                let punkte: Punkt[] = [];\r\n                for(let p of points){\r\n                    punkte.push({x: p.value.attributes[xIndex].value, y: p.value.attributes[yIndex].value});\r\n                }\r\n\r\n                let att = parameters[2].value.attributes;\r\n                let p: Punkt = {x: att[xIndex].value, y: att[yIndex].value}\r\n\r\n                return polygonEnthältPunkt(punkte, p);\r\n\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Polygon den Punkt enthält.\"));\r\n\r\n            this.addMethod(new Method(\"distancePointToLine\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuGerade(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Gerade AB.\"));\r\n    \r\n            this.addMethod(new Method(\"distancePointToLineSegment\", new Parameterlist([\r\n                { identifier: \"p\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"a\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"b\", type: vector2Class, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let p: Punkt[] = [];\r\n                    for(let i = 0; i < 3; i++){\r\n                        let att = parameters[i].value.attributes;\r\n                        p.push({x: att[xIndex].value, y: att[yIndex].value})\r\n                    }\r\n    \r\n                    return abstandPunktZuStrecke(p[1], p[2], p[0]);\r\n    \r\n                }, false, true, \"Berechnet den Abstand des Punktes P zur Strecke [AB].\"));\r\n    \r\n    \r\n\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Date.now() + this.deltaTimeMillis;\r\n            }\r\n            , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n        this.addMethod(new Method(\"exit\", new Parameterlist([\r\n            { identifier: \"status\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n                let console = module.main.getBottomDiv()?.console;\r\n                if(console != null){\r\n                    console.writeConsoleEntry(\"Das Programm wurde angehalten mit Statuswert: \" + parameters[1].value, null, \"#0000ff\");\r\n                    console.showTab();\r\n                }\r\n                module.main.getInterpreter().stop();\r\n            }\r\n            , false, true, \"Beendet das Programm und gibt den übergebenen Wert in der Konsole aus.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(\"\");\r\n            }, false, true, \"Setzt den Cursor in die nächste Zeile.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"setSpeed\", new Parameterlist([\r\n            {identifier: \"speed\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let speed: number = parameters[1].value;\r\n                module.main.getInterpreter().controlButtons.speedControl.setSpeedInStepsPerSecond(speed >= 1 ? speed : \"max\");\r\n\r\n            }, false, true, \"Setzt die Ausführungsgeschwindigkeit. Der Parameter speed wir in Steps/Sekunde angegeben. Eine negative Zahl bedeutet: 'maximal'.\"));\r\n\r\n        this.addMethod(new Method(\"pause\", new Parameterlist([\r\n            {identifier: \"durationInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n            }, false, true, \"Pausiert das Programm für die angegebene Zeit in ms.\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let r: RuntimeObject = parameters[1].value;\r\n                let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n                if (method != null) {\r\n\r\n                    module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                        let program = method?.program;\r\n                        let invoke = method?.invoke;\r\n\r\n                        let stackElements: Value[] = [\r\n                            {\r\n                                type: r.class,\r\n                                value: r\r\n                            },\r\n                            {\r\n                                type: stringPrimitiveType,\r\n                                value: key\r\n                            }\r\n                        ];\r\n\r\n                        if (program != null) {\r\n                            module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                        } else if (invoke != null) {\r\n                            invoke([]);\r\n                        }\r\n\r\n\r\n                    });\r\n                }\r\n            }\r\n            , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    timerStarted: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                // console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n    }\r\n\r\n    startTimer(){\r\n        if(!this.timerStarted){\r\n            this.timerStarted = true;\r\n            this.processTimerEntries();\r\n        }\r\n    }\r\n    \r\n    stopTimer(){\r\n        this.timerStarted = false;\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if(!this.timerStarted){\r\n            return;\r\n        }\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n        \r\n        this.addMethod(new Method(\"LocalDateTime\", new Parameterlist([]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return;\r\n\r\n            }, false, false, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , true));\r\n\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"]= intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData[\"ldt\"] = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData[\"ldt\"])).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData[\"ldt\"])).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n        let xIndex = this.attributeMap.get(\"x\").index;\r\n        let yIndex = this.attributeMap.get(\"y\").index;\r\n        \r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI / 180.0;\r\n\r\n                o.attributes[xIndex] = { type: doublePrimitiveType, value: Math.cos(alphaDeg) * r };\r\n                o.attributes[yIndex] = { type: doublePrimitiveType, value: Math.sin(alphaDeg) * r };\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x) / Math.PI * 180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                return Math.sqrt(x * x + y * y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x * x + y * y);\r\n\r\n                if (Math.abs(length) > 0.00000000001) {\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                o1.attributes[xIndex] = { type: doublePrimitiveType, value: x };\r\n                o1.attributes[yIndex] = { type: doublePrimitiveType, value: y };\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x * x + y * y);\r\n                if (l > 0) {\r\n\r\n                    o.attributes[xIndex].value = x / l * length;\r\n                    o.attributes[yIndex].value = y / l * length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x + x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y + y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x - x1 };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y - y1 };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n                let o1: RuntimeObject = parameters[2].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let x1: number = o1.attributes[xIndex].value;\r\n                let y1: number = o1.attributes[yIndex].value;\r\n\r\n                return x * x1 + y * y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * s };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: y * s };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let x: number = o.attributes[xIndex].value;\r\n                let y: number = o.attributes[yIndex].value;\r\n\r\n                let angle: number = -parameters[1].value * Math.PI / 180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                oRet.attributes[xIndex] = { type: doublePrimitiveType, value: x * cos - y * sin };\r\n                oRet.attributes[yIndex] = { type: doublePrimitiveType, value: x * sin + y * cos };\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n\r\n        this.addMethod(new Method(\"distance\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                let x1: number = <number>parameters[1].value;\r\n                let y1: number = <number>parameters[2].value;\r\n                let x2: number = <number>parameters[3].value;\r\n                let y2: number = <number>parameters[4].value;\r\n                let dx = x2 - x1;\r\n                let dy = y2 - y1;\r\n                return Math.sqrt(dx * dx + dy * dy);\r\n            }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            () => {}, // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n                let value: RuntimeObject = parameters[2].value;\r\n\r\n                wh.setUserData(key, value);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n\r\n        this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n            { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), objectType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let key: string = parameters[1].value;\r\n\r\n                return wh.getUserData(key);\r\n\r\n            }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n        let getterList: { att: string, getter: string, help: string }[] = [{ att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\" },\r\n        { att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\" },\r\n        { att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\" }, { att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\" }];\r\n\r\n        for (let getter of getterList) {\r\n            this.addMethod(new Method(getter.getter, new Parameterlist([\r\n            ]), stringPrimitiveType,\r\n                (parameters) => {\r\n\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                    return wh[getter.att];\r\n\r\n                }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n        }\r\n\r\n        this.addMethod(new Method(\"getNumber\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Nummer 1). Bemerkung: Die Nummer ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n        this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                return wh.index;\r\n\r\n            }, false, false, 'Diese Methode ist veraltet. Bitte benutze stattdessen getNumber.', false));\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: { [key: string]: RuntimeObject } = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper,\r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string) {\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);\r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisconnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"oherClients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownNumber\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n        this.addMethod(new Method(\"getOtherClients\", new Parameterlist([]),\r\n            new ArrayType(webSocketClientType),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                let ret = wh.clientList.map(client => {return {type: webSocketClientType, value: client.runtimeObject}});\r\n                \r\n                return ret;\r\n\r\n            }, // no statements!\r\n            false, false, \"Gibt alle bisher bei der selben Session angemeldeten Clients zurück.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/servlet/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"PApplet\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n        this.interpreter.timerExtern = true;\r\n        this.setupProcessing(this.$containerInner);\r\n    }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n        let that = this;\r\n        let drawMethodPending: boolean = true;\r\n        this.$div = $div;\r\n\r\n        let sketch = (p5: p5) => {\r\n\r\n            p5.setup = function () {\r\n                that.renderer = p5.P2D;\r\n\r\n                let afterFinishingBoth = () => {\r\n                    // p5.createCanvas(that.width, that.height, that.renderer);\r\n                    drawMethodPending = false\r\n                    // $div.find('canvas').css({\r\n                    //     'width': '',\r\n                    //     'height': ''\r\n                    // })            \r\n                }\r\n\r\n                let i = 2;\r\n\r\n                that.runMethod('setup', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n                that.runMethod('settings', () => {\r\n                    if (--i == 0) afterFinishingBoth();\r\n                });\r\n\r\n\r\n            };\r\n\r\n            p5.preload = function () {\r\n                that.runMethod('preload');\r\n            };\r\n\r\n            p5.draw = function () {\r\n                if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                    if (!drawMethodPending) {\r\n                        drawMethodPending = true;\r\n                        that.runMethod(\"draw\", () => {\r\n                            drawMethodPending = false;\r\n                        });\r\n                    }\r\n                }\r\n                that.tick();\r\n                // p5.background(50);\r\n                // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n            };\r\n\r\n            p5.mousePressed = function () {\r\n                that.runMethod('mousePressed');\r\n            };\r\n\r\n            p5.mouseReleased = function () {\r\n                that.runMethod('mouseReleased');\r\n            };\r\n\r\n            p5.mouseClicked = function () {\r\n                that.runMethod('mouseClicked');\r\n            };\r\n\r\n            p5.mouseDragged = function () {\r\n                that.runMethod('mouseDragged');\r\n            };\r\n\r\n            p5.mouseEntered = function () {\r\n                that.runMethod('mouseEntered');\r\n            };\r\n\r\n            p5.mouseExited = function () {\r\n                that.runMethod('mouseExited');\r\n            };\r\n\r\n            p5.mouseMoved = function () {\r\n                that.runMethod('mouseMoved');\r\n            };\r\n\r\n            p5.keyPressed = function () {\r\n                that.runMethod('keyPressed');\r\n            };\r\n\r\n            p5.keyReleased = function () {\r\n                that.runMethod('keyReleased');\r\n            };\r\n\r\n\r\n        }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n        $div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n        })\r\n\r\n    }\r\n\r\n\r\n    tick() {\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"penUp\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penUp\")) return;\r\n\r\n                sh.penIsDown = false;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"penDown\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"penDown\")) return;\r\n\r\n                sh.penIsDown = true;\r\n\r\n            }, false, false, 'Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'showTurtle == true bewirkt, dass am Ort der Turtle ein rotes Dreieck gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"clear\")) return;\r\n\r\n                return sh.clear();\r\n\r\n            }, false, false, 'Löscht alle bis jetzt mit der Turtle gezeichneten Strecken.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    turtleAngleDeg: number = 0; // in Rad\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    turtleSize: number = 40;\r\n\r\n    penIsDown: boolean = true;\r\n\r\n    lastLineWidth: number = 0;\r\n    lastColor: number = 0;\r\n    lastAlpha: number = 0;\r\n\r\n    lastTurtleAngleDeg: number = 0; // angle in Rad\r\n\r\n    renderJobPresent: boolean = false;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n        this.lineGraphic.moveTo(xStart, yStart);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.initTurtle(0, 0, this.turtleAngleDeg);\r\n        this.moveTurtleTo(xStart, yStart, this.turtleAngleDeg);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter() {\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum / length;\r\n        this.centerYInitial = this.ySum / length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean) {\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angleDeg: number) {\r\n        this.turtleAngleDeg -= angleDeg;\r\n        if(Math.abs(this.turtleAngleDeg) > 360){\r\n            this.turtleAngleDeg -= Math.floor(this.turtleAngleDeg/360)*360;\r\n        }\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.moveTurtleTo(lastLineElement.x, lastLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        // this.turn(angleInDegrees);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.turtleAngleDeg = this.turtleAngleDeg;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    newTurtleX: number;\r\n    newTurtleY: number;\r\n    newAngleDeg: number;\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n\r\n        let turtleAngleRad = this.turtleAngleDeg/180.0*Math.PI;\r\n\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(turtleAngleRad),\r\n            y: lastLineElement.y + length * Math.sin(turtleAngleRad),\r\n            color: this.penIsDown ? this.borderColor : null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        // if (this.isFilled) {\r\n        //     this.render();\r\n        // } else {\r\n        //     if (this.borderColor != null) {\r\n        //         // this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n        //         this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        //         this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"LineTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     } else {\r\n        //         this.lineGraphic.moveTo(newLineElement.x, newLineElement.y);\r\n        //         console.log(\"MoveTo: \" + newLineElement.x + \", \" + newLineElement.y);\r\n        //     }\r\n        // }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n\r\n        this.newTurtleX = newLineElement.x;\r\n        this.newTurtleY = newLineElement.y;\r\n        this.newAngleDeg = this.turtleAngleDeg;\r\n\r\n        // don't render more frequent than every 1/100 s\r\n        if (!this.renderJobPresent) {\r\n            this.renderJobPresent = true;\r\n            setTimeout(() => {\r\n                this.renderJobPresent = false;\r\n                this.render();\r\n                this.moveTurtleTo(this.newTurtleX, this.newTurtleY, this.turtleAngleDeg);\r\n            }, 100);\r\n        }\r\n\r\n    }\r\n\r\n    moveTo(x: number, y: number) {\r\n        let newLineElement: LineElement = {\r\n            x: x,\r\n            y: y,\r\n            color: null,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.moveTurtleTo(newLineElement.x, newLineElement.y, this.turtleAngleDeg);\r\n    }\r\n\r\n\r\n    initTurtle(x: number, y: number, angleDeg: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let angleRad = angleDeg/180.0*Math.PI;\r\n\r\n        let vx = Math.cos(angleRad);\r\n        let vy = Math.sin(angleRad);\r\n\r\n        let vxp = -Math.sin(angleRad);\r\n        let vyp = Math.cos(angleRad);\r\n\r\n        let lengthForward = this.turtleSize / 2;\r\n        let lengthBackward = this.turtleSize / 4;\r\n        let lengthBackwardP = this.turtleSize / 4;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    moveTurtleTo(x: number, y: number, angleDeg: number){\r\n        this.turtle.localTransform.identity();\r\n        this.turtle.localTransform.rotate(angleDeg/180.0*Math.PI);\r\n        this.turtle.localTransform.translate(x, y);\r\n\r\n        // this.turtle.localTransform.translate(-this.turtleX, -this.turtleY);\r\n        // this.turtle.localTransform.rotate((angleDeg - this.lastTurtleAngleDeg)/180.0*Math.PI);\r\n        // this.turtle.localTransform.translate(x, y);\r\n        //@ts-ignore\r\n        this.turtle.transform.onChange();\r\n        this.turtle.updateTransform();\r\n\r\n        this.lastTurtleAngleDeg = this.turtleAngleDeg;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        this.lastLineWidth = 0;\r\n        this.lastColor = 0;\r\n        this.lastAlpha = 0;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    if (le.lineWidth != this.lastLineWidth || le.color != this.lastColor || le.alpha != this.lastAlpha) {\r\n                        g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                        this.lastLineWidth = le.lineWidth;\r\n                        this.lastColor = le.color;\r\n                        this.lastAlpha = le.alpha;\r\n                    }\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n                // console.log(\"LineTo: \" + le.x + \", \" + le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n                // console.log(\"MoveTo: \" + le.x + \", \" + le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if (shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty) {\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if (this.initialHitPolygonDirty) {\r\n            this.setupInitialHitPolygon();\r\n            this.transformHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon() {\r\n        this.hitPolygonInitial = this.lineElements.map((le) => { return { x: le.x, y: le.y } });\r\n    }\r\n\r\n    clear(x: number = null, y: number = null, angle: number = null) {\r\n        let lastLineElement = this.lineElements.pop();\r\n        if(x == null) x = lastLineElement.x;\r\n        if(y == null) y = lastLineElement.y;\r\n\r\n        this.lineElements = [];\r\n\r\n        this.lineElements.push({\r\n            x: x,\r\n            y: y,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter();\r\n\r\n        this.hitPolygonInitial = [];\r\n        if(angle != null){\r\n            this.turtleAngleDeg = angle;\r\n            this.lastTurtleAngleDeg = 0;\r\n            this.borderColor = 0;\r\n            this.turtleSize = 40;\r\n        }\r\n        this.render();\r\n        if(angle != null){\r\n            this.moveTurtleTo(x, y, angle);\r\n        }\r\n    }\r\n\r\n\r\n    touchesAtLeastOneFigure(): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesColor(farbe: number): boolean {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n\r\n        for (let sh of this.worldHelper.shapes) {\r\n            if (sh != this && sh.containsPoint(x, y)) {\r\n                if (sh instanceof FilledShapeHelper && sh.fillColor == farbe) return true;\r\n                // if(sh instanceof TurtleHelper) TODO\r\n            }\r\n        }\r\n    }\r\n\r\n    touchesShape(shape: ShapeHelper) {\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let x = lastLineElement.x;\r\n        let y = lastLineElement.y;\r\n        return shape.containsPoint(x, y);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\n\n\nexport type GNGAktionsempfaengerType = \"ausführen\" | \"taste\" | \"sondertaste\" | \"geklickt\";\n\nexport type GNGAktionsempfaengerData = {\n    type: GNGAktionsempfaengerType,\n    method: Method,\n    runtimeObject: RuntimeObject\n}\n\nexport class GNGEreignisbehandlung extends Klass {\n\n    constructor(module: Module, private moduleStore: ModuleStore) {\n\n        super(\"Ereignisbehandlung\", module, \"Zugriff auf Ereignisse einschließlich Taktgeber (Graphics'n Games-Bibliothek (Cornelsen-Verlag))\");\n\n\n        this.addMethod(new Method(\"Ereignisbehandlung\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n\n                let helper = GNGEreignisbehandlung.getHelper(module);\n\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Ereignisbehandlungs-Objekt.', true));\n\n        // this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n        //     { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        // ]), null,\n        //     (parameters) => {\n\n        //         let o: RuntimeObject = parameters[0].value;\n        //         let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n        //         let groesse: number = parameters[1].value;\n\n\n        //     }, false, false, \"Setzt die Größe der Figur.\", false));\n\n        this.addMethod(new Method(\"Starten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                 GNGEreignisbehandlung.getHelper(module).startTimer();\n\n            }, false, false, \"Zeitgeber starten.\", false));\n\n        this.addMethod(new Method(\"Anhalten\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n                GNGEreignisbehandlung.getHelper(module).stopTimer();\n\n            }, false, false, \"Zeitgeber anhalten.\", false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n                GNGEreignisbehandlung.getHelper(module).taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n        this.addMethod(new Method(\"TaktImpulsAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n    }\n\n    static getHelper(module: Module):GNGEreignisbehandlungHelper{\n        let interpreter = module.main.getInterpreter();\n        if (interpreter.gngEreignisbehandlungHelper == null) {\n            interpreter.gngEreignisbehandlungHelper = new GNGEreignisbehandlungHelper(module);\n            interpreter.gngEreignisbehandlungHelper.bindEvents();\n        }\n\n        return interpreter.gngEreignisbehandlungHelper;\n\n    }\n\n}\n\n\nexport class GNGEreignisbehandlungHelper {\n\n    aktionsempfaengerTypes: string[] = [\"ausführen\", \"taste\", \"sondertaste\", \"geklickt\"];\n    methodSignatureList: string[] = [\"TaktImpulsAusführen()\", \"AktionAusführen()\", \"MausGeklickt(int, int, int)\", \"TasteGedrückt(char)\", \"SonderTasteGedrückt(int)\"];\n    methodToAktionsempfaengerTypeMap: { [signature: string]: string } = {\n        \"TaktImpulsAusführen()\": \"ausführen\",\n        \"AktionAusführen()\": \"ausführen\",\n        \"MausGeklickt(int, int, int)\": \"geklickt\",\n        \"TasteGedrückt(char)\": \"taste\",\n        \"SonderTasteGedrückt(int)\": \"sondertaste\"\n    };\n\n    // see https://www.freecodecamp.org/news/javascript-keycode-list-keypress-event-key-codes/\n    keyToKeyCodeMap: { [key: string]: number } = {\n        \"Enter\": 13,\n        \"ArrowLeft\": 37,\n        \"ArrowRight\": 39,\n        \"ArrowUp\": 38,\n        \"ArrowDown\": 40,\n        \"F1\": 112,\n        \"F2\": 113,\n        \"F3\": 114,\n        \"F4\": 115,\n        \"F5\": 116,\n        \"F6\": 117,\n        \"F7\": 118,\n        \"F8\": 119,\n        \"F9\": 120,\n        \"F10\": 121,\n        \"F11\": 122,\n        \"F12\": 123,\n        \"PageUp\": 33,\n        \"PageDown\": 34,\n        \"Insert\": 155\n    }\n\n    // For gng library (Cornelsen-Verlag):\n    aktionsempfaengerMap: { [aktionsempfaengerType: string]: GNGAktionsempfaengerData[] } = {};\n\n    timerRunning: boolean = false;\n    taktdauer: number = 300;\n    remainingTime: number = 0;\n\n    onKeyDownMethod: (key: string) => void;\n\n    constructor(private module:Module){\n        for (let type of this.aktionsempfaengerTypes) {\n            this.aktionsempfaengerMap[type] = [];\n        }\n\n    }\n\n    hasAktionsEmpfaenger(): boolean {\n\n        for(let type of this.aktionsempfaengerTypes){\n            if(this.aktionsempfaengerMap[type].length > 0){\n                return true;\n            }\n        }\n\n        return false;\n\n    }\n\n\n    registerEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let method: Method = klass.getMethodBySignature(ms);\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            if (method?.program != null || method?.invoke != null) {\n                this.aktionsempfaengerMap[type].push({\n                    type: <GNGAktionsempfaengerType>type,\n                    method: method,\n                    runtimeObject: o\n                });\n            }\n        }\n\n    }\n\n    unregisterEvents(o: RuntimeObject) {\n        let klass = <Klass>o.class;   // This might be a child class of Ereignisbehandlung!\n\n        for (let ms of this.methodSignatureList) {\n            let type = this.methodToAktionsempfaengerTypeMap[ms];\n\n            this.aktionsempfaengerMap[type] =\n                this.aktionsempfaengerMap[type].filter(ae => ae.runtimeObject != o);\n        }\n    }\n\n\n    bindEvents() {\n        let interpreter = this.module.main.getInterpreter();\n\n        this.onKeyDownMethod = (key: string) => {\n            if (key.length == 1) {\n                for (let ae of this.aktionsempfaengerMap[\"taste\"]) {\n                    this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: key }]);\n                }\n            } else {\n                let keyCode = this.keyToKeyCodeMap[key];\n                if (keyCode != null) {\n                    for (let ae of this.aktionsempfaengerMap[\"sondertaste\"]) {\n                        this.invokeMethod(ae.method, ae.runtimeObject, [{ type: charPrimitiveType, value: keyCode }]);\n                    }\n                }\n            }\n\n        };\n\n        interpreter.keyboardTool.keyDownCallbacks.push(this.onKeyDownMethod);\n\n        // this.startTimer();\n\n    }\n\n    detachEvents() {\n        let interpreter = this.module.main.getInterpreter();\n        let index = interpreter.keyboardTool.keyDownCallbacks.indexOf(this.onKeyDownMethod);\n        if (index >= 0) interpreter.keyboardTool.keyDownCallbacks.splice(index, 1);\n        this.stopTimer();\n    }\n\n\n    invokeMethod(method: Method, runtimeObject: RuntimeObject, parameters: Value[] = [], callback?: () => void) {\n        let program = method.program;\n        let invoke = method.invoke;\n\n        parameters = parameters.slice(0);\n        parameters.unshift({ type: runtimeObject.class, value: runtimeObject });\n\n        if (program != null) {\n            this.module.main.getInterpreter().runTimer(method, parameters, callback, false);\n        } else if (invoke != null) {\n            invoke(parameters);\n        }\n\n    }\n\n    stopTimer() {\n        this.timerRunning = false;\n    }\n\n    startTimer() {\n\n        if (!this.timerRunning) {\n            this.timerRunning = true;\n            this.processTimerEntries();\n        }\n\n    }\n\n    processTimerEntries() {\n\n        if (!this.timerRunning) return;\n\n        let dt = 10;\n\n        this.remainingTime += dt;\n        if (this.remainingTime > this.taktdauer) {\n            this.remainingTime -= this.taktdauer;\n\n            let liste = this.aktionsempfaengerMap[\"ausführen\"];\n            for (let ae of liste) {\n\n                this.invokeMethod(ae.method, ae.runtimeObject, []);\n\n            }\n\n        }\n\n        let that = this;\n        setTimeout(() => {\n            that.processTimerEntries();\n        }, dt);\n\n    }\n\n    handleMouseClickedEvent(x: number, y: number) {\n        let parameters: Value[] = [\n            { type: intPrimitiveType, value: Math.round(x) },\n            { type: intPrimitiveType, value: Math.round(y) },\n            { type: intPrimitiveType, value: 1 }\n        ]\n\n        let liste = this.aktionsempfaengerMap[\"geklickt\"];\n        for (let ae of liste) {\n            this.invokeMethod(ae.method, ae.runtimeObject, parameters);\n\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { WorldHelper } from \"../graphics/World.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGZeichenfensterClass extends Klass {\n\n    constructor(public module: Module, moduleStore: ModuleStore) {\n\n        super(\"Zeichenfenster\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\n\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\n\n        let aktionsempfaengerType = <GNGZeichenfensterClass>module.typeStore.getType(\"Aktionsempfaenger\");\n\n\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\n\n\n        this.addMethod(new Method(\"MalflächenBreiteGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Breite des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"MalflächenHöheGeben\", new Parameterlist([]), intPrimitiveType,\n            (parameters) => {\n\n                return Math.round(this.getWorldHelper().width);\n\n            }, false, true, 'Gibt die Höhe des Zeichenbereichs in Pixeln zurück.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEintragen\", new Parameterlist([\n            { identifier: \"neu\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(aktionsempfaenger);\n\n            }, false, true, 'Trägt einen neuen Aktionsempfänger ein.', false));\n\n        this.addMethod(new Method(\"AktionsEmpfängerEntfernen\", new Parameterlist([\n            { identifier: \"alt\", type: aktionsempfaengerType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let aktionsempfaenger: RuntimeObject = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.unregisterEvents(aktionsempfaenger);\n\n            }, false, true, 'Löscht einen Aktionsempfänger aus der Liste.', false));\n\n        this.addMethod(new Method(\"TaktgeberStarten\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.startTimer();\n\n            }, false, true, 'Startet den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktgeberStoppen\", new Parameterlist([]), voidPrimitiveType,\n            (parameters) => {\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.stopTimer();\n\n            }, false, true, 'Stoppt den Taktgeber', false));\n\n        this.addMethod(new Method(\"TaktdauerSetzen\", new Parameterlist([\n            { identifier: \"dauer\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            (parameters) => {\n\n                let dauer: number = parameters[1].value;\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.taktdauer = dauer;\n\n            }, false, true, 'Setzt die Taktdauer des Zeitgebers in Millisekunden', false));\n\n\n    }\n\n    getWorldHelper(breite: number = 800, höhe: number = 600): WorldHelper {\n\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\n\n        if (wh != null) {\n\n            if (wh.width != breite || wh.height != höhe) {\n\n                let ratio: number = Math.round(höhe / breite * 100);\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\n\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\n                wh.width = breite;\n                wh.height = höhe;\n                // this.stage.localTransform.rotate(45/180*Math.PI);\n                // this.stage.localTransform.translate(400,300);\n                //@ts-ignore\n                wh.stage.transform.onChange();\n\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\n\n            }\n\n            return wh;\n\n        } else {\n            let worldObject: RuntimeObject = new RuntimeObject(<Klass>this.module.typeStore.getType(\"World\"));\n            let wh = new WorldHelper(breite, höhe, this.module, worldObject);\n            worldObject.intrinsicData[\"World\"] = wh;\n        }\n\n    }\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGRechteckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Rechteck\", module, \"Rechteck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.width * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Breite des Rechtecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(Math.abs(sh.height * sh.displayObject.scale.x)); \n        }, false, Visibility.protected, false, \"Höhe des Rechtecks\"));\n\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"Rechteck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new RectangleHelper(10, 10, 100, 100, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\n                let breite: number = parameters[1].value;\n                let höhe: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                sh.height = höhe / sh.displayObject.scale.y;\n                sh.width = breite / sh.displayObject.scale.x;\n\n                sh.centerXInitial = sh.left + sh.width/2;\n                sh.centerYInitial = sh.top + sh.height/2;\n\n                sh.render();\n\n            }, false, false, \"Setzt die Breite und Höhe des Rechtecks.\", false));\n\n\n    }\n\n}\n\n","export var GNGFarben: {[identifier: string]: number} = {\n    \"weiß\": 0xffffff,\n    \"weiss\": 0xffffff,\n    \"rot\": 0xff0000,\n    \"grün\": 0x00ff00,\n    \"gruen\": 0x00ff00,\n    \"blau\": 0x0000ff,\n    \"gelb\": 0xffff00,\n    \"magenta\": 0xff00ff,\n    \"cyan\": 0x00ffff,\n    \"hellgelb\": 0xffff80,\n    \"hellgrün\": 0x80ff80,\n    \"hellgruen\": 0x80ff80,\n    \"orange\": 0xff8000,\n    \"braun\": 0x804000,\n    \"grau\": 0x808080,\n    \"schwarz\": 0x000000\n} ","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\n\nexport class GNGBaseFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GNGBaseFigur\", module, \"Oberklasse der graphischen Elemente in der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"farbe\", stringPrimitiveType, (value: Value) => { \n            let farbe = value.object.intrinsicData[\"Farbe\"];\n            value.value = farbe == null ? \"schwarz\" : farbe;\n        }, false, Visibility.protected, false, \"Farbe des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterX()); \n        }, false, Visibility.protected, false, \"x-Position des Grafikobjekts\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.getCenterY()); \n        }, false, Visibility.protected, false, \"y-Position des Grafikobjekts\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.protected, false, \"Blickrichtung des Grafikobjekts in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe des Grafikobjekts (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn das Grafikobjekt sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                let moveAnchor: {x: number, y: number} = o.intrinsicData[\"moveAnchor\"];\n\n                let p: PIXI.Point = new PIXI.Point(moveAnchor.x, moveAnchor.y);\n                sh.displayObject.updateTransform();\n                sh.displayObject.transform.worldTransform.apply(p, p);\n        \n                sh.move(x - p.x, y - p.y);\n\n            }, false, false, \"Verschiebt das Rechteck so, dass seine linke obere Ecke bei (x,y) zu liegen kommt.\", false));\n\n\n        this.addMethod(new Method(\"Verschieben\", new Parameterlist([\n            { identifier: \"deltaX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"deltaY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"Verschieben\")) return;\n\n                sh.move(x, y);\n\n            }, false, false, \"Verschiebt die Figur um (x, y)\", false));\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.rotate(grad);\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Drehpunkt ist der Diagonalenschnittpunkt der kleinsten achsenparallelen Bounding Box um die Figur.\", false));\n\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                o.intrinsicData[\"Farbe\"] = farbe;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setFillColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Farbe der Figur.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n\n            }, false, false, \"Setzt den Drehwinkel der Figur. Der Winkel wird in Grad angegebenen, positive Werte bedeuten eine Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Zerstört das Objekt.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n\n\n    }\n\n}\n","import { Module } from \"../../compiler/parser/Module.js\";\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\nimport { charPrimitiveType, doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\n\nexport class GNGAktionsempfaengerInterface extends Interface {\n\n    constructor(module: Module) {\n        super(\"Aktionsempfaenger\", module, \"GNG: Interface für die Aktionsausführung\");\n\n        this.addMethod(new Method(\"Ausführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"Taste\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTaste\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"Geklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGDreieckClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Dreieck\", module, \"Dreieck-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"breite\", intPrimitiveType, (value: Value) => { \n            let breite = value.object.intrinsicData[\"Breite\"];\n            value.value = Math.round(breite); \n        }, false, Visibility.protected, false, \"Breite des Dreiecks\"));\n\n        this.addAttribute(new Attribute(\"höhe\", intPrimitiveType, (value: Value) => { \n            let höhe = value.object.intrinsicData[\"Höhe\"];\n            value.value = Math.round(höhe); \n        }, false, Visibility.protected, false, \"Höhe des Dreiecks\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Dreieck\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n\n                let rh = new PolygonHelper([60, 10, 110,110, 10, 110],true, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 10};\n                rh.centerXInitial = 60;\n                rh.centerYInitial = 60;\n\n                o.intrinsicData[\"Breite\"] = 100;\n                o.intrinsicData[\"Höhe\"] = 100;\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n\n            }, false, false, 'Instanziert ein neues Dreieck-Objekt.', true));\n\n            this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n                { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n                { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n            ]), null,\n                (parameters) => {\n    \n                    let o: RuntimeObject = parameters[0].value;\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\n                    let breite: number = parameters[1].value;\n                    let höhe: number = parameters[2].value;\n\n                    o.intrinsicData[\"Breite\"] = breite;\n                    o.intrinsicData[\"Höhe\"] = höhe;    \n\n                    breite /= sh.scaleFactor;\n                    höhe /= sh.scaleFactor;\n\n                    if (sh.testdestroyed(\"GrößeSetzen\")) return;\n    \n                    sh.setAllPointsUntransformed([60, 10, 60 - breite/2, 10 + höhe, 60 + breite/2, 10 + höhe ]);\n                    sh.centerXInitial = 60;\n                    sh.centerYInitial = 10 + höhe/2;\n                    \n                    // sh.setAllPointsUntransformed([60, 60 - höhe/2, 60 - breite/2, 60 + höhe/2, 60 + breite/2, 60 + höhe/2 ]);\n    \n                }, false, false, \"Setzt die Breite und Höhe des Dreiecks.\", false));\n    \n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\n\nexport class GNGKreisClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"Kreis\", module, \"Kreis-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"radius\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.r * sh.displayObject.scale.x); \n        }, false, Visibility.protected, false, \"Radius des Kreises\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Kreis\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new CircleHelper(60, 60, 50, module.main.getInterpreter(), o);\n                o.intrinsicData[\"Actor\"] = rh;\n                \n                o.intrinsicData[\"moveAnchor\"] = {x: 60, y: 60};\n\n                o.intrinsicData[\"Farbe\"] = \"rot\";\n                rh.setFillColor(0xff0000);\n\n            }, false, false, 'Instanziert ein neues Kreis-Objekt.', true));\n\n        this.addMethod(new Method(\"RadiusSetzen\", new Parameterlist([\n            { identifier: \"radius\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\n                let radius: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"radiusSetzen\")) return;\n\n                sh.setRadius(radius);\n\n            }, false, false, \"Setzt den Radius des Kreis-Objekts.\", false));\n\n\n    }\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { TurtleHelper } from \"../graphics/Turtle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\nexport class GNGTurtleClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"GTurtle\", module, \"Turtle-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].x); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { \n            let sh = value.object.intrinsicData[\"Actor\"];\n            value.value = Math.round(sh.lineElements[sh.lineElements.length - 1].y); \n        }, false, Visibility.protected, false, \"x-Position der Figur\"));\n\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].turtleAngleDeg \n        }, false, Visibility.protected, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.protected, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.protected, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.addAttribute(new Attribute(\"stiftUnten\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].penIsDown; \n        }, false, Visibility.protected, false, \"true, wenn die Turtle beim Gehen zeichnet\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"GTurtle\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TurtleHelper(100, 200, true, module.main.getInterpreter(), o);\n                rh.borderWidth = 1;\n                rh.setShowTurtle(true);\n                rh.setBorderColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 10, y: 10};\n\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                helper.registerEvents(o);\n\n            }, false, false, 'Instanziert ein neues Turtle-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"größeSetzen\")) return;\n\n                sh.turtleSize = größe;\n                sh.turn(0);\n\n            }, false, false, \"Setzt die Größe des Turtle-Dreiecks.\", false));\n\n        this.addMethod(new Method(\"FarbeSetzen\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let farbe: string = parameters[1].value;\n\n                let color: number = GNGFarben[farbe.toLocaleLowerCase()];\n                if (color == null) color = 0x000000; // default: schwarz\n\n                if (sh.testdestroyed(\"FarbeSetzen\")) return;\n\n                sh.setBorderColor(color);\n                sh.render();\n\n            }, false, false, \"Setzt die Zeichenfarbe der Turtle.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n\n                sh.turn(grad);\n\n            }, false, false, \"Dreht die Turtle um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n\n                sh.forward(länge);\n\n            }, false, false, \"Bewirkt, dass die Turtle um die angegebene Länge nach vorwärts geht.\", false));\n\n        this.addMethod(new Method(\"StiftHeben\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftHeben\")) return;\n\n                sh.penIsDown = false;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt nicht mehr zeichnet.\", false));\n\n        this.addMethod(new Method(\"StiftSenken\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"StiftSenken\")) return;\n\n                sh.penIsDown = true;\n\n            }, false, false, \"Bewirkt, dass die Turtle beim Gehen ab jetzt wieder zeichnet.\", false));\n\n        this.addMethod(new Method(\"Löschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Löschen\")) return;\n\n                sh.clear(100, 200, 0);\n\n            }, false, false, \"Löscht alles von der Turtle gezeichnete und versetzt die Turtle in den Ausgangszustand.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n\n                sh.moveTo(x, y);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (x, y) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                sh.moveTo(100, 200);\n\n            }, false, false, \"Verschiebt die Turtle an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.turn(winkel + sh.turtleAngleDeg);\n\n            }, false, false, \"Setzt den Blickwinkel der Turtle. 0° => nach rechts, 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                return Math.round(-sh.turtleAngleDeg);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].x);\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                return Math.round(sh.lineElements[sh.lineElements.length - 1].y);\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesAtLeastOneFigure();\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                return sh.touchesColor(farbe);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn sich an der aktuellen Position der Turtle mindestens eine andere Figur mit der angegebenen Farbe befindet.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.touchesShape(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die übergebene Figur die aktuelle Turtleposition enthält.', false));\n\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n\n\n\n}\n\n","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { TextHelper } from \"../graphics/Text.js\";\n\nexport class GNGTextClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        super(\"GText\", module, \"Text-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"GNGBaseFigur\"));\n\n        this.addAttribute(new Attribute(\"text\", stringPrimitiveType, (value: Value) => { \n            let text = value.object.intrinsicData[\"Actor\"].text;\n            value.value = text; \n        }, false, Visibility.private, false, \"Angezeigter Text\"));\n\n        this.addAttribute(new Attribute(\"textgröße\", intPrimitiveType, (value: Value) => { \n            let fontsize = value.object.intrinsicData[\"Actor\"].fontsize;\n            value.value = Math.round(fontsize); \n        }, false, Visibility.private, false, \"Textgröße\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Text\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let rh = new TextHelper(2, -8, 12, \"Text\", module.main.getInterpreter(), o);\n\n                o.intrinsicData[\"moveAnchor\"] = {x: 6, y: 16};\n\n                rh.setFillColor(0);\n                o.intrinsicData[\"Actor\"] = rh;\n\n            }, false, false, 'Instanziert ein neues Text-Objekt.', true));\n\n        this.addMethod(new Method(\"TextSetzen\", new Parameterlist([\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let text: string = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextSetzen\")) return;\n\n                sh.setText(text);\n\n            }, false, false, \"Ändert den Text des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextGrößeSetzen\", new Parameterlist([\n            { identifier: \"textGröße\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n                let größe: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"TextGrößeSetzen\")) return;\n\n                sh.setFontsize(größe);\n\n            }, false, false, \"Setzt die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVergrößern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVergrößern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size += 1;\n                }\n                else if (size <= 40) {\n                    size += 2;\n                }\n                else {\n                    size += 4;\n                }\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Vergrößert die Schriftgröße des Text-Objekts.\", false));\n\n        this.addMethod(new Method(\"TextVerkleinern\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"TextVerkleinern\")) return;\n\n                let size = sh.fontsize;\n                if (size <= 10) {\n                    size -= 1;\n                }\n                else if (size <= 40) {\n                    size -= 2;\n                }\n                else {\n                    size -= 4;\n                }\n                if (size < 1) {\n                    size = 1;\n                }\n\n\n                sh.setFontsize(size);\n\n            }, false, false, \"Verkleinert die Schriftgröße des Text-Objekts.\", false));\n\n\n\n    }\n\n}\n\n","import { Module, ModuleStore, TypeStore } from \"../../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\nimport { RectangleHelper } from \"../graphics/Rectangle.js\";\nimport { FilledShapeHelper } from \"../graphics/FilledShape.js\";\nimport { ShapeHelper } from \"../graphics/Shape.js\";\nimport { GroupHelper } from \"../graphics/Group.js\";\nimport { GNGFarben } from \"./GNGFarben.js\";\nimport { PolygonHelper } from \"../graphics/Polygon.js\";\nimport { CircleHelper } from \"../graphics/Circle.js\";\nimport { EllipseHelper } from \"../graphics/Ellipse.js\";\nimport { GNGEreignisbehandlung, GNGEreignisbehandlungHelper } from \"./GNGEreignisbehandlung.js\";\n\ntype GNGPoint = {\n    x: number,\n    y: number\n}\n\nexport class GNGFigurClass extends Klass {\n\n    constructor(module: Module, moduleStore: ModuleStore) {\n\n        let objectType = moduleStore.getType(\"Object\").type;\n\n        super(\"Figur\", module, \"Figur-Klasse der Graphics'n Games-Bibliothek (Cornelsen-Verlag)\");\n\n        let polygonClass: Klass = <Klass>moduleStore.getType(\"Polygon\").type;\n        let circleClass: Klass = <Klass>moduleStore.getType(\"Circle\").type;\n        let ellipseClass: Klass = <Klass>moduleStore.getType(\"Ellipse\").type;\n        let rectangleClass: Klass = <Klass>moduleStore.getType(\"Rectangle\").type;\n\n        this.addAttribute(new Attribute(\"x\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].x) }, false, Visibility.private, false, \"x-Position der Figur\"));\n        this.addAttribute(new Attribute(\"y\", intPrimitiveType, (value: Value) => { value.value = Math.round(value.object.intrinsicData[\"Center\"].y) }, false, Visibility.private, false, \"y-Position der Figur\"));\n        this.addAttribute(new Attribute(\"winkel\", intPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].angle \n        }, false, Visibility.private, false, \"Blickrichtung der Figur in Grad\"));\n\n        this.addAttribute(new Attribute(\"größe\", intPrimitiveType, (value: Value) => { \n            value.value = Math.round(value.object.intrinsicData[\"Actor\"].scaleFactor*100) \n        }, false, Visibility.private, false, \"Größe der Figur (100 entspricht 'normalgroß')\"));\n\n        this.addAttribute(new Attribute(\"sichtbar\", booleanPrimitiveType, (value: Value) => { \n            value.value = value.object.intrinsicData[\"Actor\"].displayObject?.visible \n        }, false, Visibility.private, false, \"true, wenn die Figur sichtbar ist\"));\n\n        this.setupAttributeIndicesRecursive();\n\n        this.addMethod(new Method(\"Figur\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                o.intrinsicData[\"isGNG\"] = true;\n\n                let interpreter = module.main.getInterpreter();\n                let helper: GNGEreignisbehandlungHelper = GNGEreignisbehandlung.getHelper(module);\n                let rh = new FigurHelper(interpreter, o, helper);\n                o.intrinsicData[\"Actor\"] = rh;\n\n                let center: GNGPoint = {\n                    x: 100,\n                    y: 200\n                };\n\n                o.intrinsicData[\"Center\"] = center;\n\n                this.drawInitialTriangle(rh, polygonClass, circleClass, interpreter, center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n                rh.scale(0.4, center.x, center.y);\n                rh.displayObject.updateTransform();\n\n                helper.registerEvents(o);\n\n\n            }, false, false, 'Instanziert ein neues Figur-Objekt.', true));\n\n        this.addMethod(new Method(\"GrößeSetzen\", new Parameterlist([\n            { identifier: \"größe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let groesse: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"GrößeSetzen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                let newFactor = groesse / 100;\n                sh.scale(newFactor / sh.scaleFactor, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt die Größe der Figur.\", false));\n\n\n        this.addMethod(new Method(\"Drehen\", new Parameterlist([\n            { identifier: \"grad\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let grad: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Drehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.rotate(grad, center.x, center.y);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Dreht die Figur um den angegebenen Winkel. Positiver Winkel bedeutet Drehung gegen den Uhrzeigersinn.\", false));\n\n        this.addMethod(new Method(\"Gehen\", new Parameterlist([\n            { identifier: \"länge\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let länge: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"Gehen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                let angleRad = sh.angle / 180 * Math.PI;\n                let dx = länge * Math.cos(angleRad);\n                let dy = länge * Math.sin(-angleRad);\n                center.x += dx;\n                center.y += dy;                \n\n                sh.move(dx, dy);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Bewirkt, dass die Figur um die angegebene Länge 'nach vorne' geht.\", false));\n\n        this.addMethod(new Method(\"PositionSetzen\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n\n                if (sh.testdestroyed(\"PositionSetzen\")) return;\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(x - center.x, y - center.y);\n                sh.displayObject.updateTransform();\n                center.x = x;\n                center.y = y;\n\n            }, false, false, \"Verschiebt die Figur an die Position (x, y).\", false));\n\n        this.addMethod(new Method(\"ZumStartpunktGehen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"ZumStartpunktGehen\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                sh.move(100 - center.x, 200 - center.y);\n                sh.displayObject.updateTransform();\n                center.x = 100;\n                center.y = 200;\n\n            }, false, false, \"Verschiebt die Figur an die Position (100, 200) ohne eine neue Linie zu zeichnen.\", false));\n\n        this.addMethod(new Method(\"WinkelSetzen\", new Parameterlist([\n            { identifier: \"winkel\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let winkel: number = parameters[1].value;\n\n                if (sh.testdestroyed(\"WinkelSetzen\")) return;\n\n                sh.rotate(winkel - sh.angle);\n                sh.displayObject.updateTransform();\n\n            }, false, false, \"Setzt den Blickwinkel der Figur. 0° => nach rechts (initial), 90°: => nach oben, usw..\", false));\n\n        this.addMethod(new Method(\"WinkelGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"WinkelGeben\")) return;\n\n                if(sh.angle < 0) sh.angle += 360*Math.ceil(sh.angle/(-360));\n                if(sh.angle >= 360) sh.angle -= 360*Math.floor(sh.angle/360);\n                return Math.round(sh.angle);\n\n            }, false, false, \"Gibt den Blickwinkel der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"XPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"XPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.x;\n\n            }, false, false, \"Gibt x-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"YPositionGeben\", new Parameterlist([\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"YPositionGeben\")) return;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n                return center.y;\n\n            }, false, false, \"Gibt y-Position der Turtle zurück.\", false));\n\n        this.addMethod(new Method(\"SichtbarkeitSetzen\", new Parameterlist([\n            { identifier: \"sichtbarkeit\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n                let sichtbarkeit: boolean = parameters[1].value;\n\n                if (sh.testdestroyed(\"SichtbarkeitSetzen\")) return;\n\n                sh.setVisible(sichtbarkeit);\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"Entfernen\", new Parameterlist([]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FigurHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Entfernen\")) return;\n\n                sh.destroy();\n\n            }, false, false, \"Schaltet die Sichtbarkeit der Figur ein oder aus.\", false));\n\n        this.addMethod(new Method(\"GanzNachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachVornBringen\")) return;\n\n                return sh.bringToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\n\n        this.addMethod(new Method(\"GanzNachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"GanzNachHintenBringen\")) return;\n\n                return sh.sendToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\n\n        this.addMethod(new Method(\"NachVornBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachVornBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToFront();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach vorne.', false));\n\n        this.addMethod(new Method(\"NachHintenBringen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"NachHintenBringen\")) return;\n\n                return sh.bringOnePlaneFurtherToBack();\n\n            }, false, false, 'Setzt das Grafikobjekt eine Ebene nach hinten.', false));\n\n        this.addMethod(new Method(\"EigeneFigurLöschen\", new Parameterlist([\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"EigeneFigurLöschen\")) return;\n\n                sh.destroyChildren();\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                this.drawInitialTriangle(sh, polygonClass, circleClass, this.module.main.getInterpreter(), center);\n                o.intrinsicData[\"isInitialTriangle\"] = true;\n\n\n            }, false, false, 'Löscht die hinzugefügten Figuren', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh &&  sh.collidesWith(shape)) return true;\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let farbeString: string = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                for (let shape of sh.worldHelper.shapes) {\n                    if (shape != sh) {\n                        if(shape instanceof FigurHelper){\n                            for(let part of shape.shapes){\n                                let partHelper = part.intrinsicData[\"Actor\"];\n                                if (partHelper instanceof FilledShapeHelper && farbe == partHelper.fillColor){\n                                    if(sh.collidesWith(partHelper)){\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n\n                            if(shape instanceof FilledShapeHelper && farbe == shape.fillColor){\n                                if (sh.collidesWith(shape)) return true;\n                            }\n                        }\n\n                    }\n                }\n\n                return false;\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit einem graphischen Objekt der angegebenen Farbe kollidiert.', false));\n\n        this.addMethod(new Method(\"Berührt\", new Parameterlist([\n            { identifier: \"objekt\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\n        ]), booleanPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let object: RuntimeObject = parameters[1].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n                let objectShapeHelper = object.intrinsicData[\"Actor\"];\n\n                if (objectShapeHelper == null || !(objectShapeHelper instanceof ShapeHelper)) return false;\n\n                if (sh.testdestroyed(\"Berührt\")) return;\n\n                return sh.collidesWith(objectShapeHelper);\n\n            }, false, false, 'Gibt genau dann true zurück, wenn die Figur mit dem übergebenen graphischen Objekt kollidiert.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenDreieck\", new Parameterlist([\n            { identifier: \"x1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y1\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y2\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"x3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y3\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x1: number = parameters[1].value;\n                let y1: number = parameters[2].value;\n                let x2: number = parameters[3].value;\n                let y2: number = parameters[4].value;\n                let x3: number = parameters[5].value;\n                let y3: number = parameters[6].value;\n                let farbeString: string = parameters[7].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenDreieck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(polygonClass);\n                let triangle = new PolygonHelper([x1, y1, x2, y2, x3, y3], true, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = triangle;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                triangle.rotate(sh.angle, 0, 0);\n                triangle.scale(sh.scaleFactor, 0, 0);\n                triangle.move(center.x, center.y);\n                triangle.setFillColor(farbe);\n                triangle.setBorderColor(\"black\");\n                triangle.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, dreieckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenRechteck\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenRechteck\")) return;\n\n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                let rto = new RuntimeObject(rectangleClass);\n                let rectangleHelper = new RectangleHelper(x + 0.05, y + 0.05, breite - 0.1, höhe - 0.1, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = rectangleHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                rectangleHelper.rotate(sh.angle, 0, 0);\n                rectangleHelper.scale(sh.scaleFactor, 0, 0);\n                rectangleHelper.move(center.x, center.y);\n                rectangleHelper.setFillColor(farbe);\n                rectangleHelper.setBorderColor(\"black\");\n                rectangleHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, rechteckiges Element einer eigenen Darstellung der Figur.', false));\n\n        this.addMethod(new Method(\"FigurteilFestlegenEllipse\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"farbe\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), null,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let x: number = parameters[1].value;\n                let y: number = parameters[2].value;\n                let breite: number = parameters[3].value;\n                let höhe: number = parameters[4].value;\n                let farbeString: string = parameters[5].value;\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\n\n                if (sh.testdestroyed(\"FigurteilFestlegenEllipse\")) return;\n                \n                if (o.intrinsicData[\"isInitialTriangle\"]) {\n                    o.intrinsicData[\"isInitialTriangle\"] = false;\n                    sh.destroyChildren();\n                }\n\n                let farbe = GNGFarben[farbeString];\n                if (farbe == null) farbe = 0;\n\n                höhe = höhe - 0.1;      // hack to ensure collision-handling identical to gng (also 0.05 two lines below)\n                breite = breite - 0.1;\n\n                let rto = new RuntimeObject(ellipseClass);\n                let ellipseHelper = new EllipseHelper(x + breite / 2 + 0.05, y + höhe / 2 + 0.05, breite / 2, höhe / 2, this.module.main.getInterpreter(), rto);\n                rto.intrinsicData[\"Actor\"] = ellipseHelper;\n\n                let center: GNGPoint = o.intrinsicData[\"Center\"];\n\n                ellipseHelper.rotate(sh.angle, 0, 0);\n                ellipseHelper.scale(sh.scaleFactor, 0, 0);\n                ellipseHelper.move(center.x, center.y);\n                ellipseHelper.setFillColor(farbe);\n                ellipseHelper.setBorderColor(\"black\");\n                ellipseHelper.setBorderWidth(2);\n                sh.add(rto);\n\n            }, false, false, 'Erzeugt ein neues, elliptisches Element einer eigenen Darstellung der Figur.', false));\n\n\n        this.addMethod(new Method(\"AktionAusführen\", new Parameterlist([]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Diese Methode wird vom Taktgeber aufgerufen.\"));\n\n        this.addMethod(new Method(\"TasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Taste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"SonderTasteGedrückt\", new Parameterlist([\n            { identifier: \"taste\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine Sondertaste gedrückt wird.\"));\n\n        this.addMethod(new Method(\"MausGeklickt\", new Parameterlist([\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n            { identifier: \"anzahl\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\n        ]), voidPrimitiveType,\n            null,  // no implementation!\n            false, false, \"Wird aufgerufen, wenn eine die linke Maustaste gedrückt wird.\"));\n\n\n\n    }\n\n\n    drawInitialTriangle(gh: GroupHelper, triangleClass: Klass, circleClass: Klass, interpreter: Interpreter, center: GNGPoint) {\n        let t: RuntimeObject = new RuntimeObject(triangleClass);\n        let th: PolygonHelper = new PolygonHelper([-50, -50, 50, 0, -50, 50], true, interpreter, t);\n        t.intrinsicData[\"Actor\"] = th;\n        th.move(center.x, center.y);\n        th.setFillColor(\"yellow\");\n        th.setBorderColor(\"black\");\n        th.setBorderWidth(2);\n        gh.add(t);\n\n        let c: RuntimeObject = new RuntimeObject(circleClass);\n        let ch: CircleHelper = new CircleHelper(0, 0, 10, interpreter, c);\n        c.intrinsicData[\"Actor\"] = ch;\n        ch.move(center.x, center.y);\n        ch.setFillColor(\"blue\");\n        ch.setBorderColor(\"black\");\n        ch.setBorderWidth(2);\n        gh.add(c);\n\n    }\n}\n\n\nclass FigurHelper extends GroupHelper {\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject, private gngEreignisbehandlungsHelper: GNGEreignisbehandlungHelper) {\n        super(interpreter, runtimeObject);\n    }\n\n    destroy(){\n        this.gngEreignisbehandlungsHelper.unregisterEvents(this.runtimeObject);\n        super.destroy();\n    }\n}\n\n","import { Module } from \"../compiler/parser/Module.js\";\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\n\nexport class RandomClass extends Klass {\n\n    constructor(module: Module) {\n\n        super(\"Random\", module, \"Zufallszahlengenerator\");\n\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\n\n        this.setupAttributeIndicesRecursive();\n\n\n        this.addMethod(new Method(\"nextInt\", new Parameterlist([\n            { identifier: \"bound\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let o: RuntimeObject = parameters[0].value;\n                let bound: number = parameters[1].value;\n\n                return Math.floor(Math.random()*bound);\n\n            }, false, false, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {0, 1, ..., bound - 1} zurück.', false));\n\n        this.addMethod(new Method(\"randint\", new Parameterlist([\n            { identifier: \"from\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), intPrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.floor(Math.random()*(to - from + 1) + from);\n\n            }, false, true, 'Gibt eine ganzzahlige Zufallszahl aus der Menge {from, from + 1, ..., to} zurück.', false));\n\n        this.addMethod(new Method(\"randdouble\", new Parameterlist([\n            { identifier: \"from\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n            { identifier: \"to\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\n        ]), doublePrimitiveType,\n            (parameters) => {\n\n                let from: number = parameters[1].value;\n                let to: number = parameters[2].value;\n\n                return Math.random()*(to - from) + from;\n\n            }, false, true, 'Gibt eine Zufallszahl aus dem Intervall [from, to[ zurück.', false));\n\n\n\n    }\n\n}\n\n\n","import { Enum } from \"../../compiler/types/Enum.js\";\nimport { Module } from \"../../compiler/parser/Module.js\";\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\n\nexport class DirectionClass extends Enum {\n\n    constructor(module: Module){\n        super(\"Direction\", module, [\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"top\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"right\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"bottom\"\n            },\n            {\n                type: TokenType.pushEnumValue,\n                position: null,\n                identifier: \"left\"\n            }\n        ]);\n\n        this.documentation = \"Richtung (oben, rechts, unten, links)\"\n    }\n\n}","type Patch = {\r\n    old: RegExp, \r\n    new: string\r\n}\r\n\r\nexport class Patcher {\r\n\r\n    static patches: Patch[] = [\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 0\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 1\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 2\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 3\"},\r\n        {old: /SpriteLibrary.Ship_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 4\"},\r\n\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 5\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 6\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 7\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 8\"},\r\n        {old: /SpriteLibrary.Schuss_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 9\"},\r\n\r\n        {old: /SpriteLibrary.Asteroid_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 10\"},\r\n        {old: /SpriteLibrary.Gegner_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 11\"},\r\n\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*0/g, new: \"SpriteLibrary.Space_Shooter_1, 12\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*1/g, new: \"SpriteLibrary.Space_Shooter_1, 13\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*2/g, new: \"SpriteLibrary.Space_Shooter_1, 14\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*3/g, new: \"SpriteLibrary.Space_Shooter_1, 15\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*4/g, new: \"SpriteLibrary.Space_Shooter_1, 16\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*5/g, new: \"SpriteLibrary.Space_Shooter_1, 17\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*6/g, new: \"SpriteLibrary.Space_Shooter_1, 18\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*7/g, new: \"SpriteLibrary.Space_Shooter_1, 19\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*8/g, new: \"SpriteLibrary.Space_Shooter_1, 20\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*9/g, new: \"SpriteLibrary.Space_Shooter_1, 21\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*10/g, new: \"SpriteLibrary.Space_Shooter_1, 22\"},\r\n        {old: /SpriteLibrary.Explosion_Adrian,\\s*11/g, new: \"SpriteLibrary.Space_Shooter_1, 23\"},\r\n    ] \r\n\r\n    static patch(text: string): {patchedText: string, modified: boolean} {\r\n\r\n        let modified: boolean = false;\r\n\r\n        for(let patch of Patcher.patches){\r\n            if(text.match(patch.old) != null){\r\n                text = text.replace(patch.old, patch.new);\r\n                modified = true;\r\n            }\r\n        }\r\n\r\n        return {patchedText: text, modified: modified}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\n\r\ntype Key = {name: string, code: number};\r\n\r\nexport class KeyEvent extends Klass {\r\n\r\n    constructor(module: Module, moduleStore: ModuleStore) {\r\n\r\n        super(\"KeyEvent\", module, \"Nachbildung von java.awt.event.KeyEvent\");\r\n\r\n        this.setBaseClass(<Klass>moduleStore.getType(\"Object\").type);\r\n\r\n        /**\r\n         *  \"Enter\": 13,\r\n        \"ArrowLeft\": 37,\r\n        \"ArrowRight\": 39,\r\n        \"ArrowUp\": 38,\r\n        \"ArrowDown\": 40,\r\n        \"F1\": 112,\r\n        \"F2\": 113,\r\n        \"F3\": 114,\r\n        \"F4\": 115,\r\n        \"F5\": 116,\r\n        \"F6\": 117,\r\n        \"F7\": 118,\r\n        \"F8\": 119,\r\n        \"F9\": 120,\r\n        \"F10\": 121,\r\n        \"F11\": 122,\r\n        \"F12\": 123,\r\n        \"PageUp\": 33,\r\n        \"PageDown\": 34,\r\n        \"Insert\": 155\r\n         */\r\n\r\n        let keys: Key[] = [{name: \"VK_ENTER\", code: 13}, {name: \"VK_LEFT\", code: 37}, {name: \"VK_UP\", code: 38}, \r\n        {name: \"VK_RIGHT\", code: 39}, {name: \"VK_DOWN\", code: 40}, {name: \"VK_PAGE_UP\", code: 33}, {name: \"VK_PAGE_DOWN\", code: 34},\r\n        {name: \"VK_INSERT\", code: 155}];\r\n\r\n        for(let i = 1; i <= 12; i++){\r\n            keys.push({name: \"VK\" + i, code: 111 + i});\r\n        }\r\n        \r\n        for(let key of keys){\r\n            this.addAttribute(new Attribute(key.name, intPrimitiveType, (value) => {value.value = key.code}, \r\n            true, Visibility.public, true, \"KeyCode für die Taste \" + key.name));\r\n        }\r\n\r\n\r\n        this.setupAttributeIndicesRecursive();\r\n        this.staticClass.setupAttributeIndicesRecursive();\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n    }\r\n\r\n}\r\n\r\n","import { FileData, WorkspaceSettings } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { SectorClass } from \"../../runtimelibrary/graphics/Sector.js\";\r\nimport { ArcClass } from \"../../runtimelibrary/graphics/Arc.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass, TileClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { GamepadClass } from \"../../runtimelibrary/Gamepad.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { MathToolsClass } from \"../../runtimelibrary/MathToolsClass.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\nimport { GNGZeichenfensterClass } from \"../../runtimelibrary/gng/GNGZeichenfenster.js\";\r\nimport { GNGRechteckClass } from \"../../runtimelibrary/gng/GNGRechteck.js\";\r\nimport { GNGBaseFigurClass } from \"../../runtimelibrary/gng/GNGBaseFigur.js\";\r\nimport { GNGAktionsempfaengerInterface } from \"../../runtimelibrary/gng/GNGAktionsempfaenger.js\";\r\nimport { GNGDreieckClass } from \"../../runtimelibrary/gng/GNGDreieck.js\";\r\nimport { GNGKreisClass } from \"../../runtimelibrary/gng/GNGKreis.js\";\r\nimport { GNGTurtleClass } from \"../../runtimelibrary/gng/GNGTurtle.js\";\r\nimport { GNGTextClass } from \"../../runtimelibrary/gng/GNGText.js\";\r\nimport { GNGEreignisbehandlung } from \"../../runtimelibrary/gng/GNGEreignisbehandlung.js\";\r\nimport { GNGFigurClass } from \"../../runtimelibrary/gng/GNGFigur.js\";\r\nimport { RandomClass } from \"../../runtimelibrary/Random.js\";\r\nimport { DirectionClass } from \"../../runtimelibrary/graphics/Direction.js\";\r\nimport { Patcher } from \"./Patcher.js\";\r\nimport { KeyEvent as KeyEventClass } from \"../../runtimelibrary/graphics/KeyEvent.js\";\r\nimport { Formatter } from \"../../main/gui/Formatter.js\";\r\n\r\nexport type ExportedWorkspace = {\r\n    name: string;\r\n    modules: ExportedModule[];\r\n    settings: WorkspaceSettings;\r\n}\r\n\r\nexport type ExportedModule = {\r\n    name: string;\r\n    text: string;\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n}\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    colorInformation: monaco.languages.IColorInformation[] = [];\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3, bracketColorizationOptions: {enabled: true} });\r\n        let formatter = new Formatter();\r\n\r\n        if(main.isEmbedded() && file.text != null && file.text.length > 3){\r\n            let edits = <monaco.languages.TextEdit[]>formatter.format(this.model);\r\n            this.model.applyEdits(edits);\r\n        }\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    toExportedModule(): ExportedModule {\r\n        return {\r\n            name: this.file.name,\r\n            text: this.getProgramTextFromMonacoModel(),\r\n            identical_to_repository_version: this.file.identical_to_repository_version,\r\n            is_copy_of_id: this.file.is_copy_of_id,\r\n            repository_file_version: this.file.repository_file_version\r\n        }\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let patched = Patcher.patch(f.text);\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: patched.patchedText,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: !patched.modified,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false,\r\n            file_type: 0\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new RandomClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new MathToolsClass(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new DirectionClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new SectorClass(this));\r\n        this.typeStore.addType(new ArcClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new TileClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new GamepadClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class GNGModule extends Module {\r\n    constructor(main: MainBase, moduleStore: ModuleStore) {\r\n\r\n        super({ name: \"Graphics and Games - Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n        this.typeStore.addType(new GNGAktionsempfaengerInterface(this));\r\n        this.typeStore.addType(new GNGBaseFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGZeichenfensterClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGEreignisbehandlung(this, moduleStore));\r\n        this.typeStore.addType(new GNGRechteckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGDreieckClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGKreisClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTextClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGTurtleClass(this, moduleStore));\r\n        this.typeStore.addType(new GNGFigurClass(this, moduleStore));\r\n        this.typeStore.addType(new KeyEventClass(this, moduleStore));\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: {[name: string]: Module} = {};\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean, private additionalLibraries: string[] = []) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n        \r\n        // additionalLibraries = [\"gng\"];\r\n\r\n        for(let lib of additionalLibraries){\r\n            this.addLibraryModule(lib);\r\n        }\r\n    }\r\n\r\n    addLibraryModule(identifier: string){\r\n        switch(identifier){\r\n            case \"gng\": this.putModule(new GNGModule(this.main, this));\r\n            break;\r\n        }\r\n    }\r\n\r\n    setAdditionalLibraries(additionalLibraries: string[]){\r\n\r\n        this.modules = this.modules.filter( m => (!m.isSystemModule) || m instanceof BaseModule);\r\n        this.moduleMap = {};\r\n\r\n        for(let m of this.modules){\r\n            this.moduleMap[m.file.name] =  m;\r\n        }\r\n\r\n        if(additionalLibraries != null){\r\n            for(let lib of additionalLibraries){\r\n                this.addLibraryModule(lib);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main, true);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        let mousePointer = window.PointerEvent ? \"pointer\" : \"mouse\";\r\n\r\n        this.$sliderDiv.on(mousePointer + \"down\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(mousePointer + \"move.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(mousePointer + \"up.slider\", () => {\r\n                jQuery(document).off(mousePointer + \"move.slider\");\r\n                jQuery(document).off(mousePointer + \"up.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        if($fileListDiv != null){\r\n            let $filesDiv = $fileListDiv.parent();\r\n            let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n            $filesDiv.append($addButton);\r\n    \r\n            $addButton.on(\"click\", () => {\r\n    \r\n                let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n                let fileData = this.addModule(module);\r\n    \r\n                this.renameElement(fileData, () => {\r\n                    // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                    if (that.currentFile != fileData) {\r\n                        that.selectFile(fileData);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        if(this.$fileListDiv != null){\r\n            this.$fileListDiv.append($fileDiv);\r\n        }\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv,\r\n            isFolder: false,\r\n            path: []\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        if(this.$fileListDiv == null) return;\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File, ExportedWorkspace } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { downloadFile, makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\nimport { HitPolygonStore } from \"../runtimelibrary/graphics/PolygonStore.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    speed?: number | \"max\",\r\n    id?: string,\r\n    hideStartPanel?: boolean,\r\n    hideEditor?: boolean,\r\n    libraries?: string[]\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n\r\n    pixiApp: PIXI.Application;\r\n\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) { };\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        if (!this.config.hideStartPanel) {\r\n            this.indexedDB = new EmbeddedIndexedDB();\r\n            this.indexedDB.open(() => {\r\n\r\n                if (this.config.id != null) {\r\n                    this.readScripts();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.hideEditor == null) this.config.hideEditor = false;\r\n        if (this.config.hideStartPanel == null) this.config.hideStartPanel = false;\r\n\r\n        if (this.config.withBottomPanel == null) {\r\n            this.config.withBottomPanel = this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList;\r\n        }\r\n\r\n        if (this.config.hideEditor) {\r\n            this.config.withBottomPanel = false;\r\n            this.config.withFileList = false;\r\n            this.config.withConsole = false;\r\n            this.config.withPCode = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n        if (this.config.withBottomPanel) {\r\n            if (this.config.withFileList == null) this.config.withFileList = true;\r\n            if (this.config.withPCode == null) this.config.withPCode = true;\r\n            if (this.config.withConsole == null) this.config.withConsole = true;\r\n            if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        }\r\n\r\n        if (this.config.speed == null) this.config.speed = 9;\r\n        if (this.config.libraries == null) this.config.libraries = [];\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            script = this.eraseDokuwikiSearchMarkup(script);\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n        this.currentWorkspace.settings.libraries = this.config.libraries;\r\n        this.currentWorkspace.alterAdditionalLibraries();\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false,\r\n            file_type: 0\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n        let $buttonOpen = jQuery('<label type=\"file\" class=\"img_open-file jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace aus Datei laden\"><input type=\"file\" style=\"display:none\"></label>');\r\n\r\n        let that = this;\r\n\r\n        $buttonOpen.find('input').on('change', (event) => {\r\n            //@ts-ignore\r\n            var files: FileList = event.originalEvent.target.files;\r\n            that.loadWorkspaceFromFile(files[0]);\r\n        })\r\n\r\n        let $buttonSave = jQuery('<div class=\"img_save-dark jo_button jo_active\"' +\r\n            'style=\"margin-right: 8px;\" title=\"Workspace in Datei speichern\"></div>');\r\n\r\n\r\n        $buttonSave.on('click', () => { that.saveWorkspaceToFile() });\r\n\r\n        $controlsDiv.append($buttonOpen, $buttonSave);\r\n\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n\r\n\r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            if (this.config.hideEditor) {\r\n                $rightDiv.prepend($controlsDiv);\r\n            } else {\r\n                $centerDiv.prepend($controlsDiv);\r\n                $controlsDiv.addClass('joe_controlPanel_top');\r\n                $editorDiv.css({\r\n                    'position': 'relative',\r\n                    'height': '1px'\r\n                });\r\n            }\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n\r\n        if (!this.config.hideEditor) {\r\n            new EmbeddedSlider($rightDiv, true, false, () => {\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                this.editor.editor.layout();\r\n            });\r\n        }\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über die Online-IDE ...\",\r\n                link: \"https://www.online-ide.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }\r\n            }], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.interpreter.controlButtons.speedControl.setSpeedInStepsPerSecond(this.config.speed);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n        if (this.config.hideEditor) {\r\n            $centerDiv.hide();\r\n            $rightDiv.css(\"flex\", \"1\");\r\n            if (!this.config.hideStartPanel) {\r\n                $div.find(\".joe_rightDivInner\").css('height', 'calc(100% - 24px)');\r\n                $div.find(\".joe_controlsDiv\").css('padding', '2px');\r\n                $div.find(\".jo_speedcontrol-outer\").css('z-index', '10');\r\n            } else {\r\n                $div.find(\".joe_controlsDiv\").hide();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                    bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    if (this.config.hideStartPanel) {\r\n                        this.actionManager.trigger('interpreter.start');\r\n                    }\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    saveWorkspaceToFile() {\r\n        let filename: string = prompt(\"Bitte geben Sie den Dateinamen ein\", \"workspace.json\");\r\n        if (filename == null) {\r\n            alert(\"Der Dateiname ist leer, daher wird nichts gespeichert.\");\r\n            return;\r\n        }\r\n        if (!filename.endsWith(\".json\")) filename = filename + \".json\";\r\n        let ws = this.currentWorkspace;\r\n        let name: string = ws.name.replace(/\\//g, \"_\");\r\n        downloadFile(ws.toExportedWorkspace(), filename)\r\n    }\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-left: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n    loadWorkspaceFromFile(file: globalThis.File) {\r\n        let that = this;\r\n        if (file == null) return;\r\n        var reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            let text: string = <string>event.target.result;\r\n            if (!text.startsWith(\"{\")) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ew: ExportedWorkspace = JSON.parse(text);\r\n\r\n            if (ew.modules == null || ew.name == null || ew.settings == null) {\r\n                alert(`<div>Das Format der Datei ${file.name} passt nicht.</div>`);\r\n                return;\r\n            }\r\n\r\n            let ws: Workspace = new Workspace(ew.name, this, 0);\r\n            ws.settings = ew.settings;\r\n            ws.alterAdditionalLibraries();\r\n\r\n            for (let mo of ew.modules) {\r\n                let f: File = {\r\n                    name: mo.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: mo.text,\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    is_copy_of_id: null,\r\n                    repository_file_version: null,\r\n                    identical_to_repository_version: null\r\n                };\r\n\r\n                let m = new Module(f, this);\r\n                ws.moduleStore.putModule(m);\r\n            }\r\n            that.currentWorkspace = ws;\r\n\r\n            if(that.fileExplorer != null){\r\n                that.fileExplorer.removeAllFiles();\r\n                ws.moduleStore.getModules(false).forEach(module => that.fileExplorer.addModule(module));\r\n                that.fileExplorer.setFirstFileActive();\r\n            } else {\r\n                this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n            }\r\n\r\n            that.saveScripts();\r\n\r\n        };\r\n        reader.readAsText(file);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n        this.$runDiv = jQuery(\r\n            `\r\n            <div class=\"jo_tab jo_active jo_run\">\r\n            <div class=\"jo_run-programend\">Programm beendet</div>\r\n            <div class=\"jo_run-input\">\r\n            <div>\r\n            <div>\r\n        <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n        <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n        <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n        </div>\r\n        \r\n        <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n    </div>\r\n    </div>\r\n    </div> \r\n    <div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n    </div>\r\n    \r\n    </div>\r\n    \r\n    `);\r\n\r\n\r\n        if (!this.config.hideEditor) {\r\n            let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n            $tabheadings.css('position', 'relative');\r\n            let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n            let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n            $tabheadings.append($thRun, $thVariables);\r\n            this.$rightDivInner.append($tabheadings);\r\n            let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n\r\n            let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n                <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n                <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n                </ul>\r\n                </div>\r\n                `);\r\n\r\n            $vd.append(this.$debuggerDiv, $alternativeText);\r\n            let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n            $tabs.append(this.$runDiv, $vd);\r\n            this.$rightDivInner.append($tabs);\r\n            makeTabs($rightDiv);\r\n        } else {\r\n            this.$rightDivInner.append(this.$runDiv);\r\n        }\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                script.text = this.eraseDokuwikiSearchMarkup(script.text);\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    eraseDokuwikiSearchMarkup(text: string): string {\r\n        return text.replace(/<span class=\"search\\whit\">(.*?)<\\/span>/g, \"$1\");\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}