{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../../../src/client/compiler/lexer/Token.ts","webpack:///../../../../src/client/compiler/types/Types.ts","webpack:///../../../src/client/interpreter/RuntimeObject.ts","webpack:///../../../../src/client/compiler/parser/LabelManager.ts","webpack:///../../../../src/client/compiler/types/Class.ts","webpack:///../../../../src/client/compiler/types/Array.ts","webpack:///../../../../src/client/compiler/types/ObjectClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/IntegerClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/FloatClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/CharacterClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/BooleanClass.ts","webpack:///../../../../../src/client/compiler/types/boxedTypes/DoubleClass.ts","webpack:///../../../../src/client/compiler/types/PrimitiveTypes.ts","webpack:///../../../../src/client/compiler/lexer/Lexer.ts","webpack:///../../../../src/client/main/gui/Formatter.ts","webpack:///../../../../src/client/main/gui/ThemeManager.ts","webpack:///../../../../src/client/compiler/parser/SymbolTable.ts","webpack:///../../../../src/client/compiler/types/Enum.ts","webpack:///../../../src/client/runtimelibrary/Input.ts","webpack:///../../../../src/client/compiler/parser/CodeGenerator.ts","webpack:///../../../../src/client/compiler/parser/Parser.ts","webpack:///../../../../src/client/compiler/types/TypeTools.ts","webpack:///../../../../src/client/compiler/parser/TypeResolver.ts","webpack:///../../../src/client/compiler/Compiler.ts","webpack:///../../../../src/client/runtimelibrary/collections/ListIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/ArrayList.ts","webpack:///../../../../src/client/runtimelibrary/collections/Collection.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterable.ts","webpack:///../../../../src/client/runtimelibrary/collections/Iterator.ts","webpack:///../../../../src/client/runtimelibrary/collections/List.ts","webpack:///../../../../src/client/runtimelibrary/collections/Stack.ts","webpack:///../../../../src/client/runtimelibrary/collections/Vector.ts","webpack:///../../../../src/client/runtimelibrary/collections/Set.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetIteratorImpl.ts","webpack:///../../../../src/client/runtimelibrary/collections/SetHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedHashSet.ts","webpack:///../../../../src/client/runtimelibrary/collections/Queue.ts","webpack:///../../../../src/client/runtimelibrary/collections/Deque.ts","webpack:///../../../../src/client/runtimelibrary/collections/LinkedList.ts","webpack:///../../../src/client/runtimelibrary/Console.ts","webpack:///../../../../src/client/main/gui/PrintManager.ts","webpack:///../../../src/client/interpreter/InputManager.ts","webpack:///../../../src/client/communication/AjaxHelper.ts","webpack:///../../../src/client/communication/NetworkManager.ts","webpack:///../../../src/client/interpreter/DebuggerElement.ts","webpack:///../../../src/client/tools/StringTools.ts","webpack:///../../../src/client/tools/HtmlTools.ts","webpack:///../../../../src/client/main/gui/Accordion.ts","webpack:///../../../src/client/interpreter/WatcherElement.ts","webpack:///../../../src/client/interpreter/Debugger.ts","webpack:///../../../src/client/compiler/AdhocCompiler.ts","webpack:///../../../src/client/interpreter/Evaluator.ts","webpack:///../../../src/client/workspace/Workspace.ts","webpack:///../../../src/client/tools/SoundTools.ts","webpack:///../../../../src/client/main/gui/ActionManager.ts","webpack:///../../../../src/client/compiler/parser/ProgramPrinter.ts","webpack:///../../../../../src/client/main/gui/console/ConsoleEntry.ts","webpack:///../../../../../src/client/main/gui/console/MyConsole.ts","webpack:///../../../../src/client/main/gui/ErrorManager.ts","webpack:///../../../../src/client/main/gui/HomeworkManager.ts","webpack:///../../../../src/client/main/gui/BottomDiv.ts","webpack:///../../../../src/client/main/gui/MyCompletionItemProvider.ts","webpack:///../../../../src/client/compiler/types/DeclarationHelper.ts","webpack:///../../../../src/client/main/gui/MySignatureHelpProvider.ts","webpack:///../../../../src/client/main/gui/MyHoverProvider.ts","webpack:///../../../../src/client/main/gui/MyCodeActionProvider.ts","webpack:///../../../../src/client/main/gui/MyReferenceProvider.ts","webpack:///../../../../src/client/main/gui/Editor.ts","webpack:///../../../../src/client/main/gui/MyJava.ts","webpack:///../../../../src/client/main/gui/Dialog.ts","webpack:///../../../../src/client/main/gui/UserMenu.ts","webpack:///../../../../src/client/main/gui/MainMenu.ts","webpack:///../../../../src/client/main/gui/SpeedControl.ts","webpack:///../../../../src/client/main/gui/ProgramControlButtons.ts","webpack:///../../../../src/client/main/gui/DistributeToStudentsDialog.ts","webpack:///../../../../src/client/main/gui/ProjectExplorer.ts","webpack:///../../../../../src/client/main/gui/diagrams/ZoomControl.ts","webpack:///../../../../../src/client/main/gui/diagrams/Diagram.ts","webpack:///../../../../../src/client/main/gui/diagrams/DiagramElement.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassBox.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ArrowHead.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/DiagramArrow.ts","webpack:///../../../../../../src/client/main/gui/diagrams/classdiagram/ClassDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ListDiagram.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagramVariant.ts","webpack:///../../../../../../src/client/main/gui/diagrams/objectdiagram/ObjectDiagram.ts","webpack:///../../../../src/client/main/gui/RightDiv.ts","webpack:///../../../../src/client/main/gui/Sliders.ts","webpack:///../../../../src/client/main/gui/TeacherExplorer.ts","webpack:///../../../src/client/main/Login.ts","webpack:///../../../../src/client/main/gui/ViewModeController.ts","webpack:///../../../../src/client/compiler/parser/SemicolonAngel.ts","webpack:///../../../../src/client/main/gui/WindowStateManager.ts","webpack:///../../../src/client/main/Main.ts","webpack:///../../../../src/client/main/gui/Helper.ts","webpack:///../../../src/client/tools/KeyboardTool.ts","webpack:///../../../src/client/interpreter/Interpreter.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ColorHelper.ts","webpack:///../../../../src/client/runtimelibrary/graphics/World.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Actor.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Alignment.ts","webpack:///../../../src/client/tools/MatheTools.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Shape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Bitmap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/FilledShape.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Circle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Color.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Ellipse.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Group.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Key.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Polygon.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Rectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RepeatType.ts","webpack:///../../../../src/client/runtimelibrary/graphics/RoundedRectangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/ScaleMode.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sound.ts","webpack:///../../../../src/client/runtimelibrary/graphics/PolygonStore.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Sprite.ts","webpack:///../../../../src/client/runtimelibrary/graphics/SpriteLibraryEnum.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Text.ts","webpack:///../../../src/client/runtimelibrary/Math.ts","webpack:///../../../src/client/runtimelibrary/System.ts","webpack:///../../../src/client/runtimelibrary/SystemTools.ts","webpack:///../../../src/client/runtimelibrary/Timer.ts","webpack:///../../../../src/client/runtimelibrary/collections/Map.ts","webpack:///../../../../src/client/runtimelibrary/collections/MapHelper.ts","webpack:///../../../../src/client/runtimelibrary/collections/HashMap.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Triangle.ts","webpack:///../../../../src/client/runtimelibrary/graphics/LocalDateTime.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Line.ts","webpack:///../../../src/client/runtimelibrary/Vector2.ts","webpack:///../../../../src/client/runtimelibrary/graphics/MouseListener.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocketClient.ts","webpack:///../../../../src/client/runtimelibrary/network/WebSocket.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Processing.ts","webpack:///../../../../src/client/runtimelibrary/graphics/Turtle.ts","webpack:///../../../../src/client/compiler/parser/Module.ts","webpack:///../../../src/client/embedded/EmbeddedSlider.ts","webpack:///../../../src/client/embedded/EmbeddedFileExplorer.ts","webpack:///../../../src/client/embedded/EmbeddedIndexedDB.ts","webpack:///../../../src/client/embedded/MainEmbedded.ts","webpack:///../../../src/client/embedded/EmbeddedStarter.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","TokenTypeReadable","identifier","integerConstant","floatingPointConstant","booleanConstant","stringConstant","charConstant","true","false","keywordClass","keywordThis","keywordSuper","keywordNew","keywordInterface","keywordEnum","keywordVoid","keywordAbstract","keywordPublic","keywordProtected","keywordPrivate","keywordTransient","keywordStatic","keywordExtends","keywordImplements","keywordWhile","keywordDo","keywordFor","keywordSwitch","keywordCase","keywordDefault","keywordIf","keywordThen","keywordElse","keywordReturn","keywordBreak","keywordContinue","keywordNull","keywordFinal","keywordInstanceof","keywordPrint","keywordPrintln","leftBracket","rightBracket","leftSquareBracket","rightSquareBracket","leftCurlyBracket","rightCurlyBracket","leftRightSquareBracket","dot","minus","modulo","plus","multiplication","division","singleQuote","doubleQuote","doubleMinus","doublePlus","lower","greater","lowerOrEqual","greaterOrEqual","equal","notEqual","assignment","plusAssignment","minusAssignment","multiplicationAssignment","divisionAssignment","moduloAssignment","ampersand","and","or","not","ternaryOperator","semicolon","colon","ellipsis","comma","backslash","at","space","tab","newline","identifierChar","comment","endofSourcecode","specialCharList","'","linefeed","keywordList","EscapeSequenceList","\"","Type","onlyFirstPass","usagePositions","Map","documentation","this","PrimitiveType","initialValue","description","type","operation","secondOperandType","opTypeMap","operationTable","canCastToMap","Attribute","updateValue","isStatic","visibility","isFinal","Method","parameterlist","returnType","invokeOrAST","isAbstract","isConstructor","isVirtual","reserveStackForLocalVariables","genericTypeMap","invoke","program","method","signature","id","parameters","hasGenericTypes","length","isEllipsis","index","label","getTypeIdentifier","arrayOfType","leftBracketAlreadyThere","snippet","isVoidReturnDelta","firstOperand","secondOperand","Parameterlist","computeId","map","tv","join","klass","intrinsicData","attributeValues","class","av","baseClass","set","attributes","att","v","Visibility","booleanPrimitiveTypeCopy","maxLabelIndex","labeledNodes","labelMap","jumpNodesToResolve","switchStatements","switchStatement","push","position","codeGenerator","labelIndex","statementList","statements","node","stepFinished","pushStatements","registerJumpNode","offset","labeledNode","indexOf","newNode","ntr","ln","noOp","jn","dest","destination","sw","destinationLabels","dl","destinationMap","constant","defaultDestination","typeVariables","isTypeVariable","typeVariablesReady","implements","firstPassImplements","postConstructorCallbacks","methods","methodMap","attributeMap","public","staticClass","attributeInitializationProgram","labelManager","k","isGenericVariantFrom","getThisOrExtendedInterface","getNonGenericIdentifier","i2","usedSystemClasses","isSystemModule","getCompositeData","cd","interf","cdMap","a","Klass","cda","multiples","clearUsagePositions","callbacks","concat","visibilityUpTo","identifierAndBracketAfterCursor","rangeToReplace","currentMethod","itemList","getAttributes","attribute","kind","monaco","languages","CompletionItemKind","Field","insertText","range","undefined","getMethods","pushSuperCompletionItem","getCompletionLabel","filterText","command","title","arguments","getCompletionSnippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","getCompletionItems","replace","programStack","programPosition","textPosition","line","column","callbackAfterReturn","isCalledFromOutside","addMethod","addAttribute","nullType","firstOpClass","typeLeft","typeRight","upToVisibility","filter","baseClassUptoVisibility","protected","found","upToVisibilityInBaseClass","hasConstructor","parameterTypes","classIdentifier","constructors","getConstructor","findSuitableMethods","searchConstructor","methodList","staticMethods","getMethodsThatFitWithCasting","error","getMethod","foundButInvisible","attributeNotFound","baseClassAttribute","getAttribute","stringPrimitiveType","Math","min","canCastTo","dontInheritFrom","message","missingMethods","missingAbstractMethods","implementedSignatures","missingInterfaceMethods","hierarchy","abstractMethods","getSignatureWithReturnParameter","maxLength","private","getValue","debugOutput","newKlass","slice","classObject","visibilityUpToBaseClass","notFound","baseClassAttributeWithError","extends","if2","newInterface","Interface","type2","suitableMethods","howManyCastingsMax","oneWithCorrectIdentifierFound","howManyCastings","hasEllipsis","getParameterCount","suits","mParameterType","getParameterType","givenType","mParameterTypeEllispsis","getParameter","j","typeString","getVisibilityUpTo","objectType","currentClassContext","hasAncestorOrIs","lengthAttribute","intPrimitiveType","ArrayType","equals","referenceElement","array","destType","castTo","s1","unboxableAs","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","initializeAttributeValues","floatPrimitiveType","doublePrimitiveType","declaration","parseInt","v0","v1","booleanPrimitiveType","sign","toString","MAX_VALUE","MIN_VALUE","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","parseFloat","trunc","isNaN","Infinity","charPrimitiveType","charCodeAt","charAt","match","toLocaleUpperCase","toLocaleLowerCase","toLowerCase","negation","automatic","needsStatement","String","fromCharCode","stringClass","forEach","localeCompare","endsWith","startsWith","substring","trim","lastIndexOf","pattern","regExp","RegExp","strings","split","values","voidPrimitiveType","LexerState","varType","IntegerType","FloatType","DoubleType","CharacterType","BooleanType","TokenTypeToDataTypeMap","spaceTokens","correspondingBracket","input","tokenList","errorList","bracketError","bracketStack","pos","nonSpaceLastTokenType","tokens","errors","currentChar","nextChar","mainState","bracketOpen","pop","bracketClosed","setBracketError","tt","openBracket","char","specialCharToken","pushToken","next","checkClosingBracket","pushError","lexMultilineComment","lexEndofLineComment","isDigit","lexNumber","lexCharacterConstant","lexStringConstant","lexSpace","lexAnnotation","lexIdentifierOrKeyword","text","errorLevel","level","base","charCode","posStart","posEnd","escapeChar","lastCharWasNewline","firstChar","radix","exponent","posExponentStart","exponentString","pow","isSpace","autoFormatTriggerCharacters","displayName","registerDocumentFormattingEditProvider","registerOnTypeFormattingEditProvider","model","ch","options","token","edits","format","Promise","resolve","e","e1","endLineNumber","startLineNumber","endColumn","startColumn","splice","delta","substr","editor","EndOfLinePreference","LF","tokenlist","lex","lastNonSpaceToken","indentLevel","curlyBracesOpenAtLines","indentLevelAtSwitchStatements","switchHappend","lastTokenWasNewLine","roundBracketsOpen","deleteSpaces","replaceBetween","token1","insertSpaces","openedAtLine","repeat","nextToken1","nextToken2","lastToken1","lastToken2","isBinaryOperator","lastTokenIsOperator","nextTokenIsOperator","getNextNonSpaceToken","beginNextLine","token2","currentIndentation","il","correctIndentation","lowerGeneric","lowerBelongsToGenericExpression","greaterGeneric","greaterBelongsToGenericExpression","tokenBefore","spaces","deleteOverlappingRanges","currentIndex","return","positionFrom","positionTo","numberOfSpaces","ThemeManager","themes","initThemes","theme","internalSwitchTheme","setTheme","monacoTheme","root","document","documentElement","keys","cssColors","style","setProperty","parentSymbolTable","SymbolTable","maxId","beginsNewStackframe","childSymbolTables","variableMap","classContext","parent","imitation","st","maxStackPos","variable","stackPos","stackframeSize","completionItems","Snippet","Variable","getLocalVariableCompletionItems","containsPosition","shortestSymbolTableContainingPosition","shortestPosition","st1","findTableAtPosition","EnumRuntimeObject","en","enumValue","enumValueNodes","enumInfoList","identifierToInfoMap","indexToInfoMap","valueList","evn","ev","ordinal","ei","that","vi","valueIdentifier","enumInfo","enumObject","setBaseClass","typeStore","getType","initStackFrameNodes","moduleStore","symbolTable","heap","symbolTableStack","currentSymbolTable","oldStackframeSize","nextFreeRelativeStackPos","currentProgram","breakNodeStack","continueNodeStack","generateMain","lastToken","mainSymbolTable","generateClasses","lookForStaticVoidMain","mainProgram","mainMethod","classDefinitionsAST","classNode","ct","resolvedType","pt","initCurrentProgram","callMainMethod","closeStackframe","generateClass","generateEnum","checkDoubleMethodDeclaration","enumNode","pushNewSymbolTable","scopeFrom","scopeTo","enumClass","initialization","initializeAttribute","lastStatement","copyReturnValueToStackframePos0","leaveThisObjectOnStack","resolveNodes","methodNode","compileMethod","popSymbolTable","enumValueNode","constructorParameters","pushEnumValue","processEnumConstructorCall","commaPositions","rightBracketPosition","programEnd","constructorCallProgram","parameterNodes","typeNode","processNode","pushMethodCallPosition","isAssignable","srcType","getCastInformation","castValue","newType","stackPosRelative","callMethod","isSuperCall","stackframeBegin","inheritanceError","checkInheritance","getInheritanceQuickFix","cie","signatureMap","cieType","editsProvider","uri","resource","edit","checkIfMethodIsVirtual","getParameterList","scopeNode","stm","superConstructorCall","quickFix","methodCall","severity","MarkerSeverity","Error","actorClass","returnIfDestroyed","generateStatements","withReturnStatement","rt","getReturnType","getModules","mo","typeList","pushStaticAttribute","attributeIdentifier","pushAttribute","useThisObject","initializationType","ensureAutomaticCasting","attributeType","leaveValueOnStack","isAdhocCompilation","mainProgramAst","hasMainProgram","decreaseStackpointer","removeLastStatement","lastPosition","mainProgramEnd","pauseAfterProgramEnd","typeFrom","typeTo","nodeFrom","checkIfAssignmentInstedOfEqual","toStringStatement","getToStringStatement","castInfo","toStringMethod","getMethodBySignature","binaryOp","operator","nodes","endPosition","processStatementsInsideBlock","lastNode","assign","popCount","Array","isArray","statement","deleteStepFinishedFlagOnStepBefore","stepBefore","jumpAlways","lst","removeNode","beginNewStackframe","initStackFrameNode","initStackframe","reserveForLocalVariables","declarationError","usedBeforeInitialization","initStackframeNode","jumpIfTrue","jumpIfFalse","jumpIfFalseAndLeaveOnStack","jumpIfTrueAndLeaveOnStack","breakNode","continueNode","breakTargetLabel","lm","breakNodes","bn","continueTargetLabel","continueNodes","isLeftSideOfAssignment","processBinaryOp","unaryOp","processUnaryOp","pushConstant","stackType","resolveIdentifier","initialized","selectArrayElement","incrementDecrementBefore","incrementDecrementAfter","incrementDecrementBeforeOrAfter","superconstructorCall","pushThisOrSuper","newObject","processWhile","processDo","processFor","forLoopOverCollection","processForLoopOverCollection","processIf","processSwitch","processReturn","localVariableDeclaration","arrayInitialization","processArrayLiteral","newArray","processNewArray","processPrint","processManualCast","pushBreakNode","pushContinueNode","termInsideBrackets","pushTypePosition","typeFrom1","whatToCast","castToType","checkCast","print","println","withColor","color","empty","dimension","elementCount","ec","pushEmptyArray","arrayType","bes","beginArray","ain","sType","targetType","addToArray","numberOfElementsToAdd","dontWarnWhenNoInitialization","variableType","declareVariableOnHeap","pushUsagePosition","heapVariableDeclaration","pushOnTopOfStackForInitialization","initType","initializer","term","condition","conditionType","isString","isEnum","switchType","endLabel","insertJumpNode","registerSwitchStatement","openBreakScope","caseNodes","caseNode","caseTerm","markJumpDestination","info","ls","getOrdinal","closeBreakScope","endOfIf","withReturnStatementElse","beginElse","withReturnStatementIf","statementsIfTrue","statementsIfFalse","statementsBefore","labelBeforeCondition","labelAfterForLoop","openContinueScope","continueLabelIndex","closeContinueScope","statementsAfter","stackPosForCollection","collection","collectionElementType","collectionType","popAndStoreIntoVariable","stackposOfVariable","getImplementedInterface","noCastingNeeded","variableIdentifier","variablePosition","variableStackPos","stackPosOfCounterVariableOrIterator","extendedForLoopInit","stackPosOfCollection","stackPosOfElement","typeOfElement","stackPosOfCounter","pushLocalVariableToStack","lastStatementBeforeCasting","jumpNode","extendedForLoopCheckCounterAndGetElement","oldStatementCount","conditionBeginLabel","afterWhileStatementLabel","statementsBeginLabel","classType","newStatement","subsequentConstructorCall","parameterStatements","allStatements","constructorOperands","programPointer","staticClassContext","stackframeDelta","ellipsisParameterCount","makeEllipsisArray","parameterCount","getPostConstructorCallbacks","processPostConstructorCallbacks","ot","attributeWithError","staticAttributeWithError","find","pushArrayLength","element","addIdentifierPosition","isSuper","methodContext","superclassType","operands","errorInOperands","operand","incrementDecrementBy","indexType","positionList","findLocalVariable","pushFromHeapToStack","findAttribute","cc","scc","klassModule","pushStaticClassObject","staticAttribute","objectNode","thisClass","posBeforeParameterEvaluation","insertStatements","visible","callInputMethod","constantType","dataType","isAssignment","CodeGenerator","assignmentOperators","processTernaryOperator","leftType","programPosAfterLeftOpoerand","lazyEvaluationDest","rightType","resultType","getResultType","unboxableLeft","unboxableRight","leftTypes","rightTypes","lt","variantFalseLabel","firstType","secondType","isInConsoleMode","lookahead","endToken","tokensNotAfterCasting","typeNodes","initializeLookahead","astNodes","parseMain","mainProgramAST","classDefinitionAST","lastComment","commentBefore","cct","skip","invokeSemicolonAngel","isOperatorOrDot","main","getSemicolonAngel","register","nextToken","Parser","operatorPrecedence","op","getCurrentPosition","classDefinitions","isEnd","oldPos","comesToken","BeforeClassDefinitionTokens","parseClassDefinition","parseStatement","expectSemicolon","retStatements","ret","parseVariableDeclarationOrTerm","expect","parseWhile","parseFor","parseDo","parseIf","parseReturn","parsePrint","parseSwitch","position1","dontSkip","retStmt","checkIfStatementHasNoEffekt","parseTerm","semicolonPositions","parseForLoopOverCollection","parseType","variableIdentifierPosition","mcp","parseMethodCallParameters","paramenters","switchTerm","switchNode","defaultAlreadyThere","casePosition","isDefault","switchCaseNode","getEndOfCurrentToken","elseStatements","comesGenericType","vd","parseVariableDeclaration","parseTermBinary","precedence","left","parsePlusPlusMinusMinus","operators","first","opData","position2","wrong","right","correctOp","constantFolding","isConstant","pcLeft","pcRight","result","compute","toTokenType","parseUnary","parseDotOrArrayChains","bracketOrCasting","tt1","pcTerm","typeTerm","parseNew","isStringConstant","identifier1","identifierPosition","genericParameterTypes","typenode","arrayDimension","parseArrayLiteral","newDimension","al","parameter","positionEnd","modifiers","collectModifiers","ClassTokens","typeParameters","parseTypeParameterDefinition","extendsImplements","parseExtendsImplements","parseEnum","methodsAndAttributes","parseClassBody","identifierMap","tp","typeParameter","parseTypeParameterBounds","im","parseEnumValues","className","annotation","parseMethodDeclarationParameters","methodDeclaration","isTransient","attributeDeclaration","parameterDeclaration","parameterType","isInterface","sextends","simplements","done","TokenTypeToVisibilityMap","forwardToInsideClass","VisibilityTokens","objectToIndexMap","nextIndex","json","JSON","stringify","toJsonObj","rto","objectToJsonObj","serializedObject","serializedAttributes","jsonString","interpreter","indexToObjectMap","valuesToResolve","obj","parse","fromJsonObj","vtr","objectFromJsonObj","klass1","instantiateObjectImmediately","CompilerStatus","moduleToTypeParameterListMap","genericTypes","genericTypesInClassDefinitions","typeParameterList","classes","interfaces","enums","unresolvedTypes","resolveTypesInModules","setupClassesAndInterfaces","unresolvedGenericTypesInClasses","resolveTypeVariables","resolveUnresolvedTypes","resolveGenericTypes","resolveExtendsImplements","unresolvedGenericTypes","setupMethodsAndAttributes","checkDoubleIdentifierDefinition","checkGenericTypesAgainsTypeGuards","tn","ci","actualType","typeGuard","genericParameterType","ifList","tgInterface","implementsInterface","adjustMethodsAndAttributesToTypeParameters","classOrInterface","methodListAltered","newMethodList","newMethod","getAdjustedMethod","altered","newAttributes","newAttributeMap","attributesAltered","newAttribute","getAdjustedAttribute","ext","nt","getAdjustedType","nrt","parameterAltered","newParameters","pNew","adjustMethodsAndAttributesRecursive","newTypeVariables","newClassInterface","clone","todoList","resolveGenericType","genericParameterTypesResolved","typeVariablesOldToNewMap","oldTypeVariable","type1","newTypeVariable","newCi","propagateTypeParameterToBaseClassesAndImplementedInterfaces","newClass","tv1","baseKlass","impl","identifierModuleMap","otherModule","file","otherType","baseModule","getBaseModule","tpn","lastPass","dependsOnModules","ut","utNew","resolveType","getInterpreter","fromJson","toJson","classesOrEnums","cn","mn","setupMethod","addFromJsonMethod","addToJsonMethod","ic","m1","typesOK","par","definition","pl","typeModule","getArrayType","registerGenericType","tg","typKlasse","toUpperCase","iNode","iType","eType","cdn","addType","registerTypeVariables","ready","extType","resolveTypeVariable","typeParameterKlass","tp1","isInClassDefinition","compilerStatus","compiledButNothingToRun","compiling","t0","performance","now","lexer","dirty","clear","lexed","getProgramTextFromMonacoModel","getCurrentlyEditedModule","getBottomDiv","errorManager","showParenthesisWarning","startRegistering","parser","start","errorfree","dependsOnModulesWithErrors","hasErrors","atLeastOneModuleIsStartable","isStartable","config","withFileList","renderStartButton","readyToRun","dt","round","getCurrentWorkspace","compilerMessage","healSemicolons","typeE","tvE","iteratorInterface","hasNext","remove","listHelper","IteratorHelper","nextPos","objectArray","throwException","valueArray","typeA","tvA","listInterface","iteratorType","ah","getIterator","add","adAll","contains","removeObject","isEmpty","size","to_String","runtimeObject","allElementsPrimitive","toStringParameters","methodWasInjected","runTimer","iterableInterface","collectionInterface","vectorType","peek","MapHelper","SetIteratorHelper","console","log","addToSet","delete","setInterface","mh","QueueInterface","dequeInterface","removeFirst_or_error","poll_or_null","peek_or_null","removeFirstOccurrence","addFirst","addLast","removeLast_or_error","peek_first_or_null","peek_last_or_null","$consoleTab","append","PrintManager","$runDiv","lastSpan","maxLines","$lines","newLines","printCommands","currentLinelength","beginOfLineState","jQuery","$outputDiv","lastPrinting","setInterval","doPrinting","scrollTop","scrollHeight","setTimeout","$programEndDiv","show","addClass","removeClass","hide","nl","newLine","$lastSpan","pc","$lastDiv","$input","inputManager","insertBefore","linesToDelete","$linesToDelete","tList","callback","defaultValue","printManager","dvt","val","on","onSubmit","focus","valueAndError","detach","scrollIntoView","off","ajax","url","request","successCallback","errorCallback","showNetworkBusy","$","async","data","contentType","success","response","jqXHR","statusText","status","busy","$updateTimerDiv","ownUpdateFrequencyInSeconds","teacherUpdateFrequencyInSeconds","updateFrequencyInSeconds","forcedUpdateEvery","secondsTillNextUpdate","errorHappened","attr","interval","clearInterval","counterTillForcedUpdate","user","forceUpdate","sendUpdates","$rect","css","sendIfNothingIsDirty","projectExplorer","writeEditorTextToFile","classDiagram","rightDiv","userSettings","settings","userDataDirty","serialize","sendUpdateUserSettings","wdList","fdList","workspaceList","ws","saved","getWorkspaceData","getFileData","workspacesWithoutFiles","files","owner_id","workspacesOwnerId","userId","updateWorkspaces","w","entity","workspace_id","workspace","klasse","student_ids","class_id","publish_to","repoName","repoDescription","is_copy_of_id","repository_file_version","repository_id","has_write_permission_to_repository","sendUpdatesRequest","sendUpdatesResponse","idToRemoteWorkspaceDataMap","fileIdsSended","workspaces","wd","newWorkspaceNames","remoteWorkspace","createNewWorkspaceFromWorkspaceData","idToRemoteFileDataMap","fd","idToModuleMap","fileId","remoteFileData","fileListPanel","removeElement","currentWorkspace","removeModule","version","setValue","lastSavedVersionId","getAlternativeVersionId","remoteFile","createFile","alert","workspaceListPanel","sortElements","withSort","createNewWorkspace","addElement","externalElement","iconClass","fileData","ae","f","identical_to_repository_version","panelElement","getNewModule","putModule","caption","children","isOpen","getLevel","$debuggerElement","getIndent","$deFirstLine","canOpen","event","onFirstOpening","toggleClass","stopPropagation","renderValue","ro","renderListElements","de","DebuggerElement","render","$childContainer","removeAllChildren","html","escapeHtml","unsafe","twoDez","z","stringWrap","formatAsJavadocComment","indent","indentString","makeEditable","elementWithText","elementToReplace","renameDoneCallback","selectionRange","width","height","setSelectionRange","end","after","newValue","openContextMenu","items","x","y","$contextMenu","$openSubMenu","parentMenuItem","mi","link","$item","subMenu","top","leftRight","window","innerWidth","xp","topBottom","innerHeight","yp","makeTabs","tabDiv","headings","tabs","target","trigger","convertPxToNumber","pxString","makeDiv","div","accordion","flexWeight","newButtonClass","buttonNewTitle","defaultIconClass","withDeleteButton","elements","addPanel","$captionElement","$listElement","fixed","enabled","$buttonNew","$accordionDiv","close","$element","renderElement","prepend","renameElement","newElementCallback","$htmlSecondLine","insertAfter","selectCallback","select","$listOuter","$ce","$li","button","targetGrow","hasClass","parts","animate","$htmlFirstLine","sort","b","aName","sortName","bName","cssClass","$div","addElementActionCallback","$elementAction","addEventListener","contextMenuItems","renameCallback","contextMenuProvider","cmi","preventDefault","pageX","pageY","deleteCallback","pointPos","newText","invokeCallback","ae1","findElement","Accordion","$html","panel","renderOuterHtmlElements","WatcherElement","expression","accordionElement","$secondLine","$rightTextInFirstLine","evaluator","evaluate","setError","colorize","tabSize","then","$result","$debuggerDiv","$projectexplorerDiv","lastDebuggerElements","variablePanel","watchPanel","callbackIfSuccesful","addWatchExpression","watchExpression","deleteWatchExpression","newName","renameWatchExpression","stack","stackframe","elementsToKeep","findSymbolTableAtPosition","oldDebuggerElements","$variableList","thisString","visibleVariablesMap","oldDe","child","lastSymboltable","evaluateWatcherExpressions","watcherElement","state","InterpreterState","paused","$rightTextAfterFilename","we","code","getImitation","resolvedTypeAndModule","codeGeneratorErrors","startAdhocCompilation","programMap","compiler","pmEntry","compilation","compile","getDebugger","Workspace","restoreFromData","currentFileId","currentlyOpenModule","withFiles","$buttonDiv","myMain","$button","synchronizeWithRepository","networkManager","synchronizationManager","synchronizeWithWorkspace","SoundTools","sounds","sound","player","Howl","src","preload","soundMap","play","$mainElement","actions","keyEntries","buttons","executeKeyDownEvent","actionIdentifier","action","active","isEmbedded","init","activeElement","tagName","keyCode","ctrlKey","shiftKey","altKey","actionEntries","actionEntry","$bottomDiv","$pcodeTab","printProgram","$pcode","printModule","labels","lastLabelNumber","number","printNode","format3","printVariable","withBottomBorder","$consoleEntry","ConsoleEntry","$firstLine","valueString","span","history","historyPos","isDirty","readyToExecute","consoleEntries","errorDecoration","$consoleTabHeading","$consoleClear","layout","initConsoleClearButton","$editorDiv","automaticLayout","renderLineHighlight","renderIndentGuides","overviewRulerLanes","lineNumbers","glyphMargin","folding","lineDecorationsWidth","lineNumbersMinChars","fixedOverflowWidgets","language","fontSize","fontFamily","fontWeight","roundedSelection","occurrencesHighlight","suggest","localityBonus","snippetsPreventQuickSuggestions","minimap","scrollbar","vertical","horizontal","addCommand","KeyCode","Enter","compileIfDirty","getModel","execute","UpArrow","nextHistoryPos","setPosition","lineNumber","DownArrow","lastVersionId","onDidChangeContent","versionId","startTimer","showHelper","stopTimer","timerHandle","showErrors","markers","setModelMarkers","executeRapidly","pushCurrentProgram","currentProgramPosition","stacksizeBefore","oldInterpreterState","setState","stackTop","writeConsoleEntry","showProgramPointerAndVariables","$entry","consoleTop","commandEntry","resultEntry","detachValue","dontDetectLastChange","setModuleActive","getMonacoEditor","revealRangeInCenter","deltaDecorations","isWholeLine","parents","$mainDiv","oldDecorations","oldErrorDecorations","minimapColor","lightBulbOnClickFunctionList","$bracket_warning","errorCountMap","$errorDiv","ms","decorations","$errorList","getSortedAndFilteredErrors","getErrorCount","linesDecorationsClassName","borderLeftClass","lightBulbClass","random","onClickFunction","executeEdits","Range","forceMoveMarkers","processError","Warning","Info","relatedInformation","MinimapPosition","Inline","$file","$error","registerLightbulbOnClickFunctions","locf","$errorDivs","$lineColumn","category","$message","showError","showRevisionActive","$homeworkTab","$homeworkTabLeft","$homeworkTabRight","$showRevisionButton","hideRevision","showRevision","originalModel","createModel","text_before_revision","modifiedModel","diffEditor","createDiffEditor","getElementById","enableSplitViewResizing","originalEditable","readOnly","renderSideBySide","setModel","original","modified","showHomeWorkRevisionButton","dispose","daysWithModules","dateString","submitted_date","date","Date","dateWithoutTime","getDate","getMonth","getFullYear","dateToStringWithoutTime","dwm","day","m2","moduleWithWorkspace","setWorkspaceActive","programPrinter","homeworkManager","initGUI","printCurrentlyExecutedModule","running","printModuleToBottomDiv","triggerCharacters","context","_contentWidgets","widget","toggleDetails","consoleModel","isConsole","isMainWindow","getModuleByMonacoModel","isStringLiteral","textUntilPosition","getValueInRange","textAfterPosition","triggerCharacter","getCompletionItemsAfterNew","countLower","countGreater","getCompletionItemsAfterClass","ibMatch","dotMatch","getCompletionItemsAfterDot","varOrClassMatch","getCompletionItemsInsideIdentifier","posMin","posMax","watchDog","getTypeCompletionItems","item","detail","suggestions","insideGenericParameterDefinition","startsWithCurlyBrace","trimLeft","getOverridableMethodsCompletion","sortText","getKeywordCompletion","textAfterDot","dotColumn","tStatic","getTypeAtPosition","keywordCompletionItems","alreadyImplemented","getDeclarationAsString","short","getTypeVariableDeclaration","getGenericParameterDefinition","decl","implList","signatureHelpTriggerCharacters","signatureHelpRetriggerCharacters","reject","provideSignatureHelpLater","methodCallPositions","methodCallPosition","rightMostPosition","getSignatureHelp","parameterIndex","cp","signatureInformationList","possibleMethods","makeIntrinsicSignatureInformation","makeSignatureInformation","activeParameter","activeSignature","signatures","parameterInformationList","posFrom","posTo","pi","selection","getSelection","getElementAtPosition","declarationAsString","contents","typeIdentifier","word","getWordUnderCursor","desc","MyHoverProvider","keywordDescriptions","widenDeclaration","getValueLengthInRange","isInsideIdentifierOrArrayDescriptor","begin","isInsideOperator","isInsideIdentifierChain","MyCodeActionProvider","diagnostics","isPreferred","MyReferenceProvider","referencePositions","upInCurrentModule","up","showMinimap","highlightCurrentMethod","cw","dontPushNextCursorMove","lastPushTime","lastTime","elementDecoration","extensions","conf","indentationRules","decreaseIndentPattern","increaseIndentPattern","onEnterRules","beforeText","afterText","indentAction","IndentAction","IndentOutdent","appendText","None","removeText","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","surroundingPairs","setLanguageConfiguration","setMonarchTokensProvider","defaultToken","tokenPostfix","keywords","types","symbols","escapes","digits","octaldigits","binarydigits","hexdigits","tokenizer","cases","include","whitespace","javadoc","string","defineMyJava","defineTheme","inherit","rules","foreground","fontStyle","colors","lightbulb","peekWidgetDefaultFocus","quickSuggestions","quickSuggestionsDelay","selectOnLineNumbers","scrollBeyondLastLine","autoIndent","dragAndDrop","formatOnType","formatOnPaste","suggestFontSize","suggestLineHeight","parameterHints","cycle","mouseWheelZoom","onKeyDown","not_initialized","getActionManager","mouseWheelListener","changeEditorFontSize","deltaY","_main","windowStateManager","registerBackButtonListener","historyEntry","findModuleById","module_id","revealPosition","pushHistoryState","onDidChangeConfiguration","hasChanged","EditorOption","fontInfo","onDidChangeCursorPosition","currentModelId","source","abs","getPositionForHistory","onEvaluateSelectedText","onDidChangeModel","removeEventListener","passive","setActiveAfterExternalModelSet","registerRenameProvider","registerDefinitionProvider","provideDefinition","cancellationToken","registerHoverProvider","registerCompletionItemProvider","registerCodeActionProvider","registerReferenceProvider","registerSignatureHelpProvider","onMouseDown","MouseTargetType","GUTTER_GLYPH_MARGIN","GUTTER_LINE_NUMBERS","isAfterLines","onMarginMouseDown","remeasureFonts","addActions","onDidType","getPosition","replaceState","time","getTime","pushState","insertEndOfComment","newColumn","prevLine","getLineContent","trimRight","getLineCount","spacesAtBeginningOfLine","fontSizePx","editorfs","getOptions","viewModeController","saveFontSize","updateOptions","factor","bottomDiv1","bottomDiv","dynamic","newEditorFs","setFontSize","addAction","keybindings","KeyMod","CtrlCmd","KEY_K","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","ed","getAction","removeContentWidget","getId","getDomNode","preference","ContentWidgetPositionPreference","ABOVE","BELOW","addContentWidget","toggleBreakpoint","runningModule","findModuleByFile","overviewRuler","darkColor","OverviewRulerLane","Left","getMethodDeclarationAtPosition","zIndex","currentlyEditedModule","resourceEdits","usagePositionsInModule","Dialog","$dialog","$dialogMain","colorStyle","placeholder","$buttonRow","$userSettingsButton","dialog","heading","$oldPassword","$newPassword1","$newPassword2","waitDiv","waitMessage","oldPassword","newPassword","currentSubmenu","openSubmenusOnMousemove","mainMenu","switchTheme","repositoryUpdateManager","repositoryCheckoutManager","is_admin","is_schooladmin","is_teacher","initMenu","menu","$link","initMenuitemCallbacks","opensubmenu","$container","gripWidth","overallWidth","$outer","$bar","$grip","$display","mousedownX","oldPosition","xMax","setSpeed","clientX","deltaX","newPosition","intervalBorders","maxStepsPerSecond","intervalDelta","intervalIndex","floor","intervalMin","speed","stepsPerSecond","hideProgrampointerPosition","speedString","ceil","$buttonsContainer","$editorContainer","buttonActiveMatrix","speedControl","$buttonStart","$buttonPause","$buttonStop","$buttonStepOver","$buttonStepInto","$buttonStepOut","$buttonRestart","setInterpreter","DistributeToStudentsDialog","studentCount","$studentList","student","$studentLine","$studentClass","$studentName","rufname","familienname","students","each","back","distributeWorkspace","registerOneTimeBackButtonListener","sendDistributeWorkspace","programPointerModule","programPointerDecoration","lastOpenModule","initFilelistPanel","initWorkspacelistPanel","successfulNetworkCommunicationCallback","student_edited_after_revision","sendCreateFile","callbackIfSuccessful","sendDeleteWorkspaceOrFile","cmiList","getHours","getMinutes","renderHomeworkButton","$synchronizeAction","$homeworkButtonDiv","sendCreateWorkspace","enableNewButton","renderSynchronizeButton","removeWorkspace","$homeAction","onHomeButtonClicked","hideHomeworkTab","workspaceAccordionElement","sendDuplicateWorkspace","workspaceData","newWorkspace","teacherExplorer","classPanel","repositoryOn","repositoryCreateManager","setElementClass","restoreOwnWorkspaces","setCaption","moduleList","errorCount","errorCountS","setTextAfterFilename","helperHistory","repositoryButtonDone","stop","renderFiles","nonSystemModules","newFileHelperDone","showRepositoryButtonIfNeeded","cem","getBreakpointPositionsFromEditor","editorState","saveViewState","hideHomeworkRevisionButton","restoreViewState","renderBreakpointDecorators","setCurrentlyEditedModule","showProgramPointer","programPointerPosition","revealRangeInCenterIfOutsideViewport","Center","beforeContentClassName","$parentElement","gripHeight","overallHeight","zoomMin","zoomMax","$zoomcontrolOuter","mousedownY","$zoomcontrolBar","$zoomcontrolDisplay","yMax","setZoom","clientY","ZoomControl","preventFading","fadeIn","fadeOut","zoomfactor","zfs","Alignment","$htmlElement","inlineStyles","marginCm","minDistance","minWidthHeightCm","widthCm","heightCm","$menuButton","$scrollpane","overflow","$canvas","zoomControl","transform","svgElement","createElementNS","appendChild","$centerRectangle","createElement","fill","adjustCenterRectangle","ev1","screenX","screenY","dx","dy","scrollLeft","diagramElements","xMin","yMin","leftCm","topCm","isAdjusted","newWidthCm","newHeightCm","max","move","setSize","styles","defs","refreshInlineStyles","selector","stylesForSelector","textContent","radius","fertig","xCm","yCm","isFree","insideX","insideY","lines","backgroundColor","withRaster","adjustToRaster","font","textElement","bbox","getBBox","DiagramElement","cmPerPx","alignment","bold","italics","$group","textPosYCm","maxWidthCm","createTextElement","center","onClick","metrics","getTextMetrics","textHeightCm","textWidthCm","tooltip","thicknessCm","textCenter","textRight","stroke","x1","y1","x2","y2","diagram","withMethods","withAttributes","attachToClass","isSystemClass","moveTo","scb","cb","ClassBox","hashedSignature","filename","klassSignature","getSignature","renderLines","addMouseEvents","jumpToDeclaration","parametersWithTypes","currentClassBoxes","addTextLine","getVisibilityText","$dropdownTriangle","getTrianglePath","adjustClassDiagramSize","updateArrows","stopImmediatePropagation","cmPerPixel","clearTimeout","inDebounce","hash","position1Cm","position2Cm","sqrt","path","ex","ey","arrow","arrows","steps","step","angle","PI","ex1","cos","sin","ey1","rauteAlpha","routingArrow","DiagramArrow","points","minimalPoints","getPathCoordinates","arrowData","arrowType","endsOnArrowWithIdentifier","head","makeHead","point","classBoxesRepository","currentWorkspaceId","straightArrowSectionAfterRectangle","distanceFromRectangles","slotDistance","displaysSystemClasses","displaySystemClasses","drawDiagram","scd","classBoxes","workspaceId","classBox","cbs","serializedClassDiagram","inactive","deserialize","adjustSizeAndElements","cbs1","getClassBoxes","onlyUpdateIdentifiers","switchToWorkspace","newClassBoxes","anyTypelistThere","newClassesToDraw","findAndEnableClass","registerUsedSystemClasses","uscList1","usc","freePos","findFreeSpace","colorIndex","routingInput","drawArrows","routingWorker","terminate","Worker","onmessage","arrowsWithoutColorLast","arrowIdentifierToColorMap","arrowsWithoutColor","da","postMessage","rectangles","getRoutingRectangle","cb1","findClassbox","drawArrwow","intf","cb2","destRectangleIndex","sourceRectangleIndex","destinationIdentifier","hasSignatureAndFileOf","$selectElement","selected","rootIdentifier","rootValue","objectDiagram","selfReferenceType","rootValueSelfReferenceType","analyzeSelfReference","attributesWithSelfReference","sr","tImplements","tExtends","$objectDiagramDiv","variants","currentVariant","$typeOption","variant","getName","currentTarget","intValue","updateSettings","$settingsDiv","getSettingsElement","updateDiagram","$rightDiv","isWholePage","$tabs","$headings","withClassDiagram","withObjectDiagram","drawClassDiagrams","onObjectDiagramEnabled","rightdiv_width","$wholeWindow","worldHelper","screenHeight","screenWidthToHeight","worldWidthToHeight","newWidth","newHeight","isObjectDiagramEnabled","md","pe","me","mm","mewidth","ee","meheight","classData","studentPanel","initStudentPanel","initClassPanel","renderClasses","ws_userId","ownWorkspaces","currentOwnWorkspace","restoreWorkspaces","setExplorerColor","showHomeworkTab","attachToWorkspaces","renderWorkspaces","ea","renderStudents","userDataList","ud","classDataList","startAnimations","$loginSpinner","loginHappened","username","password","consoleHelperDone","newWorkspaceHelperDone","speedControlHelperDone","homeButtonHelperDone","stepButtonHelperDone","viewModes","waitForGUICallback","initTeacherExplorer","classdata","initializeTimer","setFixed","initViewMode","startupComplete","errorMessage","clearAfterLogout","removePanels","$loginAnimationDiv","$gifAnimation","screen","ViewModeController","$buttonMap","highContrast","editorHasFullWidth","$buttonEditorFullscreen","$buttonPresentationMode","$buttonMonitorMode","am","actionManager","registerAction","toggleEditorFullwidth","setMode","saveSettings","otherMode","viewMode","viewModeChosen","themeManager","getChosenViewMode","monitor","presentation","SemicolonAngel","isThereAgain","oldEvidence","firstSeenMs","cursorLine","isCurrentModule","editOperations","setSelection","WindowStateManager","oneTimeBackButtonListener","backButtonListener","listener","programIsExecutable","debugger","showProgramPointerPosition","hideProgramPointerPosition","semicolonAngel","revealLineInCenter","login","initSliders","initTypes","checkStartupComplete","correctPIXITransform","PIXI","utils","skipHello","Transform","updateTransform","parentTransform","localTransform","_localID","_currentLocalID","_parentID","_worldID","worldTransform","wt","tx","ty","renderErrorCount","startable","getStartableModule","copyExecutableModuleStoreToInterpreter","isClassDiagramEnabled","debounceDiagramDrawing","copy","moduleStoreVersion","currentWorkspace_id","targetElement","direction","$helper","bottom","to","Helper","mainBase","flag","controlButtons","openHelper","pressedKeys","keyPressedCallbacks","keyUpCallbacks","keyDownCallbacks","registerListeners","kpc","hasTextFocus","debugger_","timerDelayMs","stackframes","timerStopped","timerExtern","timeNetto","timeWhenProgramStarted","stepOverNestingLevel","leaveLine","additionalStepFinishedFlag","isFirstStatement","showProgrampointerUptoStepsPerSecond","webSocketsToCloseAfterProgramHalt","timerEvents","lastStepTime","lastTimeBetweenEvents","lastPrintedModule","runningStates","waitingForInput","keyboardTool","timerId","timerFunction","req","send","startFunction","pauseFunction","pause","isActive","oneStep","stepOut","currentlyEditedModuleIsClassOnly","mainModule","lastMainModule","clearExceptions","getCompiler","detachValues","newMainModule","currentStackframe","initializeEnums","initializeClasses","popProgram","currentCallbackAfterReturn","currentIsCalledFromOutside","stackElementsToPushBeforeFirstExecuting","se","pushStaticInitializationPrograms","staticValueMap","valueInitializationProgram","hasAttributeInitializationProgram","initializeEnumValue","clearErrors","callbackAfterExecution","resetRuntime","forceRun","maxWorkloadFactor","timeBetweenSteps","exception","n_stepsPerTimerGoal","nextStep","comesStatement","consolePresent","withBottomPanel","withConsole","positionString","currentStatement","errorLine","showTab","destroyWorld","processingHelper","restart","spriteAnimations","showData","showNode","stepInto","oldStepOverNestingLevel","executeNode","breakpoint","relPos","object1","value1","resultValue","oldValue","parameterBegin2","ellipsisArray","parameterBegin","parameters1","returnValue","method1","parameterBegin1","oldState","readInput","aip","pcc","counter","list","list1","shapes","actActors","getModule","timerEntries","showProgramEnd","counts","makeEmptyArray","tvo","switchValue","shapeRuntimeObject","socket","actionId","setActive","clearActorLists","disable","unsubscribeAllListeners","enable","stackElements","isActor","stepCount","valuesToPushBeforeExecuting","oldProgramPosition","numberOfStackframesBefore","executeImmediatelyInNewStackframe","constructor","ColorHelper","alpha","predefinedColors","m3","groupType","mouseListenerType","breite","höhe","gh","getWorldHelper","setBackgroundColor","wh","matrix","Matrix","copyFrom","stage","identity","translate","onChange","rotate","scale","initialWidth","initialHeight","group","defaultGroup","addMouseListener","cursor","setCursor","worldObject","ratio","$containerOuter","getRightDiv","adjustWidthToWorld","world","keyPressedActors","keyUpActors","keyDownActors","actorHelpersToDestroy","mouseListenerShapes","mouseListeners","actorsFinished","summedDelta","scaledTextures","actorsNotFinished","ticks","deltaSum","SCALE_MODE","SCALE_MODES","NEAREST","$graphicsDiv","getGraphicsDiv","$coordinateDiv","$jo_tabs","maxWidth","maxHeight","$containerInner","oncontextmenu","TARGET_FPMS","app","Application","antialias","tickerFunction","tick","Ticker","shared","elapsedMS","ticker","maxFPS","Container","addChild","view","kpa","runActorWhenKeyEvent","listenerType","offsetX","offsetY","Point","applyInverse","onMouseEvent","invokeMouseListener","actorData","actorHelper","timerPaused","isDestroyed","runActor","actorList","shapeHelper","displayObject","destroy","parseColorToOpenGL","renderer","containsPoint","trackMouseMove","invokeShapeMouseListener","mouseLastSeenInsideObject","reactToMouseEventsWhenInvisible","findIndex","mls","sd","methodSignatures","actorListIdentifier","isKeyDown","setTimerPaused","isPressed","abstand","p1","p2","polygonEnthältPunkt","punkte","punkt","inside","vertexCount","polygonBerührtPolygon","punkte1","punkte2","shapeType","helper","getCenterX","getCenterY","sh","testdestroyed","angleInDeg","centerX","centerY","isOutsideView","shape","sh1","collidesWith","angleDeg","setVisible","tint","react","getCopy","bringToFront","sendToBack","hitPolygonInitial","hitPolygonTransformed","hitPolygonDirty","centerXInitial","centerYInitial","setHitPolygonDirty","container","highestIndex","setChildIndex","bb","getBounds","bb1","transformHitPolygon","apply","bounds","cX","cY","belongsToGroup","groupHelper","collidingShapes","colorType","pointsX","pointsY","rh","getFarbeAsObject","setzeFarbe","istFarbe","fillAll","anzahlX","anzahlY","addToDefaultGroup","bh","BitmapHelper","colorArray","colorBuffer","update","initGraphics","vertexArray","Float32Array","vertexIndexArray","Int32Array","xStep","yStep","vertexBuffer","Buffer","VertexIndexBuffer","geometry","Geometry","addIndex","shader","Shader","from","Mesh","DRAW_MODES","TRIANGLES","g","red","green","blue","hex","intColorToHexRGB","r1","g1","b1","fillColor","borderColor","borderWidth","setAlpha","fillAlpha","setFillColor","setBorderColor","setBorderWidth","rgb","borderAlpha","fsh","mx","my","setRadius","CircleHelper","deltaAlpha","Graphics","beginFill","lineStyle","drawCircle","closePath","endFill","colorName","intColor","intColorToRGB","o1","d1","rx","ry","setRadiusX","setRadiusY","EllipseHelper","drawEllipse","collisionPairType","collisionPairArrayType","getElement","removeElementAt","shapeArrayType","getCollidingObjects","group2","maxOneCollisionPerShape","groupHelper2","getCollidingObjects2","removeAllChidren","destroyChildren","getCollidingShapes","groupHelperCopy","GroupHelper","roCopy","shapeHelperCopy","hasCircularReference","inverse","invert","xSum","ySum","deregister","removeChildAt","inverseStageTransform","collisionPairs","alreadyCollidedHelpers2","shapeHelper1","shapeHelper2","shapeToAdd","closeAndFill","pointsNumber","ph","addPoint","PolygonHelper","lineTo","RectangleHelper","addCenterCircle","RoundedRectangleHelper","midx","midy","angleStart","dw","drawRoundedRect","spriteHelper","sprite","polygon","HitPolygonStore","polygonStore","getPolygon","pixels","plugins","extract","h","probes","addPointsOnLine","additionalPointsPerHalfBorder","mid","probe","fx","fy","isTransparent","scaleModeClass","spriteLibraryEntry","scaleMode","setTexture","textureName","indexArray","repeatType","imagesPerSecond","indices","playAnimation","fromIndex","toIndex","stopAnimation","pauseAnimation","resumeAnimation","animationIndices","animationRuns","imagesPerMillisecond","animationTime","animationPaused","SpriteHelper","prefix","javaOnlineDir","sheet","Loader","resources","nameWithIndex","texture","textures","Sprite","dynamicTexture1","RenderTexture","getPolygonForTexture","setInvisible","spriteHelperList","deltaTime","image","period2","numberOfPeriodsDone","timeIntoPeriod","period","SpriteLibrary","sle","fontsize","setFontsize","setAlignment","setText","getWidth","getHeight","textStyle","TextStyle","strokeThickness","dropShadow","wordWrap","align","TextHelper","Text","anchor","tm","TextMetrics","measureText","E","exp","log10","tan","asin","acos","atan","atan2","deltaTimeMillis","printStream","timerRunning","tl","timerEntry","timerListener","lastTimeFired","processTimerEntries","timerentry","runEntry","typeK","tvK","typeV","tvV","keyArray","old","containsKey","containsValue","dayOfWeekType","MonthType","year","month","dayOfMonth","hour","minute","second","days","oldDate","newDate","oldMs","newMs","getSeconds","td","dow","getDay","monthIndex","setPoint","setPoints","valueMap","alphaDeg","valueMap1","oRet","valueMapRet","messageType","setUserData","getUserData","help","WebSocketClientHelper","webSocketHelper","nickname","keyValueStore","connected","sendToClient","webSocketClientType","systemClassType","sessionCode","nickName","connect","sendToAll","count","findClientsFromCount","nicknames","nnv","findClientsFromNicknames","disconnect","clientList","idToClientMap","unsentMessages","onOpenMethod","onCloseMethod","onMessageMethod","onClientConnectedMethod","onClientDisconnectedMethod","onClientsFoundMethod","location","protocol","host","connection","WebSocket","onerror","onError","onclose","onClose","onMessage","onopen","sendIntern","onOpen","runMethod","clientId","recipient_id","wtr","clientRuntimeObject","wch","user_id","clientHelper","from_client_id","clientHelper1","disconnecting_client_id","currentTimeMills","client_id","onClientsFound","own_index","otherClients","clients","client","otherClient","arrayValue","p5o","getProcessingHelper","loop","noLoop","createCanvas","addProcessingMethod","parameterNames","pList","processingObject","loopStopped","onSizeChanged","setupProcessing","drawMethodPending","p5","setup","P2D","afterFinishingBoth","draw","mousePressed","mouseReleased","mouseClicked","mouseDragged","mouseEntered","mouseExited","mouseMoved","keyPressed","keyReleased","methodIdentifier","showTurtle","forward","turn","setShowTurtle","xStart","yStart","lineElements","isFilled","initialHitPolygonDirty","lineWidth","calculateCenter","lineGraphic","turtle","drawTurtle","lastLineElement","angleInDegrees","cx","cy","TurtleHelper","newLineElement","vx","vy","vxp","vyp","firstPoint","le","setupInitialHitPolygon","breakpoints","breakpointDecorators","decoratorIdToBreakpointMap","identifierPositions","uriCounter","Module","uriMap","Uri","scheme","main1","methodAST","mcpList","rerender","getBreakpoint","setBreakpoint","attachToStatement","programList","getPrograms","nearestStatement","nearestDistance","marginClassName","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","getAllDecorations","decoration","positionsOnLine","foundPosition","bestFoundPosition","programs","TypeStore","el","e2","errorLevelCompare","level1","level2","$startButtonDiv","maxUriNumber","registerWorldType","withBaseModule","moduleMap","ModuleStore","includeSystemModules","excludedModuleName","moduleName","moduleContext","Struct","Class","generic","typeMap","EmbeddedSlider","firstLast","horVert","$otherDiv","initSlider","$sliderDiv","slide","otherHeight","newOtherHeight","otherWidth","newOtherWidth","$fileListDiv","addModule","$filesDiv","$addButton","currentFile","selectFile","removeFile","script","$fileDiv","hint","onDelete","$hintDiv","$monacoDiv","syntaxMap","md1","markdownit","highlight","str","lang","code_inline","idx","env","self","content","md2","codeMap","uncoloredtext","EmbeddedIndexedDB","indexedDB","onsuccess","db","onupgradeneeded","createObjectStore","keyPath","autoIncrement","transaction","oncomplete","scriptId","objectStore","put","scriptList","compileRunsAfterCodeReset","readConfig","initScripts","readScripts","fileExplorer","getFirstModule","removeAllFiles","initWorkspace","$filesListDiv","setFirstFileActive","addHint","configJson","withPCode","withErrorList","markFile","getScript","scriptListJSon","saveScripts","countDown","$resetButton","oneNotSaved","writeScript","removeScript","considerShowingCodeResetButton","$centerDiv","$resetModalWindow","makeCodeResetModalWindow","makeRightDiv","$bracketErrorDiv","makeBracketErrorDiv","$controlsDiv","$bottomDivInner","makeBottomDiv","makeFilesDiv","$rightDivInner","$rightSideContainer","$coordinates","$infoButton","$parent","$window","deleteScriptsInDB","$filesHeader","$tabheadings","$thRightSide","$thConsoleClear","$thErrors","$thConsole","$thPCode","$tabError","$tabConsole","$tabPCode","$thRun","$thVariables","$vd","$alternativeText","mainEmbeddedList","initJavaOnlineDivs","$script","initDiv","embeddedStarter","editorPath","monacoEditorPath","require","paths","availableLanguages","ignoreDuplicateModules","initEditor","load"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,6SClFzCC,E,+HAAZ,SAAYA,GACR,+BAEA,yCACA,qDACA,yCACA,uCACA,mCACA,mBACA,qBAEA,mCACA,uCACA,oCACA,kCACA,oCACA,gCACA,4CACA,kCACA,kCACA,0CACA,sCACA,4CACA,wCACA,4CACA,sCACA,wCACA,8CACA,oCACA,8BACA,gCACA,sCACA,kCACA,wCACA,8BACA,kCACA,kCACA,sCACA,oCACA,0CACA,kCACA,oCACA,8CAQA,kCACA,oCACA,8CACA,gDACA,4CACA,8CACA,wDAGA,kCAAa,gCAGb,kBACA,wBACA,sBAAO,oBAAM,wCAAgB,4BAC7B,kCAAa,kCACb,sBAAO,0BAAS,oCAAc,wCAC9B,sBACA,4BACA,gCACA,wCACA,0CACA,4DACA,gDACA,4CACA,kBAAK,gBACL,8BACA,0CACA,sBACA,4BAEA,kBAGA,8BAGA,sBAGA,8BAGA,gBAGA,sBAEA,kBAGA,0BAGA,4BAGA,wCAGA,0BAGA,4BACA,4CAEA,0CAGA,4BACA,0BACA,4DACA,0DACA,4DACA,0DACA,kDACA,sCACA,0CACA,oCACA,sDACA,mDACA,qEACA,+BACA,+BACA,iDACA,iCACA,yCACA,2EACA,2CACA,+CACA,qDACA,yCACA,2CACA,yEACA,yBACA,+BACA,mCACA,iCACA,iEACA,+DACA,iCACA,qBACA,6DACA,2DACA,iCACA,iCACA,iCACA,yCACA,uDAGA,qBACA,uCACA,qDACA,+CACA,qDACA,qDACA,6BACA,mDACA,uBACA,2BACA,uCACA,mDACA,+BACA,+CACA,mDACA,6FAhLJ,CAAYA,MAAS,KAmLd,IAAIC,GAAiB,OACvBD,EAAUE,WAAa,kBADA,IAGvBF,EAAUG,gBAAkB,0BAHL,IAIvBH,EAAUI,sBAAwB,6BAJX,IAKvBJ,EAAUK,gBAAkB,4BALL,IAMvBL,EAAUM,eAAiB,gCANJ,IAOvBN,EAAUO,aAAe,uBAPF,IAQvBP,EAAUQ,KAAO,QARM,IASvBR,EAAUS,MAAQ,SATK,IAWvBT,EAAUU,aAAe,SAXF,IAYvBV,EAAUW,YAAc,QAZD,IAavBX,EAAUY,aAAe,SAbF,IAcvBZ,E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","file":"javaOnline-embedded.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum TokenType {\r\n    identifier,\r\n    // constants\r\n    integerConstant,\r\n    floatingPointConstant,\r\n    booleanConstant,\r\n    stringConstant,\r\n    charConstant,\r\n    true,\r\n    false,\r\n    // keywords\r\n    keywordPrint,\r\n    keywordPrintln,\r\n    keywordClass,\r\n    keywordThis,\r\n    keywordSuper,\r\n    keywordNew,\r\n    keywordInterface,\r\n    keywordEnum,\r\n    keywordVoid,\r\n    keywordAbstract,\r\n    keywordPublic,\r\n    keywordProtected,\r\n    keywordPrivate,\r\n    keywordTransient,\r\n    keywordStatic,\r\n    keywordExtends,\r\n    keywordImplements,\r\n    keywordWhile,\r\n    keywordDo,\r\n    keywordFor,\r\n    keywordSwitch,\r\n    keywordCase,\r\n    keywordDefault,\r\n    keywordIf,\r\n    keywordThen,\r\n    keywordElse,\r\n    keywordReturn,\r\n    keywordBreak,\r\n    keywordContinue,\r\n    keywordNull,\r\n    keywordFinal,\r\n    keywordInstanceof,\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    leftBracket, // ()\r\n    rightBracket,\r\n    leftSquareBracket, // []\r\n    rightSquareBracket,\r\n    leftCurlyBracket, // {}\r\n    rightCurlyBracket,\r\n    leftRightSquareBracket, // []\r\n    \r\n    // operators\r\n    doubleMinus, doublePlus,\r\n\r\n    // binary operators\r\n    dot, //.\r\n    modulo,\r\n    minus, plus, multiplication, division,\r\n    singleQuote, doubleQuote, // ', \"\r\n    lower, greater, lowerOrEqual, greaterOrEqual, \r\n    equal, // ==\r\n    notEqual, // !=\r\n    assignment, // =\r\n    plusAssignment, // +=\r\n    minusAssignment, // -=\r\n    multiplicationAssignment, // *=\r\n    divisionAssignment, // /=\r\n    moduloAssignment, // /%=\r\n    and, or,   // &&, ||, !\r\n    ampersand, // &\r\n    ternaryOperator,\r\n    colon, //:\r\n    ellipsis, // ...\r\n\r\n    not,\r\n    \r\n    // semicolon\r\n    semicolon, // ;\r\n\r\n    // comma\r\n    comma, // ,\r\n\r\n    // backslash\r\n    backslash,\r\n\r\n    // @\r\n    at,\r\n\r\n    // whitespace\r\n    space,\r\n\r\n    tab,\r\n\r\n    // newline\r\n    newline,\r\n\r\n    // line feed\r\n    linefeed,\r\n\r\n    // only lexer-internal\r\n    identifierChar,  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    comment,\r\n\r\n    // used by parser\r\n    negation, \r\n    referenceElement, // for arrays\r\n\r\n    endofSourcecode, // will be generated after sourcecode end\r\n    \r\n    // Program statement types:\r\n    binaryOp, // +, -, *, <=, ...\r\n    unaryOp, // ! and - \r\n    localVariableDeclaration,\r\n    heapVariableDeclaration,\r\n    pushLocalVariableToStack, // push value of a local variable to stack\r\n    popAndStoreIntoVariable,\r\n    pushFromHeapToStack, // push value from heap to stack\r\n    pushAttribute, // value of a attribute to stack\r\n    pushArrayLength, \r\n    pushConstant, // literal\r\n    pushStaticClassObject, // push class-Object to stack (which holds static attributes)\r\n    pushStaticAttribute, // push static attribute to stack\r\n    pushStaticAttributeIntrinsic, // push static attribute to stack\r\n    checkCast, // check if object may get casted to class or interface\r\n    castValue, // cast value on top of stack to other type\r\n    selectArrayElement, // select Element from Array (e.g. a[20])\r\n    callMethod,\r\n    callMainMethod,\r\n    processPostConstructorCallbacks, \r\n    callInputMethod, // Methods of Input class\r\n    makeEllipsisArray,\r\n    decreaseStackpointer, // decrease stack-pointer, nothing else\r\n    initStackframe,\r\n    closeStackframe,\r\n    increaseSpaceForLocalVariables,\r\n    return,\r\n    newObject,\r\n    jumpIfFalse,\r\n    jumpIfTrue,\r\n    jumpIfFalseAndLeaveOnStack,\r\n    jumpIfTrueAndLeaveOnStack,\r\n    jumpAlways,\r\n    noOp, // acts as jump destination\r\n    incrementDecrementBefore, // ++i, --i\r\n    incrementDecrementAfter, // i++, i--\r\n    programEnd,\r\n    beginArray, // push empty array to stack\r\n    addToArray, // pop element form stack and add it to array (on second stack position)\r\n    pushEmptyArray, // push multidimensional empty array to stack\r\n    forLoopOverCollection,\r\n\r\n    // additional AST node types\r\n    type, // e.g. int[][]\r\n    typeParameter, // e.g. <E extends String implements Comparable<E>>\r\n    attributeDeclaration,\r\n    methodDeclaration,\r\n    parameterDeclaration,\r\n    superConstructorCall,\r\n    newArray,\r\n    arrayInitialization,\r\n    print,\r\n    println, \r\n    pushEnumValue,\r\n    initializeEnumValue, \r\n    scopeNode,\r\n    returnIfDestroyed,\r\n    extendedForLoopInit,\r\n    extendedForLoopCheckCounterAndGetElement,\r\n}\r\n\r\nexport var TokenTypeReadable: {[tt: number]: string} = {\r\n    [TokenType.identifier]: \"ein Bezeichner\",\r\n    // constants\r\n    [TokenType.integerConstant]: \"eine Integer-Konstante\",\r\n    [TokenType.floatingPointConstant]: \"eine Fließkomma-Konstante\",\r\n    [TokenType.booleanConstant]: \"eine boolesche Konstante\",\r\n    [TokenType.stringConstant]: \"eine Zeichenketten-Konstante\",\r\n    [TokenType.charConstant]: \"eine char-Konstante\",\r\n    [TokenType.true]: \"true\",\r\n    [TokenType.false]: \"false\",\r\n    // keywords\r\n    [TokenType.keywordClass]: \"class\",\r\n    [TokenType.keywordThis]: \"this\",\r\n    [TokenType.keywordSuper]: \"super\",\r\n    [TokenType.keywordNew]: \"new\",\r\n    [TokenType.keywordInterface]: \"interface\",\r\n    [TokenType.keywordEnum]: \"enum\",\r\n    [TokenType.keywordVoid]: \"void\",\r\n    [TokenType.keywordAbstract]: \"abstract\",\r\n    [TokenType.keywordPublic]: \"public\",\r\n    [TokenType.keywordProtected]: \"protected\",\r\n    [TokenType.keywordPrivate]: \"private\",\r\n    [TokenType.keywordTransient]: \"transient\",\r\n    [TokenType.keywordStatic]: \"static\",\r\n    [TokenType.keywordExtends]: \"extends\",\r\n    [TokenType.keywordImplements]: \"implements\",\r\n    [TokenType.keywordWhile]: \"while\",\r\n    [TokenType.keywordDo]: \"do\",\r\n    [TokenType.keywordFor]: \"for\",\r\n    [TokenType.keywordSwitch]: \"switch\",\r\n    [TokenType.keywordCase]: \"case\",\r\n    [TokenType.keywordDefault]: \"default\",\r\n    [TokenType.keywordIf]: \"if\",\r\n    [TokenType.keywordThen]: \"then\",\r\n    [TokenType.keywordElse]: \"else\",\r\n    [TokenType.keywordReturn]: \"return\",\r\n    [TokenType.keywordBreak]: \"break\",\r\n    [TokenType.keywordContinue]: \"continue\",\r\n    [TokenType.keywordNull]: \"null\",\r\n    [TokenType.keywordFinal]: \"final\",\r\n    [TokenType.keywordInstanceof]: \"instanceof\",\r\n    [TokenType.keywordPrint]: \"print\",\r\n    [TokenType.keywordPrintln]: \"println\",\r\n    // keywordInt,\r\n    // keywordBoolean,\r\n    // keywordString,\r\n    // keywordFloat,\r\n    // keywordChar,\r\n\r\n    // brackets\r\n    [TokenType.leftBracket]: \"(\", // ()\r\n    [TokenType.rightBracket]: \")\",\r\n    [TokenType.leftSquareBracket]: \"[\", // []\r\n    [TokenType.rightSquareBracket]: \"]\",\r\n    [TokenType.leftCurlyBracket]: \"{\", // {}\r\n    [TokenType.rightCurlyBracket]: \"}\",\r\n    [TokenType.leftRightSquareBracket]: \"[]\", \r\n    \r\n    // operators\r\n    [TokenType.dot]: \".\", //.\r\n    [TokenType.minus]: \"-\", \r\n    [TokenType.modulo]: \"%\", \r\n    [TokenType.plus]: \"+\", \r\n    [TokenType.multiplication]: \"*\", \r\n    [TokenType.division]: \"/\",\r\n    [TokenType.singleQuote]: \"'\", \r\n    [TokenType.doubleQuote]: \"\\\"\", // ']: \"\", \"\r\n    [TokenType.doubleMinus]: \"--\", \r\n    [TokenType.doublePlus]: \"++\",\r\n    [TokenType.lower]: \"<\", \r\n    [TokenType.greater]: \">\", \r\n    [TokenType.lowerOrEqual]: \"<=\", \r\n    [TokenType.greaterOrEqual]: \">=\", \r\n    [TokenType.equal]: \"==\", // ==\r\n    [TokenType.notEqual]: \"!=\", // !=\r\n    [TokenType.assignment]: \"=\", // =\r\n    [TokenType.plusAssignment]: \"+=\", // +=\r\n    [TokenType.minusAssignment]: \"-=\", // -=\r\n    [TokenType.multiplicationAssignment]: \"*=\", // *=\r\n    [TokenType.divisionAssignment]: \"/=\", // /=\r\n    [TokenType.moduloAssignment]: \"%=\",\r\n    [TokenType.ampersand]: \"&\", \r\n    [TokenType.and]: \"&&\", \r\n    [TokenType.or]: \"||\", \r\n    [TokenType.not]: \"!\", \r\n    [TokenType.ternaryOperator]: \"?\", \r\n    \r\n    // semicolon\r\n    [TokenType.semicolon]: \";\", // ;\r\n\r\n    [TokenType.colon]: \":\", // ;\r\n    [TokenType.ellipsis]: \"...\", // ;\r\n\r\n    // comma\r\n    [TokenType.comma]: \",\", \r\n\r\n    // backslash\r\n    [TokenType.backslash]: \"\\\\\",\r\n\r\n    // at\r\n    [TokenType.at]: \"@\",\r\n\r\n    // whitespace\r\n    [TokenType.space]: \"ein Leerzeichen\",\r\n    [TokenType.tab]: \"ein Tabulatorzeichen\",\r\n\r\n    // newline\r\n    [TokenType.newline]: \"ein Zeilenumbruch\",\r\n\r\n    // only lexer-internal\r\n    [TokenType.identifierChar]: \"eines der Zeichen a..z, A..Z, _\",  // none of the special chars above a..zA..Z_Äö...\r\n\r\n    // Comment\r\n    [TokenType.comment]: \"ein Kommentar\",\r\n\r\n    [TokenType.endofSourcecode]: \"das Ende des Programmes\"\r\n\r\n}\r\n\r\nexport var specialCharList: {[keyword: string]:TokenType} = {\r\n    '(': TokenType.leftBracket, // ()\r\n    ')': TokenType.rightBracket,\r\n    '[': TokenType.leftSquareBracket, // []\r\n    ']': TokenType.rightSquareBracket,\r\n    '{': TokenType.leftCurlyBracket, // {}\r\n    '}': TokenType.rightCurlyBracket,\r\n    \r\n    // operators\r\n    '.': TokenType.dot, //.\r\n    ',': TokenType.comma, //.\r\n    '-': TokenType.minus,\r\n    '%': TokenType.modulo,\r\n    '+': TokenType.plus, \r\n    '*': TokenType.multiplication, \r\n    '/': TokenType.division,\r\n    '\\\\': TokenType.backslash,\r\n    '@': TokenType.at,\r\n    '\\'': TokenType.singleQuote, \r\n    '\"': TokenType.doubleQuote, // ', \"\r\n    \"<\": TokenType.lower,\r\n    \">\": TokenType.greater,\r\n    \"=\": TokenType.assignment,\r\n    \"&\": TokenType.and,\r\n    \"|\": TokenType.or,\r\n    \"!\": TokenType.not,\r\n    \"?\": TokenType.ternaryOperator,\r\n    \r\n    ';': TokenType.semicolon, // ;\r\n    ':': TokenType.colon, // ;\r\n\r\n    '...': TokenType.ellipsis,\r\n\r\n    // whitespace\r\n    ' ': TokenType.space,\r\n    '\\t': TokenType.tab,\r\n\r\n    // newline\r\n    '\\n': TokenType.newline,\r\n    '\\r': TokenType.linefeed\r\n}\r\n\r\nexport var keywordList: {[keyword: string]:TokenType} = {\r\n    \"class\": TokenType.keywordClass,\r\n    \"this\": TokenType.keywordThis,\r\n    \"super\": TokenType.keywordSuper,\r\n    \"new\": TokenType.keywordNew,\r\n    \"interface\": TokenType.keywordInterface,\r\n    \"enum\": TokenType.keywordEnum,\r\n    \"void\": TokenType.keywordVoid,\r\n    \"abstract\": TokenType.keywordAbstract,\r\n    \"public\": TokenType.keywordPublic,\r\n    \"protected\": TokenType.keywordProtected,\r\n    \"private\": TokenType.keywordPrivate,\r\n    \"transient\": TokenType.keywordTransient,\r\n    \"static\": TokenType.keywordStatic,\r\n    \"extends\": TokenType.keywordExtends,\r\n    \"implements\": TokenType.keywordImplements,\r\n    \"while\": TokenType.keywordWhile,\r\n    \"do\": TokenType.keywordDo,\r\n    \"for\": TokenType.keywordFor,\r\n    \"switch\": TokenType.keywordSwitch,\r\n    \"case\": TokenType.keywordCase,\r\n    \"default\": TokenType.keywordDefault,\r\n    \"if\": TokenType.keywordIf,\r\n    \"then\": TokenType.keywordThen,\r\n    \"else\": TokenType.keywordElse,\r\n    \"return\": TokenType.keywordReturn,\r\n    \"break\": TokenType.keywordBreak,\r\n    \"continue\": TokenType.keywordContinue,\r\n    \"null\": TokenType.keywordNull,\r\n    \"final\": TokenType.keywordFinal,\r\n    \"instanceof\": TokenType.keywordInstanceof,\r\n    \"true\": TokenType.true,\r\n    \"false\": TokenType.false,\r\n    \"print\": TokenType.keywordPrint,\r\n    \"println\": TokenType.keywordPrintln,\r\n    // \"int\": TokenType.keywordInt,\r\n    // \"boolean\": TokenType.keywordBoolean,\r\n    // \"String\": TokenType.keywordString,\r\n    // \"float\": TokenType.keywordFloat,\r\n    // \"char\": TokenType.keywordChar\r\n};\r\n\r\nexport var EscapeSequenceList: {[keyword: string]:string} = {\r\n    \"n\": \"\\n\",\r\n    \"r\": \"\\r\",\r\n    \"t\": \"\\t\",\r\n    \"\\\"\": \"\\\"\",\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\"\r\n}\r\n\r\nexport type TextPosition = {\r\n    line: number,\r\n    column: number, \r\n    length: number\r\n}\r\n\r\nexport type TextPositionWithoutLength = {\r\n    line: number,\r\n    column: number\r\n}\r\n\r\nexport type Token = {\r\n    tt: TokenType,\r\n    value: string|number|boolean,\r\n    position: TextPosition,\r\n    commentBefore?: Token\r\n}\r\n\r\nexport type TokenList = Token[];\r\n\r\nfunction tokenToString(t: Token){\r\n    return \"<div><span style='font-weight: bold'>\" + TokenType[t.tt] + \"</span>\" +\r\n            \"<span style='color: blue'> &nbsp;'\" + t.value + \"'</span> (l&nbsp;\" + t.position.line + \", c&nbsp;\" + t.position.column + \")</div>\";\r\n}\r\n \r\nexport function tokenListToString(tl: TokenList):string{\r\n    let s = \"\";\r\n    for(let t of tl){\r\n        s += tokenToString(t) + \"\\n\";\r\n    }\r\n    return s;\r\n}","import { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Visibility, TypeVariable } from \"./Class.js\";\r\n\r\nexport type UsagePositions = Map<Module, TextPosition[]>;\r\n\r\nexport type TextPositionWithModule = {\r\n    module: Module,\r\n    position: TextPosition,\r\n    monacoModel?: monaco.editor.ITextModel\r\n}\r\n\r\nexport type CastInformation = {\r\n    automatic: boolean,\r\n    needsStatement: boolean\r\n}\r\n\r\nexport abstract class Type {\r\n\r\n    public onlyFirstPass = false;\r\n\r\n    public usagePositions: UsagePositions = new Map();\r\n    public declaration: TextPositionWithModule;\r\n\r\n    public identifier: string;\r\n    public documentation: string = \"\";\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public abstract getResultType(operation: TokenType, secondOperandType?: Type): Type;\r\n\r\n    public abstract compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any;\r\n\r\n    public abstract canCastTo(type: Type): boolean;\r\n\r\n    public abstract castTo(value: Value, type: Type): Value;\r\n\r\n    public abstract equals(type: Type): boolean;\r\n\r\n    public toTokenType(): TokenType {\r\n        return null;\r\n    };\r\n\r\n    public abstract debugOutput(value: Value, maxLength?: number): string;\r\n\r\n    clearUsagePositions() {\r\n        this.usagePositions = new Map();\r\n    }\r\n\r\n}\r\n\r\nexport abstract class PrimitiveType extends Type {\r\n\r\n    public initialValue: any = null;\r\n\r\n    public description: string = \"\";\r\n\r\n    protected operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    protected canCastToMap: { [type: string]: CastInformation };\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return this.canCastToMap[type.identifier] != null;\r\n    }\r\n\r\n    public getCastInformation(type: Type): CastInformation {\r\n        return this.canCastToMap[type.identifier];\r\n    }\r\n\r\n}\r\n\r\nexport class Attribute {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    identifier: string;\r\n    type: Type;\r\n    isStatic: boolean;\r\n    isFinal: boolean;\r\n    isTransient: boolean;\r\n    visibility: Visibility;\r\n    updateValue: (value: Value) => void;\r\n    usagePositions: UsagePositions;\r\n    declaration: TextPositionWithModule;\r\n    documentation: string;\r\n    annotation?: string;\r\n\r\n    constructor(name: string, type: Type, updateValue: (value: Value) => void,\r\n        isStatic: boolean, visibility: Visibility, isFinal: boolean, documentation?: string) {\r\n        this.identifier = name;\r\n        this.type = type;\r\n        this.updateValue = updateValue;\r\n        this.isStatic = isStatic;\r\n        this.visibility = visibility;\r\n        this.isFinal = isFinal;\r\n        this.usagePositions = new Map();\r\n        this.documentation = documentation;\r\n    }\r\n}\r\n\r\nexport class Method extends Type {\r\n\r\n    onlyFirstPass: boolean = false;\r\n\r\n    visibility: Visibility;\r\n\r\n    isAbstract: boolean;\r\n    isStatic: boolean;\r\n    isConstructor: boolean = false;\r\n    isVirtual: boolean = false; // true, if child class has method with same signature\r\n\r\n    parameterlist: Parameterlist;\r\n    returnType: Type;\r\n    annotation?: string;\r\n\r\n    invoke?: (parameters: Value[]) => any;  // only for system functions\r\n    program?: Program;\r\n\r\n    reserveStackForLocalVariables: number = 0;\r\n\r\n    hasGenericTypes: boolean;\r\n\r\n    genericTypeMap: { [identifier: string]: Type } = null;\r\n\r\n    public signature: string;\r\n\r\n    hasEllipsis(): boolean {\r\n        if(this.parameterlist.parameters.length == 0) return false;\r\n        return this.parameterlist.parameters[this.parameterlist.parameters.length - 1].isEllipsis;\r\n    }\r\n\r\n\r\n    getParameterType(index: number): Type {\r\n        return this.parameterlist.parameters[index].type;\r\n    }\r\n\r\n    getParameter(index: number): Variable {\r\n        return this.parameterlist.parameters[index];\r\n    }\r\n\r\n    getReturnType(): Type {\r\n        return this.returnType;\r\n    }\r\n\r\n    getParameterCount() {\r\n        return this.parameterlist.parameters.length;\r\n    }\r\n\r\n    getParameterList(): Parameterlist {\r\n        return this.parameterlist;\r\n    }\r\n\r\n\r\n\r\n    constructor(name: string, parameterlist: Parameterlist, returnType: Type,\r\n        invokeOrAST: ((parameters: Value[]) => any) | Program,\r\n        isAbstract: boolean, isStatic: boolean, documentation?: string, isConstructor: boolean = false) {\r\n        super();\r\n        this.identifier = name;\r\n        this.parameterlist = parameterlist;\r\n        this.returnType = returnType;\r\n        this.isAbstract = isAbstract;\r\n        this.isStatic = isStatic;\r\n        this.visibility = 0;\r\n        this.documentation = documentation;\r\n        this.isConstructor = isConstructor;\r\n\r\n        if (invokeOrAST != null) {\r\n            if (typeof invokeOrAST == \"function\") {\r\n                this.invoke = invokeOrAST;\r\n            } else {\r\n                this.program = invokeOrAST;\r\n                invokeOrAST.method = this;\r\n            }\r\n        }\r\n\r\n        this.signature = name + parameterlist.id;\r\n\r\n        for (let p of parameterlist.parameters) {\r\n            if (p[\"isTypeVariable\"] == true) {\r\n                this.hasGenericTypes = true; break;\r\n            }\r\n        }\r\n\r\n        this.hasGenericTypes = this.hasGenericTypes || (this.returnType != null && this.returnType[\"isTypeVariable\"] == true);\r\n    }\r\n\r\n    getSignatureWithReturnParameter(){\r\n        if(this.returnType != null){\r\n            return this.returnType.identifier + \" \" + this.signature;\r\n        } else {\r\n            return \"void \" + this.signature;\r\n        }\r\n    }\r\n\r\n    getCompletionLabel() {\r\n\r\n        let label = \"\";\r\n\r\n        if (this.returnType != null && this.returnType.identifier != \"void\") {\r\n            label += getTypeIdentifier(this.returnType) + \" \";\r\n        }\r\n\r\n        label += this.identifier + \"(\";\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            if(p.isEllipsis){\r\n                let arrayType: ArrayType = <any>p.type;\r\n                label += getTypeIdentifier(arrayType.arrayOfType) + \"... \" + p.identifier;\r\n            } else {\r\n                label += getTypeIdentifier(p.type) + \" \" + p.identifier;\r\n            }\r\n\r\n            if (i < parameters.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        label += \")\";\r\n\r\n        return label;\r\n    }\r\n\r\n\r\n    getCompletionSnippet(leftBracketAlreadyThere: boolean) {\r\n\r\n        if (leftBracketAlreadyThere) return this.identifier + \"($0\";\r\n\r\n        let snippet = \"\";\r\n\r\n        snippet += this.identifier + \"(\";\r\n\r\n        let isVoidReturn = this.returnType == null || this.returnType.identifier == \"void\";\r\n        let isVoidReturnDelta = isVoidReturn ? 1 : 0;\r\n\r\n        let parameters = this.parameterlist.parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            snippet += \"${\" + ((i + 1) % (parameters.length + isVoidReturnDelta)) + \":\" + p.identifier + \"}\";\r\n\r\n            if (i < parameters.length - 1) {\r\n                snippet += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        snippet += \")\";\r\n\r\n        if(this.returnType == null || this.returnType.identifier == \"void\"){\r\n            snippet += \";$0\";\r\n        }\r\n\r\n        return snippet;\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\";\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        return null;\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n        return false;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value { return value }\r\n\r\n\r\n}\r\n\r\nexport class Parameterlist {\r\n\r\n    id: string;\r\n\r\n    parameters: Variable[];\r\n\r\n    constructor(parameters: Variable[]) {\r\n        this.parameters = parameters;\r\n        this.computeId();\r\n    }\r\n\r\n    computeId() {\r\n        this.id = \"(\";\r\n        let i = 0;\r\n        while (i < this.parameters.length) {\r\n            this.id += this.parameters[i].type.identifier;\r\n            if (i < this.parameters.length - 1) {\r\n                this.id += \", \";\r\n            }\r\n            i++;\r\n        }\r\n        this.id += \")\";\r\n    }\r\n}\r\n\r\nexport type Variable = {\r\n    identifier: string,\r\n    type: Type,\r\n    stackPos?: number;\r\n    usagePositions: UsagePositions,\r\n    declaration: TextPositionWithModule,\r\n    isFinal: boolean,\r\n    isEllipsis?: boolean,\r\n    value?: Value // only for variables on heap,\r\n    declarationError?: any,     // if v.declarationError != null then variable has been used before initialization.\r\n    usedBeforeInitialization?: boolean,\r\n    initialized?: boolean\r\n}\r\n\r\nexport type Heap = { [identifier: string]: Variable };\r\n\r\nexport type Value = {\r\n    type: Type;\r\n    value: any;\r\n    updateValue?: (value: Value) => void;\r\n    object?: RuntimeObject;\r\n}\r\n\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if(type[\"typeVariables\"]){\r\n        if(type[\"typeVariables\"].length > 0){\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier) \r\n            + \"<\";\r\n               s += type[\"typeVariables\"].map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n","import { Klass, StaticClass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { PrimitiveType, Value } from \"../compiler/types/Types.js\";\r\n\r\n\r\n\r\nexport class RuntimeObject {\r\n\r\n    class: Klass | StaticClass;\r\n\r\n    intrinsicData: {[classIdentifier: string]: any} = {};  // for intrinsic (= builtin) classes to store data\r\n\r\n    // Attributes of class and base-classes\r\n    // Map class-identifier to Map <attribute-identifier, attribute-value>\r\n    attributeValues: Map<string, Map<string, Value>> = new Map();\r\n\r\n    constructor(klass: Klass | StaticClass ) {\r\n\r\n        this.class = klass;\r\n\r\n        // while (klass != null) {\r\n        //     let map: Map<string, Value> = new Map();\r\n        //     this.attributeValues.set(klass.identifier, map);\r\n        //     for (let attribute of klass.attributes) {\r\n        //         let value: Value = {\r\n        //             type: attribute.type,\r\n        //             value: null\r\n        //         };\r\n\r\n        //         if (attribute.type instanceof PrimitiveType) {\r\n        //             value.value = attribute.type.initialValue;\r\n        //         }\r\n        //         map.set(attribute.identifier, value);\r\n        //     }\r\n        //     klass = klass.baseClass;\r\n        // }\r\n\r\n    }\r\n\r\n    getValue(identifier: string):Value{\r\n\r\n        let klass = this.class;\r\n        \r\n        while(klass != null){\r\n            let av = this.attributeValues.get(klass.identifier).get(identifier);\r\n            if(av != null) \r\n            {\r\n                if(av.updateValue != null){\r\n                    av.updateValue(av);\r\n                }\r\n                return av;\r\n            }\r\n\r\n            // let attribute = klass.attributeMap.get(identifier);\r\n            // if(attribute != null && attribute.updateValue != null){\r\n            //     return attribute.updateValue({type: this.class, value: this});\r\n            // }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    initializeAttributeValues(){\r\n\r\n        this.attributeValues = new Map();\r\n\r\n        let klass = this.class;\r\n        while(klass != null){\r\n            \r\n            let map:Map<string, Value> = new Map();\r\n            this.attributeValues.set(klass.identifier, map);\r\n\r\n            for(let att of klass.attributes){\r\n                \r\n                \r\n                let value:any = null;\r\n                if(att.type instanceof PrimitiveType){\r\n                    value = att.type.initialValue;\r\n                }\r\n\r\n                let v: Value = {\r\n                    type: att.type,\r\n                    value: value\r\n                };\r\n\r\n                if(att.updateValue != null){\r\n                    v.updateValue = att.updateValue;\r\n                    v.object = this;\r\n                } \r\n                \r\n                map.set(att.identifier, v);\r\n\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function deepCopy(obj: any): any {\r\n\r\n    var copy: any;\r\n\r\n    // Handle the 3 simple types, and null or undefined\r\n    if (null == obj || \"object\" != typeof obj) return obj;\r\n\r\n    // Handle Date\r\n    if (obj instanceof Date) {\r\n        copy = new Date();\r\n        copy.setTime(obj.getTime());\r\n        return copy;\r\n    }\r\n\r\n    // Handle Array\r\n    if (obj instanceof Array) {\r\n        copy = [];\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            copy[i] = deepCopy(obj[i]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    // Handle Object\r\n    if (obj instanceof Object) {\r\n        copy = {};\r\n        for (var attr in obj) {\r\n            if (obj.hasOwnProperty(attr)) copy[attr] = deepCopy(obj[attr]);\r\n        }\r\n        return copy;\r\n    }\r\n\r\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\r\n\r\n}\r\n\r\n","import { Statement, JumpNode, Program, JumpOnSwitchStatement } from \"./Program.js\";\r\nimport { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { CodeGenerator } from \"./CodeGenerator.js\";\r\n\r\ntype nodeToResolve = {\r\n    node: JumpNode,\r\n    labelIndex: number\r\n}\r\n\r\ntype LabeledNode = {\r\n    node?: Statement,\r\n    labelIndex: number,\r\n    position?: number\r\n}\r\n\r\n\r\nexport class LabelManager {\r\n\r\n    maxLabelIndex: number = 0;\r\n\r\n    labeledNodes: LabeledNode[] = [];\r\n    \r\n    labelMap: Map<number, LabeledNode> = new Map();\r\n    jumpNodesToResolve: nodeToResolve[] = [];\r\n\r\n    switchStatements: JumpOnSwitchStatement[] = [];\r\n\r\n    program: Program;\r\n\r\n    constructor(program: Program){\r\n        this.program = program;\r\n    }\r\n\r\n    registerSwitchStatement(switchStatement: JumpOnSwitchStatement) {\r\n        this.switchStatements.push(switchStatement);\r\n    }\r\n\r\n    insertJumpNode(type: TokenType.jumpIfTrue|TokenType.jumpIfFalse|TokenType.jumpAlways|\r\n        TokenType.jumpIfFalseAndLeaveOnStack|TokenType.jumpIfTrueAndLeaveOnStack,\r\n         position: TextPosition, codeGenerator: CodeGenerator, labelIndex?: number): number {\r\n        \r\n        let statementList = this.program.statements;\r\n\r\n        if(position == null){\r\n            if(statementList.length > 0){\r\n                position = statementList[statementList.length - 1].position;\r\n            }\r\n        }\r\n\r\n        let node: JumpNode = {\r\n            type: type,\r\n            position: position,\r\n            stepFinished: true\r\n        };\r\n\r\n        codeGenerator.pushStatements(node);\r\n\r\n        return this.registerJumpNode(node, labelIndex);\r\n\r\n    }\r\n\r\n    markJumpDestination(offset: number, labelIndex?:number): number {\r\n        \r\n        let position = this.program.statements.length - 1 + offset;\r\n        \r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let labeledNode = {\r\n            position: position,\r\n            labelIndex: labelIndex\r\n        };\r\n\r\n        this.labeledNodes.push(labeledNode);\r\n\r\n        this.labelMap.set(labelIndex, labeledNode);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    removeNode(node: Statement){\r\n        for(let i = 0; i < this.labeledNodes.length; i++){\r\n            let n = this.labeledNodes[i];\r\n            if(n.node == node){\r\n\r\n                let index = this.program.statements.indexOf(node);\r\n               \r\n                if(index < this.program.statements.length - 1){\r\n                    let newNode = this.program.statements[index + 1];\r\n                    n.node = newNode;\r\n                }\r\n\r\n            } else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerJumpDestination(node: Statement, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let label: LabeledNode = {\r\n            node: node,\r\n            labelIndex: labelIndex\r\n        }\r\n\r\n        this.labeledNodes.push(label);\r\n        this.labelMap.set(labelIndex, label);\r\n\r\n        return labelIndex;\r\n    }\r\n\r\n    public registerJumpNode(node: JumpNode, labelIndex?: number): number {\r\n\r\n        if(labelIndex == null){\r\n            labelIndex = this.maxLabelIndex++;\r\n        }\r\n\r\n        let ntr: nodeToResolve = {\r\n            labelIndex: labelIndex,\r\n            node: node\r\n        }\r\n\r\n        this.jumpNodesToResolve.push(ntr);\r\n\r\n        return labelIndex;\r\n\r\n    }\r\n\r\n    resolveNodes(){\r\n        for(let ln of this.labeledNodes){\r\n\r\n            if(ln.position == null){\r\n                ln.position = this.program.statements.indexOf(ln.node);\r\n            } else {\r\n                while(ln.position > this.program.statements.length - 1){\r\n                    this.program.statements.push({\r\n                        type: TokenType.noOp,\r\n                        position: null\r\n                    });\r\n                }\r\n                ln.node = this.program.statements[this.program.statements.length - 1];\r\n            }\r\n\r\n        }\r\n\r\n        for(let jn of this.jumpNodesToResolve){\r\n            let dest = this.labelMap.get(jn.labelIndex);\r\n            if(dest != null){\r\n                jn.node.destination = dest.position;\r\n            }\r\n        }\r\n\r\n        for(let sw of this.switchStatements){\r\n            for(let dl of sw.destinationLabels){\r\n                sw.destinationMap[dl.constant] = this.labelMap.get(dl.label).position;\r\n            }\r\n            sw.destinationLabels = null;\r\n            if(sw.defaultDestination != null){\r\n                sw.defaultDestination = this.labelMap.get(sw.defaultDestination).position;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { ProgramStackElement } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TextPosition, TokenType } from \"../lexer/Token.js\";\r\nimport { LabelManager } from \"../parser/LabelManager.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Program } from \"../parser/Program.js\";\r\nimport { SymbolTable } from \"../parser/SymbolTable.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { nullType, stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\n\r\nexport enum Visibility { public, protected, private };\r\n\r\nvar booleanPrimitiveTypeCopy: any;\r\nexport function setBooleanPrimitiveTypeCopy(bpt: Type) {\r\n    booleanPrimitiveTypeCopy = bpt;\r\n}\r\n\r\n// Used for class diagrams:\r\nexport type CompostionData = { klass: Klass | Interface, multiples: boolean, identifier: string };\r\n\r\n/**\r\n * For Generic types\r\n */\r\nexport type TypeVariable = {\r\n    identifier: string;\r\n    type: Klass;\r\n    scopeFrom: TextPosition;\r\n    scopeTo: TextPosition;\r\n}\r\n\r\n\r\nexport class Klass extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Klass;\r\n    isTypeVariable: boolean = false;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    private static dontInheritFrom: string[] = [\"Integer\", \"Float\", \"Double\", \"Boolean\", \"Character\", \"String\"];\r\n\r\n    baseClass: Klass;\r\n    firstPassBaseClass: string;\r\n\r\n    staticClass: StaticClass;\r\n\r\n    module: Module;\r\n\r\n    visibility: Visibility;\r\n\r\n    implements: Interface[] = [];\r\n    firstPassImplements: string[] = [];\r\n\r\n    isAbstract: boolean = false;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    postConstructorCallbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    public symbolTable: SymbolTable;\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n\r\n        this.documentation = documentation;\r\n\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n        this.visibility = Visibility.public;\r\n\r\n        this.staticClass = new StaticClass(this);\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    getNonGenericClass(): Klass {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Klass = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    implementsInterface(i: Interface): boolean {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                if(i1.getThisOrExtendedInterface(i.getNonGenericIdentifier()) != null) return true;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getImplementedInterface(identifier: string): Interface {\r\n        let klass: Klass = this;\r\n        while (klass != null) {\r\n            for (let i1 of klass.implements) {\r\n                let i2: Interface = i1.getThisOrExtendedInterface(identifier);\r\n                if(i2 != null) return i2;\r\n            }\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n\r\n    registerUsedSystemClasses(usedSystemClasses: (Klass | Interface)[]) {\r\n        if (this.baseClass != null && this.baseClass.module != null && this.baseClass.module.isSystemModule &&\r\n            usedSystemClasses.indexOf(this.baseClass) < 0) {\r\n            usedSystemClasses.push(this.baseClass);\r\n        }\r\n        for (let cd of this.getCompositeData()) {\r\n            if (cd.klass != null && cd.klass.module != null && cd.klass.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(cd.klass) < 0) {\r\n                usedSystemClasses.push(cd.klass);\r\n            }\r\n        }\r\n        for (let interf of this.implements) {\r\n            if (interf != null && interf.module.isSystemModule &&\r\n                usedSystemClasses.indexOf(interf) < 0) {\r\n                usedSystemClasses.push(interf);\r\n            }\r\n        }\r\n    }\r\n\r\n    getCompositeData(): CompostionData[] {\r\n\r\n        let cd: CompostionData[] = [];\r\n        let cdMap: Map<Klass | Interface, CompostionData> = new Map();\r\n\r\n        for (let a of this.attributes) {\r\n            if (a.type instanceof Klass || a.type instanceof Interface) {\r\n                let cda = cdMap.get(a.type);\r\n                if (cda == null) {\r\n                    cda = {\r\n                        klass: a.type,\r\n                        multiples: false,\r\n                        identifier: a.identifier\r\n                    };\r\n                    cdMap.set(a.type, cda);\r\n                    cd.push(cda);\r\n                } else {\r\n                    cda.identifier += \", \" + a.identifier;\r\n                }\r\n            } else {\r\n                let type: Type = a.type;\r\n                while (type instanceof ArrayType) {\r\n                    type = type.arrayOfType;\r\n                }\r\n                if (type instanceof Klass || type instanceof Interface) {\r\n                    let cda = cdMap.get(type);\r\n                    if (cda == null) {\r\n                        cda = {\r\n                            klass: type,\r\n                            multiples: true,\r\n                            identifier: a.identifier\r\n                        };\r\n                        cdMap.set(type, cda);\r\n                        cd.push(cda);\r\n                    } else {\r\n                        cda.identifier += \", \" + a.identifier;\r\n                        cda.multiples = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return cd;\r\n    }\r\n\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n        if (this.staticClass != null) {\r\n            this.staticClass.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getPostConstructorCallbacks(): ((r: RuntimeObject) => void)[] {\r\n        let c: Klass = this;\r\n        let callbacks: ((r: RuntimeObject) => void)[] = null;\r\n\r\n        while (c != null) {\r\n            if (c.postConstructorCallbacks != null) {\r\n                if (callbacks == null) { callbacks = c.postConstructorCallbacks; }\r\n                else {\r\n                    callbacks = callbacks.concat(c.postConstructorCallbacks);\r\n                }\r\n            }\r\n            c = c.baseClass;\r\n        }\r\n        return callbacks;\r\n    }\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange, currentMethod?: Method): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier + \"\",\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            if (method.isConstructor){\r\n                if(currentMethod?.isConstructor && currentMethod != method && this.baseClass.methods.indexOf(method) >= 0){\r\n                    this.pushSuperCompletionItem(itemList, method, leftBracketAlreadyThere, rangeToReplace);\r\n                    continue;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        itemList = itemList.concat(this.staticClass.getCompletionItems(visibilityUpTo,\r\n            leftBracketAlreadyThere, identifierAndBracketAfterCursor,\r\n            rangeToReplace));\r\n\r\n        return itemList;\r\n    }\r\n\r\n    pushSuperCompletionItem(itemList: monaco.languages.CompletionItem[], method: Method, leftBracketAlreadyThere: boolean,\r\n        rangeToReplace: monaco.IRange) {\r\n        itemList.push({\r\n            label: method.getCompletionLabel().replace(method.identifier, \"super\"),\r\n            filterText: \"super\",\r\n            command: {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            },\r\n            kind: monaco.languages.CompletionItemKind.Method,\r\n            insertText: method.getCompletionSnippet(leftBracketAlreadyThere).replace(method.identifier, \"super\"),\r\n            range: rangeToReplace,\r\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n            documentation: method.documentation == null ? undefined : {\r\n                value: method.documentation\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    pushStaticInitializationPrograms(programStack: ProgramStackElement[]) {\r\n\r\n        if (this.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            programStack.push({\r\n                program: this.staticClass.attributeInitializationProgram,\r\n                programPosition: 0,\r\n                textPosition: { line: 1, column: 1, length: 0 },\r\n                method: \"Initialisierung statischer Variablen der Klasse \" + this.staticClass.identifier,\r\n                callbackAfterReturn: null,\r\n                isCalledFromOutside: \"Initialisierung statischer Attribute\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getMethodBySignature(signature: string): Method {\r\n\r\n        let c: Klass = this;\r\n        while (c != null) {\r\n            let method = c.methodMap.get(signature);\r\n            if (method != null) return method;\r\n            c = c.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    setBaseClass(baseClass: Klass) {\r\n        this.baseClass = baseClass;\r\n        this.staticClass.baseClass = baseClass.staticClass;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        if (method.isStatic) {\r\n            this.staticClass.addMethod(method);\r\n        } else {\r\n            this.methods.push(method);\r\n            this.methodMap.set(method.signature, method);\r\n        }\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        if (attribute.isStatic) {\r\n            this.staticClass.addAttribute(attribute);\r\n        } else {\r\n            this.attributes.push(attribute);\r\n            this.attributeMap.set(attribute.identifier, attribute);\r\n        }\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            if (secondOperandType instanceof Klass || secondOperandType == nullType) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            let firstOpClass = firstOperand?.value?.class;\r\n            if(firstOpClass == null) return false;\r\n            let typeLeft: Klass = <Klass>firstOpClass;\r\n            let typeRight = secondOperand.type;\r\n            if (typeRight instanceof StaticClass) {\r\n\r\n                while (typeLeft != null) {\r\n                    if (typeLeft === typeRight.Klass) return true;\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n                return false;\r\n            }\r\n            if (typeRight instanceof Interface) {\r\n                while (typeLeft != null) {\r\n                    for (let i of typeLeft.implements) {\r\n                        if (i === typeRight) return true;\r\n                    }\r\n                    typeLeft = typeLeft.baseClass;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * returns all visible methods of this class and all of its base classes\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || method.identifier == identifier);\r\n        });\r\n\r\n        if (this.baseClass != null && (identifier == null || identifier != this.identifier || methods.length == 0)) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier == this.identifier ? this.baseClass.identifier : identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all visible attributes of this class and all of its base classes\r\n     */\r\n    public getAttributes(upToVisibility: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = [];\r\n        for (let a of this.attributes) {\r\n            if (a.visibility <= upToVisibility) {\r\n                attributes.push(a);\r\n            }\r\n        }\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(upToVisibilityInBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                if (a.visibility > upToVisibilityInBaseClass) continue;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public hasConstructor() {\r\n        for (let m of this.methods) {\r\n            if (m.isConstructor) return true;\r\n        }\r\n\r\n        if (this.baseClass != null) return this.baseClass.hasConstructor();\r\n\r\n        return false;\r\n    }\r\n\r\n    public getConstructor(parameterTypes: Type[], upToVisibility: Visibility, classIdentifier: string = this.identifier): { error: string, methodList: Method[] } {\r\n\r\n        let constructors: Method[] = this.methods.filter((m) => {\r\n            return m.isConstructor;\r\n        });\r\n\r\n        if (constructors.length == 0 && this.baseClass != null) {\r\n            return this.baseClass.getConstructor(parameterTypes, upToVisibility, classIdentifier);\r\n        } else {\r\n            return findSuitableMethods(constructors, this.identifier, parameterTypes, classIdentifier, true);\r\n        }\r\n\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        let allMethods = this.getMethods(upToVisibility);\r\n\r\n        let methods = findSuitableMethods(allMethods, identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n        if (methods.methodList.length == 0 && !searchConstructor) {\r\n            let staticMethods = this.staticClass.getMethodsThatFitWithCasting(identifier, parameterTypes, false, upToVisibility);\r\n            if (staticMethods.error == null) {\r\n                return staticMethods;\r\n            }\r\n\r\n            return methods;\r\n        }\r\n\r\n        return methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean } {\r\n\r\n        let error = null;\r\n        let foundButInvisible: boolean = false;\r\n\r\n        let attribute = this.attributeMap.get(identifier);\r\n        let attributeNotFound = attribute == null;\r\n\r\n        if (attribute == null) {\r\n            error = \"Das Attribut \" + identifier + \" kann nicht gefunden werden.\";\r\n        } else\r\n            if (attribute.visibility > upToVisibility) {\r\n                error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist daher hier nicht sichtbar.\";\r\n                attribute = null;\r\n                foundButInvisible = true;\r\n            }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttribute = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (baseClassAttribute.attribute != null || attributeNotFound) {\r\n                return baseClassAttribute;\r\n            }\r\n\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: foundButInvisible };\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        if (type instanceof Klass) {\r\n            let baseClass: Klass = this;\r\n\r\n            while (baseClass != null) {\r\n                if (type.getNonGenericIdentifier() == baseClass.getNonGenericIdentifier()) {\r\n                    if (type.typeVariables.length > 0) {\r\n                        let n: number = Math.min(type.typeVariables.length, baseClass.typeVariables.length);\r\n                        for (let i = 0; i < n; i++) {\r\n                            if (!baseClass.typeVariables[i].type.canCastTo(type.typeVariables[i].type)) return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    return true;\r\n                }\r\n                baseClass = baseClass.baseClass;\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n\r\n            let klass: Klass = this;\r\n            while(klass != null){\r\n                for (let i of klass.implements) {\r\n                    if (type.getNonGenericIdentifier() == i.getNonGenericIdentifier()) {\r\n                        return true;\r\n                    }\r\n                }\r\n                klass = klass.baseClass;\r\n            }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n    checkInheritance(): { message: string, missingMethods: Method[] } {\r\n\r\n        if (this.baseClass != null && Klass.dontInheritFrom.indexOf(this.baseClass.identifier) >= 0) {\r\n            return { message: \"Aus Performancegründen ist es leider nicht möglich, Unterklassen der Klassen String, Boolean, Character, Integer, Float und Double zu bilden.\", missingMethods: [] };\r\n        }\r\n\r\n        let message = \"\";\r\n        let missingAbstractMethods: Method[] = [];\r\n        let implementedSignatures: string[] = [];\r\n        let missingInterfaceMethods: Method[] = [];\r\n\r\n        let klass: Klass = this;\r\n        let hierarchy: string[] = [klass.identifier];\r\n        while (klass.baseClass != null) {\r\n            klass = klass.baseClass;\r\n            if (hierarchy.indexOf(klass.identifier) >= 0) {\r\n                klass.baseClass = null;  // This is necessary to avoid infinite loops in further compilation\r\n                hierarchy = [klass.identifier].concat(hierarchy);\r\n                message = \"Die Klasse \" + klass.identifier + \" erbt von sich selbst: \";\r\n                message += \"(\" + hierarchy.join(\" extends \") + \")\";\r\n                break;\r\n            }\r\n            hierarchy = [klass.identifier].concat(hierarchy);\r\n        }\r\n\r\n        if (message == \"\") {\r\n\r\n            if (this.baseClass != null && !this.isAbstract) {\r\n\r\n                let abstractMethods: Method[] = [];\r\n\r\n                let klass: Klass = this;\r\n\r\n                // collect abstract Methods\r\n                while (klass != null) {\r\n                    for (let m of klass.methods) {\r\n                        if (m.isAbstract) {\r\n                            abstractMethods.push(m);\r\n                        } else {\r\n                            implementedSignatures.push(m.getSignatureWithReturnParameter());\r\n                        }\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                for (let m of abstractMethods) {\r\n\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingAbstractMethods.push(m);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (missingAbstractMethods.length > 0) {\r\n                message = \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden ihrer abstrakten Basisklassen implementieren: \";\r\n\r\n                message += missingAbstractMethods.map((m) => m.getSignatureWithReturnParameter()).join(\", \");\r\n\r\n            }\r\n\r\n            for (let i of this.implements) {\r\n                for (let m of i.getMethods()) {\r\n                    if (implementedSignatures.indexOf(m.getSignatureWithReturnParameter()) < 0) {\r\n                        missingInterfaceMethods.push(m);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (missingInterfaceMethods.length > 0) {\r\n\r\n                if (message != \"\") message += \"\\n\";\r\n\r\n                message += \"Die Klasse \" + this.identifier + \" muss noch folgende Methoden der von ihr implementierten Interfaces implementieren: \";\r\n\r\n                message += missingInterfaceMethods.map((m) => m.signature).join(\", \");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return { message: message, missingMethods: missingAbstractMethods.concat(missingInterfaceMethods) };\r\n\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        let id = a.identifier;\r\n        if (a instanceof Klass) id = a.getNonGenericIdentifier();\r\n\r\n        while (c != null) {\r\n            if (c.getNonGenericIdentifier() == id) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = <RuntimeObject>value.value;\r\n\r\n        if (object == null) {\r\n            return \"null\";\r\n        }\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            let v = object.getValue(attribute.identifier);\r\n            if (attribute.type instanceof PrimitiveType) {\r\n                s += attribute.identifier + \":&nbsp;\" + attribute.type.debugOutput(v, maxLength / 2);\r\n            } else {\r\n                s += attribute.identifier + \":&nbsp; {...}\";\r\n            }\r\n            if (i < attributes.length - 1) {\r\n                s += \",&nbsp;\";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Klass {\r\n        // Klass.count++;\r\n\r\n        let newKlass: Klass = Object.create(this);\r\n\r\n        newKlass.implements = this.implements.slice(0);\r\n        newKlass.usagePositions = new Map();\r\n        newKlass.isGenericVariantFrom = this;\r\n\r\n        return newKlass;\r\n    }\r\n\r\n}\r\n\r\nexport class StaticClass extends Type {\r\n\r\n    baseClass: StaticClass;\r\n    Klass: Klass;\r\n    // TODO: Initialize\r\n    classObject: RuntimeObject;\r\n\r\n    attributeInitializationProgram: Program;\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    public attributes: Attribute[] = [];\r\n    public attributeMap: Map<string, Attribute> = new Map();\r\n\r\n    constructor(klass: Klass) {\r\n        super();\r\n\r\n        this.Klass = klass;\r\n        this.identifier = klass.identifier;\r\n\r\n        if (klass.baseClass != null) {\r\n            this.baseClass = klass.baseClass.staticClass;\r\n        }\r\n\r\n        this.attributeInitializationProgram = {\r\n            method: null,\r\n            module: this.Klass.module,\r\n            statements: [],\r\n            labelManager: null\r\n        }\r\n\r\n        this.attributeInitializationProgram.labelManager = new LabelManager(this.attributeInitializationProgram);\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n        for (let a of this.attributes) {\r\n            a.usagePositions = new Map();\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n\r\n        let s: string = \"{\";\r\n        let attributes = this.getAttributes(Visibility.private);\r\n        let object = this.classObject;\r\n\r\n        for (let i = 0; i < attributes.length; i++) {\r\n\r\n            let attribute = attributes[i];\r\n            s += attribute.identifier + \": \" + object == null ? '---' : attribute.type.debugOutput(object.getValue(attribute.identifier), maxLength / 2);\r\n            if (i < attributes.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        return s + \"}\";\r\n    }\r\n\r\n\r\n    getCompletionItems(visibilityUpTo: Visibility,\r\n        leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let attribute of this.getAttributes(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: attribute.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Field,\r\n                insertText: attribute.identifier,\r\n                range: rangeToReplace,\r\n                documentation: attribute.documentation == null ? undefined : {\r\n                    value: attribute.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let method of this.getMethods(visibilityUpTo)) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public addAttribute(attribute: Attribute) {\r\n        this.attributes.push(attribute);\r\n        this.attributeMap.set(attribute.identifier, attribute);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n        return null;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[],\r\n        searchConstructor: boolean, upToVisibility: Visibility): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(upToVisibility), identifier, parameterTypes,\r\n            this.Klass.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this class and all of its base classes\r\n     * @param isStatic returns only static methods if true\r\n     */\r\n    public getMethods(upToVisibility: Visibility, identifier?: string): Method[] {\r\n\r\n        let methods: Method[] = this.methods.slice().filter((method) => {\r\n            return method.visibility <= upToVisibility && (identifier == null || identifier == method.identifier);\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n            let baseClassUptoVisibility = upToVisibility == Visibility.public ? Visibility.public : Visibility.protected;\r\n            for (let m of this.baseClass.getMethods(baseClassUptoVisibility, identifier)) {\r\n\r\n                let found = false;\r\n                for (let m1 of methods) {\r\n                    if (m1.signature == m.signature) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    methods.push(m);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return methods;\r\n    }\r\n\r\n    /**\r\n     * returns all attributes of this class and all of its base classes\r\n     * @param isStatic return only static attributes if true\r\n     */\r\n    public getAttributes(visibilityUpTo: Visibility): Attribute[] {\r\n\r\n        let attributes: Attribute[] = this.attributes.filter((attribute) => {\r\n            return attribute.visibility <= visibilityUpTo;\r\n        });\r\n\r\n        if (this.baseClass != null) {\r\n\r\n            let visibilityUpToBaseClass = visibilityUpTo == Visibility.public ? visibilityUpTo : Visibility.protected;\r\n\r\n            for (let a of this.baseClass.getAttributes(visibilityUpToBaseClass)) {\r\n\r\n                let found = false;\r\n\r\n                for (let a1 of attributes) {\r\n                    if (a1.identifier == a.identifier) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    attributes.push(a);\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return attributes;\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        let method = this.methodMap.get(identifier + parameterlist.id);\r\n\r\n        if (method == null && this.baseClass != null) {\r\n            return this.baseClass.getMethod(identifier, parameterlist);\r\n        }\r\n\r\n        return method;\r\n    }\r\n\r\n    public getAttribute(identifier: string, upToVisibility: Visibility): { attribute: Attribute, error: string, foundButInvisible: boolean, staticClass: StaticClass} {\r\n\r\n        let error = \"\";\r\n        let notFound = false;\r\n        let attribute = this.attributeMap.get(identifier);\r\n\r\n        if (attribute == null) {\r\n            notFound = true;\r\n            error = \"Das Attribut \" + identifier + \" konnte nicht gefunden werden.\";\r\n        } else if (attribute.visibility > upToVisibility) {\r\n            error = \"Das Attribut \" + identifier + \" hat die Sichtbarkeit \" + Visibility[attribute.visibility] + \" und ist hier daher nicht sichtbar.\";\r\n            attribute = null;\r\n        }\r\n\r\n        if (attribute == null && this.baseClass != null) {\r\n            let upToVisibilityInBaseClass = upToVisibility == Visibility.public ? upToVisibility : Visibility.protected;\r\n\r\n            let baseClassAttributeWithError = this.baseClass.getAttribute(identifier, upToVisibilityInBaseClass);\r\n            if (notFound) {\r\n                return baseClassAttributeWithError;\r\n            }\r\n        }\r\n\r\n        return { attribute: attribute, error: error, foundButInvisible: !notFound , staticClass: this};\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    hasAncestorOrIs(a: Klass | StaticClass) {\r\n        let c: Klass | StaticClass = this;\r\n        while (c != null) {\r\n            if (c == a) return true;\r\n            c = c.baseClass;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport class Interface extends Type {\r\n\r\n    // for Generics:\r\n    typeVariables: TypeVariable[] = [];\r\n    isGenericVariantFrom: Interface;\r\n    typeVariablesReady: boolean = true;\r\n\r\n    public module: Module;\r\n\r\n    public extends: Interface[] = [];\r\n\r\n    public methods: Method[] = [];\r\n    private methodMap: Map<string, Method> = new Map();\r\n\r\n    constructor(identifier: string, module: Module, documentation?: string) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this.identifier = identifier;\r\n        this.module = module;\r\n    }\r\n\r\n    getNonGenericIdentifier(): string {\r\n        let k: Interface = this;\r\n        while (k.isGenericVariantFrom != null) k = k.isGenericVariantFrom;\r\n        return k.identifier;\r\n    }\r\n\r\n    getThisOrExtendedInterface(identifier: String){\r\n        if(this.getNonGenericIdentifier() == identifier) return this;\r\n        for(let if1 of this.extends){\r\n            let if2 = if1.getThisOrExtendedInterface(identifier);\r\n            if(if2 != null) return if2;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // static count: number = 0;\r\n    clone(): Interface {\r\n        // Interface.count++;\r\n        let newInterface: Interface = Object.create(this);\r\n\r\n        newInterface.usagePositions = new Map();\r\n        newInterface.isGenericVariantFrom = this;\r\n\r\n        return newInterface;\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        super.clearUsagePositions();\r\n\r\n        for (let m of this.methods) {\r\n            m.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getCompletionItems(leftBracketAlreadyThere: boolean, identifierAndBracketAfterCursor: string,\r\n        rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let itemList: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let method of this.getMethods()) {\r\n            itemList.push({\r\n                label: method.getCompletionLabel(),\r\n                filterText: method.identifier,\r\n                kind: monaco.languages.CompletionItemKind.Method,\r\n                insertText: method.getCompletionSnippet(leftBracketAlreadyThere),\r\n                range: rangeToReplace,\r\n                command: {\r\n                    id: \"editor.action.triggerParameterHints\",\r\n                    title: '123',\r\n                    arguments: []\r\n                },\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                documentation: method.documentation == null ? undefined : {\r\n                    value: method.documentation\r\n                }\r\n            });\r\n        }\r\n\r\n        return itemList;\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        if (value.value == null) {\r\n            return \"null\";\r\n        } else {\r\n            if (value.value instanceof RuntimeObject) {\r\n                return value.value.class.debugOutput(value);\r\n            } else {\r\n                return \"{...}\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public equals(type: Type): boolean {\r\n        return type == this;\r\n    }\r\n\r\n    public addMethod(method: Method) {\r\n        this.methods.push(method);\r\n        this.methodMap.set(method.signature, method);\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if (operation == TokenType.equal || operation == TokenType.notEqual) {\r\n            return booleanPrimitiveTypeCopy;\r\n        }\r\n\r\n        if (operation == TokenType.keywordInstanceof) {\r\n            if (secondOperandType instanceof StaticClass || secondOperandType instanceof Interface) {\r\n                return booleanPrimitiveTypeCopy;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value) {\r\n\r\n        if (operation == TokenType.equal) {\r\n            return firstOperand.value == secondOperand.value;\r\n        }\r\n\r\n        if (operation == TokenType.notEqual) {\r\n            return firstOperand.value != secondOperand.value;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    /**\r\n     * returns all methods of this interface\r\n     * @param isStatic is not used in interfaces\r\n     */\r\n    public getMethods(): Method[] {\r\n\r\n        return this.methods;\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, parameterlist: Parameterlist): Method {\r\n\r\n        return this.methodMap.get(identifier + parameterlist.id);\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type instanceof Interface) {\r\n            let nonGenericCastable = false;\r\n            if (type.getNonGenericIdentifier() == this.getNonGenericIdentifier()) {\r\n                nonGenericCastable = true;\r\n                if (this.typeVariables.length == 0) return true;\r\n                let type2 = <Interface>type;\r\n                if (this.typeVariables.length != type2.typeVariables.length) return false;\r\n                for (let i = 0; i < this.typeVariables.length; i++) {\r\n                    let tv = this.typeVariables[i];\r\n                    let tvOther = type2.typeVariables[i];\r\n                    if (!tvOther.type.canCastTo(tv.type)) return false;\r\n                }\r\n                return false;\r\n            } else {\r\n                for (let type1 of this.extends) {\r\n                    if (type1.canCastTo(type)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            if (type instanceof Klass && type.getNonGenericIdentifier() == \"Object\") {\r\n\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // return (type instanceof Klass) || (type instanceof Interface);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n        return value;\r\n    }\r\n\r\n    public getMethodsThatFitWithCasting(identifier: string, parameterTypes: Type[], searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n        return findSuitableMethods(this.getMethods(), identifier, parameterTypes, this.identifier, searchConstructor);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction findSuitableMethods(methodList: Method[], identifier: string, parameterTypes: Type[],\r\n    classIdentifier: string,\r\n    searchConstructor: boolean): { error: string, methodList: Method[] } {\r\n\r\n    let suitableMethods: Method[] = [];\r\n    let howManyCastingsMax: number = 10000;\r\n    let error = null;\r\n\r\n    let oneWithCorrectIdentifierFound = false;\r\n\r\n    for (let m of methodList) {\r\n\r\n        let howManyCastings = 0;\r\n        if (m.identifier == identifier || m.isConstructor && searchConstructor) {\r\n\r\n            oneWithCorrectIdentifierFound = true;\r\n\r\n            let isEllipsis = m.hasEllipsis();\r\n            if (m.getParameterCount() == parameterTypes.length || (isEllipsis && m.getParameterCount() <= parameterTypes.length)) {\r\n\r\n                let suits = true;\r\n\r\n                let i = 0;\r\n\r\n                for (i = 0; i < m.getParameterCount() - (isEllipsis ? 1 : 0); i++) {\r\n                    let mParameterType = m.getParameterType(i);\r\n                    let givenType = parameterTypes[i];\r\n\r\n                    if (givenType == null) {\r\n                        suits = false; break;\r\n                    }\r\n\r\n                    if (mParameterType == givenType) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (givenType.canCastTo(mParameterType)) {\r\n                        howManyCastings++;\r\n                        continue;\r\n                    }\r\n\r\n                    suits = false;\r\n                    break;\r\n                }\r\n\r\n                // Ellipsis!\r\n                if(suits && isEllipsis){\r\n                    let mParameterEllipsis = m.getParameter(i);\r\n                    let mParameterTypeEllispsis = (<ArrayType>mParameterEllipsis.type).arrayOfType;\r\n\r\n                        \r\n                        for (let j = i; j < parameterTypes.length; j++) {\r\n                            let givenType = parameterTypes[i];\r\n        \r\n                            if (givenType == null) {\r\n                                suits = false; break;\r\n                            }\r\n        \r\n                            if (mParameterTypeEllispsis == givenType) {\r\n                                continue;\r\n                            }\r\n        \r\n                            if (givenType.canCastTo(mParameterTypeEllispsis)) {\r\n                                howManyCastings++;\r\n                                continue;\r\n                            }\r\n        \r\n                            suits = false;\r\n                            break;\r\n                        }\r\n        \r\n                }\r\n\r\n                if (suits && howManyCastings <= howManyCastingsMax) {\r\n                    if (howManyCastings < howManyCastingsMax) {\r\n                        suitableMethods = [];\r\n                    }\r\n                    suitableMethods.push(m);\r\n                    howManyCastingsMax = howManyCastings;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length == 0) {\r\n\r\n        if (oneWithCorrectIdentifierFound) {\r\n            if(parameterTypes.length == 0){\r\n                error = searchConstructor ? \"Es gibt keinen parameterlosen Konstruktor der Klasse \" + classIdentifier : \"Die vorhandenen Methoden mit dem Bezeichner \" + identifier + \" haben alle mindestens einen Parameter. Hier wird aber kein Parameterwert übergeben.\";\r\n            } else {\r\n                let typeString = parameterTypes.map(type => type.identifier).join(\", \");\r\n                error = searchConstructor ? `Die Parametertypen (${typeString}) passen zu keinem Konstruktor der Klasse ${classIdentifier}` : `Die Parametertypen (${typeString}) passen zu keiner der vorhandenen Methoden mit dem Bezeichner ${identifier}.`;\r\n            }\r\n        } else {\r\n            error = \"Der Typ \" + classIdentifier + \" besitzt keine Methode mit dem Bezeichner \" + identifier + \".\";\r\n        }\r\n\r\n    }\r\n\r\n    if (suitableMethods.length > 1) {\r\n        suitableMethods = suitableMethods.slice(0, 1);\r\n        // error = \"Zu den gegebenen Parametern hat der Typ \" + classIdentifier + \" mehrere passende Methoden.\";\r\n    }\r\n\r\n    return {\r\n        error: error,\r\n        methodList: suitableMethods\r\n    };\r\n\r\n}\r\n\r\nexport function getVisibilityUpTo(objectType: Klass | StaticClass, currentClassContext: Klass | StaticClass): Visibility {\r\n\r\n    if (currentClassContext == null) {\r\n        return Visibility.public;\r\n    }\r\n\r\n    if (objectType instanceof StaticClass) objectType = objectType.Klass;\r\n    if (currentClassContext instanceof StaticClass) currentClassContext = currentClassContext.Klass;\r\n\r\n    if (objectType == currentClassContext) {\r\n        return Visibility.private;\r\n    }\r\n\r\n    if (currentClassContext.hasAncestorOrIs(objectType)) {\r\n        return Visibility.protected;\r\n    }\r\n\r\n    return Visibility.public;\r\n\r\n}\r\n\r\n","import { Method, Attribute, Value, Type, Parameterlist, PrimitiveType } from \"./Types.js\";\r\nimport { TokenType } from \"../lexer/Token.js\";\r\nimport { intPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { Visibility } from \"./Class.js\";\r\n\r\nexport class ArrayType extends Type {\r\n\r\n    public arrayOfType: Type;\r\n    private lengthAttribute: Attribute;\r\n\r\n    constructor(arrayOfType: Type){\r\n        super();\r\n        this.arrayOfType = arrayOfType;\r\n        this.identifier = \"Array\";\r\n\r\n        if(arrayOfType != null){\r\n            this.identifier = arrayOfType.identifier + \"[]\";\r\n        }\r\n\r\n        this.lengthAttribute = new Attribute(\"length\", intPrimitiveType, (object: Value) => {\r\n            return (<any[]>object.value).length;\r\n        }, false, Visibility.public, true);\r\n    }   \r\n\r\n    public equals(type:Type): boolean{\r\n        return (type instanceof ArrayType) && type.arrayOfType.equals(this.arrayOfType);\r\n    }\r\n\r\n    public get id():string{\r\n        return this.arrayOfType.identifier + \"[]\";\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n        if(operation == TokenType.referenceElement){\r\n            return this.arrayOfType;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        if(operation == TokenType.referenceElement){\r\n            return <any[]>firstOperand.value[<number>secondOperand.value];\r\n        }\r\n\r\n    }\r\n\r\n    public getMethod(identifier: string, signature: Parameterlist): Method{\r\n        return null;\r\n    }\r\n\r\n    public getAttribute(identifier: string): Attribute{\r\n        if(identifier == \"length\"){\r\n            return this.lengthAttribute;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean{\r\n\r\n        if(!(type instanceof ArrayType)){\r\n            return false;\r\n        }\r\n\r\n        return this.arrayOfType.canCastTo(type.arrayOfType);\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        let array = (<Value[]>value.value).slice();\r\n        let destType = (<ArrayType><unknown>type).arrayOfType;\r\n\r\n        for(let a of array){\r\n            this.arrayOfType.castTo(a, destType);\r\n        }\r\n\r\n        return {\r\n            type: type,\r\n            value: array\r\n        }\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40):string {\r\n\r\n        let length: number = 0;\r\n\r\n        if(value.value != null){\r\n\r\n            let s: string = \"[\";\r\n\r\n                let a: Value[] = <Value[]>value.value;\r\n\r\n                for(let i = 0; i < a.length; i++){\r\n\r\n                    let v = a[i];\r\n\r\n                    let s1 = v.type.debugOutput(v, maxLength/2);\r\n\r\n                    s += s1;\r\n                    if(i < a.length - 1) s += \",&nbsp;\";\r\n                    length += s1.length;\r\n\r\n                    if(length > maxLength) break;\r\n\r\n                }\r\n\r\n            return s + \"]\"\r\n\r\n        } else return \"null\";\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Method, Parameterlist, Value } from \"./Types.js\";\r\nimport { stringPrimitiveType } from \"./PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\n// neu:\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { type } from \"jquery\";\r\nimport { json } from \"express\";\r\nimport { ArrayType } from \"./Array.js\";\r\n\r\n\r\n/**\r\n * Base class for all classes\r\n */\r\n\r\nexport class ObjectClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Object\", module, \"Basisklasse aller Klassen\");\r\n\r\n        // stringPrimitiveType is used here before it is initialized. This problem is solved\r\n        // in the constructor of StringprimitiveType.\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                return \"(\" + (<RuntimeObject><unknown>parameters[0].value).class.identifier + \")\";\r\n\r\n            }, false, false));\r\n\r\n\r\n        // // Add default parameterless constructor\r\n        // let m = new Method(\"Object\", new Parameterlist([]), null,\r\n        // (parameters) => {\r\n\r\n        // }, false, false);\r\n        \r\n        // m.isConstructor = true;\r\n\r\n        // this.addMethod(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class IntegerClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Integer\", null, \"Wrapper-Klasse, um int-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", intPrimitiveType, (value) => { value.value = Number.MAX_SAFE_INTEGER }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ int annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", intPrimitiveType, (value) => { value.value = Number.MIN_SAFE_INTEGER }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ int annehmen kann\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean{\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"int-wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Integer\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseInt(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Integer-Objekt, indem die übergebene Zeichenkette in einen int-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen double-Wert um\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen float-Wert um\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Integer-Objekt in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherInteger\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen int-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"parseInt\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Wandelt die Zeichenkette s in einen int-Wert um. Dabei wird s als Zahl im Zahlensystem mit der Basis radix interpretiert.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(parameters[1].value);\r\n            }, false, true, \"Gibt das Signum der übergebenen Zahl zurück, also -1 falls negativ, 0 falls 0 und +1 falls positiv.\"));\r\n\r\n        this.addMethod(new Method(\"toBinary\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(2);\r\n            }, false, true, \"Gibt die übergebene Zahl als Binärrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toHex\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(16);\r\n            }, false, true, \"Gibt die übergebene Zahl als Hexadezimalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toOctal\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(8);\r\n            }, false, true, \"Gibt die übergebene Zahl als Oktalrepräsentation zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value).toString();\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis 10 zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return (parameters[1].value >>> 0).toString(parameters[1].value);\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"i\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Zahl zur Basis radix und gib sie als Integer-Objekt zurück.\"));\r\n\r\n        // this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n        //     (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class FloatClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Float\", null, \"Wrapper-Klasse, um float-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ float annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", floatPrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ float\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", floatPrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ float\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [floatPrimitiveType, doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Float\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Float-Objekt, indem die übergebene Zeichenkette in einen float-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Float-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Float-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherFloat\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseFloat\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen float-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Float-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene float-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value } from \"../Types.js\";\r\n\r\n\r\nexport class CharacterClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Character\", null, \"Wrapper-Klasse, um char-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [charPrimitiveType, stringPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Character\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Character-Objekt\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([]), charPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Character-Objekt in einen char-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherCharacter\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[0].value).charCodeAt(0);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"charValue\", new Parameterlist([\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den char-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"digit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseInt(parameters[1].value, parameters[2].value);\r\n            }, false, true, \"Gibt den numerischen Wert des Zeichens zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"forDigit\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radix\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value).toString(parameters[2].value).charAt(0);\r\n            }, false, true, \"Gibt den übergebenen Wert als Ziffer im Zahlensystem zur Basis radix zurück.\"));\r\n\r\n        this.addMethod(new Method(\"getNumericValue\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).charCodeAt(0);\r\n            }, false, true, \"Wandelt das Zeichen in einen numerischen Wert (Unicode-Wert) um.\"));\r\n\r\n        this.addMethod(new Method(\"isLetter\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen ist.\"));\r\n\r\n        this.addMethod(new Method(\"isLetterOrDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[a-zäöüß0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein deutsches Alphabet-Zeichen oder eine Ziffer ist.\"));\r\n\r\n        this.addMethod(new Method(\"isDigit\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[0-9]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen eine Ziffer ist.\"));\r\n\r\n            this.addMethod(new Method(\"isWhitespace\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).match(/[ \\r\\n\\t]/i) != null;\r\n            }, false, true, \"Gibt genau dann true zurück, wenn das Zeichen ein Leerzeichen, Tabulatorzeichen oder Zeilenumbruch ist.\"));\r\n\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleUpperCase();\r\n            }, false, true, \"Wandelt das Zeichen in Großschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return (<string>parameters[1].value).toLocaleLowerCase();\r\n            }, false, true, \"Wandelt das Zeichen in Kleinschreibung um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"char-value\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den char-Wert in ein Character-Objekt um.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { Klass, Visibility } from \"../Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Attribute } from \"../Types.js\";\r\n\r\n\r\nexport class BooleanClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Boolean\", null, \"Wrapper-Klasse, um boolean-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"TRUE\", this, (value) => { value.value = true }, true, Visibility.public, true, \"das Boolean-Objekt, das TRUE repräsentiert\"));\r\n        this.addAttribute(new Attribute(\"FALSE\", this, (value) => { value.value = false }, true, Visibility.public, true, \"das Boolean-Objekt, das FALSE repräsentiert\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [booleanPrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Boolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1] != null && parameters[1].value.toLowerCase() == \"true\";\r\n\r\n            }, false, false, \"Instanziert ein neues Boolean-Objekt: Es nimmt genau dann den Wert true an, wenn die übergebene Zeichenkette ohne Berücksichtigung von Klein-/Großschreibung den Wert \\\"true\\\" hat.\", true));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Boolean-Objekt in einen boolean-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                return v0 == v1 ? 0 : 1;\r\n            }, false, false, \"Gibt genau dann 0 zurück, wenn der Wert des Objekts gleich dem übergebenen Wert ist, ansonsten 1.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherBoolean\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return (<boolean>parameters[0].value) ? 0 : 1;\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"booleanValue\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value;\r\n            }, false, false, \"Gibt den boolean-Wert des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"boolean-value\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Wandelt den boolean-Wert in ein Boolean-Objekt um.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n        this.addMethod(new Method(\"parseBoolean\", new Parameterlist([\r\n            { identifier: \"string-value\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value != null && (<string>parameters[1].value).toLowerCase() == \"true\";\r\n            }, false, true, \"Wandelt die Zeichenkette in einen boolean-Wert um. Er ergibt true genau dann, wenn die Zeichenkette != null ist und - ohne Berücksichtigung von Klein-/Großschreibung - den Wert \\\"true\\\" hat.\"));\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../Class.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type, PrimitiveType } from \"../Types.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, floatPrimitiveType, doublePrimitiveType, booleanPrimitiveType } from \"../PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\n\r\n\r\nexport class DoubleClass extends Klass {\r\n\r\n    unboxableAs = [];\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"Double\", null, \"Wrapper-Klasse, um double-Werte in Collections verenden zu können.\");\r\n        this.baseClass = baseClass;\r\n\r\n        this.addAttribute(new Attribute(\"MAX_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MAX_VALUE }, true, Visibility.public, true, \"Der größte Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"MIN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.MIN_VALUE }, true, Visibility.public, true, \"Der kleinste Wert, den eine Variable vom Typ double annehmen kann\"));\r\n        this.addAttribute(new Attribute(\"NaN_VALUE\", doublePrimitiveType, (value) => { value.value = Number.NaN }, true, Visibility.public, true, \"Der \\\"Not a Number\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"NEGATIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.NEGATIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"negative infinity\\\"-Wert vom Typ double\"));\r\n        this.addAttribute(new Attribute(\"POSITIVE_INFINITY\", doublePrimitiveType, (value) => { value.value = Number.POSITIVE_INFINITY }, true, Visibility.public, true, \"Der \\\"positive infinity\\\"-Wert vom Typ double\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n    }\r\n\r\n    canCastTo(type: Type): boolean {\r\n        return this.unboxableAs.indexOf(type) >= 0 || super.canCastTo(type);\r\n    }\r\n\r\n    init() {\r\n\r\n        this.unboxableAs = [doublePrimitiveType];\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"double-value\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"int-value\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = parameters[1].value;\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt\", true));\r\n\r\n        this.addMethod(new Method(\"Double\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                parameters[0].value = Number.parseFloat(parameters[1].value);\r\n\r\n            }, false, false, \"Instanziert ein neues Double-Objekt, indem die übergebene Zeichenkette in einen double-Wert umgewandelt wird.\", true));\r\n\r\n\r\n        this.addMethod(new Method(\"doubleValue\", new Parameterlist([]), doublePrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen double-Wert um.\"));\r\n        this.addMethod(new Method(\"floatValue\", new Parameterlist([]), floatPrimitiveType,\r\n            (parameters) => { return parameters[0].value; }, false, false, \"Wandelt das Double-Objekt in einen float-Wert um.\"));\r\n        this.addMethod(new Method(\"intValue\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return Math.trunc(parameters[0].value); }, false, false, \"Wandelt das Double-Objekt durch Abrunden in einen int-Wert um.\"));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let v0 = parameters[0].value;\r\n                let v1 = parameters[1].value;\r\n                if (v0 > v1) return 1;\r\n                if (v0 < v1) return -1;\r\n                return 0;\r\n            }, false, false, \"Ist der Wert größer als der übergebene Wert, so wird +1 zurückgegeben. Ist er kleiner, so wird -1 zurückgegeben. Sind die Werte gleich, so wird 0 zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"anotherDouble\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == parameters[1].value;\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Wert gleich dem übergebenen Wert ist.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[0].value;\r\n            }, false, false, \"Gibt den Wert des Objekts als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"hashCode\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.trunc(parameters[0].value);\r\n            }, false, false, \"Gibt den hashCode des Objekts zurück.\"));\r\n\r\n        this.addMethod(new Method(\"parseDouble\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Wandelt die Zeichenkette in einen double-Wert um\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return \"\" + parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als String-Wert zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return parameters[1].value;\r\n            }, false, true, \"Gibt die übergebene Zahl als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"valueOf\", new Parameterlist([\r\n            { identifier: \"s\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                return Number.parseFloat(parameters[1].value);\r\n            }, false, true, \"Interpretiert die übergebene Zeichenkette als Dezimalzahl und gib sie als Double-Objekt zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[1].value)\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isNaN\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return Number.isNaN(parameters[0].value)\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt NaN (not a Number) ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n            { identifier: \"f\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[1].value == Infinity;\r\n            }, false, true, \"Gibt genau dann true zurück, falls die übergebene double-Zahl INFINTITY ist.\"));\r\n\r\n        this.addMethod(new Method(\"isInfinite\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return parameters[0].value == Infinity;\r\n            }, false, false, \"Gibt genau dann true zurück, falls das Objekt INFINITY ist.\"));\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n","import { TokenType } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass, setBooleanPrimitiveTypeCopy } from \"./Class.js\";\r\nimport { ObjectClass } from \"./ObjectClass.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Type, Value } from \"./Types.js\";\r\nimport { IntegerClass } from \"./boxedTypes/IntegerClass.js\";\r\nimport { FloatClass } from \"./boxedTypes/FloatClass.js\";\r\nimport { CharacterClass } from \"./boxedTypes/CharacterClass.js\";\r\nimport { BooleanClass } from \"./boxedTypes/BooleanClass.js\";\r\nimport { DoubleClass } from \"./boxedTypes/DoubleClass.js\";\r\n\r\nexport class NullType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"null\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport class VarType extends Type {\r\n\r\n    constructor() {\r\n        super();\r\n        this.identifier = \"var\";\r\n    }\r\n\r\n    getResultType(operation: TokenType, secondOperandType: Type) {\r\n        return null;\r\n    }\r\n    compute(operation: TokenType, firstOperand: Value, secondOperand: Value) {\r\n        return null;\r\n    }\r\n    canCastTo(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n    castTo(value: Value, type: Type) {\r\n        return value;\r\n    }\r\n    equals(type: Type) {\r\n        return (type instanceof Klass || type instanceof Interface);\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"var\";\r\n    }\r\n}\r\n\r\nexport class IntPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"int\";\r\n\r\n        this.description = \"ganze Zahl\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": intPrimitiveType, \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.multiplication]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.modulo]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType },\r\n            [TokenType.division]: { \"int\": intPrimitiveType, \"Integer\": intPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType},\r\n            [TokenType.doublePlus]: { \"none\": intPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": intPrimitiveType },\r\n            [TokenType.negation]: { \"none\": intPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"char\": { automatic: true, needsStatement: true },\r\n            \"int\": { automatic: true, needsStatement: false },\r\n            \"Integer\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.integerConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            };\r\n        }\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == charPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: String.fromCharCode(<number>value.value)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value / <number>(secondOperand.value));\r\n                }\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.modulo:\r\n                if (secondOperand.type == intPrimitiveType) {\r\n                    return Math.trunc(value % <number>(secondOperand.value));\r\n                }\r\n                return 1;\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class FloatPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"float\";\r\n\r\n        this.description = \"Fließkommazahl mit einfacher Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": floatPrimitiveType, \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"Integer\": floatPrimitiveType, \"int\": floatPrimitiveType, \"float\": floatPrimitiveType, \"Float\": floatPrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": floatPrimitiveType },\r\n            [TokenType.negation]: { \"none\": floatPrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, doublePrimitiveType];\r\n\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class DoublePrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = 0;\r\n\r\n        this.identifier = \"double\";\r\n\r\n        this.description = \"Fließkommazahl mit doppelter Genauigkeit\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType, \"String\": stringPrimitiveType },\r\n            [TokenType.minus]: { \"none\": doublePrimitiveType, \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.multiplication]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.division]: { \"int\": doublePrimitiveType, \"Integer\": doublePrimitiveType, \"float\": doublePrimitiveType, \"Float\": doublePrimitiveType, \"double\": doublePrimitiveType, \"Double\": doublePrimitiveType },\r\n            [TokenType.doublePlus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.doubleMinus]: { \"none\": doublePrimitiveType },\r\n            [TokenType.negation]: { \"none\": doublePrimitiveType },\r\n            [TokenType.lower]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"int\": booleanPrimitiveType, \"float\": booleanPrimitiveType, \"double\": booleanPrimitiveType ,\"Integer\": booleanPrimitiveType, \"Float\": booleanPrimitiveType, \"Double\": booleanPrimitiveType },\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, stringPrimitiveType, floatPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: false, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: false },\r\n            \"double\": { automatic: true, needsStatement: false },\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"Float\": { automatic: true, needsStatement: false },\r\n            \"Double\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.floatingPointConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n        if (type == intPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: Math.trunc(<number>value.value)\r\n            }\r\n        }\r\n\r\n        if (type == floatPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <number>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.minus:\r\n                if (secondOperand == null) return -value;\r\n                return value - <number>(secondOperand.value);\r\n\r\n            case TokenType.multiplication:\r\n                return value * <number>(secondOperand.value);\r\n\r\n            case TokenType.division:\r\n                return value / <number>(secondOperand.value);\r\n\r\n            case TokenType.doublePlus:\r\n                return value++;\r\n\r\n            case TokenType.doubleMinus:\r\n                return value--;\r\n\r\n            case TokenType.negation:\r\n                return -value;\r\n\r\n            case TokenType.lower:\r\n                return value < (<number>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <number>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <number>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <number>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <number>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <number>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <number>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BooleanPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"boolean\";\r\n\r\n        this.description = \"boolescher Wert (true oder false)\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType },\r\n            [TokenType.and]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.or]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.not]: { \"none\": booleanPrimitiveType },\r\n            [TokenType.equal]: { \"boolean\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"boolean\": booleanPrimitiveType },\r\n        };\r\n\r\n        this.canCastToMap = {\r\n            \"String\": { automatic: true, needsStatement: true },\r\n            \"boolean\": { automatic: true, needsStatement: false },\r\n            \"Boolean\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n\r\n    }\r\n\r\n    toTokenType(): TokenType {\r\n        return TokenType.booleanConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: \"\" + <number>value.value\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <boolean>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <boolean>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <boolean>(secondOperand.value);\r\n\r\n            case TokenType.and:\r\n                return value && <boolean>(secondOperand.value);\r\n\r\n            case TokenType.or:\r\n                return value || <boolean>(secondOperand.value);\r\n\r\n            case TokenType.not:\r\n                return !value;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"\" + <boolean>value.value;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VoidPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = false;\r\n\r\n        this.identifier = \"void\";\r\n\r\n        this.description = \"leerer Rückgabewert\"\r\n\r\n        this.operationTable = {\r\n        };\r\n\r\n        this.canCastToMap = {};\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.keywordVoid;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        return value;\r\n\r\n    }\r\n\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"void\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class StringPrimitiveType extends Klass {\r\n\r\n    private operationTable: { [operation: number]: { [typename: string]: Type } }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.stringConstant;\r\n    }\r\n\r\n    public getResultType(operation: TokenType, secondOperandType?: Type): Type {\r\n\r\n        if(operation == TokenType.keywordInstanceof){\r\n            return super.getResultType(operation, secondOperandType);\r\n        }\r\n\r\n        let opTypeMap = this.operationTable[operation];\r\n\r\n        if (opTypeMap == null) {\r\n            return null; // Operation not possible\r\n        }\r\n\r\n        if (secondOperandType != null) {\r\n            return opTypeMap[secondOperandType.identifier];\r\n        }\r\n\r\n        return opTypeMap[\"none\"];\r\n\r\n    }\r\n\r\n\r\n    constructor(baseClass: Klass) {\r\n        super(\"String\", null, \"Ein Objekt der Klasse String speichert eine Zeichenkette.\");\r\n        this.baseClass = baseClass;\r\n        let stringClass = this;\r\n        baseClass.methods.filter(m => m.identifier == \"toString\").forEach(m => m.returnType = stringClass);\r\n    }\r\n\r\n    init() {\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"int\": stringPrimitiveType, \r\n            \"float\": stringPrimitiveType, \"double\": doublePrimitiveType, \r\n            \"boolean\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.notEqual]: { \"String\": booleanPrimitiveType, \"null\": booleanPrimitiveType},\r\n            [TokenType.lower]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"String\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"String\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n\r\n        this.addMethod(new Method(\"length\", new Parameterlist([]), intPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).length; }, false, false, \"Länge der Zeichenkette, d.h. Anzahl der Zeichen in der Zeichenkette.\"));\r\n        this.addMethod(new Method(\"charAt\", new Parameterlist([{ identifier: \"Position\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), charPrimitiveType,\r\n            (parameters) => { return (<string>parameters[0].value).charAt(<number>(parameters[1].value)); }, false, false, \"Zeichen an der gegebenen Position.\\n**Bem.: ** Position == 0 bedeutet das erste Zeichen in der Zeichenkette, Position == 1 das zweite usw. .\"));\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return <string>parameters[0].value == <string>(parameters[1].value); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (unter Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).localeCompare(<string>(parameters[1].value)); }, false, false, \"Vergleicht den String mit dem übergebenen String. Gibt -1 zurück, falls ersterer im Alphabet vor letzterem steht, +1, falls umgekehrt und 0, falls beide Strings identisch sind.\"));\r\n        this.addMethod(new Method(\"equalsIgnoreCase\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLowerCase() == (<string>(parameters[1].value).toLowerCase()); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die zwei Zeichenketten übereinstimmen (**ohne** Berücksichtigung von Klein-/Großschreibung).\"));\r\n        this.addMethod(new Method(\"endsWith\", new Parameterlist([{ identifier: \"suffix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).endsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = suffix) endet. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"startsWith\", new Parameterlist([{ identifier: \"präfix\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).startsWith(<string>(parameters[1].value)); }, false, false, \"Gibt genau dann **wahr** zurück, wenn die Zeichenkette mit der übergebenen Zeichenkette ( = präfix) beginnt. Klein-/Großschreibung wird dabei berücksichtigt!\"));\r\n        this.addMethod(new Method(\"toLowerCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleLowerCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Großbuchstaben durch den entsprechenden Kleinbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"toUpperCase\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).toLocaleUpperCase(); }, false, false, \"Gibt die Zeichenkette zurück, die sich ergibt, wenn man in der gegebenen Zeichnkette jeden Kleinbuchstaben durch den entsprechenden Großbuchstaben ersetzt.\\n**Bemerkung: ** Die Methode verändert die Zeichenkette selbst nicht.\"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value)); }, false, false, \"Gibt das hintere Ende der Zeichenkette ab **beginIndex** zurück. **beginIndex** == 1 bedeutet, dass die Zeichenkette ab dem 2.(!) Zeichen zurückgegeben wird. \"));\r\n        this.addMethod(new Method(\"substring\", new Parameterlist([{ identifier: \"beginIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        { identifier: \"endIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).substring(<number>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die Teil-Zeichenkette von **beginIndex** bis **endIndex** zurück.\\n**Vorsicht: ** beginIndex und endIndex sind nullbasiert, d.h. beginIndex == 0 bedeutet die Position vor dem ersten Zeichen.\"));\r\n        this.addMethod(new Method(\"trim\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).trim(); }, false, false, \"Gibt die Zeichenkette zurück, die entsteht, wenn man am Anfang und Ende der Zeichenkette alle Leerzeichen, Tabs und Zeilenumbrüche entfernt.\"));\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([]), booleanPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)) == \"\"; }, false, false, \"Gibt genau dann wahr zurück, wenn die Zeichenkette leer ist.\\n**Warnung: ** Die Methode darf nicht mit dem '''null'''-Objekt aufgerufen werden!\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).indexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die erste Position zurück, an der **otherString** in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex mit der Suche begonnen.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([{ identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false }]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird.\"));\r\n        this.addMethod(new Method(\"lastIndexOf\", new Parameterlist([\r\n            { identifier: \"otherString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), intPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).lastIndexOf(<string>(parameters[1].value), <number>(parameters[2].value)); }, false, false, \"Gibt die letzte Position zurück, bei der otherString in der Zeichenkette gefunden wird. Dabei wird erst bei fromIndex - von rechts her beginnend - gesucht.\"));\r\n        this.addMethod(new Method(\"replace\", new Parameterlist([\r\n            { identifier: \"target\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => { return (<string>(parameters[0].value)).replace(<string>(parameters[1].value), <string>(parameters[2].value)); }, false, false, \"Ersetzt alle Vorkommen von **target** durch **replacement** und gibt die entstandene Zeichenkette zurück. Die Zeichenkette selbst wird nicht verändert.\"));\r\n        this.addMethod(new Method(\"replaceAll\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, 'g');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **alle** Fundstellen durch **replacement**.\"));\r\n        this.addMethod(new Method(\"replaceFirst\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n            { identifier: \"replacement\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                return (<string>(parameters[0].value)).replace(regExp, <string>(parameters[2].value));\r\n            }, false, false, \"Durchsucht den String mit dem regulären Ausdruck (regex) und ersetzt **die erste** Fundstelle durch **replacement**.\"));\r\n        this.addMethod(new Method(\"split\", new Parameterlist([\r\n            { identifier: \"regex\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false },\r\n        ]), new ArrayType(stringPrimitiveType),\r\n            (parameters) => {\r\n                let pattern = <string>(parameters[1].value);\r\n                let regExp = new RegExp(pattern, '');\r\n\r\n                let strings = (<string>(parameters[0].value)).split(regExp);\r\n                let values: Value[] = [];\r\n                for(let s of strings){\r\n                    values.push({type: stringPrimitiveType, value: s});\r\n                }\r\n                \r\n                return values;\r\n\r\n            }, false, false, \"Teilt die Zeichenkette an den Stellen, die durch den regulären Ausdruck (regex) definiert sind, in Teile auf. Die Fundstellen des regex werden dabei weggelassen. Gibt die Teile als String-Array zurück.\"));\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                if (secondOperand.type == stringPrimitiveType || secondOperand.type == charPrimitiveType) {\r\n                    return value + <string>(secondOperand.value);\r\n                } else if (secondOperand.type == booleanPrimitiveType) {\r\n                    return value + <boolean>(secondOperand.value);\r\n                } else {\r\n                    return value + <number>(secondOperand.value);\r\n                }\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n            case TokenType.keywordInstanceof:\r\n                return super.compute(operation, firstOperand, secondOperand);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return '\"' + <string>value.value + '\"';\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class CharPrimitiveType extends PrimitiveType {\r\n\r\n    init() {\r\n\r\n        this.initialValue = \"\\u0000\";\r\n\r\n        this.identifier = \"char\";\r\n\r\n        this.description = \"ein Zeichen\"\r\n\r\n        this.operationTable = {\r\n            [TokenType.plus]: { \"String\": stringPrimitiveType, \"char\": stringPrimitiveType },\r\n            [TokenType.equal]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.notEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lower]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greater]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.lowerOrEqual]: { \"char\": booleanPrimitiveType },\r\n            [TokenType.greaterOrEqual]: { \"char\": booleanPrimitiveType }\r\n\r\n        };\r\n\r\n        // this.canCastTolist = [intPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType];\r\n        this.canCastToMap = {\r\n            \"int\": { automatic: true, needsStatement: true },\r\n            \"float\": { automatic: true, needsStatement: true },\r\n            \"double\": { automatic: true, needsStatement: true },\r\n            \"String\": { automatic: true, needsStatement: false },\r\n            \"char\": { automatic: true, needsStatement: false },\r\n            \"Character\": { automatic: true, needsStatement: false },\r\n        }\r\n\r\n    }\r\n\r\n    public toTokenType(): TokenType {\r\n        return TokenType.charConstant;\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == stringPrimitiveType) {\r\n            return value;\r\n        }\r\n\r\n        if (type == intPrimitiveType || type == floatPrimitiveType || type == doublePrimitiveType) {\r\n            return {\r\n                type: type,\r\n                value: (<string>value.value).charCodeAt(0)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public compute(operation: TokenType, firstOperand: Value, secondOperand?: Value): any {\r\n\r\n        let value = <string>(firstOperand.value);\r\n\r\n        switch (operation) {\r\n            case TokenType.plus:\r\n                return value + <string>(secondOperand.value);\r\n\r\n            case TokenType.lower:\r\n                return value < (<string>(secondOperand.value));\r\n\r\n            case TokenType.greater:\r\n                return value > <string>(secondOperand.value);\r\n\r\n            case TokenType.lowerOrEqual:\r\n                return value <= <string>(secondOperand.value);\r\n\r\n            case TokenType.greaterOrEqual:\r\n                return value >= <string>(secondOperand.value);\r\n\r\n            case TokenType.equal:\r\n                return value == <string>(secondOperand.value);\r\n\r\n            case TokenType.notEqual:\r\n                return value != <string>(secondOperand.value);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value): string {\r\n        return \"'\" + <string>value.value + \"'\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport var voidPrimitiveType = new VoidPrimitiveType();\r\nexport var intPrimitiveType = new IntPrimitiveType();\r\nexport var floatPrimitiveType = new FloatPrimitiveType();\r\nexport var doublePrimitiveType = new DoublePrimitiveType();\r\nexport var booleanPrimitiveType = new BooleanPrimitiveType();\r\nsetBooleanPrimitiveTypeCopy(booleanPrimitiveType);\r\nexport var objectType = new ObjectClass(null);\r\nexport var stringPrimitiveType = new StringPrimitiveType(objectType);\r\nexport var charPrimitiveType = new CharPrimitiveType();\r\nexport var nullType = new NullType();\r\nexport var varType = new VarType();\r\n\r\nexport var IntegerType = new IntegerClass(objectType);\r\nexport var FloatType = new FloatClass(objectType);\r\nexport var DoubleType = new DoubleClass(objectType);\r\nexport var CharacterType = new CharacterClass(objectType);\r\nexport var BooleanType = new BooleanClass(objectType);\r\n\r\nexport var TokenTypeToDataTypeMap: { [tt: number]: Type } = {\r\n    [TokenType.integerConstant]: intPrimitiveType,\r\n    [TokenType.floatingPointConstant]: floatPrimitiveType,\r\n    [TokenType.booleanConstant]: booleanPrimitiveType,\r\n    [TokenType.stringConstant]: stringPrimitiveType,\r\n    [TokenType.charConstant]: charPrimitiveType,\r\n    [TokenType.keywordNull]: nullType\r\n}","import { TokenList, specialCharList, TokenType, Token, EscapeSequenceList, keywordList, TextPosition, TokenTypeReadable } from \"./Token.js\";\r\nimport { text } from \"express\";\r\n\r\nenum LexerState {\r\n    number, identifier, stringConstant, characterConstant, multilineComment, EndoflineComment\r\n}\r\n\r\nvar endChar = \"►\"; // \\u10000\r\n\r\nexport type QuickFix = {\r\n    title: string,\r\n    editsProvider: (uri: monaco.Uri) => monaco.languages.WorkspaceTextEdit[]\r\n}\r\n\r\nexport type ErrorLevel = \"info\" | \"error\" | \"warning\";\r\n\r\nexport type Error = {\r\n    position: TextPosition,\r\n    text: string,\r\n    quickFix?: QuickFix,\r\n    level: ErrorLevel\r\n}\r\n\r\nexport class Lexer {\r\n\r\n    tokenList: TokenList;\r\n    nonSpaceLastTokenType: TokenType;\r\n\r\n    errorList: Error[];\r\n    pos: number;\r\n    line: number;\r\n    column: number;\r\n\r\n    currentChar: string;\r\n    nextChar: string;\r\n\r\n    input: string;\r\n\r\n    spaceTokens: TokenType[] = [\r\n        TokenType.space, TokenType.tab, TokenType.newline\r\n    ];\r\n\r\n    bracketStack: TokenType[];\r\n    bracketError: string;\r\n    correspondingBracket: { [key: number]: TokenType } = {};\r\n\r\n    constructor() {\r\n        this.correspondingBracket[TokenType.leftBracket] = TokenType.rightBracket;\r\n        this.correspondingBracket[TokenType.leftCurlyBracket] = TokenType.rightCurlyBracket;\r\n        this.correspondingBracket[TokenType.leftSquareBracket] = TokenType.rightSquareBracket;\r\n        this.correspondingBracket[TokenType.rightBracket] = TokenType.leftBracket;\r\n        this.correspondingBracket[TokenType.rightCurlyBracket] = TokenType.leftCurlyBracket;\r\n        this.correspondingBracket[TokenType.rightSquareBracket] = TokenType.leftSquareBracket;\r\n    }\r\n\r\n    lex(input: string): { tokens: TokenList, errors: Error[], bracketError: string } {\r\n\r\n        this.input = input.replace(\"\\u00a0\", \" \");\r\n        this.tokenList = [];\r\n        this.errorList = [];\r\n        this.bracketError = null;\r\n        this.bracketStack = [];\r\n        this.pos = 0;\r\n        this.line = 1;\r\n        this.column = 1;\r\n        this.nonSpaceLastTokenType = null;\r\n\r\n\r\n        if (input.length == 0) {\r\n            return { tokens: this.tokenList, errors: this.errorList, bracketError: null };\r\n        }\r\n\r\n        this.currentChar = input.charAt(0);\r\n\r\n        this.nextChar = input.length > 1 ? input.charAt(1) : endChar;\r\n\r\n\r\n        while (this.currentChar != endChar) {\r\n            this.mainState();\r\n        }\r\n\r\n        if (this.bracketStack.length > 0) {\r\n            let bracketOpen = this.bracketStack.pop();\r\n            let bracketClosed = this.correspondingBracket[bracketOpen];\r\n\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[bracketClosed]);\r\n        }\r\n\r\n        return {\r\n            tokens: this.tokenList,\r\n            errors: this.errorList,\r\n            bracketError: this.bracketError\r\n        };\r\n\r\n    }\r\n\r\n    checkClosingBracket(tt: TokenType) {\r\n        if (this.bracketStack.length == 0) {\r\n            let bracketOpen = this.correspondingBracket[tt];\r\n            this.setBracketError(TokenTypeReadable[bracketOpen] + \" \" + TokenTypeReadable[tt]);\r\n            return;\r\n        }\r\n        let openBracket = this.bracketStack.pop();\r\n        let correspondingBracket = this.correspondingBracket[openBracket];\r\n        if (tt != correspondingBracket) {\r\n            this.setBracketError(TokenTypeReadable[openBracket] + \" \" + TokenTypeReadable[correspondingBracket]);\r\n        }\r\n    }\r\n\r\n    setBracketError(error: string) {\r\n        if (this.bracketError == null) this.bracketError = error;\r\n    }\r\n\r\n    next() {\r\n        this.pos++;\r\n        this.currentChar = this.nextChar;\r\n        if (this.pos + 1 < this.input.length) {\r\n            this.nextChar = this.input.charAt(this.pos + 1);\r\n        } else {\r\n            this.nextChar = endChar;\r\n        }\r\n        this.column++; // column of current char\r\n    }\r\n\r\n\r\n\r\n    mainState() {\r\n\r\n        let char = this.currentChar;\r\n\r\n        let specialCharToken = specialCharList[char];\r\n\r\n        if (specialCharToken != null) {\r\n            switch (specialCharToken) {\r\n                case TokenType.leftSquareBracket:\r\n                    if (this.nextChar == \"]\") {\r\n                        this.pushToken(TokenType.leftRightSquareBracket, \"[]\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.leftSquareBracket, \"[\");\r\n                        this.bracketStack.push(specialCharToken);\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.rightSquareBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    this.bracketStack.push(specialCharToken);\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    this.checkClosingBracket(specialCharToken);\r\n                    break;\r\n                case TokenType.and:\r\n                    if (this.nextChar == \"&\") {\r\n                        this.pushToken(TokenType.and, \"&&\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.ampersand, \"&\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.or:\r\n                    if (this.nextChar == \"|\") {\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushError(\"| gefunden. Gemeint ist wohl || (Oder-Operator)?\", 1);\r\n                        this.pushToken(TokenType.or, \"||\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.multiplication:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.multiplicationAssignment, \"*=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.multiplication, \"*\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.not:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.notEqual, \"!=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.not, \"!\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.division:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.divisionAssignment, \"/=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '*') {\r\n                        this.lexMultilineComment();\r\n                        return;\r\n                    } else if (this.nextChar == '/') {\r\n                        this.lexEndofLineComment();\r\n                        return;\r\n                    }\r\n                    this.pushToken(TokenType.division, '/');\r\n                    this.next();\r\n                    return;\r\n                case TokenType.modulo:\r\n                    if (this.nextChar == \"=\") {\r\n                        this.pushToken(TokenType.moduloAssignment, \"%=\");\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.modulo, \"/\");\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.plus:\r\n                    if (this.nextChar == '+') {\r\n                        this.pushToken(TokenType.doublePlus, '++');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.plusAssignment, '+=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.plus, '+');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.lower:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.lowerOrEqual, '<=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.lower, '<');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.greater:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.greaterOrEqual, '>=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.greater, '>');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.dot:\r\n                    if (this.nextChar == '.' && this.pos + 2 < this.input.length && this.input[this.pos + 2] == \".\") {\r\n                        this.pushToken(TokenType.ellipsis, '...');\r\n                        this.next();\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.dot, '.');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n\r\n                case TokenType.assignment:\r\n                    if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.equal, '==');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.assignment, '=');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.minus:\r\n                    if (this.nextChar == '-') {\r\n                        this.pushToken(TokenType.doubleMinus, '--');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                    else if (this.isDigit(this.nextChar, 10) && !\r\n                        ([TokenType.identifier, TokenType.integerConstant, TokenType.floatingPointConstant, TokenType.rightBracket].indexOf(this.nonSpaceLastTokenType) >= 0)\r\n                    ) {\r\n                        this.lexNumber();\r\n                        return;\r\n                    }\r\n                    else if (this.nextChar == '=') {\r\n                        this.pushToken(TokenType.minusAssignment, '-=');\r\n                        this.next();\r\n                        this.next();\r\n                        return;\r\n                    } else {\r\n                        this.pushToken(TokenType.minus, '-');\r\n                        this.next();\r\n                        return;\r\n                    }\r\n                case TokenType.singleQuote:\r\n                    this.lexCharacterConstant();\r\n                    return;\r\n                case TokenType.doubleQuote:\r\n                    this.lexStringConstant();\r\n                    return;\r\n                case TokenType.newline:\r\n                    this.pushToken(TokenType.newline, '\\n');\r\n                    this.line++;\r\n                    this.column = 0;\r\n                    this.next();\r\n                    return;\r\n                case TokenType.space:\r\n                case TokenType.tab:\r\n                    this.lexSpace();\r\n                    return;\r\n                case TokenType.linefeed:\r\n                    this.next();\r\n                    return;\r\n                case TokenType.at:\r\n                    this.lexAnnotation();\r\n                    return;\r\n            }\r\n\r\n            this.pushToken(specialCharToken, char);\r\n            this.next();\r\n            return;\r\n\r\n        }\r\n\r\n        // no special char. Number?\r\n\r\n        if (this.isDigit(char, 10)) {\r\n            this.lexNumber();\r\n            return;\r\n        }\r\n\r\n        this.lexIdentifierOrKeyword();\r\n\r\n    }\r\n\r\n    pushToken(tt: TokenType, text: string | number | boolean, line: number = this.line, column: number = this.column, length: number = (\"\" + text).length) {\r\n        let t: Token = {\r\n            tt: tt,\r\n            value: text,\r\n            position: {\r\n                column: column,\r\n                line: line,\r\n                length: length\r\n            }\r\n        }\r\n\r\n        if (!(this.spaceTokens.indexOf(tt) >= 0)) {\r\n            this.nonSpaceLastTokenType = tt;\r\n        }\r\n\r\n        this.tokenList.push(t);\r\n    }\r\n\r\n    pushError(text: string, length: number, errorLevel: ErrorLevel = \"error\", line: number = this.line, column: number = this.column) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: {\r\n                line: line,\r\n                column: column,\r\n                length: length\r\n            },\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n\r\n\r\n    isDigit(a: string, base: number) {\r\n        var charCode = a.charCodeAt(0);\r\n\r\n        if(base == 10) return (charCode >= 48 && charCode <= 57); // 0 - 9\r\n        if(base == 2) return (charCode >= 48 && charCode <= 49); // 0, 1\r\n        if(base == 8) return (charCode >= 48 && charCode <= 55); // 0 - 7\r\n        if(base == 16) return (charCode >= 48 && charCode <= 57 ) || (charCode >= 97 && charCode <= 102) ||\r\n         (charCode >= 65 && charCode <= 70); // 0 - 9 || a - f || A - F\r\n    }\r\n\r\n    lexSpace() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n\r\n        let posStart = this.pos;\r\n        while (this.currentChar == \" \" || this.currentChar == \"\\t\") {\r\n            this.next();\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n        this.pushToken(TokenType.space, this.input.substring(posStart, posEnd), line, column);\r\n        return;\r\n\r\n    }\r\n\r\n    lexCharacterConstant() {\r\n        let column = this.column;\r\n        let line = this.line;\r\n        this.next();\r\n        let char = this.currentChar;\r\n        if (char == \"\\\\\") {\r\n            let escapeChar = EscapeSequenceList[this.nextChar];\r\n            if (escapeChar == null) {\r\n                this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                if (this.nextChar != \"'\") {\r\n                    char = this.nextChar;\r\n                    this.next();\r\n                }\r\n            } else {\r\n                char = escapeChar;\r\n                this.next();\r\n            }\r\n        }\r\n        this.next();\r\n        if (this.currentChar != \"'\") {\r\n            this.pushError(\"Das Ende der char-Konstante wird erwartet (').\", 1);\r\n        } else {\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.charConstant, char, line, column);\r\n\r\n    }\r\n\r\n    lexStringConstant() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let text = \"\";\r\n\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\\\\") {\r\n                if (this.nextChar == \"u\") {\r\n                    this.next();\r\n\r\n                } else {\r\n                    let escapeChar = EscapeSequenceList[this.nextChar];\r\n                    if (escapeChar == null) {\r\n                        this.pushError('Die Escape-Sequenz \\\\' + this.nextChar + ' gibt es nicht.', 2);\r\n                    } else {\r\n                        char = escapeChar;\r\n                        this.next();\r\n                    }\r\n                }\r\n            } else if (char == '\"') {\r\n                this.next();\r\n                break;\r\n            } else if (char == \"\\n\" || char == endChar) {\r\n                this.pushError('Innerhalb einer String-Konstante wurde das Zeilenende erreicht.', text.length + 1, \"error\", line, column);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.stringConstant, text, line, column, text.length + 2);\r\n\r\n    }\r\n\r\n    lexMultilineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        let lastCharWasNewline: boolean = false;\r\n\r\n        let text = \"/*\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"*\" && this.nextChar == \"/\") {\r\n                this.next();\r\n                this.next();\r\n                text += \"*/\";\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                this.pushError(\"Innerhalb eines Mehrzeilenkommentars (/*... */) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            if (char == \"\\n\") {\r\n                this.line++;\r\n                this.column = 0;\r\n                lastCharWasNewline = true;\r\n                text += char;\r\n            } else if(!(lastCharWasNewline && char == \" \")){\r\n                text += char;\r\n                lastCharWasNewline = false;\r\n            } \r\n\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n    lexEndofLineComment() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let text = \"//\";\r\n        this.next();\r\n        this.next();\r\n\r\n        while (true) {\r\n            let char = this.currentChar;\r\n            if (char == \"\\n\") {\r\n                break;\r\n            }\r\n            if (char == endChar) {\r\n                // this.pushError(\"Innerhalb eines Einzeilenkommentars (//... ) wurde das Dateiende erreicht.\", 1);\r\n                break;\r\n            }\r\n            text += char;\r\n            this.next();\r\n        }\r\n\r\n        this.pushToken(TokenType.comment, text, line, column);\r\n\r\n    }\r\n\r\n\r\n    lexNumber() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let sign: number = 1;\r\n        if(this.currentChar == '-'){\r\n            sign = -1;\r\n            this.next();\r\n        }\r\n\r\n        let posStart = this.pos;\r\n\r\n        let firstChar = this.currentChar;\r\n\r\n        this.next();\r\n\r\n        let radix: number = 10;\r\n\r\n        if (firstChar == '0' && (['b', 'x', '0', '1', '2', '3', '4', '5', '6', '7'].indexOf(this.currentChar) >= 0)) {\r\n            if (this.currentChar == 'x') {\r\n                radix = 16;\r\n                this.next();\r\n            } else if (this.currentChar == 'b') {\r\n                radix = 2;\r\n                this.next();\r\n            } else radix = 8;\r\n            posStart = this.pos;\r\n        }\r\n\r\n        while (this.isDigit(this.currentChar, radix)) {\r\n            this.next();\r\n        }\r\n\r\n        let tt = TokenType.integerConstant;\r\n\r\n        if (this.currentChar == \".\") {\r\n            tt = TokenType.floatingPointConstant;\r\n\r\n            this.next();\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n\r\n        }\r\n\r\n        let base = this.input.substring(posStart, this.pos);\r\n\r\n        posStart = this.pos;\r\n        let exponent: number = 0;\r\n\r\n        let hasExponential: boolean = false;\r\n        //@ts-ignore\r\n        if (this.currentChar == \"e\") {\r\n            hasExponential = true;\r\n            this.next();\r\n            let posExponentStart: number = this.pos;\r\n\r\n            //@ts-ignore\r\n            if(this.currentChar == '-'){\r\n                this.next();\r\n            }\r\n\r\n            while (this.isDigit(this.currentChar, 10)) {\r\n                this.next();\r\n            }\r\n            if (radix != 10) {\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n            let exponentString = this.input.substring(posExponentStart, this.pos);\r\n            exponent = Number.parseInt(exponentString);\r\n        }\r\n\r\n        if(this.currentChar == 'd' || this.currentChar == 'f'){\r\n            tt == TokenType.floatingPointConstant;\r\n            this.next();\r\n            if(radix != 10){\r\n                this.pushError(\"Eine float/double-Konstante darf nicht mit 0, 0b oder 0x beginnen.\", this.pos - posStart, \"error\", this.line, this.column - (this.pos - posStart));\r\n            }\r\n        }\r\n\r\n        let value: number = (tt == TokenType.integerConstant) ? Number.parseInt(base, radix) : Number.parseFloat(base);\r\n        value *= sign;\r\n        if(exponent != 0) value *= Math.pow(10, exponent);       \r\n        \r\n        this.pushToken(tt, value, line, column);\r\n\r\n    }\r\n\r\n    lexAnnotation(){\r\n        let line = this.line;\r\n        let column = this.column - 1;\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n        this.pushToken(TokenType.at,text, line, column, text.length + 1);        \r\n    }\r\n\r\n    lexIdentifierOrKeyword() {\r\n        let line = this.line;\r\n        let column = this.column;\r\n\r\n        let posStart = this.pos;\r\n        let char = this.currentChar;\r\n\r\n        while (specialCharList[char] == null && !this.isSpace(char) && !(char == endChar)) {\r\n            this.next();\r\n            char = this.currentChar;\r\n        }\r\n\r\n        let posEnd = this.pos;\r\n\r\n        let text = this.input.substring(posStart, posEnd);\r\n\r\n        let tt = keywordList[text];\r\n        if (tt != null && typeof tt == \"number\") {\r\n\r\n            switch (tt) {\r\n                case TokenType.true:\r\n                    this.pushToken(TokenType.booleanConstant, true, line, column);\r\n                    break;\r\n                case TokenType.false:\r\n                    this.pushToken(TokenType.booleanConstant, false, line, column);\r\n                    break;\r\n                case TokenType.keywordPrint:\r\n                case TokenType.keywordPrintln:\r\n                    if (this.nonSpaceLastTokenType == TokenType.dot) {\r\n                        this.pushToken(TokenType.identifier, text, line, column);\r\n                    } else {\r\n                        this.pushToken(tt, text, line, column);\r\n                    }\r\n                    break;\r\n                default:\r\n                    this.pushToken(tt, text, line, column);\r\n                    break;\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.pushToken(TokenType.identifier, text, line, column);\r\n\r\n    }\r\n\r\n    isSpace(char: string): boolean {\r\n        return char == \" \" || char == \"\\n\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function errorListToString(errorList: Error[]): string {\r\n    let s = \"\";\r\n\r\n    for (let error of errorList) {\r\n\r\n        s += \"Z \" + error.position.line + \", S \" + error.position.column + \": \";\r\n        s += error.text + \"<br>\";\r\n\r\n    }\r\n\r\n    return s;\r\n}","import { Lexer } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Token, TokenList, TokenType, tokenListToString } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class Formatter implements monaco.languages.DocumentFormattingEditProvider,\r\n    monaco.languages.OnTypeFormattingEditProvider {\r\n\r\n    autoFormatTriggerCharacters: string[] = ['\\n'];\r\n\r\n    displayName?: string = \"Java-Autoformat\";\r\n\r\n\r\n    constructor(\r\n        // private main: Main\r\n    ) {\r\n\r\n    }\r\n\r\n    init() {\r\n        monaco.languages.registerDocumentFormattingEditProvider('myJava', this);\r\n        monaco.languages.registerOnTypeFormattingEditProvider('myJava', this);\r\n    }\r\n\r\n    provideOnTypeFormattingEdits(model: monaco.editor.ITextModel, position: monaco.Position, ch: string, options: monaco.languages.FormattingOptions, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n    deleteOverlappingRanges(edits: monaco.languages.TextEdit[]) {\r\n        for (let i = 0; i < edits.length - 1; i++) {\r\n            let e = edits[i];\r\n            let e1 = edits[i + 1];\r\n            if (e.range.endLineNumber < e1.range.startLineNumber) continue;\r\n            if (e.range.endLineNumber == e1.range.startLineNumber) {\r\n                if (e.range.endColumn >= e1.range.startColumn) {\r\n                    edits.splice(i + 1, 1);\r\n                } else {\r\n                    if (e.range.endColumn == 0 && e.text.length > 0 && e1.range.startColumn == 1 && e1.range.endColumn > e1.range.startColumn && e1.text == \"\") {\r\n                        let delta = e.text.length - (e1.range.endColumn - e1.range.startColumn);\r\n                        if (delta > 0) { \r\n                            e.text = e.text.substr(0, delta);\r\n                            edits.splice(i+1, 1);\r\n                        }\r\n                        else if (delta < 0)\r\n                        { \r\n                            //@ts-ignore\r\n                            e1.range.endColumn = e1.range.startColumn - delta;\r\n                            edits.splice(i, 1);\r\n                            i--;\r\n\r\n                         }\r\n                        else {\r\n                            edits.splice(i, 2);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    provideDocumentFormattingEdits(model: monaco.editor.ITextModel,\r\n        options: monaco.languages.FormattingOptions,\r\n        token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.TextEdit[]> {\r\n\r\n        let edits: monaco.languages.TextEdit[] = this.format(model);\r\n\r\n        return Promise.resolve(\r\n            edits\r\n        );\r\n\r\n    }\r\n\r\n    format(model: monaco.editor.ITextModel): monaco.languages.TextEdit[] {\r\n\r\n        let edits: monaco.languages.TextEdit[] = [];\r\n\r\n        // if (this.main.currentWorkspace == null || this.main.currentWorkspace.currentlyOpenModule == null) {\r\n        //     return [];\r\n        // }\r\n\r\n        // let text = this.main.monaco_editor.getValue({ preserveBOM: false, lineEnding: \"\\n\" });\r\n\r\n        let text = model.getValue(monaco.editor.EndOfLinePreference.LF);\r\n\r\n        let tokenlist = new Lexer().lex(text).tokens;\r\n\r\n        // let tokenlist = this.main.currentWorkspace.currentlyOpenModule.tokenList;\r\n\r\n        if (tokenlist == null) return [];\r\n\r\n        // TODO:\r\n        // { at the end of line, with one space before; followed only by spaces and \\n\r\n        // indent lines according to { and }\r\n        // Beware: int i[] = { ... }\r\n        // exactly one space before/after binary operators\r\n        // no space after ( and no space before )\r\n        // (   ) -> ()\r\n        // (  ()) -> (())\r\n        // (()  ) -> (())\r\n\r\n        let lastNonSpaceToken: Token = null;\r\n        let indentLevel = 0;\r\n        let tabSize = 3;\r\n        let curlyBracesOpenAtLines: number[] = [];\r\n        let indentLevelAtSwitchStatements: number[] = [];\r\n        let switchHappend: boolean = false;\r\n        let lastTokenWasNewLine: number = 0;\r\n        let roundBracketsOpen: number = 0;\r\n\r\n        for (let i = 0; i < tokenlist.length; i++) {\r\n\r\n            let t = tokenlist[i];\r\n            lastTokenWasNewLine--;\r\n\r\n            switch (t.tt) {\r\n\r\n                case TokenType.keywordSwitch:\r\n                    switchHappend = true;\r\n                    break;\r\n                case TokenType.keywordCase:\r\n                    // outdent: line with case:\r\n                    if (t.position.column > 3) {\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                    }\r\n                    break;\r\n                case TokenType.leftCurlyBracket:\r\n                    if (switchHappend) {\r\n                        switchHappend = false;\r\n                        indentLevelAtSwitchStatements.push(indentLevel + 2);\r\n                        indentLevel++;\r\n                    }\r\n                    indentLevel++;\r\n                    curlyBracesOpenAtLines.push(t.position.line);\r\n                    if (lastNonSpaceToken != null) {\r\n                        let tt = lastNonSpaceToken.tt;\r\n                        if (tt == TokenType.rightBracket || tt == TokenType.identifier || tt == TokenType.leftRightSquareBracket) {\r\n                            this.replaceBetween(lastNonSpaceToken, t, edits, \" \");\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let token1 = tokenlist[i + 1];\r\n                        if (token1.tt != TokenType.newline && token1.tt != TokenType.space) {\r\n                            this.insertSpaces(edits, token1.position.line, token1.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightCurlyBracket:\r\n                    if (indentLevelAtSwitchStatements[indentLevelAtSwitchStatements.length - 1] == indentLevel) {\r\n                        indentLevelAtSwitchStatements.pop();\r\n                        indentLevel--;\r\n                        // if(t.position.column >= 3){\r\n                        this.deleteSpaces(edits, t.position.line, 1, 3);\r\n                        // }    \r\n                    }\r\n                    indentLevel--;\r\n                    let openedAtLine = curlyBracesOpenAtLines.pop();\r\n                    if (openedAtLine != null && openedAtLine != t.position.line) {\r\n                        if (lastNonSpaceToken != null && lastNonSpaceToken.position.line == t.position.line) {\r\n                            this.replace(edits, t.position, t.position, \"\\n\" + \" \".repeat(indentLevel * tabSize));\r\n                        }\r\n                    } else {\r\n                        if (i > 0) {\r\n                            let token1 = tokenlist[i - 1];\r\n                            if (token1.tt != TokenType.space && token1.tt != TokenType.newline) {\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.leftBracket:\r\n                    roundBracketsOpen++;\r\n                    if (i < tokenlist.length - 2) {\r\n                        let nextToken1 = tokenlist[i + 1];\r\n                        let nextToken2 = tokenlist[i + 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                            i++;\r\n                            if (nextToken2.tt == TokenType.rightBracket) {\r\n                                i++;\r\n                                roundBracketsOpen--;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt == TokenType.space && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line, lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightBracket:\r\n                    roundBracketsOpen--;\r\n                    if (i > 1) {\r\n                        let nextToken1 = tokenlist[i - 1];\r\n                        let nextToken2 = tokenlist[i - 2];\r\n                        if (nextToken1.tt == TokenType.space && nextToken2.tt != TokenType.newline) {\r\n                            this.deleteSpaces(edits, nextToken1.position.line, nextToken1.position.column, nextToken1.position.length);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.newline:\r\n                    lastTokenWasNewLine = 2;\r\n                    if (i < tokenlist.length - 2) {\r\n\r\n                        let lastTokenIsOperator = this.isBinaryOperator(lastNonSpaceToken?.tt);\r\n                        let nextTokenIsOperator = this.isBinaryOperator(this.getNextNonSpaceToken(i, tokenlist).tt);\r\n\r\n                        let beginNextLine = tokenlist[i + 1];\r\n                        let token2 = tokenlist[i + 2];\r\n                        let currentIndentation = 0;\r\n\r\n                        if (beginNextLine.tt == TokenType.newline) {\r\n                            break;\r\n                        }\r\n\r\n                        let delta: number = 0;\r\n                        if (beginNextLine.tt == TokenType.space) {\r\n                            if (token2.tt == TokenType.newline) {\r\n                                break;\r\n                            }\r\n                            currentIndentation = beginNextLine.position.length;\r\n                            i++;\r\n                            if (token2.tt == TokenType.rightCurlyBracket) {\r\n                                delta = -1;\r\n                            }\r\n                        }\r\n\r\n                        if (beginNextLine.tt == TokenType.rightCurlyBracket) {\r\n                            delta = -1;\r\n                            // indentLevel--;\r\n                            // curlyBracesOpenAtLines.pop();\r\n                            // lastNonSpaceToken = beginNextLine;\r\n                            // i++;\r\n                        }\r\n\r\n                        if(nextTokenIsOperator || lastTokenIsOperator) delta = 1;\r\n\r\n                        let il = indentLevel + delta;\r\n                        if(roundBracketsOpen > 0){\r\n                            il++;\r\n                        }\r\n                        if (il < 0) il = 0;\r\n\r\n                        let correctIndentation = il * tabSize;\r\n\r\n                        if (correctIndentation > currentIndentation) {\r\n                            this.insertSpaces(edits, t.position.line + 1, 0, correctIndentation - currentIndentation);\r\n                        } else if (correctIndentation < currentIndentation) {\r\n                            this.deleteSpaces(edits, t.position.line + 1, 0, currentIndentation - correctIndentation);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.space:\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment) {\r\n                            if (i > 0) {\r\n                                let lastToken = tokenlist[i - 1];\r\n                                if (lastToken.tt != TokenType.newline) {\r\n                                    if (t.position.length > 1) {\r\n                                        this.deleteSpaces(edits, t.position.line, t.position.column, t.position.length - 1);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.comma:\r\n                case TokenType.semicolon:\r\n                    if (i > 1) {\r\n                        let lastToken1 = tokenlist[i - 1];\r\n                        let lastToken2 = tokenlist[i - 2];\r\n                        if (lastToken1.tt != TokenType.newline && lastToken2.tt != TokenType.newline && !this.isBinaryOperator(lastToken2.tt)) {\r\n                            if (lastToken1.tt == TokenType.space && lastToken1.position.length == 1) {\r\n                                this.deleteSpaces(edits, lastToken1.position.line,\r\n                                    lastToken1.position.column, 1);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        if (nextToken.tt != TokenType.comment && nextToken.tt != TokenType.space && nextToken.tt != TokenType.newline) {\r\n                            this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n                    break;\r\n                case TokenType.rightSquareBracket:\r\n                    if (lastNonSpaceToken != null && lastNonSpaceToken.tt == TokenType.leftSquareBracket) {\r\n                        this.replaceBetween(lastNonSpaceToken, t, edits, \"\");\r\n\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            // binary operator?\r\n            if (this.isBinaryOperator(t.tt)) {\r\n\r\n                let lowerGeneric = t.tt == TokenType.lower && this.lowerBelongsToGenericExpression(i, tokenlist);\r\n                let greaterGeneric = t.tt == TokenType.greater && this.greaterBelongsToGenericExpression(i, tokenlist);\r\n\r\n                if (lastTokenWasNewLine <= 0 && lastNonSpaceToken != null && [TokenType.leftBracket, TokenType.assignment, TokenType.comma].indexOf(lastNonSpaceToken.tt) < 0) {\r\n\r\n                    if (i > 0) {\r\n                        let tokenBefore = tokenlist[i - 1];\r\n                        let spaces = (lowerGeneric || greaterGeneric) ? 0 : 1;\r\n                        if (tokenBefore.tt == TokenType.space) {\r\n                            if (tokenBefore.position.length != spaces) {\r\n                                this.insertSpaces(edits, tokenBefore.position.line,\r\n                                    tokenBefore.position.column, spaces - tokenBefore.position.length);\r\n                            }\r\n                        } else {\r\n                            if (spaces == 1)\r\n                                this.insertSpaces(edits, t.position.line, t.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (i < tokenlist.length - 1) {\r\n                        let nextToken = tokenlist[i + 1];\r\n                        let spaces = (lowerGeneric) ? 0 : 1;\r\n                        if (nextToken.tt == TokenType.space) {\r\n                            if (greaterGeneric && i < tokenlist.length - 2 && tokenlist[i + 2].tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (nextToken.position.length != spaces) {\r\n                                this.insertSpaces(edits, nextToken.position.line,\r\n                                    nextToken.position.column, spaces - nextToken.position.length);\r\n                            }\r\n                        } else {\r\n                            if (greaterGeneric && nextToken.tt == TokenType.leftBracket) {\r\n                                spaces = 0;\r\n                            }\r\n                            if (spaces == 1) this.insertSpaces(edits, nextToken.position.line, nextToken.position.column, 1);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            if (t.tt != TokenType.space && t.tt != TokenType.newline) {\r\n                lastNonSpaceToken = t;\r\n            }\r\n\r\n        }\r\n\r\n        this.deleteOverlappingRanges(edits);\r\n\r\n        return edits;\r\n\r\n    }\r\n    getNextNonSpaceToken(currentIndex: number, tokenlist: TokenList):  Token {\r\n\r\n        if(currentIndex == tokenlist.length - 1) return tokenlist[currentIndex];\r\n\r\n        let j = currentIndex + 1;\r\n        while(j < tokenlist.length - 1 && (tokenlist[j].tt == TokenType.space || tokenlist[j].tt == TokenType.return)){\r\n            j++;\r\n        }\r\n        return tokenlist[j];\r\n\r\n    }\r\n\r\n    lowerBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position + 1;\r\n        while (i < tokenlist.length) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.greater) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    greaterBelongsToGenericExpression(position: number, tokenlist: TokenList) {\r\n        let i = position - 1;\r\n        while (i >= 0) {\r\n            let tt = tokenlist[i].tt;\r\n            if (tt == TokenType.lower) {\r\n                return true;\r\n            }\r\n            if ([TokenType.space, TokenType.comma, TokenType.identifier].indexOf(tt) < 0) {\r\n                return false;\r\n            }\r\n            i--;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isBinaryOperator(token: TokenType) {\r\n        return token != null && token >= TokenType.modulo && token <= TokenType.colon;\r\n    }\r\n\r\n    private replaceBetween(lastNonSpaceToken: Token, t: Token, edits: monaco.languages.TextEdit[], text: string) {\r\n        let positionFrom = {\r\n            line: lastNonSpaceToken.position.line,\r\n            column: lastNonSpaceToken.position.column + lastNonSpaceToken.position.length\r\n        };\r\n        let positionTo = {\r\n            line: t.position.line,\r\n            column: t.position.column\r\n        };\r\n        if (positionFrom.line != positionTo.line ||\r\n            positionTo.column - positionFrom.column != text.length) {\r\n            this.replace(edits, positionFrom, positionTo, text);\r\n        }\r\n    }\r\n\r\n    deleteSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column + numberOfSpaces + (column == 0 ? 1 : 0),\r\n                endLineNumber: line\r\n            },\r\n            text: \"\"\r\n        });\r\n    }\r\n\r\n    insertSpaces(edits: monaco.languages.TextEdit[], line: number, column: number, numberOfSpaces: number) {\r\n\r\n        if (numberOfSpaces < 0) {\r\n            this.deleteSpaces(edits, line, column, -numberOfSpaces);\r\n            return;\r\n        }\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: column,\r\n                startLineNumber: line,\r\n                endColumn: column,\r\n                endLineNumber: line\r\n            },\r\n            text: \" \".repeat(numberOfSpaces)\r\n        });\r\n    }\r\n\r\n    replace(edits: monaco.languages.TextEdit[], positionFrom: { line: number; column: number; }, positionTo: { line: number; column: number; }, text: string) {\r\n\r\n        edits.push({\r\n            range: {\r\n                startColumn: positionFrom.column,\r\n                startLineNumber: positionFrom.line,\r\n                endColumn: positionTo.column,\r\n                endLineNumber: positionTo.line\r\n            },\r\n            text: text\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../Main\";\r\n\r\nexport type Theme = {\r\n    name: string,\r\n    monacoTheme: string,\r\n    cssColors: { [color: string]: string }\r\n}\r\n\r\nexport class ThemeManager {\r\n\r\n    themes: Theme[] = [];\r\n\r\n    constructor() {\r\n        this.initThemes();\r\n    }\r\n\r\n    switchTheme(name: string) {\r\n        for (let theme of this.themes) {\r\n            if (theme.name == name) {\r\n                this.internalSwitchTheme(theme);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    internalSwitchTheme(theme: Theme) {\r\n        monaco.editor.setTheme(theme.monacoTheme);\r\n\r\n        let root = document.documentElement;\r\n        for (const key of Object.keys(theme.cssColors)) {\r\n            const value = theme.cssColors[key]\r\n\r\n            root.style.setProperty(key, value);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    initThemes() {\r\n\r\n        this.themes.push({\r\n            name: \"dark\",\r\n            monacoTheme: \"myCustomThemeDark\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"#1e1e1e\",\r\n                \"--backgroundLight\": \"#252526\",\r\n                \"--backgroundHeading\": \"#37373d\",\r\n                \"--backgroundSelected\": \"#2a2d2e\",\r\n                \"--fontColorNormal\": \"#c2cccc\",\r\n                \"--fontColorLight\": \"#e7e7e7\",\r\n                \"--slider\": \"#414141\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#1e1e1e\",\r\n                \"--scrollbar-thumb\": \"#3e3e3e\",\r\n                \"--scrollbar-thumb-hover\": \"#5e5e5e\",\r\n                \"--scrollbar-thumb-active\": \"#7e7e7e\",\r\n                \"--submenu-hover\": \"#094771\",\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#616162\",\r\n                \"--file-hover\": \"hsla(0, 0%, 38%, 0.125)\",\r\n                \"--file-active\": \"#094771\",\r\n                \"--file-active-hover\": \"rgba(9, 71, 113, 0.827)\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"blue\",\r\n                \"--contextmenu-background\": \"#3c3c3c\",\r\n                \"--contextmenu-color\": \"rgb(212,212,212)\",\r\n                \"--contextmenu-hover-background\": \"#094771\",\r\n                \"--contextmenu-hover-color\": \"#ffffff\",\r\n                \"--error-filename\": \"#2a709e\",\r\n                \"--error-line-ative\": \"#094771\",\r\n                \"--error-line-hover\": \"rgba(96, 96, 96, 0.125)\",\r\n                \"--error-position\": \"#c0802d\",\r\n                \"--linecolumn\": \"#14c714\",\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#2b2b7d2f\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"rgb(85,85,85)\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#383838\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#252526\",\r\n                \"--editorTooltip-border\": \"#454545\",\r\n\r\n                \"--renameInput-color\": \"#ffffff\",\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"white\",\r\n                \"--bottomdiv-tabheading-active\": \"rgb(97,97,255)\",\r\n                \"--noErrorMessage\": \"rgb(37, 211, 37)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"#1e1e1e\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"white\",\r\n                \"--consoleEntryIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"white\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 51, 51)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"rgb(156, 156, 235)\",\r\n                \"--deValue\": \"white\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#383838\",\r\n                \"--helper-border-color\": \"#d4d4d4\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#ffffff\",\r\n                \"--runInputColor\": \"#ffffff\",\r\n                \"--runBackgroundColor\": \"rgba(255, 255, 255, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n        let highlightColor = \"#8080ff\";\r\n\r\n        this.themes.push({\r\n            name: \"light\",\r\n            monacoTheme: \"myCustomThemeLight\",\r\n            cssColors: {\r\n                \"--backgroundDark\": \"white\",\r\n                \"--backgroundLight\": \"#f3f3f3\",\r\n                \"--backgroundHeading\": \"#dcdcdc\",\r\n                \"--backgroundSelected\": \"#e8e8e8\",\r\n                \"--fontColorNormal\": \"#756161\",\r\n                \"--fontColorLight\": \"#756161\",\r\n                \"--slider\": \"#b0b0b0\",\r\n                \"--loginButtonBackgrond\": \"#59a15d\",\r\n                \"--loginButtonFontColor\": \"#000000\",\r\n                \"--loginMessageColor\": \"rgb(122, 48, 48)\",\r\n                \"--loginButtonHover\": \"#63a867\",\r\n                \"--loginButtonActive\": \"#94ffd1\",\r\n                \"--scrollbar\": \"#e3e3e3\",\r\n                \"--scrollbar-thumb\": \"#bababa\",\r\n                \"--scrollbar-thumb-hover\": \"#8e8e8e\",\r\n                \"--scrollbar-thumb-active\": \"#616161\",\r\n                \"--submenu-hover\": highlightColor,\r\n                \"--submenu-color\": \"#ffffff\",\r\n                \"--menuitemsdivider\": \"#cfcfcf\",\r\n                \"--file-hover\": \"#e8e8e8\",\r\n                \"--file-active\": highlightColor,\r\n                \"--file-active-hover\": \"#a0a0ff\",\r\n                \"--file-errorcount\": \"red\",\r\n                \"--inplace-editor\": \"white\",\r\n                \"--contextmenu-background\": \"white\",\r\n                \"--contextmenu-color\": \"#756161\",\r\n                \"--contextmenu-hover-background\": highlightColor,\r\n                \"--contextmenu-hover-color\": \"#a0a0ff\",\r\n                \"--error-filename\": \"#ff0000\",\r\n                \"--error-line-ative\": \"#ffa0a0\",\r\n                \"--error-line-hover\": \"#ffc0c0\",\r\n                \"--error-position\": \"#804040\",\r\n                \"--linecolumn\": \"#14c714\", // TODO\r\n                \"--reveal-error\": \"rgba(253, 101, 101, 0.745)\",\r\n                \"--reveal-method\": \"#babaec80\",\r\n                \"--reveal-errorline-background\": \"red\",\r\n                \"--reveal-error-whole-line\": \"rgba(255, 0, 0, 0.555)\",\r\n                \"--reveal-programpointer\": \"rgba(111, 214, 27, 0.337)\",\r\n                \"--reveal-syntaxelement\": \"#c0c0c0\",\r\n                \"--margin-breakpoint\": \"rgba(255, 0, 0, 0.623)\",\r\n                \"--speedcontrol-bar\": \"#9d9d9d\",\r\n                \"--speedcontrol-grip\": \"#588555\",\r\n                \"--speedcontrol-grip-hover\": \"#89d185\",\r\n                \"--speedcontrol-display-background\": \"#e0e0e0\",\r\n                \"--speedcontrol-display-border\": \"#9d9d9d\",\r\n                \"--editorTooltip-background\": \"#e0e0e0\",\r\n                \"--editorTooltip-border\": \"#9d9d9d\",\r\n\r\n                \"--renameInput-color\": \"#000000\",\r\n\r\n\r\n                //bottomDiv\r\n                \"--bottomdiv-tabheading-hover\": \"#424242\",\r\n                \"--bottomdiv-tabheading-active\": \"#424242\",\r\n                \"--noErrorMessage\": \"rgb(17, 180, 17)\",\r\n                \"--console-top-borderbottom\": \"#c4c4c4\",\r\n                \"--console-top-background\": \"white\",\r\n                \"--consoleEntry-withBorder\": \"#303030\",\r\n                \"--consoleEntryValue\": \"#0000a0\",\r\n                \"--consoleEntryIdentifier\": \"black\",\r\n                \"--consoleEntryNoValue\": \"gray\",\r\n                \"--consoleEntryCaption\": \"#756161\",\r\n                \"--error-Caption\": \"rgb(166, 165, 176)\",\r\n                \"--console-error\": \"rgb(155, 21, 21)\",\r\n\r\n                // Debugger\r\n                \"--deIdentifier\": \"black\",\r\n                \"--deValue\": \"#0000a0\",\r\n\r\n                // Helper\r\n                \"--helper-background-color\": \"#f3f3f3\",\r\n                \"--helper-border-color\": \"#606060\",\r\n                \"--arrowBoxButtonOuter-background\": \"#59a15d\",\r\n                \"--arrowBoxButtonOuter-border\": \"#3d3d3d\",\r\n                \"--arrowBoxButtonOuter-color\": \"black\",\r\n                \"--arrowBoxButtonOuter-button-hover\": \"#63a867\",\r\n                \"--arrowBox-after\": \"rgba(136, 183, 213, 0)\",\r\n                \"--arrowBox-before\": \"rgba(194, 225, 245, 0)\",\r\n\r\n                //run\r\n                \"--defaultOutputColor\": \"#303030\",\r\n                \"--runInputColor\": \"#000000\",\r\n                \"--runBackgroundColor\": \"rgba(0, 0, 0, 0.2)\",\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token.js\";\r\nimport { Type, Variable, Method } from \"../types/Types.js\";\r\nimport { Klass, StaticClass } from \"../types/Class.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\n\r\n\r\nexport class SymbolTable {\r\n\r\n    static maxId: number = 0;\r\n\r\n    public id = SymbolTable.maxId++;\r\n\r\n    parent: SymbolTable; // SymbolTable of parent scope\r\n    positionFrom: TextPosition;\r\n    positionTo: TextPosition;\r\n\r\n    beginsNewStackframe: boolean = false;\r\n    stackframeSize: number;\r\n\r\n    childSymbolTables: SymbolTable[] = [];\r\n\r\n    variableMap: Map<string, Variable> = new Map();\r\n\r\n    classContext: Klass | StaticClass = null;\r\n    method: Method = null;\r\n\r\n    constructor(parentSymbolTable: SymbolTable, positionFrom: TextPosition, positionTo: TextPosition) {\r\n\r\n        this.parent = parentSymbolTable;\r\n\r\n        this.positionFrom = positionFrom;\r\n        this.positionTo = positionTo;\r\n\r\n        this.classContext = parentSymbolTable == null ? null : parentSymbolTable.classContext;\r\n\r\n        if (this.parent != null) {\r\n            this.parent.childSymbolTables.push(this);\r\n            this.method = this.parent.method;\r\n        }\r\n    }\r\n\r\n    getImitation(): SymbolTable {\r\n        let imitation = new SymbolTable(null, { line: 1, column: 1, length: 0 }, { line: 1, column: 10000, length: 0 });\r\n\r\n        imitation.beginsNewStackframe = true;\r\n        let st: SymbolTable = this;\r\n\r\n        let maxStackPos = -1;\r\n\r\n        while (st != null) {\r\n            if (st.classContext != null) {\r\n                imitation.classContext = st.classContext;\r\n            }\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                if (imitation.variableMap.get(identifier) == null) {\r\n                    imitation.variableMap.set(identifier, variable);\r\n                }\r\n\r\n                if (variable.stackPos > maxStackPos) {\r\n                    maxStackPos = variable.stackPos;\r\n                }\r\n\r\n            });\r\n\r\n            st = st.parent;\r\n\r\n        }\r\n\r\n        imitation.stackframeSize = maxStackPos + 1;\r\n\r\n        return imitation;\r\n    }\r\n\r\n\r\n\r\n    getLocalVariableCompletionItems(rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        this.variableMap.forEach((variable, identifier) => {\r\n\r\n            //@ts-ignore\r\n            if(identifier == 0) return;\r\n\r\n            // TODO: Zu einem Objekt mit identifier == 0 kommt es, wenn man ArrayList<In tippt und dann <Strg + Leertaste>.\r\n\r\n            if (variable != null && variable.type != null && variable.type instanceof ArrayType) {\r\n                completionItems.push({\r\n                    label: identifier + \"[]\",\r\n                    insertText: identifier + \"[$0]\",\r\n                    documentation: \"Element des Arrays\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: rangeToReplace\r\n                });\r\n\r\n            }\r\n            \r\n            completionItems.push({\r\n                label: identifier,\r\n                insertText: identifier,\r\n                kind: monaco.languages.CompletionItemKind.Variable,\r\n                range: rangeToReplace\r\n            });\r\n\r\n\r\n        });\r\n\r\n        if (this.parent != null && this.parent.classContext == this.classContext) {\r\n            completionItems = completionItems.concat(this.parent.getLocalVariableCompletionItems(rangeToReplace));\r\n        }\r\n\r\n        return completionItems;\r\n    }\r\n\r\n    findTableAtPosition(line: number, column: number): SymbolTable {\r\n\r\n        if (!this.containsPosition(line, column)) {\r\n            return null;\r\n        }\r\n\r\n        let shortestSymbolTableContainingPosition = null;\r\n        let shortestPosition = 10000000;\r\n\r\n        for (let st of this.childSymbolTables) {\r\n            if (st.containsPosition(line, column)) {\r\n                let st1 = st.findTableAtPosition(line, column);\r\n                if (st1.positionTo.line - st1.positionFrom.line < shortestPosition) {\r\n                    shortestSymbolTableContainingPosition = st1;\r\n                    shortestPosition = st1.positionTo.line - st1.positionFrom.line;\r\n                }\r\n            }\r\n            // if(st.containsPosition(line, column) && st.positionTo.line - st.positionFrom.line < shortestPosition){\r\n            //     shortestSymbolTableContainingPosition = st;\r\n            //     shortestPosition = st.positionTo.line - st.positionFrom.line;\r\n            // }\r\n        }\r\n\r\n        if (shortestSymbolTableContainingPosition != null) {\r\n            return shortestSymbolTableContainingPosition;\r\n        } else {\r\n            return this;\r\n        }\r\n\r\n    }\r\n\r\n    containsPosition(line: number, column: number) {\r\n        if (line < this.positionFrom.line || line > this.positionTo.line) {\r\n            return false;\r\n        }\r\n\r\n        if (line == this.positionFrom.line) return column >= this.positionFrom.column;\r\n        if (line == this.positionTo.line) return column <= this.positionTo.column;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Program } from \"../parser/Program.js\";\r\nimport { Klass, Visibility } from \"./Class.js\";\r\nimport { Value, Attribute, Method, Parameterlist, Type } from \"./Types.js\";\r\nimport { Module } from \"../parser/Module.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { TextPosition } from \"../lexer/Token.js\";\r\nimport { EnumValueNode } from \"../parser/AST.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, objectType } from \"./PrimitiveTypes.js\";\r\n\r\nexport class EnumRuntimeObject extends RuntimeObject {\r\n\r\n    enumValue: EnumInfo;\r\n\r\n    constructor(en: Enum, enumValue: EnumInfo) {\r\n        super(en);\r\n        this.enumValue = enumValue;\r\n    }\r\n\r\n}\r\n\r\nexport type EnumInfo = {\r\n    identifier: string,\r\n    ordinal: number,\r\n    position?: TextPosition,\r\n    object?: EnumRuntimeObject,\r\n    constructorCallProgram?: Program\r\n}\r\n\r\n\r\nexport class Enum extends Klass {\r\n\r\n    enumInfoList: EnumInfo[] = [];\r\n    identifierToInfoMap: { [identifier: string]: EnumInfo } = {};\r\n    indexToInfoMap: { [index: number]: EnumInfo } = {};\r\n\r\n    valueList: Value = null;\r\n\r\n    getOrdinal(valueIdentifier: string): number {\r\n\r\n        let enumInfo: EnumInfo = this.identifierToInfoMap[valueIdentifier];\r\n        if (enumInfo == null) return -1;\r\n        return enumInfo.ordinal;\r\n\r\n    }\r\n\r\n    public debugOutput(value: Value, maxLength: number = 40): string {\r\n        let enumObject = <EnumRuntimeObject>value.value;\r\n        return this.identifier + \".\" + enumObject.enumValue.identifier;\r\n    }\r\n\r\n    constructor(identifier: string, module: Module, enumValueNodes: EnumValueNode[]) {\r\n\r\n        super(identifier, module);\r\n        this.baseClass = objectType;\r\n\r\n        let i: number = 0;\r\n\r\n        for (let evn of enumValueNodes) {\r\n\r\n            let attribute: Attribute = new Attribute(evn.identifier, this, null, true, Visibility.public, true);\r\n\r\n            if (evn.position != null) {\r\n                attribute.declaration = {\r\n                    module: module,\r\n                    position: evn.position\r\n                }\r\n\r\n                attribute.usagePositions.set(module, [evn.position]);\r\n            }\r\n\r\n            this.staticClass.addAttribute(\r\n                attribute\r\n            );\r\n\r\n\r\n            let ev: EnumInfo = {\r\n                identifier: evn.identifier,\r\n                ordinal: i++\r\n            }\r\n\r\n            this.enumInfoList.push(ev);\r\n            this.identifierToInfoMap[evn.identifier] = ev;\r\n            this.indexToInfoMap[ev.ordinal] = ev;\r\n\r\n        }\r\n\r\n        if(module.isSystemModule){\r\n            this.valueList = {\r\n                type: new ArrayType(this),\r\n                value: []\r\n            };\r\n            for(let ei of this.enumInfoList){\r\n\r\n                ei.object = new EnumRuntimeObject(this, ei);\r\n\r\n                this.valueList.value.push({\r\n                    type: this,\r\n                    value: ei.object\r\n                })\r\n            }\r\n        }\r\n\r\n        let that = this;\r\n\r\n        this.staticClass.addMethod(new Method(\"getValues\",\r\n            new Parameterlist([]), new ArrayType(this), (parameters: Value[]) => {\r\n\r\n                if (this.valueList == null) {\r\n\r\n                    let values = [];\r\n                    for (let vi of this.enumInfoList) {\r\n\r\n                        values.push({\r\n                            type: that,\r\n                            value: vi.object\r\n                        });\r\n\r\n                    }\r\n\r\n                    this.valueList = {\r\n                        type: new ArrayType(that),\r\n                        value: values\r\n                    }\r\n\r\n                }\r\n\r\n                return this.valueList;\r\n\r\n            }, false, true)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toString\",\r\n            new Parameterlist([]), stringPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.identifier;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n        this.addMethod(new Method(\"toOrdinal\",\r\n            new Parameterlist([]), intPrimitiveType, (parameters: Value[]) => {\r\n\r\n                let erto: EnumRuntimeObject = <EnumRuntimeObject>(parameters[0].value);\r\n\r\n                return erto.enumValue.ordinal;\r\n\r\n            }, false, false)\r\n        );\r\n\r\n    }\r\n\r\n    public canCastTo(type: Type): boolean {\r\n\r\n        if (type == intPrimitiveType) {\r\n            return true;\r\n        }\r\n\r\n        return super.canCastTo(type);\r\n\r\n    }\r\n\r\n    public castTo(value: Value, type: Type): Value {\r\n\r\n        if (type == intPrimitiveType) {\r\n            let en = <EnumRuntimeObject>value.value;\r\n            return {\r\n                type: intPrimitiveType,\r\n                value: en.enumValue.ordinal\r\n            };\r\n        }\r\n\r\n        return super.castTo(value, type);\r\n    }\r\n\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, charPrimitiveType, booleanPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Input\", module, \"Klasse mit statischen Methoden zur Eingabe von Text per Tastatur\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: charPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Defaultwert\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n        /**\r\n         * Same methods without default value:\r\n         */\r\n\r\n        this.addMethod(new Method(\"readChar\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), charPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp char\"));\r\n\r\n        this.addMethod(new Method(\"readInt\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp int\"));\r\n\r\n        this.addMethod(new Method(\"readString\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp String\"));\r\n\r\n        this.addMethod(new Method(\"readFloat\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp float\"));\r\n\r\n        this.addMethod(new Method(\"readDouble\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp double\"));\r\n\r\n        this.addMethod(new Method(\"readBoolean\", new Parameterlist([\r\n            { identifier: \"Meldungstext\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                return null; // done by compiler magic in class Interpreter!\r\n            }, \r\n        false, true, \"Erwartet vom Benutzer die Eingabe eines Wertes vom Datentyp boolean\"));\r\n\r\n    }\r\n\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, StaticClass, Visibility, getVisibilityUpTo } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, nullType, voidPrimitiveType, varType, doublePrimitiveType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Type, Variable, Value, PrimitiveType, UsagePositions, Method, Heap, getTypeIdentifier, Parameterlist } from \"../types/Types.js\";\r\nimport { ASTNode, AttributeDeclarationNode, BinaryOpNode, ClassDeclarationNode, ConstantNode, DoWhileNode, ForNode, IdentifierNode, IfNode, IncrementDecrementNode, MethodcallNode, MethodDeclarationNode, NewObjectNode, ReturnNode, SelectArrayElementNode, SelectArributeNode, SuperconstructorCallNode, SuperNode, ThisNode, UnaryOpNode, WhileNode, LocalVariableDeclarationNode, ArrayInitializationNode, NewArrayNode, PrintNode, CastManuallyNode, EnumDeclarationNode, TermNode, SwitchNode, ScopeNode, ParameterNode, ForNodeOverCollecion } from \"./AST.js\";\r\nimport { LabelManager } from \"./LabelManager.js\";\r\nimport { Module, ModuleStore, MethodCallPosition } from \"./Module.js\";\r\nimport { AssignmentStatement, InitStackframeStatement, JumpAlwaysStatement, Program, Statement, BeginArrayStatement, NewObjectStatement, JumpOnSwitchStatement, Breakpoint, ExtendedForLoopCheckCounterAndGetElement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { Enum, EnumInfo } from \"../types/Enum.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\n\r\ntype StackType = {\r\n    type: Type,\r\n    isAssignable: boolean,\r\n    isSuper?: boolean, // used for method calls with super.\r\n    withReturnStatement?: boolean\r\n};\r\n\r\nexport class CodeGenerator {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment];\r\n\r\n    moduleStore: ModuleStore;\r\n    module: Module;\r\n\r\n    symbolTableStack: SymbolTable[];\r\n    currentSymbolTable: SymbolTable;\r\n\r\n    heap: Heap;\r\n\r\n    currentProgram: Program;\r\n\r\n    errorList: Error[];\r\n\r\n    nextFreeRelativeStackPos: number;\r\n\r\n    breakNodeStack: JumpAlwaysStatement[][];\r\n    continueNodeStack: JumpAlwaysStatement[][];\r\n\r\n    startAdhocCompilation(module: Module, moduleStore: ModuleStore, symbolTable: SymbolTable, heap: Heap): Error[] {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.symbolTableStack.push(symbolTable);\r\n        this.currentSymbolTable = symbolTable;\r\n\r\n        this.heap = heap;\r\n\r\n        let oldStackframeSize = symbolTable.stackframeSize;\r\n        this.nextFreeRelativeStackPos = oldStackframeSize;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain(true);\r\n\r\n        return this.errorList;\r\n\r\n    }\r\n\r\n    start(module: Module, moduleStore: ModuleStore) {\r\n\r\n        this.moduleStore = moduleStore;\r\n        this.module = module;\r\n\r\n        this.symbolTableStack = [];\r\n        this.currentSymbolTable = null;\r\n\r\n        this.currentProgram = null;\r\n        this.errorList = [];\r\n\r\n        this.nextFreeRelativeStackPos = 0;\r\n\r\n        if (this.module.tokenList.length > 0) {\r\n            let lastToken = this.module.tokenList[this.module.tokenList.length - 1];\r\n            this.module.mainSymbolTable.positionTo = { line: lastToken.position.line, column: lastToken.position.column + 1, length: 1 };\r\n        }\r\n\r\n        this.symbolTableStack.push(this.module.mainSymbolTable);\r\n        this.currentSymbolTable = this.module.mainSymbolTable;\r\n\r\n        this.breakNodeStack = [];\r\n        this.continueNodeStack = [];\r\n\r\n        this.generateMain();\r\n\r\n        this.generateClasses();\r\n\r\n        this.lookForStaticVoidMain();\r\n\r\n        this.module.errors[3] = this.errorList;\r\n\r\n    }\r\n\r\n    lookForStaticVoidMain() {\r\n\r\n        let mainProgram = this.module.mainProgram;\r\n\r\n        if (mainProgram != null && mainProgram.statements.length > 2) return;\r\n\r\n        let mainMethod: Method = null;\r\n        let staticClass: StaticClass = null;\r\n        let classNode1: ASTNode;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n\r\n                let ct = classNode.resolvedType;\r\n\r\n                for (let m of ct.staticClass.methods) {\r\n                    if (m.identifier == \"main\" && m.parameterlist.parameters.length == 1) {\r\n                        let pt = m.parameterlist.parameters[0];\r\n                        if (pt.type instanceof ArrayType && pt.type.arrayOfType == stringPrimitiveType) {\r\n                            if (mainMethod != null) {\r\n                                this.pushError(\"Es existieren mehrere Klassen mit statischen main-Methoden.\", classNode.position);\r\n                            } else {\r\n                                mainMethod = m;\r\n                                staticClass = ct.staticClass;\r\n                                classNode1 = classNode;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mainMethod != null) {\r\n\r\n            let position: TextPosition = mainMethod.usagePositions[0];\r\n            if (mainMethod.program != null && mainMethod.program.statements.length > 0) {\r\n                position = mainMethod.program.statements[0].position;\r\n            }\r\n\r\n            this.initCurrentProgram();\r\n\r\n            this.module.mainProgram = this.currentProgram;\r\n\r\n            this.pushStatements([{\r\n                type: TokenType.callMainMethod,\r\n                position: position,\r\n                stepFinished: false,\r\n                method: mainMethod,\r\n                staticClass: staticClass\r\n            }, {\r\n                type: TokenType.closeStackframe,\r\n                position: mainMethod.usagePositions.get(this.module)[0]\r\n            }\r\n            ], false);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    generateClasses() {\r\n        if (this.module.classDefinitionsAST == null) return;\r\n\r\n        for (let classNode of this.module.classDefinitionsAST) {\r\n            if (classNode.type == TokenType.keywordClass) {\r\n                this.generateClass(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordEnum) {\r\n                this.generateEnum(classNode);\r\n            }\r\n            if (classNode.type == TokenType.keywordInterface) {\r\n                let interf = classNode.resolvedType;\r\n                if (interf != null) {\r\n                    this.checkDoubleMethodDeclaration(interf);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    generateEnum(enumNode: EnumDeclarationNode) {\r\n\r\n        if (enumNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        let enumClass = <Enum>enumNode.resolvedType;\r\n\r\n        // this.pushUsagePosition(enumNode.position, enumClass);\r\n\r\n        this.currentSymbolTable.classContext = enumClass;\r\n        this.currentProgram = enumClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (enumClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // constructor calls\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        for (let enumValueNode of enumNode.values) {\r\n\r\n            if (enumValueNode.constructorParameters != null) {\r\n\r\n                let p: Program = {\r\n                    module: this.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                }\r\n\r\n                this.currentProgram = p;\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: enumValueNode.position,\r\n                    enumClass: enumClass,\r\n                    valueIdentifier: enumValueNode.identifier\r\n                });\r\n\r\n                this.processEnumConstructorCall(enumClass, enumValueNode.constructorParameters,\r\n                    enumValueNode.position, enumValueNode.commaPositions, enumValueNode.rightBracketPosition);\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.programEnd,\r\n                    position: enumValueNode.position,\r\n                    stepFinished: true\r\n                });\r\n\r\n                let enumInfo: EnumInfo = enumClass.identifierToInfoMap[enumValueNode.identifier];\r\n                enumInfo.constructorCallProgram = p;\r\n                enumInfo.position = enumValueNode.position;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, enumNode.scopeFrom, enumNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = enumClass.staticClass;\r\n        this.currentProgram = enumClass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of enumNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of enumNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n        this.checkDoubleMethodDeclaration(enumClass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n    }\r\n\r\n    processEnumConstructorCall(enumClass: Enum, parameterNodes: TermNode[],\r\n        position: TextPosition, commaPositions: TextPosition[], rightBracketPosition: TextPosition) {\r\n        let parameterTypes: Type[] = [];\r\n\r\n        for (let p of parameterNodes) {\r\n            let typeNode = this.processNode(p);\r\n            if (typeNode == null) continue;\r\n            parameterTypes.push(typeNode.type);\r\n        }\r\n\r\n        let methods = enumClass.getMethodsThatFitWithCasting(enumClass.identifier,\r\n            parameterTypes, true, Visibility.private);\r\n\r\n        this.module.pushMethodCallPosition(position, commaPositions, enumClass.getMethods(Visibility.private, enumClass.identifier), rightBracketPosition);\r\n\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            let destType = method.getParameterType[i];\r\n            let srcType = parameterTypes[i];\r\n            if (!srcType.equals(destType)) {\r\n\r\n                if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n                    if (srcType.getCastInformation(destType).needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: null,\r\n                            newType: destType,\r\n                            stackPosRelative: -parameterTypes.length + 1 + i\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            position: position,\r\n            stepFinished: true,\r\n            isSuperCall: false,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n    }\r\n\r\n    generateClass(classNode: ClassDeclarationNode) {\r\n\r\n        if (classNode.resolvedType == null) return;\r\n\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        let klass = <Klass>classNode.resolvedType;\r\n\r\n        //this.pushUsagePosition(classNode.position, klass);\r\n\r\n        let inheritanceError = klass.checkInheritance();\r\n\r\n        if (inheritanceError.message != \"\") {\r\n            this.pushError(inheritanceError.message, classNode.position, \"error\", this.getInheritanceQuickFix(classNode.scopeTo, inheritanceError));\r\n        }\r\n\r\n        let baseClass = klass.baseClass;\r\n        if (baseClass != null && baseClass.module != klass.module && baseClass.visibility == Visibility.private) {\r\n            this.pushError(\"Die Basisklasse \" + baseClass.identifier + \" der Klasse \" + klass.identifier + \" ist hier nicht sichtbar.\", classNode.position);\r\n        }\r\n\r\n        this.currentSymbolTable.classContext = klass;\r\n        this.currentProgram = klass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && !attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && !methodNode.isAbstract && !methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.checkDoubleMethodDeclaration(klass);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        // static attributes/methods\r\n        this.pushNewSymbolTable(false, classNode.scopeFrom, classNode.scopeTo);\r\n\r\n        this.currentSymbolTable.classContext = klass.staticClass;\r\n        this.currentProgram = klass.staticClass.attributeInitializationProgram;\r\n\r\n        for (let attribute of classNode.attributes) {\r\n            if (attribute != null && attribute.isStatic && attribute.initialization != null) {\r\n                this.initializeAttribute(attribute);\r\n            }\r\n        }\r\n\r\n        if (klass.staticClass.attributeInitializationProgram.statements.length > 0) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: this.lastStatement.position,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: false,\r\n                leaveThisObjectOnStack: true\r\n            });\r\n        }\r\n\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        for (let methodNode of classNode.methods) {\r\n            if (methodNode != null && methodNode.isStatic) {\r\n                this.compileMethod(methodNode);\r\n            }\r\n        }\r\n\r\n        this.popSymbolTable(null);\r\n\r\n\r\n    }\r\n\r\n    checkDoubleMethodDeclaration(cie: Klass | Interface) {  // N.B.: Enum extends Klass\r\n\r\n        let signatureMap: { [key: string]: Method } = {};\r\n\r\n        for (let m of cie.methods) {\r\n\r\n            let signature = m.getSignatureWithReturnParameter();\r\n            if (signatureMap[signature] != null) {\r\n\r\n                let cieType: String = \"In der Klasse \";\r\n                if (cie instanceof Interface) cieType = \"Im Interface \";\r\n                if (cie instanceof Enum) cieType = \"Im Enum \";\r\n\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, m.usagePositions.get(this.module)[0], \"error\");\r\n                this.pushError(cieType + cie.identifier + \" gibt es zwei Methoden mit derselben Signatur: \" + signature, signatureMap[signature].usagePositions.get(this.module)[0], \"error\");\r\n\r\n            } else {\r\n                signatureMap[signature] = m;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getInheritanceQuickFix(position: TextPosition, inheritanceError: { message: string; missingMethods: Method[]; }): QuickFix {\r\n\r\n        let s: string = \"\";\r\n        for (let m of inheritanceError.missingMethods) {\r\n            s += \"\\tpublic \" + (m.returnType == null ? \" void\" : getTypeIdentifier(m.returnType)) + \" \" + m.identifier + \"(\";\r\n            s += m.parameterlist.parameters.map(p => getTypeIdentifier(p.type) + \" \" + p.identifier).join(\", \");\r\n            s += \") {\\n\\t\\t//TODO: Methode füllen\\n\\t}\\n\\n\";\r\n        }\r\n\r\n        return {\r\n            title: \"Fehlende Methoden einfügen\",\r\n            editsProvider: (uri) => {\r\n                return [\r\n                    {\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: { startLineNumber: position.line, startColumn: position.column - 1, endLineNumber: position.line, endColumn: position.column - 1 },\r\n                            text: s\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    compileMethod(methodNode: MethodDeclarationNode) {\r\n        // Assumption: methodNode != null\r\n        let method = methodNode.resolvedType;\r\n\r\n        this.checkIfMethodIsVirtual(method);\r\n\r\n        if (method == null) return;\r\n\r\n        // this.pushUsagePosition(methodNode.position, method);\r\n\r\n        this.initCurrentProgram();\r\n        method.program = this.currentProgram;\r\n\r\n        this.pushNewSymbolTable(false, methodNode.scopeFrom, methodNode.scopeTo);\r\n        this.currentSymbolTable.method = method;\r\n\r\n        let stackPos: number = 1;\r\n\r\n        for (let v of method.getParameterList().parameters) {\r\n            v.stackPos = stackPos++;\r\n\r\n            this.currentSymbolTable.variableMap.set(v.identifier, v);\r\n        }\r\n\r\n        // \" + 1\" is for \"this\"-object\r\n        this.nextFreeRelativeStackPos = methodNode.parameters.length + 1;\r\n\r\n        if (method.isConstructor && this.currentSymbolTable.classContext instanceof Klass) {\r\n            let c: Klass = this.currentSymbolTable.classContext;\r\n            if (c != null && c.baseClass?.hasConstructor()) {\r\n                let error: boolean = false;\r\n                if (methodNode.statements == null || methodNode.statements.length == 0) error = true;\r\n                if (!error) {\r\n                    error = true;\r\n                    if (methodNode.statements[0].type == TokenType.scopeNode) {\r\n                        let stm = methodNode.statements[0].statements;\r\n                        if (stm.length > 0 && stm[0].type == TokenType.superConstructorCall) {\r\n                            error = false;\r\n                        }\r\n                    } else if (methodNode.statements[0].type == TokenType.superConstructorCall) {\r\n                        error = false;\r\n                    }\r\n                }\r\n                if (error) {\r\n                    let quickFix: QuickFix = null;\r\n                    let constructors = c.baseClass.methods.filter(m => m.isConstructor);\r\n                    if (constructors.length == 1) {\r\n                        let methodCall = \"super(\" + constructors[0].parameterlist.parameters.map(p => p.identifier).join(\", \") + \");\";\r\n                        let position = methodNode.position;\r\n                        quickFix = {\r\n                            title: 'Aufruf des Konstruktors der Basisklasse einfügen',\r\n                            //06.06.2020\r\n                            editsProvider: (uri) => {\r\n                                return [{\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: {\r\n                                            startLineNumber: position.line + 1, startColumn: 0, endLineNumber: position.line + 1, endColumn: 0,\r\n                                            message: \"\",\r\n                                            severity: monaco.MarkerSeverity.Error\r\n                                        },\r\n                                        text: \"\\t\\t\" + methodCall + \"\\n\"\r\n                                    }\r\n                                }\r\n                                ];\r\n                            }\r\n                        }\r\n                    }\r\n                    this.pushError(\"Die Basisklasse der Klasse \" + c.identifier + \" besitzt Konstruktoren, daher muss diese Konstruktordefinition mit einem Aufruf eines Konstruktors der Basisklasse (super(...)) beginnen.\",\r\n                        methodNode.position, \"error\", quickFix);\r\n                }\r\n            }\r\n        }\r\n\r\n        let actorClass = <Klass>this.moduleStore.getType(\"Actor\").type;\r\n        let methodIdentifiers = [\"act\", \"onKeyTyped\", \"onKeyDown\", \"onKeyUp\",\r\n            \"onMouseDown\", \"onMouseUp\", \"onMouseMove\", \"onMouseEnter\", \"onMouseLeave\"];\r\n        if (methodIdentifiers.indexOf(method.identifier) >= 0 && this.currentSymbolTable.classContext.hasAncestorOrIs(actorClass)) {\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.returnIfDestroyed,\r\n                    position: methodNode.position\r\n                },\r\n            ]);\r\n        }\r\n\r\n        let withReturnStatement = this.generateStatements(methodNode.statements).withReturnStatement;\r\n\r\n        if (!withReturnStatement) {\r\n            this.pushStatements({\r\n                type: TokenType.return,\r\n                position: methodNode.scopeTo,\r\n                copyReturnValueToStackframePos0: false,\r\n                stepFinished: true,\r\n                leaveThisObjectOnStack: false\r\n            });\r\n\r\n            let rt = method.getReturnType();\r\n            if (!method.isConstructor && rt != null && rt != voidPrimitiveType) {\r\n                this.pushError(\"Die Deklaration der Methode verlangt die Rückgabe eines Wertes vom Typ \" + rt.identifier + \". Es fehlt (mindestens) eine entsprechende return-Anweisung.\", methodNode.position);\r\n            }\r\n        }\r\n\r\n        method.reserveStackForLocalVariables = this.nextFreeRelativeStackPos\r\n            - methodNode.parameters.length - 1;\r\n\r\n        this.popSymbolTable();\r\n        this.currentProgram.labelManager.resolveNodes();\r\n    }\r\n\r\n\r\n    /**\r\n     * checks if child classes have method with same signature\r\n     */\r\n    checkIfMethodIsVirtual(method: Method) {\r\n\r\n        let klass = this.currentSymbolTable.classContext;\r\n        if (klass != null) {\r\n\r\n            for (let mo of this.moduleStore.getModules(false)) {\r\n                for (let c of mo.typeStore.typeList) {\r\n                    if (c instanceof Klass && c != klass && c.hasAncestorOrIs(klass)) {\r\n                        for (let m of c.methods) {\r\n                            if (m != null && method != null && m.signature == method.signature) {\r\n                                method.isVirtual = true;\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initializeAttribute(attribute: AttributeDeclarationNode) {\r\n\r\n        if (attribute == null) return;\r\n\r\n        // assumption: attribute != null\r\n        if (attribute.identifier == null || attribute.initialization == null) return;\r\n\r\n        if (attribute.isStatic) {\r\n            this.pushStatements({\r\n                type: TokenType.pushStaticAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                klass: <StaticClass>(this.currentSymbolTable.classContext)\r\n            });\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushAttribute,\r\n                attributeIdentifier: attribute.identifier,\r\n                position: attribute.initialization.position,\r\n                useThisObject: true\r\n            });\r\n        }\r\n\r\n\r\n        let initializationType = this.processNode(attribute.initialization);\r\n\r\n        if (initializationType != null && initializationType.type != null) {\r\n            if (!this.ensureAutomaticCasting(initializationType.type, attribute.attributeType.resolvedType)) {\r\n\r\n                if (attribute.attributeType.resolvedType == null) {\r\n                    this.pushError(\"Der Datentyp von \" + attribute.identifier + \" konnte nicht ermittelt werden. \", attribute.position);\r\n                } else {\r\n                    this.pushError(\"Der Wert des Term vom Datentyp \" + initializationType.type + \" kann dem Attribut \" + attribute.identifier + \" vom Typ \" + attribute.attributeType.resolvedType.identifier + \" nicht zugewiesen werden.\", attribute.initialization.position);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.assignment,\r\n                position: attribute.initialization.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: false\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    initCurrentProgram() {\r\n\r\n        this.currentProgram = {\r\n            module: this.module,\r\n            statements: [],\r\n            labelManager: null\r\n        };\r\n\r\n        this.currentProgram.labelManager = new LabelManager(this.currentProgram);\r\n\r\n        this.lastStatement = null;\r\n\r\n    }\r\n\r\n    generateMain(isAdhocCompilation: boolean = false) {\r\n\r\n        this.initCurrentProgram();\r\n\r\n        let position: TextPosition = { line: 1, column: 1, length: 0 };\r\n\r\n        let mainProgramAst = this.module.mainProgramAst;\r\n        if (mainProgramAst != null && mainProgramAst.length > 0 && mainProgramAst[0] != null) {\r\n            position = this.module.mainProgramAst[0].position;\r\n        }\r\n\r\n        if (!isAdhocCompilation) {\r\n            this.pushNewSymbolTable(true, position, { line: 100000, column: 1, length: 0 }, this.currentProgram);\r\n            this.heap = {};\r\n        }\r\n\r\n        this.module.mainProgram = this.currentProgram;\r\n\r\n        let hasMainProgram: boolean = false;\r\n\r\n        if (this.module.mainProgramAst != null && this.module.mainProgramAst.length > 0) {\r\n\r\n            hasMainProgram = true;\r\n            this.generateStatements(this.module.mainProgramAst);\r\n\r\n            if (isAdhocCompilation && this.lastStatement != null && this.lastStatement.type == TokenType.decreaseStackpointer) {\r\n                this.removeLastStatement();\r\n            }\r\n\r\n            this.lastPosition = this.module.mainProgramEnd;\r\n            if (this.lastPosition == null) this.lastPosition = { line: 100000, column: 0, length: 0 };\r\n            // if(this.lastPosition == null) this.lastPosition = {line: 100000, column: 0, length: 0};\r\n\r\n            this.currentSymbolTable.positionTo = this.lastPosition;\r\n            if (!isAdhocCompilation) this.popSymbolTable(this.currentProgram, true);\r\n            this.heap = null;\r\n\r\n            this.pushStatements({\r\n                type: TokenType.programEnd,\r\n                position: this.lastPosition,\r\n                stepFinished: true,\r\n                pauseAfterProgramEnd: true\r\n            }, true);\r\n\r\n        }\r\n\r\n        this.currentProgram.labelManager.resolveNodes();\r\n\r\n        if (!isAdhocCompilation && !hasMainProgram) {\r\n            this.popSymbolTable(this.currentProgram);\r\n            this.heap = null;\r\n        }\r\n\r\n    }\r\n\r\n    ensureAutomaticCasting(typeFrom: Type, typeTo: Type, position?: TextPosition, nodeFrom?: ASTNode): boolean {\r\n\r\n        if (typeFrom == null) return false;\r\n\r\n        if (typeFrom.equals(typeTo)) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom == null || typeTo == null) return false;\r\n\r\n        if (!typeFrom.canCastTo(typeTo)) {\r\n\r\n            if (typeTo == booleanPrimitiveType && nodeFrom != null) {\r\n\r\n                this.checkIfAssignmentInstedOfEqual(nodeFrom);\r\n\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        if (typeFrom[\"unboxableAs\"] != null && typeFrom[\"unboxableAs\"].indexOf(typeTo) >= 0) {\r\n            return true;\r\n        }\r\n\r\n        if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n\r\n            let toStringStatement = this.getToStringStatement(typeFrom, position);\r\n\r\n            if (toStringStatement != null) {\r\n                this.pushStatements(toStringStatement);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n\r\n        if (typeFrom instanceof PrimitiveType && (typeTo instanceof PrimitiveType || typeTo == stringPrimitiveType)) {\r\n            let castInfo = typeFrom.getCastInformation(typeTo);\r\n            if (!castInfo.automatic) {\r\n                return false;\r\n            }\r\n            if (castInfo.needsStatement) {\r\n                this.pushStatements({\r\n                    type: TokenType.castValue,\r\n                    newType: typeTo,\r\n                    position: position\r\n                });\r\n            }\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    getToStringStatement(type: Klass, position: TextPosition): Statement {\r\n        let toStringMethod = type.getMethodBySignature(\"toString()\");\r\n        if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n            return {\r\n                type: TokenType.callMethod,\r\n                position: position,\r\n                method: toStringMethod,\r\n                isSuperCall: false,\r\n                stackframeBegin: -1,\r\n                stepFinished: false\r\n            };\r\n\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    checkIfAssignmentInstedOfEqual(nodeFrom: ASTNode) {\r\n        if (nodeFrom.type == TokenType.binaryOp && nodeFrom.operator == TokenType.assignment) {\r\n            let pos = nodeFrom.position;\r\n            this.pushError(\"= ist der Zuweisungsoperator. Du willst sicher zwei Werte vergleichen. Dazu benötigst Du den Vergleichsoperator ==.\",\r\n                pos, \"error\", {\r\n                title: '= durch == ersetzen',\r\n                editsProvider: (uri) => {\r\n                    return [{\r\n                        resource: uri,\r\n                        edit: {\r\n                            range: {\r\n                                startLineNumber: pos.line, startColumn: pos.column, endLineNumber: pos.line, endColumn: pos.column + 1,\r\n                                message: \"\",\r\n                                severity: monaco.MarkerSeverity.Error\r\n                            },\r\n                            text: \"==\"\r\n                        }\r\n                    }\r\n                    ];\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    generateStatements(nodes: ASTNode[]): { withReturnStatement: boolean, endPosition?: TextPosition } {\r\n\r\n\r\n        if (nodes == null || nodes.length == 0 || nodes[0] == null) return { withReturnStatement: false };\r\n\r\n        let withReturnStatement: boolean = this.processStatementsInsideBlock(nodes);\r\n\r\n        let lastNode = nodes[nodes.length - 1];\r\n        let endPosition: TextPosition;\r\n        if (lastNode != null) {\r\n            if (lastNode.type == TokenType.scopeNode) {\r\n                endPosition = lastNode.positionTo;\r\n            } else {\r\n                endPosition = Object.assign({}, lastNode.position);\r\n                if (endPosition != null) {\r\n                    endPosition.column += endPosition.length;\r\n                    endPosition.length = 1;\r\n                }\r\n            }\r\n            this.lastPosition = endPosition;\r\n        } else {\r\n            endPosition = this.lastPosition;\r\n        }\r\n\r\n        return { withReturnStatement: withReturnStatement, endPosition: endPosition };\r\n\r\n    }\r\n\r\n    processStatementsInsideBlock(nodes: ASTNode[]) {\r\n        let withReturnStatement = false;\r\n\r\n        for (let node of nodes) {\r\n\r\n            if (node == null) continue;\r\n\r\n            let type = this.processNode(node);\r\n\r\n            if (type != null && type.withReturnStatement != null && type.withReturnStatement) {\r\n                withReturnStatement = true;\r\n            }\r\n\r\n            // If last Statement has value which is not used further then pop this value from stack.\r\n            // e.g. statement 12 + 17 -7;\r\n            // Parser issues a warning in this case, see Parser.checkIfStatementHasNoEffekt\r\n            if (type != null && type.type != null && type.type != voidPrimitiveType) {\r\n\r\n                if (this.lastStatement != null &&\r\n                    this.lastStatement.type == TokenType.assignment && this.lastStatement.leaveValueOnStack) {\r\n                    this.lastStatement.leaveValueOnStack = false;\r\n                } else {\r\n                    this.pushStatements({\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: null,\r\n                        popCount: 1,\r\n                        stepFinished: true\r\n                    }, true)\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return withReturnStatement;\r\n    }\r\n\r\n\r\n    lastPosition: TextPosition;\r\n    lastStatement: Statement;\r\n\r\n    insertStatements(pos: number, statements: Statement | Statement[]) {\r\n        if (statements == null) return;\r\n        if (!Array.isArray(statements)) statements = [statements];\r\n        for (let st of statements) {\r\n            this.currentProgram.statements.splice(pos++, 0, st);\r\n        }\r\n    }\r\n\r\n    pushStatements(statement: Statement | Statement[], deleteStepFinishedFlagOnStepBefore: boolean = false) {\r\n\r\n        if (statement == null) return;\r\n\r\n        if (deleteStepFinishedFlagOnStepBefore && this.currentProgram.statements.length > 0) {\r\n            let stepBefore: Statement = this.currentProgram.statements[this.currentProgram.statements.length - 1];\r\n            stepBefore.stepFinished = false;\r\n        }\r\n\r\n        if (Array.isArray(statement)) {\r\n            for (let st of statement) {\r\n                this.currentProgram.statements.push(st);\r\n                if (st.type == TokenType.return || st.type == TokenType.jumpAlways) {\r\n                    if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n                }\r\n                if (st.position != null) {\r\n                    this.lastPosition = st.position;\r\n                } else {\r\n                    st.position = this.lastPosition;\r\n                }\r\n                this.lastStatement = st;\r\n            }\r\n        } else {\r\n            this.currentProgram.statements.push(statement);\r\n            if (statement.type == TokenType.return || statement.type == TokenType.jumpAlways) {\r\n                if (this.lastStatement != null) this.lastStatement.stepFinished = false;\r\n            }\r\n            if (statement.position != null) {\r\n                this.lastPosition = statement.position;\r\n            } else {\r\n                statement.position = this.lastPosition;\r\n            }\r\n\r\n            this.lastStatement = statement;\r\n        }\r\n    }\r\n\r\n    removeLastStatement() {\r\n        let lst = this.currentProgram.statements.pop();\r\n        this.currentProgram.labelManager.removeNode(lst);\r\n    }\r\n\r\n    initStackFrameNodes: InitStackframeStatement[] = [];\r\n\r\n\r\n    pushNewSymbolTable(beginNewStackframe: boolean, positionFrom: TextPosition, positionTo: TextPosition,\r\n        program?: Program): SymbolTable {\r\n\r\n        let st = new SymbolTable(this.currentSymbolTable, positionFrom, positionTo);\r\n\r\n        this.symbolTableStack.push(this.currentSymbolTable);\r\n\r\n        if (beginNewStackframe) {\r\n            st.beginsNewStackframe = true;\r\n            this.currentSymbolTable.stackframeSize = this.nextFreeRelativeStackPos;\r\n            this.nextFreeRelativeStackPos = 0;\r\n\r\n            if (program != null) {\r\n                let initStackFrameNode: InitStackframeStatement = {\r\n                    type: TokenType.initStackframe,\r\n                    position: positionFrom,\r\n                    reserveForLocalVariables: 0\r\n                }\r\n\r\n                program.statements.push(initStackFrameNode);\r\n                this.initStackFrameNodes.push(initStackFrameNode);\r\n            }\r\n\r\n        }\r\n\r\n        this.currentSymbolTable = st;\r\n\r\n        return st;\r\n\r\n    }\r\n\r\n    popSymbolTable(program?: Program, deleteStepFinishedFlagOnStepBefore: boolean = false): void {\r\n\r\n        let st = this.currentSymbolTable;\r\n        this.currentSymbolTable = this.symbolTableStack.pop();\r\n\r\n        // if v.declarationError != null then variable has been used before initialization.\r\n        st.variableMap.forEach(v => {\r\n            if (v.declarationError != null && v.usedBeforeInitialization) {\r\n                this.errorList.push(v.declarationError);\r\n                v.declarationError = null;\r\n            }\r\n        });\r\n\r\n        // if (!st.beginsNewStackframe && st.variableMap.size == 0 && removeI) {\r\n        //     // empty symbol table => remove it!\r\n        //     if (st.parent != null) {\r\n        //         st.parent.childSymbolTables.pop();\r\n        //     }\r\n        // } else \r\n        {\r\n            // TODO: add length of token\r\n\r\n            if (st.beginsNewStackframe) {\r\n\r\n                st.stackframeSize = this.nextFreeRelativeStackPos;\r\n                this.nextFreeRelativeStackPos = this.currentSymbolTable.stackframeSize;\r\n\r\n                if (program != null) {\r\n                    let initStackframeNode = this.initStackFrameNodes.pop();\r\n                    if (initStackframeNode != null) initStackframeNode.reserveForLocalVariables = st.stackframeSize;\r\n\r\n                    if (program.statements.length > 0 && deleteStepFinishedFlagOnStepBefore) {\r\n                        let statement = program.statements[program.statements.length - 1];\r\n\r\n                        // don't set stepFinished = false in jump-statements\r\n                        // as this could lead to infinity-loop is user sets \"while(true);\" just before program end\r\n                        if ([TokenType.jumpAlways, TokenType.jumpIfTrue, TokenType.jumpIfFalse, TokenType.jumpIfFalseAndLeaveOnStack, TokenType.jumpIfTrueAndLeaveOnStack].indexOf(statement.type) == -1) {\r\n                            program.statements[program.statements.length - 1].stepFinished = false;\r\n                        }\r\n                    }\r\n\r\n                    program.statements.push({\r\n                        type: TokenType.closeStackframe,\r\n                        position: st.positionTo\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushError(text: string, position: TextPosition, errorLevel: ErrorLevel = \"error\", quickFix?: QuickFix) {\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    openBreakScope() {\r\n        this.breakNodeStack.push([]);\r\n    }\r\n\r\n    openContinueScope() {\r\n        this.continueNodeStack.push([]);\r\n    }\r\n\r\n    pushBreakNode(breakNode: JumpAlwaysStatement) {\r\n        if (this.breakNodeStack.length == 0) {\r\n            this.pushError(\"Eine break-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", breakNode.position);\r\n        } else {\r\n            this.breakNodeStack[this.breakNodeStack.length - 1].push(breakNode);\r\n            this.pushStatements(breakNode);\r\n        }\r\n    }\r\n\r\n    pushContinueNode(continueNode: JumpAlwaysStatement) {\r\n        if (this.continueNodeStack.length == 0) {\r\n            this.pushError(\"Eine continue-Anweisung ist nur innerhalb einer umgebenden Schleife oder switch-Anweisung sinnvoll.\", continueNode.position);\r\n        } else {\r\n            this.continueNodeStack[this.continueNodeStack.length - 1].push(continueNode);\r\n            this.pushStatements(continueNode);\r\n        }\r\n    }\r\n\r\n    closeBreakScope(breakTargetLabel: number, lm: LabelManager) {\r\n        let breakNodes = this.breakNodeStack.pop();\r\n        for (let bn of breakNodes) {\r\n            lm.registerJumpNode(bn, breakTargetLabel);\r\n        }\r\n    }\r\n\r\n    closeContinueScope(continueTargetLabel: number, lm: LabelManager) {\r\n        let continueNodes = this.continueNodeStack.pop();\r\n        for (let bn of continueNodes) {\r\n            lm.registerJumpNode(bn, continueTargetLabel);\r\n        }\r\n    }\r\n\r\n    breakOccured(): boolean {\r\n        return this.breakNodeStack.length > 0 && this.breakNodeStack[this.breakNodeStack.length - 1].length > 0;\r\n    }\r\n\r\n    processNode(node: ASTNode, isLeftSideOfAssignment: boolean = false): StackType {\r\n\r\n        if (node == null) return;\r\n\r\n        switch (node.type) {\r\n            case TokenType.binaryOp:\r\n                return this.processBinaryOp(node);\r\n            case TokenType.unaryOp:\r\n                return this.processUnaryOp(node);\r\n            case TokenType.pushConstant:\r\n                return this.pushConstant(node);\r\n            case TokenType.callMethod:\r\n                return this.callMethod(node);\r\n            case TokenType.identifier:\r\n                {\r\n                    let stackType = this.resolveIdentifier(node);\r\n                    let v = node.variable;\r\n                    if (v != null) {\r\n                        if (isLeftSideOfAssignment) {\r\n                            v.initialized = true;\r\n                            if (!v.usedBeforeInitialization) {\r\n                                v.declarationError = null;\r\n                            }\r\n                        } else {\r\n                            if (v.initialized != null && !v.initialized) {\r\n                                v.usedBeforeInitialization = true;\r\n                                this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                            }\r\n                        }\r\n                    }\r\n                    return stackType;\r\n                }\r\n            case TokenType.selectArrayElement:\r\n                return this.selectArrayElement(node);\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                return this.incrementDecrementBeforeOrAfter(node);\r\n            case TokenType.superConstructorCall:\r\n                return this.superconstructorCall(node);\r\n            case TokenType.keywordThis:\r\n                return this.pushThisOrSuper(node, false);\r\n            case TokenType.keywordSuper:\r\n                return this.pushThisOrSuper(node, true);\r\n            case TokenType.pushAttribute:\r\n                return this.pushAttribute(node);\r\n            case TokenType.newObject:\r\n                return this.newObject(node);\r\n            case TokenType.keywordWhile:\r\n                return this.processWhile(node);\r\n            case TokenType.keywordDo:\r\n                return this.processDo(node);\r\n            case TokenType.keywordFor:\r\n                return this.processFor(node);\r\n            case TokenType.forLoopOverCollection:\r\n                return this.processForLoopOverCollection(node);\r\n            case TokenType.keywordIf:\r\n                return this.processIf(node);\r\n            case TokenType.keywordSwitch:\r\n                return this.processSwitch(node);\r\n            case TokenType.keywordReturn:\r\n                return this.processReturn(node);\r\n            case TokenType.localVariableDeclaration:\r\n                return this.localVariableDeclaration(node);\r\n            case TokenType.arrayInitialization:\r\n                return this.processArrayLiteral(node);\r\n            case TokenType.newArray:\r\n                return this.processNewArray(node);\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                return this.processPrint(node);\r\n            case TokenType.castValue:\r\n                return this.processManualCast(node);\r\n            case TokenType.keywordBreak:\r\n                this.pushBreakNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.keywordContinue:\r\n                this.pushContinueNode({\r\n                    type: TokenType.jumpAlways,\r\n                    position: node.position\r\n                });\r\n                return null;\r\n            case TokenType.rightBracket:\r\n                let type = this.processNode(node.termInsideBrackets);\r\n                if (type != null && type.type instanceof Klass) this.pushTypePosition(node.position, type.type);\r\n                return type;\r\n            case TokenType.scopeNode:\r\n                this.pushNewSymbolTable(false, node.position, node.positionTo);\r\n\r\n                let withReturnStatement = this.processStatementsInsideBlock(node.statements);\r\n\r\n                this.popSymbolTable();\r\n\r\n                return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processManualCast(node: CastManuallyNode): StackType {\r\n\r\n        let typeFrom1 = this.processNode(node.whatToCast);\r\n\r\n        if (typeFrom1 == null || typeFrom1.type == null) return;\r\n        let typeFrom: Type = typeFrom1.type;\r\n\r\n        if (typeFrom != null && node.castToType != null && node.castToType.resolvedType != null) {\r\n\r\n            let typeTo = node.castToType.resolvedType;\r\n\r\n            if (typeFrom.canCastTo(typeTo)) {\r\n\r\n                if (typeFrom instanceof PrimitiveType && typeTo instanceof PrimitiveType) {\r\n                    let castInfo = typeFrom.getCastInformation(typeTo);\r\n                    if (castInfo.needsStatement) {\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n                } else if (typeFrom instanceof Klass && typeTo == stringPrimitiveType) {\r\n                    let toStringMethod = typeFrom.getMethodBySignature(\"toString()\");\r\n                    if (toStringMethod != null && toStringMethod.getReturnType() == stringPrimitiveType) {\r\n\r\n                        this.pushStatements({\r\n                            type: TokenType.callMethod,\r\n                            position: node.position,\r\n                            method: toStringMethod,\r\n                            isSuperCall: false,\r\n                            stackframeBegin: -1,\r\n                            stepFinished: false\r\n                        });\r\n\r\n                    } else {\r\n                        this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n                        this.pushStatements({\r\n                            type: TokenType.castValue,\r\n                            position: node.position,\r\n                            newType: typeTo\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n\r\n            }\r\n\r\n            if ((typeFrom instanceof Klass || typeFrom instanceof Interface) && (typeTo instanceof Klass || typeTo instanceof Interface))\r\n\r\n            // if (typeFrom instanceof Klass &&\r\n            //     (typeTo instanceof Klass && !typeFrom.hasAncestorOrIs(typeTo) && typeTo.hasAncestorOrIs(typeFrom)) ||\r\n            //     (typeTo instanceof Interface && !(<Klass>typeFrom).implementsInterface(typeTo))) \r\n            {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.checkCast,\r\n                    position: node.position,\r\n                    newType: typeTo,\r\n                    stepFinished: false\r\n                });\r\n\r\n                return {\r\n                    isAssignable: typeFrom1.isAssignable,\r\n                    type: typeTo\r\n                };\r\n            }\r\n            else {\r\n                this.pushError(\"Der Datentyp \" + typeFrom.identifier + \" kann (zumindest durch casting) nicht in den Datentyp \" + typeTo.identifier + \" umgewandelt werden.\", node.position);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processPrint(node: PrintNode): StackType {\r\n\r\n        let type = node.type == TokenType.keywordPrint ? TokenType.print : TokenType.println;\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, TokenTypeReadable[node.type], node.rightBracketPosition);\r\n\r\n        if (node.text != null) {\r\n\r\n            let type = this.processNode(node.text);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                    this.pushError(\"Die Methoden print und println erwarten einen Parameter vom Typ String. Gefunden wurde ein Wert vom Typ \" + type.type?.identifier + \".\", node.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        let withColor: boolean = false;\r\n\r\n        if (node.color != null) {\r\n\r\n            let type = this.processNode(node.color);\r\n\r\n            if (type != null) {\r\n                if (type.type != stringPrimitiveType && type.type != intPrimitiveType) {\r\n                    if (!this.ensureAutomaticCasting(type.type, stringPrimitiveType)) {\r\n                        this.pushError(\"Die Methoden print und println erwarten als Farbe einen Parameter vom Typ String oder int. Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                    }\r\n                }\r\n            }\r\n\r\n            withColor = true;\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: type,\r\n            position: node.position,\r\n            empty: (node.text == null),\r\n            stepFinished: true,\r\n            withColor: withColor\r\n        });\r\n\r\n\r\n        return null;\r\n    }\r\n\r\n    processNewArray(node: NewArrayNode): StackType {\r\n\r\n        if (node.initialization != null) {\r\n            return this.processArrayLiteral(node.initialization);\r\n        }\r\n\r\n        // int[7][2][] are 7 arrays each with arrays of length 2 which are empty\r\n\r\n        let dimension = 0;\r\n        for (let ec of node.elementCount) {\r\n            if (ec != null) {\r\n                this.processNode(ec); // push number of elements for this dimension on stack\r\n                dimension++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // for the array above: arrayType is array of array of int; dimension is 2; stack: 7 2\r\n        this.pushStatements({\r\n            type: TokenType.pushEmptyArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType,\r\n            dimension: dimension\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processArrayLiteral(node: ArrayInitializationNode): StackType {\r\n\r\n        let bes: BeginArrayStatement = {\r\n            type: TokenType.beginArray,\r\n            position: node.position,\r\n            arrayType: node.arrayType.resolvedType\r\n        };\r\n\r\n        this.pushStatements(bes);\r\n\r\n        for (let ain of node.nodes) {\r\n\r\n            // Did an error occur when parsing a constant?\r\n            if (ain == null) {\r\n                continue;\r\n            }\r\n\r\n            if (ain.type == TokenType.arrayInitialization) {\r\n                this.processArrayLiteral(ain);\r\n            } else {\r\n                let sType = this.processNode(ain);\r\n                if (sType == null) {\r\n                    return;\r\n                }\r\n                let targetType = (<ArrayType>node.arrayType.resolvedType).arrayOfType;\r\n                if (!this.ensureAutomaticCasting(sType.type, targetType, ain.position)) {\r\n                    this.pushError(\"Der Datentyp des Terms (\" + sType.type.identifier + \") kann nicht in den Datentyp \" + targetType.identifier + \" konvertiert werden.\", ain.position);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.addToArray,\r\n            position: node.position,\r\n            numberOfElementsToAdd: node.nodes.length\r\n        });\r\n\r\n        return {\r\n            isAssignable: false,\r\n            type: node.arrayType.resolvedType\r\n        }\r\n\r\n    }\r\n\r\n    localVariableDeclaration(node: LocalVariableDeclarationNode, dontWarnWhenNoInitialization: boolean = false): StackType {\r\n\r\n        if (node.variableType.resolvedType == null) {\r\n            node.variableType.resolvedType = nullType; // Make the best out of it...\r\n        }\r\n\r\n        let declareVariableOnHeap = (this.heap != null && this.symbolTableStack.length <= 2);\r\n\r\n        let variable: Variable = {\r\n            identifier: node.identifier,\r\n            stackPos: declareVariableOnHeap ? null : this.nextFreeRelativeStackPos++,\r\n            type: node.variableType.resolvedType,\r\n            usagePositions: new Map(),\r\n            declaration: { module: this.module, position: node.position },\r\n            isFinal: node.isFinal\r\n        };\r\n\r\n        this.pushUsagePosition(node.position, variable);\r\n\r\n        if (declareVariableOnHeap) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.heapVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            });\r\n\r\n            if (this.heap[variable.identifier]) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.heap[variable.identifier] = variable;\r\n            // only for code completion:\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n        } else {\r\n\r\n            if (this.currentSymbolTable.variableMap.get(node.identifier)) {\r\n                this.pushError(\"Die Variable \" + node.identifier + \" darf im selben Sichtbarkeitsbereich (Scope) nicht mehrmals definiert werden.\", node.position);\r\n            }\r\n\r\n            this.currentSymbolTable.variableMap.set(node.identifier, variable);\r\n\r\n            this.pushStatements({\r\n                type: TokenType.localVariableDeclaration,\r\n                position: node.position,\r\n                pushOnTopOfStackForInitialization: node.initialization != null,\r\n                variable: variable,\r\n                stepFinished: node.initialization == null\r\n            })\r\n\r\n        }\r\n\r\n        if (node.initialization != null) {\r\n            let initType = this.processNode(node.initialization);\r\n\r\n            if (initType != null) {\r\n\r\n                if (variable.type == varType) {\r\n                    variable.type = initType.type;\r\n                } else if (initType.type == null) {\r\n                    this.pushError(\"Der Typ des Terms auf der rechten Seite des Zuweisungsoperators (=) konnte nicht bestimmt werden.\", node.initialization.position);\r\n                } else\r\n                    if (!this.ensureAutomaticCasting(initType.type, variable.type)) {\r\n                        this.pushError(\"Der Term vom Typ \" + initType.type.identifier + \" kann der Variable vom Typ \" + variable.type.identifier + \" nicht zugeordnet werden.\", node.initialization.position);\r\n                    };\r\n                this.pushStatements({\r\n                    type: TokenType.assignment,\r\n                    position: node.initialization.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                });\r\n            }\r\n\r\n        } else {\r\n            if (variable.type == varType) {\r\n                this.pushError(\"Die Verwendung von var ist nur dann zulässig, wenn eine lokale Variable in einer Anweisung deklariert und initialisiert wird, also z.B. var i = 12;\", node.variableType.position);\r\n            } else {\r\n                let initializer: string = \" = null\";\r\n                if (variable.type == intPrimitiveType) initializer = \" = 0\";\r\n                if (variable.type == doublePrimitiveType) initializer = \" = 0.0\";\r\n                if (variable.type == booleanPrimitiveType) initializer = \" = false\";\r\n                if (variable.type == charPrimitiveType) initializer = \" = ' '\";\r\n                if (variable.type == stringPrimitiveType) initializer = ' = \"\"';\r\n\r\n                variable.declarationError = {\r\n                    text: \"Jede lokale Variable sollte vor ihrer ersten Verwendung initialisiert werden.\",\r\n                    position: node.position,\r\n                    quickFix:\r\n                    {\r\n                        title: initializer + \" ergänzen\",\r\n                        editsProvider: (uri) => {\r\n                            let pos = node.position;\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: pos.line, startColumn: pos.column + pos.length, endLineNumber: pos.line, endColumn: pos.column + pos.length },\r\n                                        text: initializer\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    },\r\n                    level: \"info\"\r\n                }\r\n\r\n                variable.usedBeforeInitialization = false;\r\n                variable.initialized = dontWarnWhenNoInitialization;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    processReturn(node: ReturnNode): StackType {\r\n\r\n        let method = this.currentSymbolTable.method;\r\n\r\n        if (method == null) {\r\n            this.pushError(\"Eine return-Anweisung ist nur im Kontext einer Methode erlaubt.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (node.term != null) {\r\n\r\n            if (method.getReturnType() == null) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet keinen Rückgabewert.\", node.position);\r\n                return null;\r\n            }\r\n\r\n            let type = this.processNode(node.term);\r\n\r\n            if (type != null) {\r\n                if (!this.ensureAutomaticCasting(type.type, method.getReturnType(), null, node)) {\r\n                    this.pushError(\"Die Methode \" + method.identifier + \" erwaret einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \". Gefunden wurde ein Wert vom Typ \" + type.type.identifier + \".\", node.position);\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            if (method.getReturnType() != null && method.getReturnType() != voidPrimitiveType) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" erwartet einen Rückgabewert vom Typ \" + method.getReturnType().identifier + \", daher ist die leere Return-Anweisung (return;) nicht ausreichend.\", node.position);\r\n            }\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.return,\r\n            position: node.position,\r\n            copyReturnValueToStackframePos0: node.term != null,\r\n            stepFinished: true,\r\n            leaveThisObjectOnStack: false\r\n        });\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: true };\r\n\r\n    }\r\n\r\n    processSwitch(node: SwitchNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let ct = this.processNode(node.condition);\r\n        if (ct == null || ct.type == null) return;\r\n\r\n        let conditionType = ct.type;\r\n\r\n        let isString = conditionType == stringPrimitiveType || conditionType == charPrimitiveType;\r\n        let isInteger = conditionType == intPrimitiveType;\r\n        let isEnum = conditionType instanceof Enum;\r\n\r\n        if (!(isString || isInteger || isEnum)) {\r\n            this.pushError(\"Der Unterscheidungsterms einer switch-Anweisung muss den Datentyp String, char, int oder enum besitzen. Dieser hier ist vom Typ \" + conditionType.identifier, node.condition.position);\r\n        }\r\n\r\n        if (isEnum) {\r\n            this.pushStatements({\r\n                type: TokenType.castValue,\r\n                position: node.condition.position,\r\n                newType: intPrimitiveType\r\n            });\r\n        }\r\n\r\n        let switchStatement: JumpOnSwitchStatement = {\r\n            type: TokenType.keywordSwitch,\r\n            position: node.position,\r\n            defaultDestination: null,\r\n            switchType: isString ? \"string\" : \"number\",\r\n            destinationLabels: [],\r\n            destinationMap: {}\r\n        }\r\n\r\n        this.pushStatements(switchStatement);\r\n\r\n        // if value not included in case-statement and no default-statement present:\r\n        let endLabel = lm.insertJumpNode(TokenType.jumpAlways, node.position, this);\r\n\r\n        switchStatement.stepFinished = true;\r\n\r\n        lm.registerSwitchStatement(switchStatement);\r\n\r\n        this.openBreakScope();\r\n\r\n        let withReturnStatement = node.caseNodes.length > 0;\r\n\r\n        for (let caseNode of node.caseNodes) {\r\n\r\n            let isDefault = caseNode.caseTerm == null;\r\n\r\n            if (!isDefault) {\r\n\r\n                let constant: string | number = null;\r\n\r\n                if (isEnum && caseNode.caseTerm.type == TokenType.identifier) {\r\n                    let en: Enum = <Enum>conditionType;\r\n                    let info = en.identifierToInfoMap[caseNode.caseTerm.identifier];\r\n                    if (info == null) {\r\n                        this.pushError(\"Die Enum-Klasse \" + conditionType.identifier + \" hat kein Element mit dem Bezeichner \" + caseNode.caseTerm.identifier, caseNode.position, \"error\");\r\n                    } else {\r\n                        constant = info.ordinal;\r\n                    }\r\n                } else {\r\n                    let caseTerm = this.processNode(caseNode.caseTerm);\r\n\r\n                    let ls = this.lastStatement;\r\n\r\n                    if (ls.type == TokenType.pushConstant) {\r\n                        constant = ls.value;\r\n                    }\r\n\r\n                    if (ls.type == TokenType.pushEnumValue) {\r\n                        constant = ls.enumClass.getOrdinal(ls.valueIdentifier);\r\n                    }\r\n\r\n                    this.removeLastStatement();\r\n                }\r\n\r\n                if (constant == null) {\r\n                    this.pushError(\"Der Term bei case muss konstant sein.\", caseNode.caseTerm.position);\r\n                }\r\n\r\n                let label = lm.markJumpDestination(1);\r\n                let statements = this.generateStatements(caseNode.statements);\r\n\r\n                if (statements?.withReturnStatement == null || !statements.withReturnStatement) {\r\n                    withReturnStatement = false;\r\n                }\r\n\r\n                switchStatement.destinationLabels.push({\r\n                    constant: constant,\r\n                    label: label\r\n                });\r\n            } else {\r\n                let label = lm.markJumpDestination(1);\r\n                this.generateStatements(caseNode.statements);\r\n                switchStatement.defaultDestination = label;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        lm.markJumpDestination(1, endLabel);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable(null);\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n    }\r\n\r\n    processIf(node: IfNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'if' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let beginElse = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        let withReturnStatementIf = this.generateStatements(node.statementsIfTrue).withReturnStatement;\r\n\r\n        let endOfIf: number;\r\n        if (node.statementsIfFalse != null) {\r\n            endOfIf = lm.insertJumpNode(TokenType.jumpAlways, null, this);\r\n        }\r\n\r\n        lm.markJumpDestination(1, beginElse);\r\n\r\n        let withReturnStatementElse: boolean;\r\n        if (node.statementsIfFalse == null || node.statementsIfFalse.length == 0) {\r\n            withReturnStatementElse = false;\r\n        } else {\r\n            withReturnStatementElse = this.generateStatements(node.statementsIfFalse).withReturnStatement;\r\n        }\r\n\r\n        if (endOfIf != null) {\r\n            lm.markJumpDestination(1, endOfIf);\r\n        }\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatementIf && withReturnStatementElse };\r\n\r\n    }\r\n\r\n\r\n    processFor(node: ForNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        this.generateStatements(node.statementsBefore);\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert der Bedingung muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n        this.generateStatements(node.statementsAfter);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processForLoopOverCollection(node: ForNodeOverCollecion): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        // reserve position on stack for collection\r\n        let stackPosForCollection = this.nextFreeRelativeStackPos++;\r\n\r\n        // assign value of collection term to collection\r\n        let ct = this.processNode(node.collection);\r\n        if (ct == null) return;\r\n        let collectionType = ct.type;\r\n\r\n        this.pushStatements({\r\n            type: TokenType.popAndStoreIntoVariable,\r\n            position: node.collection.position,\r\n            stackposOfVariable: stackPosForCollection,\r\n            stepFinished: false\r\n        })\r\n\r\n        let collectionElementType: Type;\r\n\r\n        let kind: \"array\" | \"internalList\" | \"group\" | \"userDefinedIterable\" = null;\r\n\r\n        if (collectionType instanceof ArrayType) {\r\n            collectionElementType = collectionType.arrayOfType;\r\n            kind = \"array\";\r\n        } else if (collectionType instanceof Klass && collectionType.getImplementedInterface(\"Iterable\") != null) {\r\n            if (collectionType.module.isSystemModule) {\r\n                kind = \"internalList\";\r\n            } else {\r\n                kind = \"userDefinedIterable\";\r\n            }\r\n            let iterableInterface = collectionType.getImplementedInterface(\"Iterable\");\r\n            collectionElementType = collectionType.typeVariables[0].type;\r\n        } else if (collectionType instanceof Klass && collectionType.identifier == \"Group\") {\r\n            kind = \"group\";\r\n            collectionElementType = this.moduleStore.getType(\"Shape\").type;\r\n        }\r\n        else {\r\n            this.pushError(\"Mit der vereinfachten for-Schleife (for identifier : collectionOrArray) kann man nur über Arrays oder Klassen, die das Interface Iterable implementieren, iterieren.\", node.collection.position);\r\n            return null;\r\n        }\r\n\r\n        let variableType = node.variableType.resolvedType;\r\n        if (variableType == null) return null;\r\n\r\n        let noCastingNeeded = variableType == varType;\r\n        if (noCastingNeeded) {\r\n            variableType = collectionElementType;\r\n            node.variableType.resolvedType = collectionElementType\r\n        } else {\r\n            if (!collectionElementType.canCastTo(variableType)) {\r\n                this.pushError(\"Der ElementTyp \" + collectionElementType.identifier + \" der Collection kann nicht in den Typ \" + variableType.identifier + \" der Iterationsvariable \" + node.variableIdentifier + \" konvertiert werden.\", node.position);\r\n                return null;\r\n            }\r\n        }\r\n\r\n        this.localVariableDeclaration({\r\n            type: TokenType.localVariableDeclaration,\r\n            identifier: node.variableIdentifier,\r\n            initialization: null,\r\n            isFinal: false,\r\n            position: node.variablePosition,\r\n            variableType: node.variableType\r\n        }, true)\r\n\r\n        let variableStackPos = this.nextFreeRelativeStackPos - 1;\r\n        let stackPosOfCounterVariableOrIterator = this.nextFreeRelativeStackPos++;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            this.pushStatements([{\r\n                type: TokenType.extendedForLoopInit,\r\n                position: node.position,\r\n                stepFinished: false,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                typeOfElement: variableType,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator\r\n            }], true);\r\n        } else {\r\n            // get Iterator from collection\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosOfCounterVariableOrIterator,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"iterator\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }], true);\r\n        }\r\n\r\n        let labelBeforeCondition = lm.markJumpDestination(1);\r\n        let labelAfterForLoop: number;\r\n        let lastStatementBeforeCasting: Statement;\r\n\r\n        if (kind == \"array\" || kind == \"internalList\" || kind == \"group\") {\r\n            let jumpNode: ExtendedForLoopCheckCounterAndGetElement = {\r\n                type: TokenType.extendedForLoopCheckCounterAndGetElement,\r\n                kind: kind,\r\n                position: node.variablePosition,\r\n                stepFinished: true,\r\n                stackPosOfCollection: stackPosForCollection,\r\n                stackPosOfElement: variableStackPos,\r\n                stackPosOfCounter: stackPosOfCounterVariableOrIterator,\r\n                destination: 0 // gets filled in later,\r\n            };\r\n            lastStatementBeforeCasting = jumpNode;\r\n            labelAfterForLoop = lm.registerJumpNode(jumpNode);\r\n\r\n            this.pushStatements(\r\n                jumpNode\r\n            );\r\n\r\n        } else {\r\n            // call collection.hasNext()\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.variablePosition,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"hasNext\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n            ]);\r\n            labelAfterForLoop = lm.insertJumpNode(TokenType.jumpIfFalse, null, this);\r\n            // call collection.next() and assign to loop variable\r\n            this.pushStatements([\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: variableStackPos,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: stackPosForCollection,\r\n                    stepFinished: false\r\n                },\r\n                {\r\n                    type: TokenType.callMethod,\r\n                    position: node.position,\r\n                    stepFinished: false,\r\n                    isSuperCall: false,\r\n                    method: collectionType.getMethod(\"next\", new Parameterlist([])),\r\n                    stackframeBegin: -1\r\n                },\r\n                {\r\n                    type: TokenType.assignment,\r\n                    position: node.position,\r\n                    stepFinished: true,\r\n                    leaveValueOnStack: false\r\n                }]);\r\n        }\r\n\r\n        if (!noCastingNeeded) {\r\n            let oldStatementCount = this.currentProgram.statements.length;\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variableStackPos,\r\n                stepFinished: false\r\n            });\r\n            this.ensureAutomaticCasting(collectionElementType, variableType);\r\n            if (this.currentProgram.statements.length < oldStatementCount + 2) {\r\n                // casting needed no statement, so delete pushLocalVariabletoStack-Statement\r\n                this.currentProgram.statements.pop();\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.popAndStoreIntoVariable,\r\n                    stackposOfVariable: variableStackPos,\r\n                    position: node.position,\r\n                    stepFinished: true\r\n                });\r\n                lastStatementBeforeCasting.stepFinished = false;\r\n            }\r\n        }\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, labelBeforeCondition);\r\n\r\n        lm.markJumpDestination(1, labelAfterForLoop);\r\n\r\n        this.closeBreakScope(labelAfterForLoop, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processWhile(node: WhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let conditionBeginLabel = lm.markJumpDestination(1);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        let position = node.position;\r\n\r\n        if (node.condition != null) {\r\n            position = node.condition.position;\r\n        }\r\n\r\n        let afterWhileStatementLabel = lm.insertJumpNode(TokenType.jumpIfFalse, position, this);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        this.closeContinueScope(conditionBeginLabel, lm);\r\n        lm.insertJumpNode(TokenType.jumpAlways, statements.endPosition, this, conditionBeginLabel);\r\n\r\n        lm.markJumpDestination(1, afterWhileStatementLabel);\r\n\r\n        this.closeBreakScope(afterWhileStatementLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    processDo(node: DoWhileNode): StackType {\r\n\r\n        let lm = this.currentProgram.labelManager;\r\n\r\n        this.pushNewSymbolTable(false, node.scopeFrom, node.scopeTo);\r\n\r\n        let statementsBeginLabel = lm.markJumpDestination(1);\r\n\r\n        this.openBreakScope();\r\n        this.openContinueScope();\r\n\r\n        let statements = this.generateStatements(node.statements);\r\n        let withReturnStatement = statements.withReturnStatement;\r\n\r\n        let continueLabelIndex = lm.markJumpDestination(1);\r\n        this.closeContinueScope(continueLabelIndex, lm);\r\n\r\n        let conditionType = this.processNode(node.condition);\r\n\r\n        if (conditionType != null && conditionType.type != booleanPrimitiveType) {\r\n            this.checkIfAssignmentInstedOfEqual(node.condition);\r\n            this.pushError(\"Der Wert des Terms in Klammern hinter 'while' muss den Datentyp boolean besitzen.\", node.condition.position);\r\n        }\r\n\r\n        lm.insertJumpNode(TokenType.jumpIfTrue, statements.endPosition, this, statementsBeginLabel);\r\n\r\n        let endLabel = lm.markJumpDestination(1);\r\n\r\n        this.closeBreakScope(endLabel, lm);\r\n\r\n        this.popSymbolTable();\r\n\r\n        return { type: null, isAssignable: false, withReturnStatement: withReturnStatement };\r\n\r\n    }\r\n\r\n    newObject(node: NewObjectNode): StackType {\r\n\r\n        if (node.classType == null || node.classType.resolvedType == null) return null;\r\n\r\n        let resolvedType: Klass = <Klass>node.classType.resolvedType;\r\n        if (!(resolvedType instanceof Klass)) {\r\n            this.pushError(node.classType.identifier + \" ist keine Klasse, daher kann davon mit 'new' kein Objekt erzeugt werden.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        if (resolvedType.isAbstract) {\r\n            this.pushError(`${node.classType.identifier} ist eine abstrakte Klasse, daher kann von ihr mit 'new' kein Objekt instanziert werden. Falls ${node.classType.identifier} nicht-abstrakte Kindklassen besitzt, könntest Du von DENEN mit new Objekte instanzieren...`, node.position);\r\n            return null;\r\n        }\r\n\r\n        //this.pushTypePosition(node.rightBracketPosition, classType);\r\n\r\n        if (resolvedType.module != this.module && resolvedType.visibility != Visibility.public) {\r\n            this.pushError(\"Die Klasse \" + resolvedType.identifier + \" ist hier nicht sichtbar.\", node.position);\r\n        }\r\n\r\n        let newStatement: NewObjectStatement = {\r\n            type: TokenType.newObject,\r\n            position: node.position,\r\n            class: resolvedType,\r\n            subsequentConstructorCall: false,\r\n            stepFinished: true\r\n        };\r\n\r\n        this.pushStatements(newStatement);\r\n        this.pushTypePosition(node.rightBracketPosition, resolvedType); // to enable code completion when typing a point after the closing bracket\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n        let allStatements = this.currentProgram.statements;\r\n\r\n        if (node.constructorOperands?.length > 0) {\r\n            for (let p of node.constructorOperands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n        let upToVisibility = getVisibilityUpTo(resolvedType, this.currentSymbolTable.classContext);\r\n\r\n        // let methods = resolvedType.getMethodsThatFitWithCasting(resolvedType.identifier,\r\n        //     parameterTypes, true, upToVisibility);\r\n\r\n        let methods = resolvedType.getConstructor(parameterTypes, upToVisibility);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, resolvedType.getMethods(Visibility.public, resolvedType.identifier), node.rightBracketPosition);\r\n\r\n        // if there's no parameterless constructor then return without error:\r\n        if (parameterTypes.length > 0 || resolvedType.hasConstructor()) {\r\n\r\n            if (methods.error != null) {\r\n                this.pushError(methods.error, node.position);\r\n                return { type: resolvedType, isAssignable: false }; // try to continue...\r\n            }\r\n\r\n            let method = methods.methodList[0];\r\n            this.pushUsagePosition(node.position, method);\r\n\r\n            let staticClassContext = null;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext != null && classContext instanceof Klass) {\r\n                staticClassContext = classContext.staticClass;\r\n            }\r\n\r\n            if (method.visibility == Visibility.private && resolvedType != classContext && resolvedType != staticClassContext) {\r\n                this.pushError(\"Die Konstruktormethode ist private und daher hier nicht sichtbar.\", node.position);\r\n            }\r\n\r\n\r\n            let destType: Type = null;\r\n            for (let i = 0; i < parameterTypes.length; i++) {\r\n                if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                    destType = method.getParameterType(i);\r\n                    if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                        destType = (<ArrayType>destType).arrayOfType;\r\n                    }\r\n                }\r\n                let srcType = parameterTypes[i];\r\n                for (let st of parameterStatements[i]) {\r\n                    this.currentProgram.statements.push(st);\r\n                }\r\n                if (!this.ensureAutomaticCasting(srcType, destType, node.constructorOperands[i].position, node.constructorOperands[i])) {\r\n                    this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.constructorOperands[i].position);\r\n                }\r\n\r\n            }\r\n\r\n            let stackframeDelta = 0;\r\n            if (method.hasEllipsis()) {\r\n                let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n                stackframeDelta = - (ellipsisParameterCount - 1);\r\n                this.pushStatements({\r\n                    type: TokenType.makeEllipsisArray,\r\n                    position: node.constructorOperands[method.getParameterCount() - 1].position,\r\n                    parameterCount: ellipsisParameterCount,\r\n                    stepFinished: false,\r\n                    arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n                })\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: false,\r\n                stepFinished: resolvedType.getPostConstructorCallbacks() == null,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            }, true);\r\n\r\n            newStatement.subsequentConstructorCall = true;\r\n            newStatement.stepFinished = false;\r\n\r\n        }\r\n\r\n        if (resolvedType.getPostConstructorCallbacks() != null) {\r\n            this.pushStatements({\r\n                type: TokenType.processPostConstructorCallbacks,\r\n                position: node.position,\r\n                stepFinished: true\r\n            }, true);\r\n        }\r\n\r\n        return { type: resolvedType, isAssignable: false };\r\n\r\n    }\r\n\r\n    pushAttribute(node: SelectArributeNode): StackType {\r\n\r\n        if (node.object == null || node.identifier == null) return null;\r\n\r\n        let ot = this.processNode(node.object);\r\n        if (ot == null) {\r\n            this.pushError('Links vom Punkt steht kein Objekt.', node.position);\r\n            return null;\r\n        }\r\n\r\n        if (!(ot.type instanceof Klass || ot.type instanceof StaticClass || ot.type instanceof ArrayType)) {\r\n            if (ot.type == null) {\r\n                this.pushError('Der Ausdruck links vom Punkt hat kein Attribut ' + node.identifier + \".\", node.position);\r\n            } else {\r\n                this.pushError('Links vom Punkt steht ein Ausdruck vom Datentyp ' + ot.type.identifier + \". Dieser hat kein Attribut \" + node.identifier + \".\", node.position);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | ArrayType = ot.type;\r\n\r\n        if (objectType instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            let attributeWithError = objectType.getAttribute(node.identifier, visibilityUpTo);\r\n\r\n            let staticAttributeWithError = null;\r\n            if (attributeWithError.attribute == null) {\r\n                staticAttributeWithError = objectType.staticClass.getAttribute(node.identifier, visibilityUpTo);\r\n            }\r\n\r\n            if (attributeWithError.attribute == null && staticAttributeWithError.attribute == null) {\r\n                if (attributeWithError.foundButInvisible || !staticAttributeWithError.foundButInvisible) {\r\n                    this.pushError(attributeWithError.error, node.position);\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                }\r\n                return {\r\n                    type: objectType,\r\n                    isAssignable: false\r\n                }\r\n            } else {\r\n                let attribute: Attribute;\r\n                if (attributeWithError.attribute != null) {\r\n                    this.pushStatements({\r\n                        type: TokenType.pushAttribute,\r\n                        position: node.position,\r\n                        attributeIdentifier: node.identifier,\r\n                        useThisObject: false\r\n                    });\r\n                    attribute = attributeWithError.attribute;\r\n                } else {\r\n                    this.pushStatements([{\r\n                        type: TokenType.decreaseStackpointer,\r\n                        position: node.position,\r\n                        popCount: 1\r\n                    }, {\r\n                        type: TokenType.pushStaticAttribute,\r\n                        position: node.position,\r\n                        // klass: (<Klass>objectType).staticClass,\r\n                        klass: staticAttributeWithError.staticClass,\r\n                        attributeIdentifier: node.identifier\r\n                    }]);\r\n                    attribute = staticAttributeWithError.attribute;\r\n                }\r\n\r\n                this.pushUsagePosition(node.position, attribute);\r\n\r\n                return {\r\n                    type: attribute.type,\r\n                    isAssignable: !attribute.isFinal\r\n                }\r\n            }\r\n\r\n        } else if (objectType instanceof StaticClass) {\r\n            // Static class\r\n            if (objectType.Klass instanceof Enum) {\r\n                this.removeLastStatement(); // remove push static enum class to stack\r\n\r\n                let enumInfo = objectType.Klass.enumInfoList.find(ei => ei.identifier == node.identifier);\r\n\r\n                if (enumInfo == null) {\r\n                    this.pushError(\"Die enum-Klasse \" + objectType.identifier + \" hat keinen enum-Wert mit dem Bezeichner \" + node.identifier, node.position);\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushEnumValue,\r\n                    position: node.position,\r\n                    enumClass: objectType.Klass,\r\n                    valueIdentifier: node.identifier\r\n                });\r\n\r\n                return {\r\n                    type: objectType.Klass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n                let staticAttributeWithError = objectType.getAttribute(node.identifier, upToVisibility);\r\n                if (staticAttributeWithError.attribute != null) {\r\n                    // if (staticAttributeWithError.attribute.updateValue != undefined) {\r\n                    //     this.removeLastStatement();\r\n                    //     this.pushStatements({\r\n                    //         type: TokenType.pushStaticAttributeIntrinsic,\r\n                    //         position: node.position,\r\n                    //         attribute: staticAttributeWithError.attribute\r\n                    //     });\r\n                    // } else \r\n                    {\r\n                        this.removeLastStatement();\r\n                        this.pushStatements({\r\n                            type: TokenType.pushStaticAttribute,\r\n                            position: node.position,\r\n                            attributeIdentifier: node.identifier,\r\n                            klass: staticAttributeWithError.staticClass\r\n                        });\r\n                        this.pushUsagePosition(node.position, staticAttributeWithError.attribute);\r\n\r\n                    }\r\n                    return {\r\n                        type: staticAttributeWithError.attribute.type,\r\n                        isAssignable: !staticAttributeWithError.attribute.isFinal\r\n                    }\r\n                } else {\r\n                    this.pushError(staticAttributeWithError.error, node.position);\r\n                    return {\r\n                        type: objectType,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (node.identifier != \"length\") {\r\n                this.pushError('Der Wert vom Datentyp ' + ot.type.identifier + \" hat kein Attribut \" + node.identifier, node.position);\r\n                return null;\r\n            }\r\n\r\n            this.pushStatements({\r\n                type: TokenType.pushArrayLength,\r\n                position: node.position\r\n            });\r\n\r\n            let element: Attribute = new Attribute(\"length\", intPrimitiveType, null, true, Visibility.public, true, \"Länge des Arrays\");\r\n\r\n            this.module.addIdentifierPosition(node.position, element);\r\n\r\n            return {\r\n                type: intPrimitiveType,\r\n                isAssignable: false\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    pushThisOrSuper(node: ThisNode | SuperNode, isSuper: boolean): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (isSuper && classContext != null) {\r\n            classContext = classContext.baseClass;\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null) {\r\n            this.pushError(\"Das Objekt \" + (isSuper ? \"super\" : \"this\") + \" existiert nur innerhalb einer Methodendeklaration.\", node.position);\r\n            return null;\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: 0\r\n            })\r\n\r\n            this.pushTypePosition(node.position, classContext);\r\n            return { type: classContext, isAssignable: false, isSuper: isSuper };\r\n        }\r\n\r\n    }\r\n\r\n    superconstructorCall(node: SuperconstructorCallNode): StackType {\r\n\r\n        let classContext = this.currentSymbolTable.classContext;\r\n\r\n        if (classContext?.baseClass == null || classContext.baseClass.identifier == \"Object\") {\r\n            this.pushError(\"Die Klasse ist nur Kindklasse der Klasse Object, daher ist der Aufruf des Superkonstruktors nicht möglich.\", node.position);\r\n        }\r\n\r\n        let methodContext = this.currentSymbolTable.method;\r\n\r\n        if (classContext == null || methodContext == null || !methodContext.isConstructor) {\r\n            this.pushError(\"Ein Aufruf des Superkonstructors ist nur innerhalb des Konstruktors einer Klasse möglich.\", node.position);\r\n            return null;\r\n        }\r\n\r\n        let superclassType: Klass = <Klass>classContext.baseClass;\r\n        if (superclassType instanceof StaticClass) {\r\n            this.pushError(\"Statische Methoden haben keine super-Methoden.\", node.position);\r\n            return { type: null, isAssignable: false };\r\n        }\r\n        if (superclassType == null) superclassType = <Klass>this.moduleStore.getType(\"Object\").type;\r\n\r\n        // Push this-object to stack:\r\n        this.pushStatements({\r\n            type: TokenType.pushLocalVariableToStack,\r\n            position: node.position,\r\n            stackposOfVariable: 0\r\n        });\r\n\r\n        let parameterTypes: Type[] = [];\r\n\r\n        if (node.operands != null) {\r\n            let errorInOperands: boolean = false;\r\n            for (let p of node.operands) {\r\n                let pt = this.processNode(p);\r\n                if (pt != null) {\r\n                    parameterTypes.push(pt.type);\r\n                } else {\r\n                    errorInOperands = true;\r\n                }\r\n            }\r\n            if (errorInOperands) {\r\n                return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n            }\r\n        }\r\n\r\n        let methods = superclassType.getConstructor(parameterTypes, Visibility.protected);\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, superclassType.getMethods(Visibility.protected, superclassType.identifier),\r\n            node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        this.pushStatements({\r\n            type: TokenType.callMethod,\r\n            method: method,\r\n            isSuperCall: true,\r\n            position: node.position,\r\n            stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n        });\r\n        // Pabst, 21.10.2020:\r\n        // super method is constructor => returns nothing even iv method.getReturnType() is class object\r\n        // return { type: method.getReturnType(), isAssignable: false };\r\n        return { type: null, isAssignable: false };\r\n\r\n    }\r\n\r\n    incrementDecrementBeforeOrAfter(node: IncrementDecrementNode): StackType {\r\n        let type = this.processNode(node.operand);\r\n\r\n        if (type == null) return;\r\n\r\n        if (!type.isAssignable) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Variablen angewendet werden, nicht auf konstante Werte oder Rückgabewerte von Methoden.\", node.position);\r\n            return type;\r\n        }\r\n\r\n        if (!type.type.canCastTo(floatPrimitiveType)) {\r\n            this.pushError(\"Die Operatoren ++ und -- können nur auf Zahlen angewendet werden, nicht auf Werte des Datentyps \" + type.type.identifier, node.position);\r\n            return type;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: node.type,\r\n            position: node.position,\r\n            incrementDecrementBy: node.operator == TokenType.doubleMinus ? - 1 : 1\r\n\r\n        });\r\n\r\n        return type;\r\n\r\n    }\r\n\r\n    selectArrayElement(node: SelectArrayElementNode): StackType {\r\n\r\n        let arrayType = this.processNode(node.object); // push array-object \r\n        let indexType = this.processNode(node.index); // push index\r\n\r\n        if (arrayType == null || indexType == null) return;\r\n\r\n        if (!(arrayType.type instanceof ArrayType)) {\r\n            this.pushError(\"Der Typ der Variablen ist kein Array, daher ist [] nicht zulässig. \", node.object.position);\r\n            return null;\r\n        }\r\n\r\n        this.module.addIdentifierPosition({\r\n            line: node.position.line,\r\n            column: node.position.column + node.position.length,\r\n            length: 0  // Module.getTypeAtPosition needs length == 0 here to know that this type-position is not in static context for code completion\r\n        }, arrayType.type.arrayOfType);\r\n\r\n        if (!this.ensureAutomaticCasting(indexType.type, intPrimitiveType)) {\r\n            this.pushError(\"Als Index eines Arrays wird ein ganzzahliger Wert erwartet. Gefunden wurde ein Wert vom Typ \" + indexType.type.identifier + \".\", node.index.position);\r\n            return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n        }\r\n\r\n\r\n        this.pushStatements({\r\n            type: TokenType.selectArrayElement,\r\n            position: node.position\r\n        })\r\n\r\n        return { type: (<ArrayType>arrayType.type).arrayOfType, isAssignable: arrayType.isAssignable };\r\n\r\n    }\r\n\r\n    pushTypePosition(position: TextPosition, type: Type) {\r\n        if (position == null) return;\r\n        if (position.length > 0) {\r\n            position = {\r\n                line: position.line,\r\n                column: position.column + position.length,\r\n                length: 0\r\n            }\r\n        }\r\n        this.module.addIdentifierPosition(position, type);\r\n    }\r\n\r\n\r\n\r\n    pushUsagePosition(position: TextPosition, element: Klass | Interface | Method | Attribute | Variable) {\r\n\r\n        this.module.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(this.module);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(this.module, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveIdentifier(node: IdentifierNode): StackType {\r\n\r\n        if (node.identifier == null) return null;\r\n\r\n        let variable = this.findLocalVariable(node.identifier);\r\n        if (variable != null) {\r\n            this.pushStatements({\r\n                type: TokenType.pushLocalVariableToStack,\r\n                position: node.position,\r\n                stackposOfVariable: variable.stackPos\r\n            })\r\n\r\n            this.pushUsagePosition(node.position, variable);\r\n            node.variable = variable;\r\n\r\n            return { type: variable.type, isAssignable: !variable.isFinal };\r\n        }\r\n\r\n        if (this.heap != null) {\r\n            let variable = this.heap[node.identifier];\r\n            if (variable != null) {\r\n                this.pushStatements({\r\n                    type: TokenType.pushFromHeapToStack,\r\n                    position: node.position,\r\n                    identifier: node.identifier\r\n                })\r\n\r\n                this.pushUsagePosition(node.position, variable);\r\n                node.variable = variable;\r\n\r\n\r\n                return { type: variable.type, isAssignable: !variable.isFinal };\r\n            }\r\n\r\n        }\r\n\r\n        let attribute = this.findAttribute(node.identifier, node.position);\r\n        if (attribute != null) {\r\n\r\n            if (attribute.isStatic) {\r\n                let cc = this.currentSymbolTable.classContext;\r\n                let scc = (cc instanceof StaticClass) ? cc : cc.staticClass;\r\n\r\n                while(scc != null && scc.attributes.indexOf(attribute) == -1){\r\n                    scc = scc.baseClass;\r\n                }\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticAttribute,\r\n                    position: node.position,\r\n                    klass: scc,\r\n                    attributeIdentifier: attribute.identifier\r\n                });\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushAttribute,\r\n                    position: node.position,\r\n                    attributeIdentifier: attribute.identifier,\r\n                    useThisObject: true\r\n                });\r\n            }\r\n\r\n\r\n            this.pushUsagePosition(node.position, attribute);\r\n\r\n            return { type: attribute.type, isAssignable: !attribute.isFinal };\r\n        }\r\n\r\n        let klassModule = this.moduleStore.getType(node.identifier);\r\n        if (klassModule != null) {\r\n            let klass = klassModule.type;\r\n            if (!(klass instanceof Klass || klass instanceof Interface)) {\r\n                this.pushError(\"Der Typ \" + klass.identifier + \" hat keine statischen Attribute/Methoden.\", node.position);\r\n            } else {\r\n                this.pushStatements({\r\n                    type: TokenType.pushStaticClassObject,\r\n                    position: node.position,\r\n                    klass: klass\r\n                });\r\n\r\n                this.pushUsagePosition(node.position, klass);\r\n\r\n                return {\r\n                    type: klass instanceof Klass ? klass.staticClass : klass,\r\n                    isAssignable: false\r\n                }\r\n            }\r\n\r\n            return {\r\n                type: klass,\r\n                isAssignable: false\r\n            }\r\n        }\r\n\r\n        this.pushError(\"Der Bezeichner \" + node.identifier + \" ist hier nicht bekannt.\", node.position);\r\n\r\n    }\r\n\r\n    findLocalVariable(identifier: string): Variable {\r\n        let st = this.currentSymbolTable;\r\n\r\n        while (st != null) {\r\n\r\n            let variable = st.variableMap.get(identifier);\r\n\r\n            if (variable != null && variable.stackPos != null) {\r\n                return variable;\r\n            }\r\n\r\n            st = st.parent;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAttribute(identifier: string, position: TextPosition): Attribute {\r\n        let classContext = this.currentSymbolTable.classContext;\r\n        if (classContext == null) {\r\n            return null;\r\n        }\r\n\r\n        let attribute = classContext.getAttribute(identifier, Visibility.private);\r\n        if (attribute.attribute != null) return attribute.attribute;\r\n\r\n        if (classContext instanceof Klass) {\r\n            let staticAttribute = classContext.staticClass.getAttribute(identifier, Visibility.private);\r\n            if (staticAttribute.attribute != null) return staticAttribute.attribute;\r\n        }\r\n\r\n        // this.pushError(attribute.error, position);\r\n\r\n        return null;\r\n    }\r\n\r\n    callMethod(node: MethodcallNode): StackType {\r\n\r\n        let objectNode: StackType = null;\r\n\r\n        if (node.object == null) {\r\n\r\n            // call method of this-class?\r\n\r\n            let thisClass = this.currentSymbolTable.classContext;\r\n            if (thisClass != null) {\r\n\r\n                this.pushStatements({\r\n                    type: TokenType.pushLocalVariableToStack,\r\n                    position: node.position,\r\n                    stackposOfVariable: 0\r\n                });\r\n\r\n                objectNode = {\r\n                    type: thisClass,\r\n                    isAssignable: false\r\n                }\r\n\r\n            } else {\r\n                this.pushError(\"Ein Methodenaufruf (hier: \" + node.identifier +\r\n                    \") ohne Punktschreibweise ist nur innerhalb anderer Methoden möglich.\", node.position);\r\n                return null;\r\n            }\r\n\r\n        } else {\r\n            objectNode = this.processNode(node.object);\r\n        }\r\n\r\n        if (objectNode == null) return null;\r\n\r\n        if (!(\r\n            (objectNode.type instanceof Klass) || (objectNode.type instanceof StaticClass) ||\r\n            (objectNode.type instanceof Interface) || (objectNode.type instanceof Enum))) {\r\n\r\n            if (objectNode.type == null) {\r\n                this.pushError(\"Werte dieses Datentyps besitzen keine Methoden.\", node.position);\r\n            } else {\r\n                this.pushError('Werte des Datentyps ' + objectNode.type.identifier + \" besitzen keine Methoden.\", node.position);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        let objectType: Klass | StaticClass | Interface = <any>objectNode.type;\r\n\r\n        let posBeforeParameterEvaluation = this.currentProgram.statements.length;\r\n\r\n        let parameterTypes: Type[] = [];\r\n        let parameterStatements: Statement[][] = [];\r\n\r\n        let allStatements = this.currentProgram.statements;\r\n        if (node.operands != null) {\r\n            for (let p of node.operands) {\r\n                let programPointer = allStatements.length;\r\n                let typeNode = this.processNode(p);\r\n                parameterStatements.push(allStatements.splice(programPointer, allStatements.length - programPointer));\r\n                if (typeNode == null) {\r\n                    parameterTypes.push(voidPrimitiveType);\r\n                } else {\r\n                    parameterTypes.push(typeNode.type);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let methods: { error: string, methodList: Method[] };\r\n        if (objectType instanceof Interface) {\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false);\r\n        } else {\r\n            let upToVisibility = getVisibilityUpTo(objectType, this.currentSymbolTable.classContext);\r\n\r\n            methods = objectType.getMethodsThatFitWithCasting(node.identifier,\r\n                parameterTypes, false, upToVisibility);\r\n\r\n        }\r\n\r\n        this.module.pushMethodCallPosition(node.position, node.commaPositions, objectType.getMethods(Visibility.private, node.identifier), node.rightBracketPosition);\r\n\r\n        if (methods.error != null) {\r\n            this.pushError(methods.error, node.position);\r\n            return { type: stringPrimitiveType, isAssignable: false }; // try to continue...\r\n        }\r\n\r\n        let method = methods.methodList[0];\r\n\r\n        this.pushUsagePosition(node.position, method);\r\n\r\n        // You CAN call a static method on a object..., so:\r\n        if (method.isStatic && objectType instanceof Klass && objectType.identifier != \"PrintStream\") {\r\n            this.pushError(\"Es ist kein guter Programmierstil, statische Methoden einer Klasse mithilfe eines Objekts aufzurufen. Besser wäre hier \" + objectType.identifier + \".\" + method.identifier + \"(...).\", node.position, \"info\");\r\n            this.insertStatements(posBeforeParameterEvaluation, [{\r\n                type: TokenType.decreaseStackpointer,\r\n                position: node.position,\r\n                popCount: 1\r\n            },\r\n            {\r\n                type: TokenType.pushStaticClassObject,\r\n                position: node.position,\r\n                klass: objectType\r\n            }\r\n            ]);\r\n        }\r\n\r\n        let destType: Type = null;\r\n        for (let i = 0; i < parameterTypes.length; i++) {\r\n            if (i < method.getParameterCount()) {  // possible ellipsis!\r\n                destType = method.getParameterType(i);\r\n                if (i == method.getParameterCount() - 1 && method.hasEllipsis()) {\r\n                    destType = (<ArrayType>destType).arrayOfType;\r\n                }\r\n            }\r\n            let srcType = parameterTypes[i];\r\n            for (let st of parameterStatements[i]) {\r\n                this.currentProgram.statements.push(st);\r\n            }\r\n            if (!this.ensureAutomaticCasting(srcType, destType, node.operands[i].position, node.operands[i])) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + srcType.identifier + \" kann nicht als Parameter (Datentyp \" + destType.identifier + \") verwendet werden.\", node.operands[i].position);\r\n            }\r\n\r\n            // if (srcType instanceof PrimitiveType && destType instanceof PrimitiveType) {\r\n            //     if (srcType.getCastInformation(destType).needsStatement) {\r\n            //         this.pushStatements({\r\n            //             type: TokenType.castValue,\r\n            //             position: null,\r\n            //             newType: destType,\r\n            //             stackPosRelative: -parameterTypes.length + 1 + i\r\n            //         });\r\n            //     }\r\n            // }\r\n\r\n        }\r\n\r\n        let stackframeDelta = 0;\r\n        if (method.hasEllipsis()) {\r\n            let ellipsisParameterCount = parameterTypes.length - method.getParameterCount() + 1; // last parameter and subsequent ones\r\n            stackframeDelta = - (ellipsisParameterCount - 1);\r\n            this.pushStatements({\r\n                type: TokenType.makeEllipsisArray,\r\n                position: node.operands[method.getParameterCount() - 1].position,\r\n                parameterCount: ellipsisParameterCount,\r\n                stepFinished: false,\r\n                arrayType: method.getParameter(method.getParameterCount() - 1).type\r\n            })\r\n        }\r\n\r\n        if (method.visibility != Visibility.public) {\r\n\r\n            let visible = true;\r\n            let classContext = this.currentSymbolTable.classContext;\r\n            if (classContext == null) {\r\n                visible = false;\r\n            } else {\r\n                if (classContext != objectType &&\r\n                    !(classContext instanceof Klass && classContext.implements.indexOf(<Interface>objectType) > 0)) {\r\n                    if (method.visibility == Visibility.private) {\r\n                        visible = false;\r\n                    } else {\r\n                        visible = classContext.hasAncestorOrIs(<Klass | StaticClass>objectType);\r\n                    }\r\n                }\r\n            }\r\n            if (!visible) {\r\n                this.pushError(\"Die Methode \" + method.identifier + \" ist an dieser Stelle des Programms nicht sichtbar.\", node.position);\r\n            }\r\n        }\r\n\r\n        if (method.isStatic && objectNode.type != null &&\r\n            (objectNode.type instanceof StaticClass) &&\r\n            (objectNode.type.Klass instanceof InputClass)) {\r\n\r\n            this.pushStatements({\r\n                type: TokenType.callInputMethod,\r\n                method: method,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1) // this-object followed by parameters\r\n            });\r\n\r\n        } else {\r\n            this.pushStatements({\r\n                type: TokenType.callMethod,\r\n                method: method,\r\n                position: node.position,\r\n                isSuperCall: objectNode.isSuper == null ? false : objectNode.isSuper,\r\n                stepFinished: true,\r\n                stackframeBegin: -(parameterTypes.length + 1 + stackframeDelta) // this-object followed by parameters\r\n            });\r\n        }\r\n\r\n\r\n\r\n        this.pushTypePosition(node.rightBracketPosition, method.getReturnType());\r\n\r\n        return { type: method.getReturnType(), isAssignable: false };\r\n\r\n    }\r\n\r\n    pushConstant(node: ConstantNode): StackType {\r\n\r\n        let type: Type;\r\n\r\n        switch (node.constantType) {\r\n            case TokenType.integerConstant:\r\n                type = intPrimitiveType;\r\n                break;\r\n            case TokenType.booleanConstant:\r\n                type = booleanPrimitiveType;\r\n                break;\r\n            case TokenType.floatingPointConstant:\r\n                type = floatPrimitiveType;\r\n                break;\r\n            case TokenType.stringConstant:\r\n                type = stringPrimitiveType;\r\n                this.pushTypePosition(node.position, type);\r\n                break;\r\n            case TokenType.charConstant:\r\n                type = charPrimitiveType;\r\n                break;\r\n            case TokenType.keywordNull:\r\n                type = nullType\r\n                break;\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.pushConstant,\r\n            dataType: type,\r\n            position: node.position,\r\n            value: node.constant\r\n        })\r\n\r\n        return { type: type, isAssignable: false };\r\n\r\n    }\r\n\r\n    processBinaryOp(node: BinaryOpNode): StackType {\r\n\r\n        let isAssignment = CodeGenerator.assignmentOperators.indexOf(node.operator) >= 0;\r\n\r\n        if (node.operator == TokenType.ternaryOperator) {\r\n            return this.processTernaryOperator(node);\r\n        }\r\n\r\n        let leftType = this.processNode(node.firstOperand, isAssignment);\r\n\r\n        let programPosAfterLeftOpoerand = this.currentProgram.statements.length;\r\n\r\n        let lazyEvaluationDest = null;\r\n        if (node.operator == TokenType.and) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfFalseAndLeaveOnStack, node.firstOperand.position, this);\r\n        } else if (node.operator == TokenType.or) {\r\n            lazyEvaluationDest = this.currentProgram.labelManager.insertJumpNode(TokenType.jumpIfTrueAndLeaveOnStack, node.firstOperand.position, this);\r\n        }\r\n\r\n        let rightType = this.processNode(node.secondOperand);\r\n\r\n        if (leftType == null || leftType.type == null || rightType == null || rightType.type == null) return null;\r\n\r\n        if (isAssignment) {\r\n            if (!this.ensureAutomaticCasting(rightType.type, leftType.type, node.position, node.firstOperand)) {\r\n                this.pushError(\"Der Wert vom Datentyp \" + rightType.type.identifier + \" auf der rechten Seite kann der Variablen auf der linken Seite (Datentyp \" + leftType.type.identifier + \") nicht zugewiesen werden.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n            if (!leftType.isAssignable) {\r\n                this.pushError(\"Dem Term/der Variablen auf der linken Seite des Zuweisungsoperators (=) kann kein Wert zugewiesen werden.\", node.position);\r\n            }\r\n\r\n            let statement: AssignmentStatement = {\r\n                //@ts-ignore\r\n                type: node.operator,\r\n                position: node.position,\r\n                stepFinished: true,\r\n                leaveValueOnStack: true\r\n            };\r\n\r\n            this.pushStatements(statement);\r\n\r\n\r\n            return leftType;\r\n\r\n        } else {\r\n\r\n            if (node.firstOperand.type == TokenType.identifier && node.firstOperand.variable != null) {\r\n                let v = node.firstOperand.variable;\r\n                if (v.initialized != null && !v.initialized) {\r\n                    v.usedBeforeInitialization = true;\r\n                    this.pushError(\"Die Variable \" + v.identifier + \" wird hier benutzt bevor sie initialisiert wurde.\", node.position, \"info\");\r\n                }\r\n            }\r\n\r\n            let resultType = leftType.type.getResultType(node.operator, rightType.type);\r\n\r\n            let unboxableLeft = leftType.type[\"unboxableAs\"];\r\n            let unboxableRight = rightType.type[\"unboxableAs\"];\r\n\r\n            if (resultType == null && (unboxableLeft != null || unboxableRight != null)) {\r\n                let leftTypes: Type[] = unboxableLeft == null ? [leftType.type] : unboxableLeft;\r\n                let rightTypes: Type[] = unboxableRight == null ? [rightType.type] : unboxableRight;\r\n\r\n                for (let lt of leftTypes) {\r\n                    for (let rt of rightTypes) {\r\n                        resultType = lt.getResultType(node.operator, rt);\r\n                        if (resultType != null) {\r\n                            leftType.type = lt;\r\n                            rightType.type = rt;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (resultType != null) break;\r\n                }\r\n            }\r\n\r\n            // Situation Object + String: insert toString()-Method\r\n            if (resultType == null && node.operator == TokenType.plus) {\r\n                if (leftType.type instanceof Klass && rightType.type == stringPrimitiveType) {\r\n                    this.insertStatements(programPosAfterLeftOpoerand, this.getToStringStatement(leftType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                } else if (rightType.type instanceof Klass && leftType.type == stringPrimitiveType) {\r\n                    this.pushStatements(this.getToStringStatement(rightType.type, node.firstOperand.position));\r\n                    resultType = stringPrimitiveType;\r\n                }\r\n            }\r\n\r\n\r\n            if (node.operator in [TokenType.and, TokenType.or]) {\r\n                this.checkIfAssignmentInstedOfEqual(node.firstOperand);\r\n                this.checkIfAssignmentInstedOfEqual(node.secondOperand);\r\n            }\r\n\r\n            if (resultType == null) {\r\n                this.pushError(\"Die Operation \" + TokenTypeReadable[node.operator] + \" ist für die Operanden der Typen \" + leftType.type.identifier + \" und \" + rightType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n\r\n            this.pushStatements({\r\n                type: TokenType.binaryOp,\r\n                leftType: leftType.type,\r\n                operator: node.operator,\r\n                position: node.position\r\n            });\r\n\r\n            if (lazyEvaluationDest != null) {\r\n                this.currentProgram.labelManager.markJumpDestination(1, lazyEvaluationDest);\r\n            }\r\n\r\n            return { type: resultType, isAssignable: false };\r\n        }\r\n\r\n\r\n    }\r\n\r\n    processTernaryOperator(node: BinaryOpNode): StackType {\r\n\r\n        let leftType = this.processNode(node.firstOperand);\r\n\r\n        if (leftType == null) return;\r\n\r\n        if (this.ensureAutomaticCasting(leftType.type, booleanPrimitiveType, null, node.firstOperand)) {\r\n\r\n            let secondOperand = node.secondOperand;\r\n            if (secondOperand != null) {\r\n                if (secondOperand.type != TokenType.binaryOp || secondOperand.operator != TokenType.colon) {\r\n                    this.pushError(\"Auf den Fragezeichenoperator müssen - mit Doppelpunkt getrennt - zwei Alternativterme folgen.\", node.position);\r\n                } else {\r\n                    let lm = this.currentProgram.labelManager;\r\n                    let variantFalseLabel = lm.insertJumpNode(TokenType.jumpIfFalse, node.position, this);\r\n                    let firstType = this.processNode(secondOperand.firstOperand);\r\n                    let endLabel = lm.insertJumpNode(TokenType.jumpAlways, secondOperand.firstOperand.position, this);\r\n                    lm.markJumpDestination(1, variantFalseLabel);\r\n                    let secondType = this.processNode(secondOperand.secondOperand);\r\n                    lm.markJumpDestination(1, endLabel);\r\n\r\n                    let type = firstType.type;\r\n                    if (type != secondType.type && type.canCastTo(secondType.type)) {\r\n                        type = secondType.type;\r\n                    }\r\n\r\n                    return {\r\n                        type: type,\r\n                        isAssignable: false\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    processUnaryOp(node: UnaryOpNode): StackType {\r\n        let leftType = this.processNode(node.operand);\r\n\r\n        if (leftType == null || leftType.type == null) return;\r\n\r\n        if (node.operator == TokenType.minus) {\r\n            if (!leftType.type.canCastTo(floatPrimitiveType)) {\r\n                this.pushError(\"Der Operator - ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        if (node.operator == TokenType.not) {\r\n            if (!(leftType.type == booleanPrimitiveType)) {\r\n                this.checkIfAssignmentInstedOfEqual(node.operand);\r\n                this.pushError(\"Der Operator ! ist für den Typ \" + leftType.type.identifier + \" nicht definiert.\", node.position);\r\n                return leftType;\r\n            }\r\n\r\n        }\r\n\r\n        this.pushStatements({\r\n            type: TokenType.unaryOp,\r\n            operator: node.operator,\r\n            position: node.position\r\n        });\r\n\r\n        return leftType;\r\n    }\r\n\r\n}","import { Error, QuickFix, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenList, TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Visibility, Klass } from \"../types/Class.js\";\r\nimport { ArrayInitializationNode, ASTNode, AttributeDeclarationNode, MethodDeclarationNode, NewArrayNode, ParameterNode, TermNode, TypeNode, EnumValueNode, SwitchNode, SwitchCaseNode, ConstantNode, BracketsNode, ScopeNode, TypeParameterNode, LocalVariableDeclarationNode } from \"./AST.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { stringPrimitiveType, intPrimitiveType, charPrimitiveType, TokenTypeToDataTypeMap } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { PrimitiveType } from \"../types/Types.js\";\r\n\r\ntype ASTNodes = ASTNode[];\r\n\r\nexport class Parser {\r\n\r\n    static assignmentOperators = [TokenType.assignment, TokenType.plusAssignment, TokenType.minusAssignment, TokenType.multiplicationAssignment, TokenType.divisionAssignment, TokenType.moduloAssignment];\r\n\r\n    static operatorPrecedence: TokenType[][] = [Parser.assignmentOperators,\r\n    [TokenType.ternaryOperator], [TokenType.colon],\r\n    [TokenType.or], [TokenType.and],\r\n    [TokenType.keywordInstanceof, TokenType.lower, TokenType.lowerOrEqual, TokenType.greater, TokenType.greaterOrEqual, TokenType.equal, TokenType.notEqual],\r\n    [TokenType.plus, TokenType.minus], [TokenType.multiplication, TokenType.division, TokenType.modulo]\r\n    ];\r\n\r\n    static TokenTypeToVisibilityMap = {\r\n        [TokenType.keywordPublic]: Visibility.public,\r\n        [TokenType.keywordPrivate]: Visibility.private,\r\n        [TokenType.keywordProtected]: Visibility.protected\r\n    };\r\n\r\n    static forwardToInsideClass = [TokenType.keywordPublic, TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordVoid,\r\n    TokenType.identifier, TokenType.rightCurlyBracket, TokenType.keywordStatic, TokenType.keywordAbstract,\r\n    TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n\r\n    module: Module;\r\n\r\n    pos: number;\r\n    tokenList: TokenList;\r\n\r\n    errorList: Error[];\r\n    typeNodes: TypeNode[];\r\n\r\n    lookahead = 4;\r\n    ct: Token[];\r\n    lastToken: Token;\r\n    cct: Token;\r\n    tt: TokenType;\r\n    position: TextPosition;\r\n    lastComment: Token;\r\n\r\n    endToken: Token = {\r\n        position: { line: 0, column: 0, length: 1 },\r\n        tt: TokenType.endofSourcecode,\r\n        value: \"das Ende des Programms\"\r\n    };\r\n\r\n\r\n    constructor(private isInConsoleMode: boolean){\r\n\r\n    }\r\n\r\n    parse(m: Module) {\r\n\r\n        this.module = m;\r\n\r\n        this.tokenList = m.tokenList;\r\n        this.errorList = [];\r\n\r\n        if (this.tokenList.length == 0) {\r\n            this.module.mainProgramAst = [];\r\n            this.module.classDefinitionsAST = [];\r\n            this.module.typeNodes = [];\r\n            this.module.errors[1] = this.errorList;\r\n            return;\r\n        }\r\n\r\n        this.pos = 0;\r\n        this.initializeLookahead();\r\n\r\n        this.typeNodes = [];\r\n\r\n        let lastToken = this.tokenList[this.tokenList.length - 1];\r\n        this.endToken.position = { line: lastToken.position.line, column: lastToken.position.column + lastToken.position.length, length: 1 };\r\n\r\n        let astNodes = this.parseMain();\r\n        this.module.mainProgramAst = astNodes.mainProgramAST;\r\n        this.module.classDefinitionsAST = astNodes.classDefinitionAST;\r\n        this.module.mainProgramEnd = astNodes.mainProgramEnd;\r\n        this.module.typeNodes = this.typeNodes;\r\n\r\n        this.module.errors[1] = this.errorList;\r\n\r\n    }\r\n\r\n    initializeLookahead() {\r\n\r\n        this.ct = [];\r\n\r\n        for (let i = 0; i < this.lookahead; i++) {\r\n\r\n            let token: Token = this.endToken;\r\n\r\n            while (true) {\r\n\r\n                if (this.pos >= this.tokenList.length) break;\r\n\r\n                let token1 = this.tokenList[this.pos]\r\n                if(token1.tt == TokenType.comment){\r\n                    this.lastComment = token1;\r\n                } \r\n\r\n                if (token1.tt != TokenType.newline && token1.tt != TokenType.space && token1.tt != TokenType.comment) {\r\n                    token = token1;\r\n                    if(this.lastComment != null){\r\n                        token.commentBefore = this.lastComment;\r\n                        this.lastComment = null;\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                this.pos++;\r\n\r\n            }\r\n\r\n            this.ct.push(token);\r\n\r\n            if (i < this.lookahead - 1) {\r\n                this.pos++;\r\n            }\r\n\r\n        }\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    nextToken() {\r\n\r\n        let token: Token;\r\n        this.lastToken = this.cct;\r\n\r\n        while (true) {\r\n\r\n            this.pos++;\r\n\r\n            if (this.pos >= this.tokenList.length) {\r\n                token = this.endToken;\r\n                break;\r\n            }\r\n\r\n            token = this.tokenList[this.pos]\r\n            if(token.tt == TokenType.comment){\r\n                this.lastComment = token;\r\n            } \r\n\r\n            if (token.tt != TokenType.newline && token.tt != TokenType.space && token.tt != TokenType.comment) {\r\n                token.commentBefore = this.lastComment;\r\n                this.lastComment = null;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < this.lookahead - 1; i++) {\r\n            this.ct[i] = this.ct[i + 1];\r\n        }\r\n\r\n        this.ct[this.lookahead - 1] = token;\r\n\r\n        this.cct = this.ct[0];\r\n        this.tt = this.cct.tt;\r\n        this.position = this.cct.position;\r\n\r\n    }\r\n\r\n    pushError(text: string, errorLevel: ErrorLevel = \"error\", position?: TextPosition, quickFix?: QuickFix) {\r\n        if (position == null) position = Object.assign({}, this.position);\r\n        this.errorList.push({\r\n            text: text,\r\n            position: position,\r\n            quickFix: quickFix,\r\n            level: errorLevel\r\n        });\r\n    }\r\n\r\n    expect(tt: TokenType, skip: boolean = true, invokeSemicolonAngel: boolean = false): boolean {\r\n        if (this.tt != tt) {\r\n            if (tt == TokenType.semicolon && this.tt == TokenType.endofSourcecode) {\r\n                return true;\r\n            }\r\n\r\n            let position: TextPosition = this.cct.position;\r\n            if (tt == TokenType.semicolon && this.lastToken != null) {\r\n\r\n                if (this.lastToken.position.line < position.line) {\r\n                    position = {\r\n                        line: this.lastToken.position.line,\r\n                        column: this.lastToken.position.column + this.lastToken.position.length,\r\n                        length: 1\r\n                    }\r\n                }\r\n            }\r\n\r\n            let quickFix: QuickFix = null;\r\n            if (tt == TokenType.semicolon && this.lastToken.position.line < this.cct.position.line &&\r\n                !this.isOperatorOrDot(this.lastToken.tt) \r\n            ) {\r\n                quickFix = {\r\n                    title: 'Strichpunkt hier einfügen',\r\n                    editsProvider: (uri) => {\r\n                        return [{\r\n                            resource: uri,\r\n                            edit: {\r\n                                range: {\r\n                                    startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position.column,\r\n                                    message: \"\",\r\n                                    severity: monaco.MarkerSeverity.Error\r\n                                },\r\n                                text: \";\"\r\n                            }\r\n                        }\r\n                        ];\r\n                    }\r\n                }\r\n\r\n                if (invokeSemicolonAngel) {\r\n                    this.module.main.getSemicolonAngel().register(position, this.module);\r\n                }\r\n            }\r\n\r\n\r\n            this.pushError(\"Erwartet wird: \" + TokenTypeReadable[tt] + \" - Gefunden wurde: \" + TokenTypeReadable[this.tt], \"error\", position, quickFix);\r\n            return false;\r\n        }\r\n\r\n        if (skip) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return true;\r\n    }\r\n    isOperatorOrDot(tt: TokenType): boolean {\r\n        if (tt == TokenType.dot) return true;\r\n        for (let op of Parser.operatorPrecedence) {\r\n            for (let operator of op) {\r\n                if (tt == operator) return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    isEnd(): boolean {\r\n        return this.cct == this.endToken;\r\n    }\r\n\r\n    comesToken(token: TokenType | TokenType[]): boolean {\r\n\r\n        if (!Array.isArray(token)) {\r\n            return this.tt == token;\r\n        }\r\n\r\n        return token.indexOf(this.tt) >= 0;\r\n\r\n    }\r\n\r\n    getCurrentPosition(): TextPosition {\r\n        return Object.assign({}, this.position);\r\n    }\r\n\r\n    getEndOfCurrentToken(): TextPosition {\r\n\r\n        let position = this.getCurrentPosition();\r\n        position.column = position.column + this.position.length;\r\n        position.length = 0;\r\n\r\n        return position;\r\n    }\r\n\r\n    static ClassTokens: TokenType[] = [TokenType.keywordClass, TokenType.keywordEnum, TokenType.keywordInterface];\r\n    static VisibilityTokens: TokenType[] = [TokenType.keywordPrivate, TokenType.keywordProtected, TokenType.keywordPublic];\r\n    static BeforeClassDefinitionTokens: TokenType[] = Parser.ClassTokens.concat(Parser.VisibilityTokens).concat(TokenType.keywordAbstract).concat(Parser.ClassTokens);\r\n\r\n    parseMain(): { mainProgramAST: ASTNodes, mainProgramEnd: TextPosition, classDefinitionAST: ASTNodes } {\r\n\r\n        let mainProgram: ASTNodes = [];\r\n        let classDefinitions: ASTNodes = [];\r\n\r\n        let mainProgramEnd: TextPosition = {\r\n            column: 0,\r\n            line: 10000,\r\n            length: 1\r\n        }\r\n\r\n        while (!this.isEnd()) {\r\n\r\n            let oldPos = this.pos;\r\n\r\n            if (this.comesToken(Parser.BeforeClassDefinitionTokens)) {\r\n                let cd = this.parseClassDefinition();\r\n                if (cd != null) classDefinitions = classDefinitions.concat(cd);\r\n            } else {\r\n                let st = this.parseStatement();\r\n\r\n                if (st != null) {\r\n                    mainProgram = mainProgram.concat(st);\r\n                }\r\n                mainProgramEnd = this.getCurrentPosition();\r\n            }\r\n\r\n            // emergency-forward:\r\n            if (this.pos == oldPos) {\r\n                this.pos++;\r\n                this.initializeLookahead();\r\n            }\r\n\r\n        }\r\n\r\n        return {\r\n            mainProgramAST: mainProgram,\r\n            classDefinitionAST: classDefinitions,\r\n            mainProgramEnd: mainProgramEnd\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkIfStatementHasNoEffekt(st: ASTNode) {\r\n        \r\n        if(this.isInConsoleMode) return;\r\n\r\n        if ((st.type == TokenType.binaryOp && Parser.assignmentOperators.indexOf(st.operator) < 0)) {\r\n            let s = \"dieses Terms\";\r\n            switch (st.operator) {\r\n                case TokenType.plus: s = \"dieser Summe\"; break;\r\n                case TokenType.minus: s = \"dieser Differenz\"; break;\r\n                case TokenType.multiplication: s = \"dieses Produkts\"; break;\r\n                case TokenType.division: s = \"dieses Quotienten\"; break;\r\n            }\r\n            s += \" (Operator \" + TokenTypeReadable[st.operator] + \")\"\r\n            this.pushError(`Der Wert ${s} wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?`,\r\n                \"info\", st.position);\r\n        } else if (\r\n            [TokenType.unaryOp, TokenType.pushConstant,\r\n            TokenType.identifier, TokenType.selectArrayElement].indexOf(st.type) >= 0) {\r\n            this.pushError(\"Der Wert dieses Terms wird zwar berechnet, aber danach verworfen. Möchtest Du ihn vielleicht einer Variablen zuweisen?\",\r\n                \"info\", st.position);\r\n        }\r\n    }\r\n\r\n    parseStatement(expectSemicolon: boolean = true): ASTNode[] {\r\n\r\n        let retStatements: ASTNode[] = null;\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n            case TokenType.identifier:\r\n            case TokenType.keywordThis:\r\n            case TokenType.keywordSuper:\r\n            case TokenType.keywordFinal:\r\n            case TokenType.charConstant:\r\n            case TokenType.integerConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.keywordNew:\r\n                let ret = this.parseVariableDeclarationOrTerm();\r\n                if (expectSemicolon) this.expect(TokenType.semicolon, true, true);\r\n                retStatements = ret;\r\n                break;\r\n            case TokenType.leftCurlyBracket:\r\n                let statements: ASTNode[] = [];\r\n                let positionFrom = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && Parser.BeforeClassDefinitionTokens.indexOf(this.tt) < 0) {\r\n                    statements = statements.concat(this.parseStatement());\r\n                }\r\n                let positionTo = this.getCurrentPosition();\r\n                positionTo.column = positionTo.column + positionTo.length;\r\n                positionTo.length = 0;\r\n                this.expect(TokenType.rightCurlyBracket);\r\n\r\n                retStatements = [{\r\n                    type: TokenType.scopeNode,\r\n                    position: positionFrom,\r\n                    positionTo: positionTo,\r\n                    statements: statements\r\n                }];\r\n                break;\r\n\r\n            case TokenType.keywordWhile:\r\n                retStatements = this.parseWhile();\r\n                break;\r\n            case TokenType.keywordFor:\r\n                retStatements = this.parseFor();\r\n                break;\r\n            case TokenType.keywordDo:\r\n                retStatements = this.parseDo();\r\n                break;\r\n            case TokenType.keywordIf:\r\n                retStatements = this.parseIf();\r\n                break;\r\n            case TokenType.keywordReturn:\r\n                retStatements = this.parseReturn();\r\n                break;\r\n            case TokenType.keywordPrint:\r\n            case TokenType.keywordPrintln:\r\n                retStatements = this.parsePrint();\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                retStatements = this.parseSwitch();\r\n                break;\r\n            case TokenType.keywordBreak:\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordBreak,\r\n                    position: position\r\n                }];\r\n                break;\r\n            case TokenType.keywordContinue:\r\n                let position1 = this.getCurrentPosition();\r\n                this.nextToken();\r\n                retStatements = [{\r\n                    type: TokenType.keywordContinue,\r\n                    position: position1\r\n                }];\r\n                break;\r\n            case TokenType.semicolon:\r\n                break;\r\n            default:\r\n                let s = TokenTypeReadable[this.tt];\r\n                if (s != this.cct.value) s += \"(\" + this.cct.value + \")\";\r\n                s += \" wird hier nicht erwartet.\";\r\n                this.pushError(s);\r\n\r\n                let dontSkip = Parser.BeforeClassDefinitionTokens.indexOf(this.tt) >= 0;\r\n                if (!dontSkip) {\r\n                    this.nextToken();\r\n                }\r\n                break;\r\n        }\r\n\r\n        if(retStatements == null){\r\n            // skip additional semicolons if present...\r\n            while (this.tt == TokenType.semicolon && expectSemicolon) {\r\n                this.nextToken();\r\n            }\r\n        }\r\n\r\n        if(retStatements != null && retStatements.length > 0){\r\n            let retStmt = retStatements[retStatements.length - 1];\r\n            if(retStmt != null){\r\n                this.checkIfStatementHasNoEffekt(retStatements[retStatements.length - 1]);\r\n            } else {\r\n                retStatements = null;\r\n            }\r\n        }\r\n\r\n        return retStatements;\r\n\r\n    }\r\n\r\n    parseReturn(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        let term: TermNode;\r\n\r\n        if (!(this.tt == TokenType.semicolon)) {\r\n            term = this.parseTerm();\r\n            this.expect(TokenType.semicolon, true, true);\r\n        }\r\n\r\n        return [{\r\n            type: TokenType.keywordReturn,\r\n            position: position,\r\n            term: term\r\n        }];\r\n\r\n    }\r\n\r\n    parseWhile(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume while\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition  = this.getCurrentPosition();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"while\", rightBracketPosition);\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese while-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordWhile,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseFor(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let semicolonPositions: TextPosition[] = [];\r\n\r\n        this.nextToken(); // consume for\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            if (this.ct[2].tt == TokenType.colon) {\r\n                return this.parseForLoopOverCollection(position, scopeFrom);\r\n            }\r\n\r\n            let statementsBefore = this.parseStatement(false);\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon);\r\n            let condition = this.parseTerm();\r\n            semicolonPositions.push(this.getCurrentPosition());\r\n            this.expect(TokenType.semicolon, true);\r\n            let statementsAfter = this.parseStatement(false);\r\n\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            this.module.pushMethodCallPosition(position, semicolonPositions, \"for\", rightBracketPosition);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n\r\n            let statements = this.parseStatement();\r\n            let scopeTo = this.getCurrentPosition();\r\n            scopeTo.length = 0;\r\n\r\n            if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n            }\r\n\r\n            if (condition == null) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordFor,\r\n                    position: position,\r\n                    scopeFrom: scopeFrom,\r\n                    scopeTo: scopeTo,\r\n                    condition: condition,\r\n                    statementsBefore: statementsBefore,\r\n                    statementsAfter: statementsAfter,\r\n                    statements: statements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseForLoopOverCollection(position: TextPosition, scopeFrom: TextPosition): ASTNode[] {\r\n\r\n        let variableType = this.parseType();\r\n\r\n        let variableIdentifier = <string>this.cct.value;\r\n        let variableIdentifierPosition = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        this.expect(TokenType.colon, true);\r\n\r\n        let collection = this.parseTerm();\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.pushError(\"Diese for-loop wiederholt nur den Strichpunkt (leere Anweisung).\", \"warning\");\r\n        }\r\n\r\n        let statements = this.parseStatement();\r\n        let scopeTo = this.getCurrentPosition();\r\n        scopeTo.length = 0;\r\n\r\n        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n            scopeTo = (<ScopeNode>statements[0]).positionTo;\r\n        }\r\n\r\n        if (collection == null || variableType == null || statements == null) return [];\r\n\r\n        return [\r\n            {\r\n                type: TokenType.forLoopOverCollection,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                variableIdentifier: variableIdentifier,\r\n                variableType: variableType,\r\n                variablePosition: variableIdentifierPosition,\r\n                collection: collection,\r\n                statements: statements\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    parsePrint(): ASTNode[] {\r\n\r\n        let tt = this.tt;\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.leftBracket, false)) {\r\n            let mcp = this.parseMethodCallParameters();\r\n            let paramenters = mcp.nodes;\r\n            if (paramenters.length > 2) {\r\n                this.pushError(\"Die Methoden print und println haben maximal zwei Parameter.\", \"error\", position);\r\n            }\r\n\r\n            this.expect(TokenType.semicolon, true, true);\r\n\r\n            return [{\r\n                //@ts-ignore\r\n                type: tt,\r\n                position: position,\r\n                text: paramenters.length == 0 ? null : paramenters[0],\r\n                color: paramenters.length <= 1 ? null : paramenters[1],\r\n                commaPositions: mcp.commaPositions,\r\n                rightBracketPosition: mcp.rightBracketPosition\r\n            }];\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseSwitch(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n\r\n            let switchTerm = this.parseTerm();\r\n\r\n            this.module.pushMethodCallPosition(position, [], \"switch\", this.getCurrentPosition());\r\n\r\n            this.expect(TokenType.rightBracket);\r\n            let scopeFrom = this.getCurrentPosition();\r\n\r\n            this.expect(TokenType.leftCurlyBracket, true);\r\n\r\n            let switchNode: SwitchNode = {\r\n                type: TokenType.keywordSwitch,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: null,\r\n                condition: switchTerm,\r\n                caseNodes: []\r\n            }\r\n\r\n            let defaultAlreadyThere = false;\r\n\r\n            while (this.tt == TokenType.keywordCase || this.tt == TokenType.keywordDefault) {\r\n                let casePosition = this.getCurrentPosition();\r\n\r\n                let isDefault = this.tt == TokenType.keywordDefault;\r\n                if (isDefault) {\r\n                    if (defaultAlreadyThere) {\r\n                        this.pushError(\"Eine switch-Anweisung darf nur maximal einen default-Zweig haben.\", \"error\", casePosition);\r\n                    } else {\r\n                        defaultAlreadyThere = true;\r\n                    }\r\n                }\r\n\r\n                this.nextToken();\r\n\r\n                let caseTerm = null;\r\n                if (!isDefault) {\r\n                    caseTerm = this.parseTerm();\r\n                }\r\n\r\n                this.expect(TokenType.colon, true);\r\n\r\n                let statements: ASTNode[] = [];\r\n                //@ts-ignore\r\n                while (this.tt != TokenType.rightCurlyBracket && this.tt != TokenType.endofSourcecode\r\n                    && this.tt != TokenType.keywordCase && this.tt != TokenType.keywordDefault\r\n                ) {\r\n                    let statement = this.parseStatement();\r\n                    if (statement != null) {\r\n                        statements = statements.concat(statement);\r\n                    }\r\n                }\r\n\r\n                let switchCaseNode: SwitchCaseNode = {\r\n                    type: TokenType.keywordCase,\r\n                    position: casePosition,\r\n                    caseTerm: caseTerm,\r\n                    statements: statements\r\n                }\r\n\r\n                switchNode.caseNodes.push(switchCaseNode);\r\n\r\n            }\r\n\r\n            switchNode.scopeTo = this.getEndOfCurrentToken();\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n            return [switchNode];\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseIf(): ASTNode[] {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume if\r\n        if (this.expect(TokenType.leftBracket, true)) {\r\n            let condition = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.module.pushMethodCallPosition(position, [], \"if\", rightBracketPosition);\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.pushError(\"Falls die Bedingung zutrifft, wird nur der Strichpunkt ausgeführt (leere Anweisung).\", \"warning\");\r\n            }\r\n\r\n            let statements = this.parseStatement();\r\n\r\n            if (this.tt == TokenType.semicolon) {\r\n                this.nextToken();\r\n            }\r\n\r\n            let elseStatements: ASTNode[] = null;\r\n\r\n            if (this.comesToken(TokenType.keywordElse)) {\r\n                this.nextToken();\r\n                elseStatements = this.parseStatement();\r\n            }\r\n\r\n            if (condition == null && this.errorList.length == 0) {\r\n                condition = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.booleanConstant,\r\n                    constant: true\r\n                }\r\n            }\r\n\r\n            return [\r\n                {\r\n                    type: TokenType.keywordIf,\r\n                    position: position,\r\n                    condition: condition,\r\n                    statementsIfTrue: statements,\r\n                    statementsIfFalse: elseStatements\r\n                }\r\n            ];\r\n\r\n        }\r\n\r\n        return [];\r\n\r\n    }\r\n\r\n    parseDo(): ASTNode[] {\r\n\r\n        // let i = 10;\r\n        // do {\r\n        //     i = i +7;\r\n        // } while (i < 100);\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        this.nextToken(); // consume do\r\n        let statements = this.parseStatement();\r\n\r\n        if (this.expect(TokenType.keywordWhile, true)) {\r\n            if (this.expect(TokenType.leftBracket, true)) {\r\n                let condition = this.parseTerm();\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n\r\n                this.expect(TokenType.rightBracket, true);\r\n\r\n                return [\r\n                    {\r\n                        type: TokenType.keywordDo,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        condition: condition,\r\n                        statements: statements\r\n                    }\r\n                ];\r\n\r\n            }\r\n        }\r\n        return [];\r\n\r\n    }\r\n\r\n    comesGenericType(): boolean {\r\n        if (this.ct[1].tt != TokenType.lower) return false;\r\n        if (this.ct[2].tt != TokenType.identifier) return false;\r\n        return this.ct[3].tt == TokenType.greater || this.ct[3].tt == TokenType.comma;\r\n\r\n    }\r\n\r\n    parseVariableDeclarationOrTerm(): ASTNode[] {\r\n\r\n        // Two identifiers in a row or identifier[]\r\n        if (\r\n            (this.tt == TokenType.identifier || this.tt == TokenType.keywordFinal) &&\r\n            (this.ct[1].tt == TokenType.identifier\r\n                || this.ct[1].tt == TokenType.leftRightSquareBracket ||\r\n                this.comesGenericType() \r\n            )\r\n        ) {\r\n            let ret: ASTNode[] = [];\r\n            let type: TypeNode = null;\r\n            do {\r\n                if (type != null) this.expect(TokenType.comma, true);\r\n                let vd = this.parseVariableDeclaration(type);\r\n                ret.push(vd);\r\n                type = vd?.variableType;\r\n                //@ts-ignore\r\n            } while (this.tt == TokenType.comma);\r\n\r\n            return ret;\r\n        } else {\r\n            return [this.parseTerm()];\r\n        }\r\n\r\n    }\r\n\r\n    parseTerm(): TermNode {\r\n        return this.parseTermBinary(0);\r\n    }\r\n\r\n    parseTermBinary(precedence: number): TermNode {\r\n\r\n        let left: TermNode;\r\n        if (precedence < Parser.operatorPrecedence.length - 1) {\r\n            left = this.parseTermBinary(precedence + 1);\r\n        } else {\r\n            left = this.parsePlusPlusMinusMinus();\r\n        }\r\n\r\n        let operators = Parser.operatorPrecedence[precedence];\r\n\r\n        if (left == null || operators.indexOf(this.tt) < 0) {\r\n            return left;\r\n        }\r\n\r\n        let first = true;\r\n\r\n        if (this.tt == TokenType.colon) {\r\n            return left;\r\n        }\r\n\r\n        while (first || operators.indexOf(this.tt) >= 0) {\r\n\r\n            let operator: TokenType = this.tt;\r\n\r\n            first = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            this.nextToken();\r\n\r\n            for (let opData of [{ op: TokenType.lower, wrong: \"=<\", right: \"<=\", correctOp: TokenType.lowerOrEqual }, \r\n                                { op: TokenType.greater, wrong: \"=>\", right: \">=\", correctOp: TokenType.greaterOrEqual }]) {\r\n                if (operator == TokenType.assignment && this.tt == opData.op) {\r\n                    let position2 = this.getCurrentPosition();\r\n                    this.pushError(`Den Operator ${opData.wrong} gibt es nicht. Du meintest sicher: ${opData.right}`, \"error\",\r\n                        Object.assign({}, position, { length: 2 }), {\r\n                        title: `${opData.wrong} durch ${opData.right} ersetzen`,\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: position.line, startColumn: position.column, endLineNumber: position.line, endColumn: position2.column + position2.length },\r\n                                        text: opData.right\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n                    this.nextToken();\r\n                    operator = opData.correctOp;\r\n                }\r\n            }\r\n\r\n            let right: TermNode;\r\n            if (precedence < Parser.operatorPrecedence.length - 1) {\r\n                right = this.parseTermBinary(precedence + 1);\r\n            } else {\r\n                right = this.parsePlusPlusMinusMinus();\r\n            }\r\n\r\n            if (right != null) {\r\n\r\n                let constantFolding = false;\r\n                if (this.isConstant(left) && this.isConstant(right)) {\r\n                    let pcLeft = <ConstantNode>left;\r\n                    let pcRight = <ConstantNode>right;\r\n                    let typeLeft = TokenTypeToDataTypeMap[pcLeft.constantType];\r\n                    let typeRight = TokenTypeToDataTypeMap[pcRight.constantType];\r\n                    let resultType = typeLeft.getResultType(operator, typeRight);\r\n                    if (resultType != null) {\r\n                        constantFolding = true;\r\n                        let result = typeLeft.compute(operator, { type: typeLeft, value: pcLeft.constant },\r\n                            { type: typeRight, value: pcRight.constant });\r\n                        pcLeft.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcLeft.constant = result;\r\n                        pcLeft.position.length = pcRight.position.column + pcRight.position.length - pcLeft.position.column;\r\n                    }\r\n                }\r\n\r\n                if (!constantFolding)\r\n                    left = {\r\n                        type: TokenType.binaryOp,\r\n                        position: position,\r\n                        operator: operator,\r\n                        firstOperand: left,\r\n                        secondOperand: right\r\n                    };\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return left;\r\n\r\n    }\r\n\r\n    isConstant(node: TermNode) {\r\n\r\n        return (node != null && node.type == TokenType.pushConstant);\r\n\r\n    }\r\n\r\n    parsePlusPlusMinusMinus(): TermNode {\r\n\r\n        let incrementDecrementBefore: TokenType = null;\r\n        let position = null;\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            incrementDecrementBefore = this.tt;\r\n            position = this.getCurrentPosition();\r\n            this.nextToken();\r\n        }\r\n\r\n        let t: TermNode = this.parseUnary();\r\n\r\n        if (incrementDecrementBefore != null) {\r\n            t = {\r\n                type: TokenType.incrementDecrementBefore,\r\n                position: position,\r\n                operator: incrementDecrementBefore,\r\n                operand: t\r\n            }\r\n        }\r\n\r\n        if (this.comesToken([TokenType.doublePlus, TokenType.doubleMinus])) {\r\n            t = {\r\n                type: TokenType.incrementDecrementAfter,\r\n                position: this.getCurrentPosition(),\r\n                operator: this.tt,\r\n                operand: t\r\n            }\r\n            this.nextToken();\r\n        }\r\n\r\n        return t;\r\n\r\n    }\r\n\r\n    // -, not, this, super, a.b.c[][].d, a.b(), b() (== this.b()), super.b(), super()\r\n    parseUnary(): TermNode {\r\n\r\n        let term: TermNode;\r\n        let position: TextPosition = this.getCurrentPosition();\r\n\r\n        switch (this.tt) {\r\n            case TokenType.leftBracket:\r\n                return this.parseDotOrArrayChains(this.bracketOrCasting());\r\n            case TokenType.minus:\r\n            case TokenType.not:\r\n                position = position;\r\n                let tt1 = this.tt;\r\n                this.nextToken();\r\n                term = this.parseUnary();\r\n\r\n                if (this.isConstant(term)) {\r\n                    let pcTerm = <ConstantNode>term;\r\n                    let typeTerm = TokenTypeToDataTypeMap[pcTerm.constantType];\r\n                    let resultType = typeTerm.getResultType(tt1);\r\n                    if (resultType != null) {\r\n                        let result = typeTerm.compute(tt1, { type: typeTerm, value: pcTerm.constant });\r\n                        pcTerm.constantType = (<PrimitiveType>resultType).toTokenType();\r\n                        pcTerm.constant = result;\r\n                        position.length = pcTerm.position.column - position.column + 1;\r\n                        return pcTerm;\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    type: TokenType.unaryOp,\r\n                    position: position,\r\n                    operand: term,\r\n                    operator: tt1\r\n                };\r\n            case TokenType.keywordSuper:\r\n                if (this.ct[1].tt == TokenType.leftBracket) {\r\n                    this.nextToken(); // skip \"super\"\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.superConstructorCall,\r\n                        position: position,\r\n                        operands: parameters.nodes,\r\n                        commaPositions: parameters.commaPositions,\r\n                        rightBracketPosition: parameters.rightBracketPosition\r\n                    };\r\n                    return term;\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.keywordSuper,\r\n                        position: position\r\n                    };\r\n                }\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordThis:\r\n                term = {\r\n                    type: TokenType.keywordThis,\r\n                    position: position\r\n                };\r\n                this.nextToken();\r\n                return this.parseDotOrArrayChains(term);\r\n            case TokenType.keywordNew:\r\n                return this.parseDotOrArrayChains(this.parseNew());\r\n            case TokenType.integerConstant:\r\n            case TokenType.charConstant:\r\n            case TokenType.floatingPointConstant:\r\n            case TokenType.stringConstant:\r\n            case TokenType.booleanConstant:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: this.tt,\r\n                    constant: this.cct.value\r\n                };\r\n                let isStringConstant = this.tt == TokenType.stringConstant;\r\n                this.nextToken();\r\n\r\n                if (isStringConstant) return this.parseDotOrArrayChains(term);\r\n\r\n                return term;\r\n            case TokenType.keywordNull:\r\n                term = {\r\n                    type: TokenType.pushConstant,\r\n                    position: this.getCurrentPosition(),\r\n                    constantType: TokenType.keywordNull,\r\n                    constant: null\r\n                };\r\n                this.nextToken();\r\n                return term;\r\n            case TokenType.identifier: // attribute of current class or local variable\r\n\r\n                let identifier1 = <string>this.cct.value;\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    let rightBracketPosition = parameters.rightBracketPosition;\r\n\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position1,\r\n                        rightBracketPosition: rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier1,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.identifier,\r\n                        identifier: identifier1,\r\n                        position: position\r\n                    }\r\n                }\r\n\r\n                return this.parseDotOrArrayChains(term);\r\n            default:\r\n                this.pushError(\"Erwartet wird eine Variable, ein Methodenaufruf oder this oder super. Gefunden wurde: \" + this.cct.value);\r\n                return null;\r\n        }\r\n\r\n    }\r\n\r\n    tokensNotAfterCasting: TokenType[] = [TokenType.multiplication, TokenType.division, TokenType.plus,\r\n    TokenType.minus, TokenType.dot, TokenType.modulo, TokenType.semicolon, TokenType.rightBracket];\r\n\r\n    bracketOrCasting(): TermNode {\r\n\r\n        let position = this.getCurrentPosition();\r\n\r\n        this.nextToken(); // consume (\r\n\r\n        if (this.tt == TokenType.identifier && this.ct[1].tt == TokenType.rightBracket &&\r\n            this.tokensNotAfterCasting.indexOf(this.ct[2].tt) < 0) {\r\n\r\n            let castToType = this.parseType();\r\n            let position1 = this.getCurrentPosition(); // Position of )\r\n            position.length = position1.column - position.column + 1;\r\n\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            let whatToCast = this.parsePlusPlusMinusMinus();\r\n\r\n            return {\r\n                type: TokenType.castValue,\r\n                position: position,\r\n                castToType: castToType,\r\n                whatToCast: whatToCast\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            let term = this.parseTerm();\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.expect(TokenType.rightBracket, true);\r\n\r\n            if (this.isConstant(term)) {\r\n                return term;\r\n            }\r\n\r\n            let bracketsNode: BracketsNode = {\r\n                position: rightBracketPosition,\r\n                type: TokenType.rightBracket,\r\n                termInsideBrackets: term\r\n            }\r\n\r\n\r\n            return bracketsNode;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseNew(): TermNode {\r\n\r\n        this.nextToken();\r\n        let position = this.getCurrentPosition();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n            let identifier = <string>this.cct.value;\r\n            let identifierPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n\r\n            let genericParameterTypes: TypeNode[] = null;\r\n\r\n            if (this.tt == TokenType.lower) {\r\n\r\n                genericParameterTypes = [];\r\n                let first: boolean = true;\r\n                this.nextToken();\r\n\r\n                //@ts-ignore\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                    if (!first) this.nextToken(); // consume comma\r\n\r\n                    first = false;\r\n\r\n                    genericParameterTypes.push(this.parseType());\r\n\r\n                }\r\n\r\n                this.expect(TokenType.greater);\r\n                if (genericParameterTypes.length == 0) genericParameterTypes = null;\r\n            }\r\n\r\n            if (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n\r\n                let typenode: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: position,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n                this.typeNodes.push(typenode);\r\n\r\n                let elementCount: TermNode[] = [];\r\n\r\n                while (this.tt == TokenType.leftSquareBracket || this.tt == TokenType.leftRightSquareBracket) {\r\n                    typenode.arrayDimension++;\r\n\r\n                    //@ts-ignore\r\n                    if (this.tt == TokenType.leftRightSquareBracket) {\r\n                        elementCount.push(null);\r\n                        this.nextToken();\r\n                    } else {\r\n                        this.nextToken();\r\n                        elementCount.push(this.parseTerm());\r\n                        this.expect(TokenType.rightSquareBracket, true);\r\n                    }\r\n\r\n                }\r\n\r\n                let initialization = null;\r\n\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    initialization = this.parseArrayLiteral(typenode);\r\n                }\r\n\r\n                let newArrayNode: NewArrayNode = {\r\n                    type: TokenType.newArray,\r\n                    position: position,\r\n                    arrayType: typenode,\r\n                    elementCount: elementCount,\r\n                    initialization: initialization\r\n                }\r\n\r\n                return newArrayNode;\r\n\r\n\r\n            } else if (this.tt == TokenType.leftBracket) {\r\n                let parameters = this.parseMethodCallParameters();\r\n\r\n                let classType: TypeNode = {\r\n                    type: TokenType.type,\r\n                    position: identifierPosition,\r\n                    arrayDimension: 0,\r\n                    identifier: identifier,\r\n                    genericParameterTypes: genericParameterTypes\r\n                }\r\n\r\n                this.typeNodes.push(classType);\r\n\r\n                return {\r\n                    type: TokenType.newObject,\r\n                    position: position,\r\n                    classType: classType,\r\n                    constructorOperands: parameters.nodes,\r\n                    rightBracketPosition: parameters.rightBracketPosition,\r\n                    commaPositions: parameters.commaPositions\r\n                }\r\n            } else {\r\n                this.pushError(\"Konstruktoraufruf (also runde Klammer auf) oder Array-Intanzierung (eckige Klammer auf) erwartet.\", \"error\", this.getCurrentPosition());\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    parseArrayLiteral(arrayType: TypeNode): ArrayInitializationNode {\r\n        // expects { as next token\r\n\r\n        let nodes: (ArrayInitializationNode | TermNode)[] = [];\r\n        let position = this.getCurrentPosition();\r\n        let dimension = null;\r\n\r\n        this.expect(TokenType.leftCurlyBracket, true);\r\n        if (this.tt != TokenType.rightCurlyBracket) {\r\n\r\n            let first = true;\r\n            while (first || this.tt == TokenType.comma) {\r\n                let position1 = this.getCurrentPosition();\r\n\r\n                if (!first) {\r\n                    this.nextToken(); // consume comma\r\n                }\r\n                first = false;\r\n\r\n                let newDimension: number;\r\n                if (this.tt == TokenType.leftCurlyBracket) {\r\n                    let newType: TypeNode = {\r\n                        type: TokenType.type,\r\n                        position: this.getCurrentPosition(),\r\n                        arrayDimension: arrayType.arrayDimension - 1,\r\n                        identifier: arrayType.identifier\r\n                    }\r\n                    this.typeNodes.push(newType);\r\n                    let al = this.parseArrayLiteral(newType);\r\n                    newDimension = al.dimension + 1;\r\n                    nodes.push(al);\r\n                } else {\r\n                    nodes.push(this.parseTerm());\r\n                    newDimension = 1;\r\n                }\r\n\r\n                if (dimension != null) {\r\n                    if (dimension != newDimension) {\r\n                        this.pushError(\"Die Dimension dieses Array-Literals (\" + (newDimension - 1) + \" ist ungleich derjenigen der vorangegangenen Array-Literale (\" + (dimension - 1) + \").\", \"error\", position1);\r\n                    }\r\n                }\r\n                dimension = newDimension;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n        let ain: ArrayInitializationNode = {\r\n            type: TokenType.arrayInitialization,\r\n            position: position,\r\n            arrayType: arrayType,\r\n            dimension: dimension,\r\n            nodes: nodes\r\n        }\r\n\r\n        return ain;\r\n\r\n    }\r\n\r\n    parseMethodCallParameters(): { rightBracketPosition: TextPosition, nodes: TermNode[], commaPositions: TextPosition[] } {\r\n        // Assumption: current token is (        \r\n        this.nextToken();\r\n        if (this.tt == TokenType.rightBracket) {\r\n            let rightBracketPosition = this.getCurrentPosition();\r\n            this.nextToken();\r\n            return { rightBracketPosition: rightBracketPosition, nodes: [], commaPositions: [] };\r\n        }\r\n\r\n        let parameters: TermNode[] = [];\r\n        let commaPositions: TextPosition[] = [];\r\n\r\n        while (true) {\r\n            let pos = this.pos;\r\n\r\n            let parameter = this.parseTerm();\r\n            if (parameter != null) {\r\n                parameters.push(parameter);\r\n            }\r\n\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            } else {\r\n                commaPositions.push(this.getCurrentPosition());\r\n                this.nextToken(); // consume comma\r\n            }\r\n\r\n            // emergency-step:\r\n            if (this.pos == pos) {\r\n                this.nextToken();\r\n            }\r\n\r\n        }\r\n\r\n        let position = this.getCurrentPosition();\r\n        let rightBracketFound = this.expect(TokenType.rightBracket, true);\r\n\r\n        return { rightBracketPosition: rightBracketFound ? position : null, nodes: parameters, commaPositions: commaPositions };\r\n\r\n    }\r\n\r\n    parseDotOrArrayChains(term: TermNode): TermNode {\r\n\r\n        if (term == null) return null;\r\n\r\n        while (this.comesToken([TokenType.dot, TokenType.leftSquareBracket])) {\r\n            if (this.tt == TokenType.dot) {\r\n\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt != TokenType.identifier) {\r\n                    this.pushError(\"Erwartet wird der Bezeichner eines Attributs oder einer Methode, gefunden wurde: \" + this.cct.value);\r\n                    return term;\r\n                }\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let parameters = this.parseMethodCallParameters();\r\n                    term = {\r\n                        type: TokenType.callMethod,\r\n                        position: position,\r\n                        rightBracketPosition: parameters.rightBracketPosition,\r\n                        operands: parameters.nodes,\r\n                        object: term,\r\n                        identifier: identifier,\r\n                        commaPositions: parameters.commaPositions\r\n                    }\r\n                } else {\r\n                    term = {\r\n                        type: TokenType.pushAttribute,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        object: term\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // let position = this.getCurrentPosition();\r\n                let position = term.position;\r\n                this.nextToken();\r\n                let index = this.parseTerm();\r\n                let positionEnd = this.getCurrentPosition();\r\n                let position1: TextPosition = Object.assign({}, position);\r\n                this.expect(TokenType.rightSquareBracket, true);\r\n                if (positionEnd.line == position.line) {\r\n                    position1.length = positionEnd.column + positionEnd.length - position1.column;\r\n                } else {\r\n                    position1 = positionEnd;\r\n                }\r\n                term = {\r\n                    type: TokenType.selectArrayElement,\r\n                    position: position1,\r\n                    index: index,\r\n                    object: term\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return term;\r\n    }\r\n\r\n    parseVariableDeclaration(type: TypeNode): LocalVariableDeclarationNode {\r\n\r\n        let isFinal = false;\r\n        if (this.tt == TokenType.keywordFinal) {\r\n            isFinal = true;\r\n            this.nextToken();\r\n        }\r\n\r\n        if (type == null) {\r\n            type = this.parseType();\r\n        }\r\n\r\n        if(this.tt != TokenType.identifier){\r\n            this.pushError(\"Hier wird ein Bezeichner (Name) einer Variable erwartet.\", \"error\", this.getCurrentPosition());\r\n            return null;\r\n        }\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let initialization: TermNode = null;\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.assignment) {\r\n            this.nextToken();\r\n            //@ts-ignore\r\n            if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                initialization = this.parseArrayLiteral(type);\r\n            } else {\r\n                initialization = this.parseTerm();\r\n            }\r\n        }\r\n\r\n        //@ts-ignore\r\n        if (this.tt == TokenType.endofSourcecode && type == null && identifier == null) return null;\r\n\r\n        return {\r\n            type: TokenType.localVariableDeclaration,\r\n            position: position,\r\n            identifier: identifier,\r\n            variableType: type,\r\n            initialization: initialization,\r\n            isFinal: isFinal\r\n        }\r\n\r\n    }\r\n\r\n    parseType(): TypeNode {\r\n\r\n        /**\r\n         * e.g. int, int[][], Integer, ArrayList<Integer> ,HashMap<Integer, ArrayList<String>>[][]\r\n         */\r\n\r\n        let identifier = <string>this.cct.value;\r\n        let position = this.getCurrentPosition();\r\n        this.nextToken();\r\n\r\n        let genericParameterTypes: TypeNode[] = null;\r\n\r\n        if (this.tt == TokenType.lower) {\r\n\r\n            genericParameterTypes = [];\r\n            let first: boolean = true;\r\n            this.nextToken();\r\n\r\n            //@ts-ignore\r\n            while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n                if (!first) this.nextToken(); // consume comma\r\n\r\n                first = false;\r\n\r\n                genericParameterTypes.push(this.parseType());\r\n\r\n            }\r\n\r\n            this.expect(TokenType.greater);\r\n\r\n        }\r\n\r\n        let arrayDimension = 0;\r\n        while (this.tt == TokenType.leftRightSquareBracket) {\r\n            arrayDimension++;\r\n            position.length += 2;\r\n            this.nextToken();\r\n        }\r\n\r\n        let typenode: TypeNode = {\r\n            type: TokenType.type,\r\n            position: position,\r\n            arrayDimension: arrayDimension,\r\n            identifier: identifier,\r\n            genericParameterTypes: genericParameterTypes\r\n        }\r\n\r\n        this.typeNodes.push(typenode);\r\n\r\n        return typenode;\r\n\r\n    }\r\n\r\n\r\n    parseClassDefinition(): ASTNode {\r\n\r\n        let commentBefore = this.cct.commentBefore;\r\n        let modifiers = this.collectModifiers();\r\n\r\n        if (!this.comesToken(Parser.ClassTokens)) {\r\n            this.pushError(\"Erwartet wird class, interface oder enum. Gefunden wurde: \" + this.cct.value);\r\n            return null;\r\n        }\r\n\r\n        let classType = this.tt;\r\n        this.nextToken();\r\n\r\n        if (this.expect(TokenType.identifier, false)) {\r\n\r\n            let identifier = <string>this.cct.value;\r\n            let position = this.getCurrentPosition();\r\n            this.nextToken();\r\n\r\n            let typeParameters: TypeParameterNode[] = [];\r\n            // For Generics: parse expression like <E, F extends Test implements Comparable<Test>>\r\n            if (this.tt == TokenType.lower) {\r\n                typeParameters = this.parseTypeParameterDefinition();\r\n            }\r\n\r\n            let extendsImplements = this.parseExtendsImplements(classType == TokenType.keywordInterface);\r\n\r\n            if (classType == TokenType.keywordEnum) {\r\n                return this.parseEnum(identifier, extendsImplements, position, modifiers.visibility, commentBefore);\r\n            }\r\n\r\n            let scopeFrom = this.getCurrentPosition();\r\n            if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n                let methodsAndAttributes = this.parseClassBody(classType, identifier);\r\n                let scopeTo = this.getEndOfCurrentToken();\r\n                this.expect(TokenType.rightCurlyBracket, true);\r\n                switch (classType) {\r\n\r\n                    case TokenType.keywordClass: return {\r\n                        type: TokenType.keywordClass,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        identifier: identifier,\r\n                        attributes: methodsAndAttributes.attributes,\r\n                        methods: methodsAndAttributes.methods,\r\n                        isAbstract: modifiers.isAbstract,\r\n                        visibility: modifiers.visibility,\r\n                        extends: extendsImplements.extends,\r\n                        implements: extendsImplements.implements,\r\n                        typeParameters: typeParameters,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                    case TokenType.keywordInterface: return {\r\n                        type: TokenType.keywordInterface,\r\n                        position: position,\r\n                        identifier: identifier,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        methods: methodsAndAttributes.methods,\r\n                        typeParameters: typeParameters,\r\n                        extends: extendsImplements.implements,\r\n                        commentBefore: commentBefore\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    parseTypeParameterDefinition(): TypeParameterNode[] {\r\n\r\n        let typeParameters: TypeParameterNode[] = [];\r\n\r\n        let identifierMap = {};\r\n\r\n        this.expect(TokenType.lower, true);\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n\r\n            if (!first) this.expect(TokenType.comma, true);\r\n\r\n            let tp: TypeParameterNode = {\r\n                type: TokenType.typeParameter,\r\n                position: this.getCurrentPosition(),\r\n                identifier: <string>this.cct.value,\r\n                extends: null,\r\n                implements: null\r\n            };\r\n\r\n            if (identifierMap[tp.identifier] != null) {\r\n                this.pushError(\"Zwei Typparameter dürfe nicht denselben Bezeichner tragen.\");\r\n            }\r\n\r\n            identifierMap[tp.identifier] = true;\r\n\r\n            this.nextToken();\r\n\r\n            let extendsImplements = this.parseTypeParameterBounds();\r\n\r\n            tp.extends = extendsImplements.extends;\r\n\r\n            if (tp.extends != null && tp.extends.arrayDimension > 0) {\r\n                this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n            }\r\n\r\n            tp.implements = extendsImplements.implements;\r\n\r\n            tp.implements.forEach((im) => {\r\n                if (im.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp des Typparameters \" + tp.identifier + \" darf kein Array sein.\");\r\n                }\r\n            });\r\n\r\n            first = false;\r\n\r\n            typeParameters.push(tp);\r\n\r\n        }\r\n\r\n        this.expect(TokenType.greater, true);\r\n\r\n        return typeParameters;\r\n    }\r\n\r\n    parseEnum(identifier: string, extendsImplements: {\r\n        extends: TypeNode;\r\n        implements: TypeNode[];\r\n    }, position: TextPosition, visibility: Visibility, commentBefore: Token): ASTNode {\r\n\r\n        if (extendsImplements.extends != null) {\r\n            this.pushError(\"Ein enum kann nicht mit extends erweitert werden.\");\r\n        }\r\n        if (extendsImplements.implements.length > 0) {\r\n            this.pushError(\"Ein enum kann kein Interface implementieren.\");\r\n        }\r\n\r\n        let scopeFrom = this.getCurrentPosition();\r\n        if (this.expect(TokenType.leftCurlyBracket, true)) {\r\n\r\n            let values: EnumValueNode[] = this.parseEnumValues();\r\n\r\n            let methodsAndAttributes = this.parseClassBody(TokenType.keywordEnum, identifier);\r\n\r\n            let scopeTo = this.getEndOfCurrentToken();\r\n\r\n            this.expect(TokenType.rightCurlyBracket, true);\r\n\r\n\r\n            return {\r\n                type: TokenType.keywordEnum,\r\n                position: position,\r\n                scopeFrom: scopeFrom,\r\n                scopeTo: scopeTo,\r\n                attributes: methodsAndAttributes.attributes,\r\n                methods: methodsAndAttributes.methods,\r\n                identifier: identifier,\r\n                values: values,\r\n                visibility: visibility,\r\n                commentBefore: commentBefore\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    parseEnumValues(): EnumValueNode[] {\r\n\r\n        let values: EnumValueNode[] = [];\r\n\r\n        let pos: number = 0;\r\n        let first: boolean = true;\r\n\r\n        while ((first && this.tt == TokenType.identifier) || this.tt == TokenType.comma) {\r\n            pos = this.pos;\r\n            if (!first) this.nextToken(); // skip comma\r\n            first = false;\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = <string>this.cct.value;\r\n                let position = this.getCurrentPosition();\r\n                this.nextToken();\r\n                let constructorParameters: TermNode[] = null;\r\n\r\n                let commaPositions: TextPosition[] = [];\r\n                let rightBracketPosition: TextPosition = null;\r\n                //@ts-ignore\r\n                if (this.tt == TokenType.leftBracket) {\r\n                    let mcp = this.parseMethodCallParameters();\r\n                    constructorParameters = mcp.nodes;\r\n                    commaPositions = mcp.commaPositions;\r\n                    rightBracketPosition = mcp.rightBracketPosition;\r\n                }\r\n\r\n                values.push({\r\n                    type: TokenType.pushEnumValue,\r\n                    constructorParameters: constructorParameters,\r\n                    identifier: identifier,\r\n                    position: position,\r\n                    commaPositions: commaPositions,\r\n                    rightBracketPosition: rightBracketPosition\r\n                });\r\n\r\n            };\r\n\r\n            if (this.pos == pos) {\r\n                this.nextToken(); // in case of parsing-emergency\r\n            }\r\n        }\r\n\r\n        if (this.tt == TokenType.semicolon) {\r\n            this.nextToken();\r\n        }\r\n\r\n        return values;\r\n\r\n    }\r\n\r\n    parseClassBody(classType: TokenType, className: string): { methods: MethodDeclarationNode[], attributes: AttributeDeclarationNode[] } {\r\n\r\n        // Assumption: { is already consumed\r\n\r\n        let methods: MethodDeclarationNode[] = [];\r\n        let attributes: AttributeDeclarationNode[] = [];\r\n\r\n        while (true) {\r\n\r\n            if (this.tt == TokenType.rightCurlyBracket || this.tt == TokenType.endofSourcecode) {\r\n                break;\r\n            }\r\n\r\n            let commentBefore: Token = this.cct.commentBefore;\r\n\r\n            let annotation = null;\r\n            if(this.tt == TokenType.at){\r\n                annotation = this.cct.value;\r\n            }\r\n            let modifiers = this.collectModifiers();\r\n\r\n            let isConstructor = false;\r\n            let position = this.getCurrentPosition();\r\n\r\n            if (this.tt == TokenType.identifier && <string>this.cct.value == className && this.ct[1].tt == TokenType.leftBracket) {\r\n                isConstructor = true;\r\n            }\r\n\r\n            let type = this.parseType();\r\n\r\n            if (isConstructor || this.expect(TokenType.identifier, false)) {\r\n\r\n                let identifier = className;\r\n\r\n                if (!isConstructor) {\r\n                    position = this.getCurrentPosition();\r\n\r\n                    identifier = <string>this.cct.value;\r\n                    this.nextToken();\r\n                }\r\n\r\n                if (this.tt == TokenType.leftBracket) {\r\n\r\n                    if (isConstructor && classType == TokenType.keywordEnum && modifiers.visibility != Visibility.private) {\r\n                        this.pushError(\"Konstruktoren in enums müssen private sein.\", \"error\", position);\r\n                    }\r\n\r\n                    let parameters: ParameterNode[] = this.parseMethodDeclarationParameters();\r\n\r\n                    let statements: ASTNode[];\r\n                    let scopeFrom: TextPosition = this.getCurrentPosition();\r\n                    let scopeTo: TextPosition = scopeFrom;\r\n\r\n                    if (modifiers.isAbstract) {\r\n                        this.expect(TokenType.semicolon, true);\r\n                        if (isConstructor) {\r\n                            this.pushError(\"Ein Konstruktor kann nicht abstrakt sein.\", \"error\", position);\r\n                        }\r\n                        statements = [];\r\n                    } else {\r\n                        scopeFrom = this.getCurrentPosition();\r\n                        statements = this.parseStatement();\r\n                        scopeTo = this.getEndOfCurrentToken();\r\n                        if (statements != null && statements.length > 0 && statements[0].type == TokenType.scopeNode) {\r\n                            let scopeNode = <ScopeNode>statements[0];\r\n                            scopeFrom = scopeNode.position;\r\n                            scopeTo = scopeNode.positionTo;\r\n                        }\r\n\r\n                    }\r\n\r\n                    methods.push({\r\n                        type: TokenType.methodDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        scopeFrom: scopeFrom,\r\n                        scopeTo: scopeTo,\r\n                        parameters: parameters,\r\n                        statements: statements,\r\n                        visibility: modifiers.visibility,\r\n                        isAbstract: modifiers.isAbstract || classType == TokenType.keywordInterface,\r\n                        isStatic: modifiers.isStatic,\r\n                        isConstructor: isConstructor,\r\n                        returnType: type,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                } else {\r\n\r\n                    if (identifier == className) {\r\n                        this.pushError(\"Das Attribut \" + className + \" darf nicht denselben Bezeichner haben wie die Klasse.\", \"error\", position);\r\n                    }\r\n\r\n                    let initialization: TermNode = null;\r\n\r\n                    if (this.tt == TokenType.assignment) {\r\n                        this.nextToken();\r\n                        //@ts-ignore\r\n                        if (type.arrayDimension > 0 && this.tt == TokenType.leftCurlyBracket) {\r\n                            initialization = this.parseArrayLiteral(type);\r\n                        } else {\r\n                            initialization = this.parseTerm();\r\n                        }\r\n                    }\r\n\r\n                    this.expect(TokenType.semicolon);\r\n\r\n                    attributes.push({\r\n                        type: TokenType.attributeDeclaration,\r\n                        identifier: identifier,\r\n                        position: position,\r\n                        attributeType: type,\r\n                        isStatic: modifiers.isStatic,\r\n                        isFinal: modifiers.isFinal,\r\n                        visibility: modifiers.visibility,\r\n                        initialization: initialization,\r\n                        annotation: annotation,\r\n                        isTransient: modifiers.isTransient,\r\n                        commentBefore: commentBefore\r\n                    });\r\n\r\n                    if (classType == TokenType.keywordInterface) {\r\n                        this.pushError(\"Interfaces dürfen keine Attribute enthalten.\", \"error\", position);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        return { methods: methods, attributes: attributes }\r\n\r\n    }\r\n\r\n    parseMethodDeclarationParameters(): ParameterNode[] {\r\n\r\n        // Assumption: next token is (\r\n        let parameters: ParameterNode[] = [];\r\n        this.nextToken();\r\n\r\n        if (this.tt == TokenType.rightBracket) {\r\n            this.nextToken();\r\n            return [];\r\n        }\r\n\r\n        let ellipsis = false;\r\n\r\n        while (true) {\r\n            if (ellipsis) {\r\n                this.pushError(\"Nur der letzte Parameter darf als Ellipsis (...) definiert werden.\");\r\n            }\r\n            let isFinal = this.tt == TokenType.keywordFinal;\r\n\r\n            if (isFinal) this.nextToken();\r\n\r\n            let type: TypeNode = this.parseType();\r\n\r\n            ellipsis = this.tt == TokenType.ellipsis;\r\n            if (ellipsis) {\r\n                this.nextToken();\r\n                type.arrayDimension++;\r\n            }\r\n\r\n            if (this.expect(TokenType.identifier, false)) {\r\n                let identifier = <string>this.cct.value;\r\n                parameters.push({\r\n                    type: TokenType.parameterDeclaration,\r\n                    position: this.getCurrentPosition(),\r\n                    identifier: identifier,\r\n                    parameterType: type,\r\n                    isFinal: isFinal,\r\n                    isEllipsis: ellipsis\r\n                });\r\n                this.nextToken();\r\n            }\r\n            if (this.tt != TokenType.comma) {\r\n                break;\r\n            }\r\n            this.nextToken(); // consume comma\r\n        }\r\n\r\n        this.expect(TokenType.rightBracket, true);\r\n\r\n        return parameters;\r\n\r\n    }\r\n\r\n    parseExtendsImplements(isInterface: boolean): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        while(this.comesToken([TokenType.keywordExtends, TokenType.keywordImplements])){\r\n            if (this.comesToken(TokenType.keywordExtends) && !isInterface) {\r\n                if(sextends != null){\r\n                    this.pushError(\"Eine Klasse kann nicht Unterklasse von zwei anderen Klassen sein, es darf also hier nur ein Mal 'extends...' stehen.\", \"error\", sextends.position);\r\n                }\r\n                this.nextToken(); // skip extends\r\n                sextends = this.parseType();\r\n                if (sextends != null && sextends.arrayDimension > 0) {\r\n                    this.pushError(\"Der Datentyp der Basisklasse darf kein Array sein.\", \"error\", sextends.position);\r\n                }\r\n            }\r\n    \r\n            if ((!isInterface && this.comesToken(TokenType.keywordImplements)) || (isInterface && this.comesToken(TokenType.keywordExtends))) {\r\n                if(simplements.length > 0){\r\n                    this.pushError(\"Es darf hier nur ein Mal 'implements' stehen, hinter 'implements' ist aber eine kommaseparierte Liste von Interfaces erlaubt.\", \"warning\");\r\n                }\r\n                this.nextToken(); // Skip implements/extends\r\n                let first = true;\r\n                while ((first && this.tt == TokenType.identifier) || (!first && this.tt == TokenType.comma)) {\r\n                    if (!first) this.nextToken(); // skip comma\r\n                    first = false;\r\n                    simplements.push(this.parseType());\r\n                }\r\n            }\r\n        }\r\n\r\n        simplements.forEach((im) => {\r\n            if (im.arrayDimension > 0) {\r\n                this.pushError(im.identifier + \"[] ist kein Interface, sondern ein Array. Array-Datentypen sind hier nicht erlaubt.\");\r\n            }\r\n        });\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n    }\r\n\r\n    parseTypeParameterBounds(): { extends: TypeNode, implements: TypeNode[] } {\r\n\r\n        let sextends: TypeNode = null;\r\n        let simplements: TypeNode[] = [];\r\n\r\n        if (this.comesToken(TokenType.keywordExtends)) {\r\n            this.nextToken(); // skip extends\r\n            sextends = this.parseType();\r\n        }\r\n\r\n        while (this.comesToken(TokenType.ampersand)) {\r\n            this.nextToken(); // Skip ampersand\r\n            simplements.push(this.parseType());\r\n        }\r\n\r\n        return {\r\n            extends: sextends, implements: simplements\r\n        }\r\n\r\n    }\r\n\r\n    collectModifiers(): { isAbstract: boolean, isStatic: boolean, visibility: Visibility, isFinal: boolean, isTransient: boolean } {\r\n\r\n        let visibility = Visibility.public;\r\n        let isAbstract = false;\r\n        let isStatic = false;\r\n        let isFinal = false;\r\n        let isTransient = false;\r\n\r\n        let done = false;\r\n\r\n        while (!done) {\r\n\r\n            switch (this.tt) {\r\n                case TokenType.keywordPublic:\r\n                    visibility = Visibility.public;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordPrivate:\r\n                    visibility = Visibility.private;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordProtected:\r\n                    visibility = Visibility.protected;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordStatic:\r\n                    isStatic = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordAbstract:\r\n                    isAbstract = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordFinal:\r\n                    isFinal = true;\r\n                    this.nextToken();\r\n                    break;\r\n                case TokenType.keywordTransient:\r\n                    isTransient = true;\r\n                    this.nextToken();\r\n                    break;\r\n                default: done = true;\r\n            }\r\n\r\n        }\r\n\r\n        return { isAbstract: isAbstract, isStatic: isStatic, visibility: visibility, isFinal: isFinal, isTransient: isTransient };\r\n\r\n    }\r\n\r\n\r\n}","import { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ModuleStore } from \"../parser/Module.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { Interface, Klass } from \"./Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"./Enum.js\";\r\nimport { PrimitiveType, Type, Value } from \"./Types.js\";\r\n\r\ntype SerializedObject = {\r\n    \"!k\"?: string, // Class identifier or object index\r\n    \"!i\": number  // index\r\n}\r\n\r\nexport class JsonTool {\r\n    // to deserialize:\r\n    indexToObjectMap: { [index: number]: Value };\r\n    valuesToResolve: { v: Value, i: number }[];\r\n\r\n    // to serialize:\r\n    objectToIndexMap: Map<RuntimeObject, number>;\r\n    nextIndex: number;\r\n\r\n    toJson(value: Value): string {\r\n        this.objectToIndexMap = new Map();\r\n        this.nextIndex = 0;\r\n        let json = JSON.stringify(this.toJsonObj(value));\r\n        this.objectToIndexMap = null; // free memory\r\n        return json;\r\n    }\r\n\r\n    toJsonObj(value: Value): any {\r\n        let type = value.type;\r\n        let v = value.value;\r\n        if (v == null) return null;\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                let enumObj = <EnumRuntimeObject>v;\r\n                return enumObj.enumValue.ordinal;\r\n            }\r\n\r\n            let rto = <RuntimeObject>v;\r\n            return this.objectToJsonObj(rto);\r\n        } else if (type instanceof ArrayType) {\r\n            let arrayValues: Value[] = v;\r\n            return arrayValues.map(value => this.toJsonObj(value));\r\n        } else {\r\n            // primitive Type\r\n            return value.value;\r\n        }\r\n    }\r\n\r\n    objectToJsonObj(rto: RuntimeObject): SerializedObject {\r\n        // We solve circular object references by serializing an index when the same object occurs more than once.\r\n        let index = this.objectToIndexMap.get(rto);\r\n        if (index != null) {\r\n            return { \"!i\": index };\r\n        }\r\n\r\n        index = this.nextIndex++;\r\n        this.objectToIndexMap.set(rto, index);\r\n        let klass: Klass = <Klass>rto.class;\r\n\r\n        // Don't serialize system classes unless they are explicitely serializable\r\n        if(klass.module.isSystemModule && klass.getMethodBySignature(\"String toJson()\") == null){\r\n            return null; \r\n        }\r\n\r\n        let serializedObject: SerializedObject = { \"!k\": klass.identifier, \"!i\": index };\r\n        while (klass != null) {\r\n            let attributeValues = rto.attributeValues.get(klass.identifier);\r\n            if (attributeValues != null) {\r\n                let first: boolean = true;\r\n                let serializedAttributes: any;\r\n                for (let attribute of klass.attributes) {\r\n                    if (!attribute.isStatic && !attribute.isTransient) {\r\n                        if (first) {\r\n                            first = false;\r\n                            serializedAttributes = {};\r\n                            serializedObject[klass.identifier] = serializedAttributes;\r\n                        }\r\n                        serializedAttributes[attribute.identifier] = this.toJsonObj(attributeValues.get(attribute.identifier));\r\n                    }\r\n                }\r\n            }\r\n\r\n            klass = klass.baseClass;\r\n        }\r\n\r\n        return serializedObject;\r\n    }\r\n\r\n    fromJson(jsonString: string, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): any {\r\n        this.indexToObjectMap = {};\r\n        this.valuesToResolve = [];\r\n\r\n        let obj: any = JSON.parse(jsonString);\r\n        let ret = this.fromJsonObj(obj, type, moduleStore, interpreter);\r\n\r\n        for(let vtr of this.valuesToResolve){\r\n            let value = this.indexToObjectMap[vtr.i];\r\n            if(value != null){\r\n                vtr.v.type = value.type;\r\n                vtr.v.value = value.value;\r\n            }\r\n        }\r\n\r\n        this.indexToObjectMap = null; // free memory\r\n        this.valuesToResolve = null;\r\n        return ret.value;\r\n    }\r\n\r\n    fromJsonObj(obj: any, type: Type, moduleStore: ModuleStore, interpreter: Interpreter): Value {\r\n        if (obj == null) return { type: type, value: null };\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.identifier != \"String\") {\r\n\r\n            if (type instanceof Enum) {\r\n                return {\r\n                    type: type,\r\n                    value: type.indexToInfoMap[obj].object\r\n                }\r\n            }\r\n\r\n            let serializedObject = <SerializedObject>obj;\r\n            return this.objectFromJsonObj(serializedObject, type, moduleStore, interpreter);\r\n\r\n        } else if (type instanceof ArrayType) {\r\n            let jsonArray: any[] = obj;\r\n            return {\r\n                type: type,\r\n                value: jsonArray.map(v => this.fromJsonObj(v, type.arrayOfType, moduleStore, interpreter))\r\n            }\r\n        } else {\r\n            // primitive Type\r\n            return { type: type, value: obj }\r\n        }\r\n\r\n    }\r\n\r\n    objectFromJsonObj(serializedObject: SerializedObject, type: Klass | Interface, moduleStore: ModuleStore, \r\n        interpreter: Interpreter): Value {\r\n\r\n        let identifier: string = serializedObject[\"!k\"];\r\n        let index = serializedObject[\"!i\"];\r\n        if (identifier != null) {\r\n\r\n            let klass1: Klass = <Klass>moduleStore.getType(identifier).type;\r\n            let klass = klass1;\r\n\r\n            let rto: RuntimeObject = interpreter.instantiateObjectImmediately(klass);\r\n            \r\n            while (klass != null) {\r\n                let attributeValues = rto.attributeValues.get(klass.identifier);\r\n                let serializedAttributes = serializedObject[klass.identifier];\r\n                if (attributeValues != null && serializedObject != null) {\r\n                    for (let attribute of klass.attributes) {\r\n                        if (!attribute.isStatic && !attribute.isTransient) {\r\n                            attributeValues.set(attribute.identifier, this.fromJsonObj(serializedAttributes[attribute.identifier], attribute.type, moduleStore, interpreter));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                klass = klass.baseClass;\r\n            }\r\n\r\n            let value: Value = {type: klass1, value: rto};\r\n            this.indexToObjectMap[index] = value;\r\n            return value; \r\n\r\n        } else {\r\n            let index = serializedObject[\"!i\"];\r\n            let value = this.indexToObjectMap[index];\r\n            if (value == null) {\r\n                value = { type: type, value: null };\r\n                this.valuesToResolve.push({ v: value, i: index });\r\n                return value;\r\n            } else {\r\n                return { type: value.type, value: value.value }; // return copy\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { TokenType, TextPosition } from \"../lexer/Token.js\";\r\nimport { ArrayType } from \"../types/Array.js\";\r\nimport { Klass, Interface, TypeVariable } from \"../types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Type, Variable, PrimitiveType } from \"../types/Types.js\";\r\nimport { ClassDeclarationNode, InterfaceDeclarationNode, MethodDeclarationNode, TypeNode, EnumDeclarationNode, TypeParameterNode } from \"./AST.js\";\r\nimport { Module, ModuleStore } from \"./Module.js\";\r\nimport { nullType, intPrimitiveType, booleanPrimitiveType, floatPrimitiveType, doublePrimitiveType, stringPrimitiveType, charPrimitiveType, objectType } from \"../types/PrimitiveTypes.js\";\r\nimport { Enum } from \"../types/Enum.js\";\r\nimport { JsonTool } from \"../types/TypeTools.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype GenericTypeList = { typeNode: TypeNode, module: Module }[];\r\n\r\ntype TypeParameterInfo = {\r\n    tpn: TypeParameterNode;\r\n    tp: TypeVariable;\r\n    ci: Klass | Interface;\r\n    cdn: ClassDeclarationNode | InterfaceDeclarationNode;\r\n    index: number\r\n};\r\n\r\n// TODO: find cyclic references in extends ...\r\nexport class TypeResolver {\r\n\r\n    moduleStore: ModuleStore;\r\n\r\n    classes: ClassDeclarationNode[];\r\n    interfaces: InterfaceDeclarationNode[];\r\n    enums: EnumDeclarationNode[];\r\n\r\n    moduleToTypeParameterListMap: Map<Module, TypeVariable[]> = new Map();\r\n\r\n    unresolvedTypes: Map<Module, TypeNode[]>;\r\n\r\n    genericTypes: GenericTypeList = [];\r\n    genericTypesInClassDefinitions: GenericTypeList = [];\r\n\r\n    typeParameterList: TypeParameterInfo[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    start(moduleStore: ModuleStore) {\r\n\r\n        this.classes = [];\r\n        this.interfaces = [];\r\n        this.enums = [];\r\n        this.unresolvedTypes = new Map();\r\n\r\n        this.moduleStore = moduleStore;\r\n\r\n        this.resolveTypesInModules();\r\n\r\n        this.setupClassesAndInterfaces();\r\n\r\n        let unresolvedGenericTypesInClasses = this.resolveTypeVariables();\r\n\r\n        this.resolveUnresolvedTypes(false);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypesInClasses);\r\n\r\n        this.resolveExtendsImplements();\r\n\r\n        let unresolvedGenericTypes = this.resolveGenericTypes(this.genericTypes);\r\n\r\n        this.resolveUnresolvedTypes(true);\r\n\r\n        this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n        this.setupMethodsAndAttributes();\r\n\r\n        this.checkDoubleIdentifierDefinition();\r\n\r\n        this.checkGenericTypesAgainsTypeGuards();\r\n\r\n    }\r\n\r\n\r\n\r\n    checkGenericTypesAgainsTypeGuards() {\r\n\r\n        for (let tn of this.genericTypes) {\r\n            if (tn.typeNode.genericParameterTypes == null) continue; // Error in resolveGenericType => nothing to do.\r\n\r\n            let ci: Klass | Interface = <any>tn.typeNode.resolvedType;\r\n\r\n            if (ci.isGenericVariantFrom == null) continue;\r\n\r\n            if (ci.typeVariables.length != ci.isGenericVariantFrom.typeVariables.length) {\r\n                tn.module.errors[2].push({\r\n                    position: tn.typeNode.position,\r\n                    text: \"Der Generische Typ \" + ci.isGenericVariantFrom.identifier + \" hat \" + ci.isGenericVariantFrom.typeVariables.length + \" Typparameter. Hier wurden aber \" + ci.typeVariables.length + \" angegeben.\",\r\n                    level: \"error\"\r\n                });\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < ci.typeVariables.length; i++) {\r\n\r\n                let error: string = null;\r\n\r\n                let actualType = ci.typeVariables[i];\r\n                let typeGuard = ci.isGenericVariantFrom.typeVariables[i];\r\n                let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n                actualType.scopeFrom = typeGuard.scopeFrom;\r\n                actualType.scopeTo = typeGuard.scopeTo;\r\n                actualType.identifier = typeGuard.identifier;\r\n\r\n                error = \"\";\r\n                if (!actualType.type.hasAncestorOrIs(typeGuard.type)) {\r\n                    error += \"Die Klasse \" + actualType.type.identifier + \" ist keine Unterklasse von \" + typeGuard.type.identifier + \" und pass damit nicht zum Typparamter \" + typeGuard.identifier + \" der Klasse \" + ci.isGenericVariantFrom.identifier + \". \";\r\n                }\r\n\r\n                let ifList: string[] = [];\r\n                for (let tgInterface of typeGuard.type.implements) {\r\n                    if (!actualType.type.implementsInterface(tgInterface)) {\r\n                        ifList.push(tgInterface.identifier);\r\n                    }\r\n                }\r\n\r\n                if (ifList.length > 0) {\r\n                    error += \"Die Klasse \" + actualType.identifier + \" implementiert nicht die Interfaces \" + ifList.join(\", \");\r\n                }\r\n\r\n                if (error != \"\") {\r\n                    tn.module.errors[2].push({\r\n                        position: genericParameterType.position,\r\n                        text: \"Der angegebene Wert des Typparameters passt nicht zur Definition: \" + error,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            this.adjustMethodsAndAttributesToTypeParameters(ci);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    adjustMethodsAndAttributesToTypeParameters(classOrInterface: Klass | Interface) {\r\n\r\n        if (classOrInterface != null && classOrInterface.isGenericVariantFrom != null && classOrInterface.typeVariables.length != 0) {\r\n\r\n            let methodListAltered: boolean = false;\r\n            let newMethodList: Method[] = [];\r\n            for (let m of classOrInterface.methods) {\r\n                let newMethod = this.getAdjustedMethod(m, classOrInterface.typeVariables);\r\n                methodListAltered = methodListAltered || newMethod.altered;\r\n                newMethodList.push(newMethod.newMethod);\r\n            }\r\n\r\n            if (methodListAltered) classOrInterface.methods = newMethodList;\r\n\r\n            if (classOrInterface instanceof Klass) {\r\n\r\n                let newAttributes: Attribute[] = [];\r\n                let newAttributeMap: Map<string, Attribute> = new Map();\r\n                let attributesAltered: boolean = false;\r\n\r\n                for (let attribute of classOrInterface.attributes) {\r\n                    let newAttribute = this.getAdjustedAttribute(attribute, classOrInterface.typeVariables);\r\n                    attributesAltered = attributesAltered || newAttribute.altered;\r\n                    newAttributes.push(newAttribute.newAttribute);\r\n                    newAttributeMap.set(attribute.identifier, newAttribute.newAttribute);\r\n                }\r\n\r\n                if (attributesAltered) {\r\n                    classOrInterface.attributes = newAttributes;\r\n                    classOrInterface.attributeMap = newAttributeMap;\r\n                }\r\n\r\n                this.adjustMethodsAndAttributesToTypeParameters(classOrInterface.baseClass);\r\n\r\n                // for (let impl of classOrInterface.implements) {\r\n                //     this.adjustMethodsAndAttributesToTypeParameters(impl);\r\n                // }\r\n            } else {\r\n                for (let ext of classOrInterface.extends) {\r\n                    this.adjustMethodsAndAttributesToTypeParameters(ext);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedAttribute(attribute: Attribute, typeVariables: TypeVariable[]): { altered: boolean, newAttribute: Attribute } {\r\n\r\n        let nt = this.getAdjustedType(attribute.type, typeVariables, true);\r\n        if (nt.altered) {\r\n            let a: Attribute = Object.create(attribute);\r\n            a.type = nt.newType;\r\n            return { altered: true, newAttribute: a }\r\n        } else {\r\n            return { altered: false, newAttribute: attribute }\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedMethod(method: Method, typeVariables: TypeVariable[]): { altered: boolean, newMethod: Method } {\r\n\r\n        let nrt = this.getAdjustedType(method.returnType, typeVariables, true);\r\n\r\n        let parameterAltered: boolean = false;\r\n        let newParameters: Variable[] = [];\r\n        for (let p of method.parameterlist.parameters) {\r\n            let nt = this.getAdjustedType(p.type, typeVariables, false);\r\n            if (nt.altered) {\r\n                parameterAltered = true;\r\n                let pNew: Variable = Object.create(p);\r\n                pNew.type = nt.newType;\r\n                newParameters.push(pNew);\r\n            } else {\r\n                newParameters.push(p);\r\n            }\r\n        }\r\n\r\n        if (nrt.altered || parameterAltered) {\r\n            let newMethod: Method = Object.create(method);\r\n            if (nrt.altered) newMethod.returnType = nrt.newType;\r\n            if (parameterAltered) {\r\n                newMethod.parameterlist = new Parameterlist(newParameters);\r\n            }\r\n            return { altered: true, newMethod: newMethod }\r\n        } else {\r\n            return { altered: false, newMethod: method };\r\n        }\r\n\r\n    }\r\n\r\n    getAdjustedType(type: Type, typeVariables: TypeVariable[], adjustMethodsAndAttributesRecursive: boolean): { altered: boolean, newType: Type } {\r\n\r\n        if (type == null) return { altered: false, newType: type };\r\n\r\n        if (type[\"isTypeVariable\"] == true) {\r\n            for (let tv of typeVariables) {\r\n                if (tv.identifier == type.identifier) {\r\n                    return { altered: true, newType: tv.type };\r\n                }\r\n            }\r\n            return { altered: false, newType: type };\r\n        }\r\n\r\n        if ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0) {\r\n            let newTypeVariables: TypeVariable[] = [];\r\n            let altered: boolean = false;\r\n            for (let tv of type.typeVariables) {\r\n                let nt = this.getAdjustedType(tv.type, typeVariables, false);\r\n                if (nt.altered) {\r\n                    newTypeVariables.push({\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: <Klass>nt.newType\r\n                    })\r\n                    altered = true;\r\n                } else {\r\n                    newTypeVariables.push(tv);\r\n                }\r\n            }\r\n            if (altered) {\r\n                let newClassInterface = type.clone();\r\n                newClassInterface.typeVariables = newTypeVariables;\r\n                if (adjustMethodsAndAttributesRecursive) this.adjustMethodsAndAttributesToTypeParameters(newClassInterface);\r\n                return { altered: true, newType: newClassInterface }\r\n            } else {\r\n                return { altered: false, newType: type }\r\n            }\r\n        }\r\n\r\n        if(type instanceof ArrayType){\r\n            let nt = this.getAdjustedType(type.arrayOfType, typeVariables, adjustMethodsAndAttributesRecursive);\r\n            return {\r\n                altered: nt.altered,\r\n                newType: nt.altered ? new ArrayType(nt.newType) : type\r\n            }\r\n        }\r\n\r\n        return { altered: false, newType: type };\r\n    }\r\n\r\n    resolveGenericTypes(genericTypes: GenericTypeList): GenericTypeList {\r\n        let done: boolean = false;\r\n        let todoList: GenericTypeList = genericTypes.slice(0);\r\n        while (!done) {\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tn = todoList[i];\r\n\r\n                if (this.resolveGenericType(tn)) {\r\n                    done = false;\r\n                }\r\n                if (tn.typeNode.genericParameterTypes == null || tn.typeNode.genericParameterTypesResolved != null) {\r\n                    todoList.splice(todoList.indexOf(tn), 1);\r\n                    i--;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return todoList;\r\n    }\r\n\r\n    // returns true if something new could be resolved\r\n    resolveGenericType(tn: { typeNode: TypeNode, module: Module }): boolean {\r\n\r\n        if (tn.typeNode.genericParameterTypesResolved != null) return false;\r\n        if (tn.typeNode.genericParameterTypes == null) return true;\r\n\r\n        /**\r\n         * e.g. Map<Integer, String> test = new Map<>();\r\n         * Subsequent Code processes the type Map<Integer, String>\r\n         */\r\n\r\n        let ci: Klass | Interface = <any>tn.typeNode.resolvedType; // in example: Map\r\n        if (ci == null || !(ci instanceof Interface || ci instanceof Klass)) { // There had been an error... (in example: Map has not been resolved)\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return false; // => exit gracefully\r\n        }\r\n\r\n        if (!ci.typeVariablesReady) return false;\r\n\r\n        let parameterTypes: (Klass | Interface)[] = [];\r\n        for (let i = 0; i < tn.typeNode.genericParameterTypes.length; i++) {\r\n            let genericParameterType = tn.typeNode.genericParameterTypes[i];\r\n            let resolvedType = genericParameterType.resolvedType;\r\n\r\n            if (resolvedType == null) {\r\n                return false;\r\n            }\r\n\r\n            if (genericParameterType.genericParameterTypes != null && genericParameterType.genericParameterTypesResolved == null) {\r\n                return false; // first resolve this type!\r\n            }\r\n\r\n            if (!(resolvedType instanceof Interface || resolvedType instanceof Klass)) {\r\n                tn.module.errors[2].push({\r\n                    position: genericParameterType.position,\r\n                    text: \"Hier wird ein Interface- oder Klassentyp erwartet. Der Typ \" + genericParameterType.identifier + \" ist aber keiner.\",\r\n                    level: \"error\"\r\n                });\r\n                tn.typeNode.genericParameterTypes = null;\r\n                return true; // => exit gracefully\r\n            }\r\n\r\n            parameterTypes.push(<any>genericParameterType.resolvedType);\r\n\r\n        }\r\n\r\n        let typeVariablesOldToNewMap: Map<Klass, Klass> = new Map();\r\n\r\n        if (ci.typeVariables.length != parameterTypes.length) {\r\n            tn.module.errors[2].push({\r\n                position: tn.typeNode.position,\r\n                text: (ci instanceof Klass ? \"Die Klasse \" : \"Das Interface \") + ci.identifier + \" hat \" + ci.typeVariables.length + \" Typparameter, hier sind aber \" + parameterTypes.length + \" angegeben.\",\r\n                level: \"error\"\r\n            });\r\n            tn.typeNode.genericParameterTypes = null;\r\n            return true; // => exit gracefully\r\n        }\r\n\r\n        let i = 0;\r\n        for (let type of parameterTypes) {\r\n\r\n            let oldTypeVariable = ci.typeVariables[i];\r\n\r\n            if (type instanceof Interface) {\r\n                let type1 = objectType.clone();\r\n                type1.implements.push(type);\r\n                type = type1;\r\n            }\r\n\r\n            let newTypeVariable = {\r\n                identifier: oldTypeVariable.identifier,\r\n                scopeFrom: oldTypeVariable.scopeFrom,\r\n                scopeTo: oldTypeVariable.scopeTo,\r\n                type: type\r\n            };\r\n\r\n            typeVariablesOldToNewMap.set(ci.typeVariables[i].type, newTypeVariable.type)\r\n            i++;\r\n        }\r\n\r\n        let newCi =\r\n            this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(ci, typeVariablesOldToNewMap);\r\n\r\n        tn.typeNode.resolvedType = newCi;\r\n        tn.typeNode.genericParameterTypesResolved = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    propagateTypeParameterToBaseClassesAndImplementedInterfaces(classOrInterface: Klass | Interface,\r\n        typeVariablesOldToNewMap: Map<Klass, Klass>): Klass | Interface {\r\n\r\n        if (classOrInterface instanceof Klass) {\r\n            let newClass: Klass = classOrInterface.clone();\r\n\r\n            newClass.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newClass.typeVariables.push(tv1);\r\n            }\r\n\r\n            let baseKlass = classOrInterface.baseClass;\r\n            if (baseKlass != null && baseKlass.isGenericVariantFrom != null) {\r\n\r\n                newClass.setBaseClass(<Klass>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(baseKlass, typeVariablesOldToNewMap));\r\n\r\n            }\r\n\r\n            newClass.implements = [];\r\n            for (let impl of classOrInterface.implements) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newClass.implements.push(impl);\r\n                } else {\r\n                    newClass.implements.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newClass;\r\n\r\n        } else {\r\n            let newInterface: Interface = classOrInterface.clone();\r\n\r\n            newInterface.typeVariables = [];\r\n            for (let tv of classOrInterface.typeVariables) {\r\n                let newType = typeVariablesOldToNewMap.get(tv.type);\r\n                let tv1 = tv;\r\n                if (newType != null) {\r\n                    tv1 = {\r\n                        identifier: tv.identifier,\r\n                        scopeFrom: tv.scopeFrom,\r\n                        scopeTo: tv.scopeTo,\r\n                        type: newType\r\n                    }\r\n                }\r\n                newInterface.typeVariables.push(tv1);\r\n            }\r\n\r\n            newInterface.extends = [];\r\n            for (let impl of classOrInterface.extends) {\r\n                if (impl.isGenericVariantFrom == null) {\r\n                    newInterface.extends.push(impl);\r\n                } else {\r\n                    newInterface.extends.push(<Interface>this.propagateTypeParameterToBaseClassesAndImplementedInterfaces(impl, typeVariablesOldToNewMap));\r\n                }\r\n            }\r\n\r\n            return newInterface;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    checkDoubleIdentifierDefinition() {\r\n        let identifierModuleMap: Map<string, Module> = new Map();\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            for (let type of module.typeStore.typeList) {\r\n                let otherModule = identifierModuleMap.get(type.identifier);\r\n                if (otherModule != null) {\r\n                    module.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                        position: type.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                    let otherType = otherModule.typeStore.getType(type.identifier);\r\n                    if (otherType != null) {\r\n                        otherModule.errors[1].push({\r\n                            text: \"Der Typbezeichner \" + type.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                                otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                            position: otherType.declaration.position,\r\n                            level: \"error\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    identifierModuleMap.set(type.identifier, module);\r\n                }\r\n            }\r\n        }\r\n\r\n        let baseModule = this.moduleStore.getBaseModule();\r\n\r\n        for (let tp of this.typeParameterList) {\r\n            let module = tp.ci.module;\r\n            let otherModule = identifierModuleMap.get(tp.tpn.identifier);\r\n            if (otherModule == null) {\r\n                let systemType = baseModule.typeStore.getType(tp.tpn.identifier);\r\n                if (systemType != null) otherModule = baseModule;\r\n            }\r\n            if (otherModule != null) {\r\n                module.errors[1].push({\r\n                    text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                        module.file.name + \" und \" + otherModule.file.name + \".\",\r\n                    position: tp.tpn.position,\r\n                    level: \"error\"\r\n                });\r\n                let otherType = otherModule.typeStore.getType(tp.tpn.identifier);\r\n                if (otherType != null && otherModule != baseModule) {\r\n                    otherModule.errors[1].push({\r\n                        text: \"Der Typbezeichner \" + tp.tpn.identifier + \" wurde mehrfach definiert, nämlich in den Modulen \" +\r\n                            otherModule.file.name + \" und \" + module.file.name + \".\",\r\n                        position: otherType.declaration.position,\r\n                        level: \"error\"\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    resolveUnresolvedTypes(lastPass: boolean) {\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            module.dependsOnModules = new Map();\r\n        }\r\n\r\n        for (let module of this.moduleStore.getModules(false)) {\r\n            let ut = this.unresolvedTypes.get(module);\r\n            let utNew: TypeNode[] = [];\r\n            for (let type of ut) {\r\n                if (!this.resolveType(type, module, lastPass)) {\r\n                    utNew.push(type);\r\n                }\r\n            }\r\n            this.unresolvedTypes.set(module, utNew);\r\n        }\r\n    }\r\n\r\n    addFromJsonMethod(klass: Klass) {\r\n        let interpreter = this.main.getInterpreter();\r\n        klass.addMethod(new Method(\"fromJson\", new Parameterlist([\r\n            { identifier: \"jsonString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), klass,\r\n            (parameters) => {\r\n                let json: string = parameters[1].value;\r\n                return new JsonTool().fromJson(json, klass, this.moduleStore, interpreter);\r\n            }, false, true, `Konvertiert eine Json-Zeichenkette in ein ${klass.identifier}-Objekt (\"deserialisieren\"). Vor dem Deserialisieren eines Objekts werden die Attributinitialisierer angewandt und - falls vorhanden - ein parameterloser Konstruktor ausgeführt. Der Algorithmus kommt auch mit zyklischen Objektreferenzen zurecht.`, false));\r\n\r\n    }\r\n\r\n    addToJsonMethod(klass: Klass) {\r\n        klass.addMethod(new Method(\"toJson\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n                return new JsonTool().toJson(parameters[0]);\r\n            }, false, false, `Konvertiert ein Objekt (rekursiv mitsamt referenzierter Objekte) in eine Json-Zeichenkette. Nicht konvertiert werden Systemklassen (außer: ArrayList) sowie mit dem Schlüsselwort transient ausgezeichnete Attribute.`));\r\n\r\n    }\r\n\r\n\r\n    setupMethodsAndAttributes() {\r\n\r\n        let classesOrEnums: (ClassDeclarationNode | EnumDeclarationNode)[] = [];\r\n        classesOrEnums = classesOrEnums.concat(this.classes);\r\n        classesOrEnums = classesOrEnums.concat(this.enums);\r\n\r\n        for (let cn of classesOrEnums) {\r\n            for (let mn of cn.methods) {\r\n                let m: Method = this.setupMethod(mn, cn.resolvedType.module, cn.resolvedType);\r\n                if(mn.commentBefore != null) m.documentation = \"\" + mn.commentBefore.value;\r\n                if (m != null) {\r\n                    cn.resolvedType.addMethod(m);\r\n                }\r\n            }\r\n\r\n            this.addFromJsonMethod(cn.resolvedType);\r\n            this.addToJsonMethod(cn.resolvedType);\r\n\r\n            for (let att of cn.attributes) {\r\n\r\n                this.resolveType(att.attributeType, cn.resolvedType.module, true);\r\n                let type = att.attributeType.resolvedType;\r\n                if (type == null) {\r\n                    continue;\r\n                }\r\n\r\n                let attribute: Attribute = new Attribute(att.identifier, type, null, att.isStatic, att.visibility, att.isFinal);\r\n                if(att.commentBefore != null) attribute.documentation = \"\" + att.commentBefore.value;\r\n                attribute.annotation = att.annotation;\r\n                attribute.isTransient = att.isTransient;\r\n                if (cn.resolvedType.attributeMap.get(attribute.identifier) != null) {\r\n                    cn.resolvedType.module.errors[2].push({\r\n                        text: \"Es darf nicht mehrere Attribute mit demselben Bezeichner '\" + attribute.identifier + \"' in derselben Klassse geben.\",\r\n                        position: att.position, level: \"error\"\r\n                    });\r\n                }\r\n                cn.resolvedType.addAttribute(attribute);\r\n\r\n                this.pushUsagePosition(cn.resolvedType.module, att.position, attribute);\r\n                attribute.declaration = { module: cn.resolvedType.module, position: att.position };\r\n\r\n            }\r\n        }\r\n\r\n        for (let ic of this.interfaces) {\r\n            for (let mn of ic.methods) {\r\n                let m1: Method = this.setupMethod(mn, ic.resolvedType.module, ic.resolvedType);\r\n                if (m1 != null) {\r\n                    ic.resolvedType.addMethod(m1);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setupMethod(mn: MethodDeclarationNode, m: Module, c: Klass | Interface): Method {\r\n\r\n        let typesOK = true;\r\n\r\n        typesOK = typesOK && this.resolveType(mn.returnType, m, true);\r\n\r\n        let parameters: Variable[] = [];\r\n        for (let par of mn.parameters) {\r\n            typesOK = typesOK && this.resolveType(par.parameterType, m, true);\r\n            if (typesOK) {\r\n                let parameter = {\r\n                    definition: par.position,\r\n                    identifier: par.identifier,\r\n                    usagePositions: new Map(),\r\n                    type: par.parameterType.resolvedType,\r\n                    declaration: { module: m, position: par.position },\r\n                    isFinal: par.isFinal,\r\n                    isEllipsis: par.isEllipsis\r\n                };\r\n                parameters.push(parameter);\r\n                this.pushUsagePosition(m, par.position, parameter);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        let pl: Parameterlist = new Parameterlist(parameters);\r\n\r\n        if (typesOK) {\r\n            let method = new Method(mn.identifier, pl, mn.returnType.resolvedType, null, mn.isAbstract, mn.isStatic);\r\n            method.isConstructor = mn.identifier == c.identifier;\r\n            method.visibility = mn.visibility;\r\n            method.isConstructor = mn.isConstructor;\r\n            mn.resolvedType = method;\r\n            method.annotation = mn.annotation;\r\n\r\n            this.pushUsagePosition(m, mn.position, method);\r\n            method.declaration = {\r\n                module: m,\r\n                position: mn.position\r\n            }\r\n\r\n            return method;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    pushUsagePosition(m: Module, position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n\r\n        m.addIdentifierPosition(position, element);\r\n\r\n        if (element instanceof PrimitiveType) {\r\n            return;\r\n        }\r\n\r\n        let positionList: TextPosition[] = element.usagePositions.get(m);\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            element.usagePositions.set(m, positionList);\r\n        }\r\n\r\n        positionList.push(position);\r\n\r\n    }\r\n\r\n    resolveType(tn: TypeNode, m: Module, lastPass: boolean): boolean {\r\n        if (tn.resolvedType == null) {\r\n            let typeModule = this.moduleStore.getType(tn.identifier);\r\n            if (typeModule != null) {\r\n                let type = typeModule.type;\r\n                m.dependsOnModules.set(typeModule.module, true);\r\n                this.pushUsagePosition(m, tn.position, type);\r\n                type = getArrayType(type, tn.arrayDimension);\r\n                this.registerGenericType(tn, m, false);\r\n                tn.resolvedType = type;\r\n                return true;\r\n            }\r\n\r\n            let typeParameterList = this.moduleToTypeParameterListMap.get(m);\r\n            if (typeParameterList != null) {\r\n                for (let tg of typeParameterList) {\r\n                    if (tg.identifier == tn.identifier) {\r\n                        let position = tn.position;\r\n                        if (position.line > tg.scopeFrom.line || position.line == tg.scopeFrom.line && position.column >= tg.scopeFrom.column) {\r\n                            if (position.line < tg.scopeTo.line || position.line == tg.scopeTo.line && position.column <= tg.scopeTo.column) {\r\n                                this.pushUsagePosition(m, tn.position, tg.type);\r\n                                tn.resolvedType = tg.type;\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (lastPass) {\r\n\r\n                let typKlasse = (tn.identifier.length > 0 && tn.identifier[0].toUpperCase() == tn.identifier[0]) ? \"Die Klasse\" : \"Der Typ\";\r\n\r\n                m.errors[2].push({\r\n                    position: tn.position,\r\n                    text: typKlasse + \" \" + tn.identifier + \" konnte nicht gefunden werden.\" +\r\n                        (tn.identifier == \"string\" ? \" Meinten Sie String (großgeschrieben)?\" : \"\"),\r\n                    level: \"error\",\r\n                    quickFix: (tn.identifier == \"string\") ? {\r\n                        title: \"String groß schreiben\",\r\n                        editsProvider: (uri) => {\r\n                            return [\r\n                                {\r\n                                    resource: uri,\r\n                                    edit: {\r\n                                        range: { startLineNumber: tn.position.line, startColumn: tn.position.column - 1, endLineNumber: tn.position.line, endColumn: tn.position.column + 6 },\r\n                                        text: \"String\"\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n\r\n                    } : null\r\n                });\r\n            }\r\n            tn.resolvedType = null;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resolveExtendsImplements() {\r\n        for (let cn of this.classes) {\r\n\r\n            let c = cn.resolvedType;\r\n            for (let iNode of cn.implements) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei implements... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.implements.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n            if (cn.extends != null) {\r\n                this.resolveType(cn.extends, c.module, true);\r\n                let eType = cn.extends.resolvedType;\r\n                if (eType == null || !(eType instanceof Klass)) {\r\n                    c.module.errors[2].push({\r\n                        position: cn.extends.position,\r\n                        text: \"Der Typ \" + cn.extends.identifier + \" ist keine Klasse, darf also nicht hinter extends stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n\r\n                c.setBaseClass(<Klass>eType);\r\n                cn.extends.resolvedType = eType;\r\n            } else {\r\n                c.setBaseClass(<Klass>this.moduleStore.getType(\"Object\").type)\r\n            }\r\n\r\n        }\r\n        for (let interf of this.interfaces) {\r\n\r\n            let c = interf.resolvedType;\r\n            for (let iNode of interf.extends) {\r\n                this.resolveType(iNode, c.module, true);\r\n                let iType = iNode.resolvedType;\r\n                if (iType == null) {\r\n                    continue;\r\n                }\r\n                if (!(iType instanceof Interface)) {\r\n                    c.module.errors[2].push({\r\n                        position: iNode.position,\r\n                        text: \"Der Typ \" + iNode.identifier + \" ist kein interface, darf also nicht bei extends... stehen.\",\r\n                        level: \"error\"\r\n                    });\r\n                    continue;\r\n                }\r\n                c.extends.push(<Interface>iType);\r\n                iNode.resolvedType = iType;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    setupClassesAndInterfaces() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            if (m.classDefinitionsAST != null) {\r\n                for (let cdn of m.classDefinitionsAST) {\r\n                    switch (cdn.type) {\r\n                        case TokenType.keywordClass:\r\n                            this.classes.push(cdn);\r\n                            let c = new Klass(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) c.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = c;\r\n                            c.visibility = cdn.visibility;\r\n                            c.isAbstract = cdn.isAbstract;\r\n                            m.typeStore.addType(c);\r\n                            this.pushUsagePosition(m, cdn.position, c);\r\n                            c.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, c);\r\n                            if (cdn.extends != null) this.registerGenericType(cdn.extends, m, true);\r\n                            if (cdn.implements != null) {\r\n                                for (let im of cdn.implements) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n                        case TokenType.keywordEnum:\r\n                            this.enums.push(cdn);\r\n                            let e = new Enum(cdn.identifier, m, cdn.values);\r\n                            if(cdn.commentBefore != null) e.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = e;\r\n                            e.visibility = cdn.visibility;\r\n                            m.typeStore.addType(e);\r\n                            this.pushUsagePosition(m, cdn.position, e);\r\n                            e.declaration = { module: m, position: cdn.position };\r\n                            break;\r\n                        case TokenType.keywordInterface:\r\n                            this.interfaces.push(cdn);\r\n                            let i = new Interface(cdn.identifier, m);\r\n                            if(cdn.commentBefore != null) i.documentation = \"\" + cdn.commentBefore.value;\r\n                            cdn.resolvedType = i;\r\n                            m.typeStore.addType(i);\r\n                            this.pushUsagePosition(m, cdn.position, i);\r\n                            i.declaration = { module: m, position: cdn.position };\r\n                            this.registerTypeVariables(cdn, i);\r\n                            if (cdn.extends != null) {\r\n                                for (let im of cdn.extends) this.registerGenericType(im, m, true);\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resolveTypeVariables(): GenericTypeList {\r\n\r\n        let todoList = this.typeParameterList.slice(0);\r\n        let done = false;\r\n\r\n        let unresolvedGenericTypes: GenericTypeList = this.genericTypesInClassDefinitions.slice(0);\r\n\r\n        while (!done) {\r\n            this.resolveUnresolvedTypes(false);\r\n            unresolvedGenericTypes = this.resolveGenericTypes(unresolvedGenericTypes);\r\n\r\n            done = true;\r\n            for (let i = 0; i < todoList.length; i++) {\r\n                let tv = todoList[i];\r\n                let ready: boolean = true;\r\n                let ext: TypeNode[] = tv.tpn.extends == null ? [] : [tv.tpn.extends];\r\n                if (tv.tpn.implements != null) ext = ext.concat(tv.tpn.implements);\r\n                for (let extType of ext) {\r\n                    if (extType.genericParameterTypes != null && !(extType.genericParameterTypesResolved == true)) {\r\n                        ready = false;\r\n                    }\r\n                }\r\n\r\n                if (ready) {\r\n                    this.resolveTypeVariable(tv);\r\n                    todoList.splice(todoList.indexOf(tv), 1);\r\n                    i--;\r\n                    done = false;\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return unresolvedGenericTypes;\r\n    }\r\n\r\n\r\n    resolveTypeVariable(tp: TypeParameterInfo) {\r\n\r\n\r\n        let typeParameterKlass: Klass;\r\n        if (tp.tpn.extends != null && tp.tpn.extends.resolvedType != null) {\r\n            typeParameterKlass = (<Klass>tp.tpn.extends.resolvedType).clone();\r\n        } else {\r\n            typeParameterKlass = objectType.clone();\r\n        }\r\n\r\n        typeParameterKlass.identifier = tp.tpn.identifier;\r\n        typeParameterKlass.isTypeVariable = true;\r\n\r\n        typeParameterKlass.declaration = {\r\n            module: tp.ci.module,\r\n            position: tp.tpn.position\r\n        };\r\n\r\n\r\n        if (tp.tpn.implements != null) {\r\n            for (let impl of tp.tpn.implements) {\r\n                if (typeParameterKlass.implements.indexOf(<Interface>impl.resolvedType) < 0) {\r\n                    typeParameterKlass.implements.push(<Interface>impl.resolvedType);\r\n                }\r\n            }\r\n        }\r\n\r\n        let tp1: TypeVariable = {\r\n            identifier: tp.tpn.identifier,\r\n            type: typeParameterKlass,\r\n            scopeFrom: tp.cdn.position,\r\n            scopeTo: tp.cdn.scopeTo\r\n        };\r\n\r\n        tp.ci.typeVariables[tp.index] = tp1;\r\n        tp.ci.typeVariablesReady = true;\r\n        for (let tv of tp.ci.typeVariables) if (tv == null) tp.ci.typeVariablesReady = false;\r\n\r\n        let typeParameterList = this.moduleToTypeParameterListMap.get(tp.ci.module);\r\n        if (typeParameterList == null) {\r\n            typeParameterList = [];\r\n            this.moduleToTypeParameterListMap.set(tp.ci.module, typeParameterList);\r\n        }\r\n\r\n        typeParameterList.push(tp1);\r\n\r\n        this.pushUsagePosition(tp.ci.module, tp.tpn.position, typeParameterKlass);\r\n\r\n    }\r\n\r\n    registerTypeVariables(cdn: ClassDeclarationNode | InterfaceDeclarationNode, classOrInterface: Klass | Interface) {\r\n        let index = 0;\r\n        for (let typeParameter of cdn.typeParameters) {\r\n            if (typeParameter.extends != null) this.registerGenericType(typeParameter.extends, classOrInterface.module, true);\r\n            if (typeParameter.implements != null) {\r\n                for (let im of typeParameter.implements) {\r\n                    this.registerGenericType(im, classOrInterface.module, true);\r\n                }\r\n            }\r\n\r\n            classOrInterface.typeVariablesReady = false;\r\n            classOrInterface.typeVariables.push(null); // leave room\r\n\r\n            this.typeParameterList.push({\r\n                tpn: typeParameter, tp: {\r\n                    identifier: typeParameter.identifier,\r\n                    type: null,\r\n                    scopeFrom: cdn.position,\r\n                    scopeTo: cdn.scopeTo\r\n                }, ci: classOrInterface, cdn: cdn,\r\n                index: index++\r\n            });\r\n        }\r\n    }\r\n\r\n    resolveTypesInModules() {\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            let ut: TypeNode[] = [];\r\n            this.unresolvedTypes.set(m, ut);\r\n            for (let tn of m.typeNodes) {\r\n                if (tn.resolvedType == null) {\r\n                    let typeModule = this.moduleStore.getType(tn.identifier);\r\n                    if (typeModule != null) {\r\n                        let type = typeModule.type;\r\n                        this.pushUsagePosition(m, tn.position, type);\r\n                        tn.resolvedType = getArrayType(type, tn.arrayDimension);\r\n                        this.registerGenericType(tn, m, false);\r\n                    } else {\r\n                        ut.push(tn);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    registerGenericType(typeNode: TypeNode, module: Module, isInClassDefinition: boolean) {\r\n        if (typeNode.genericParameterTypes != null) {\r\n            if (isInClassDefinition) {\r\n                this.genericTypesInClassDefinitions.push({ typeNode: typeNode, module: module });\r\n            } else {\r\n                this.genericTypes.push({ typeNode: typeNode, module: module });\r\n            }\r\n        } else {\r\n            // new ArrayList<>() (without type Parameters!) should be castable to ANY other type with same name regarldess of it's type variable types (Java 7-style!)\r\n            let type = typeNode.resolvedType;\r\n            if (type != null && type instanceof Klass && type.typeVariables.length > 0) {\r\n                let type1 = <Klass>type.clone();\r\n                type1.typeVariables = []; // now this type can cast to ANY other type with same name regardless of it's type variable types!\r\n                typeNode.resolvedType = type1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getArrayType(type: Type, arrayDimension: number) {\r\n    while (arrayDimension > 0) {\r\n        type = new ArrayType(type);\r\n        arrayDimension--;\r\n    }\r\n    return type;\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver } from \"./parser/TypeResolver.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { Klass, Interface } from \"./types/Class.js\";\r\nimport { SemicolonAngel } from \"./parser/SemicolonAngel.js\";\r\n\r\nexport enum CompilerStatus {\r\n    compiling, error, compiledButNothingToRun, readyToRun\r\n}\r\n\r\nexport class Compiler {\r\n\r\n    compilerStatus: CompilerStatus = CompilerStatus.compiledButNothingToRun;\r\n\r\n    atLeastOneModuleIsStartable: boolean;\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    compile(moduleStore: ModuleStore): Error[] {\r\n\r\n        this.compilerStatus = CompilerStatus.compiling;\r\n\r\n        let t0 = performance.now();\r\n\r\n        moduleStore.clearUsagePositions();\r\n\r\n        let lexer = new Lexer();\r\n\r\n        // 1st pass: lexing\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.file.dirty = false;\r\n            m.clear();\r\n\r\n            let lexed = lexer.lex(m.getProgramTextFromMonacoModel());\r\n            m.errors[0] = lexed.errors;\r\n            m.tokenList = lexed.tokens;\r\n            m.bracketError = lexed.bracketError;\r\n            if(m.file.name == this.main.getCurrentlyEditedModule().file.name){\r\n                if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(lexed.bracketError);\r\n            }\r\n        }\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        this.main.getSemicolonAngel().startRegistering();\r\n\r\n        let parser: Parser = new Parser(false);\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            parser.parse(m);\r\n        }\r\n\r\n        // 3rd pass: resolve types and populate typeStores; checks intermodular dependencies\r\n\r\n        let typeResolver: TypeResolver = new TypeResolver(this.main);\r\n\r\n        // Klass.count = 0;\r\n        // Interface.count = 0;\r\n        typeResolver.start(moduleStore);\r\n        // console.log(\"Klass-Klone: \" + Klass.count + \", Interface-Klone: \" + Interface.count);\r\n\r\n        // 4th pass: code generation\r\n\r\n        let codeGenerator = new CodeGenerator();\r\n\r\n        for (let m of moduleStore.getModules(false)) {\r\n            codeGenerator.start(m, moduleStore);\r\n        }\r\n\r\n        let errorfree = true;\r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.dependsOnModulesWithErrors = m.hasErrors();\r\n            if(m.dependsOnModulesWithErrors) errorfree = false;\r\n        }\r\n\r\n        let done = false;\r\n        while(!done){\r\n            done = true;\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if(!m.dependsOnModulesWithErrors)\r\n                for (let m1 of moduleStore.getModules(false)) {\r\n                    if(m.dependsOnModules.get(m1) && m1.dependsOnModulesWithErrors){\r\n                        m.dependsOnModulesWithErrors = true;\r\n                        done = false;\r\n                        break;\r\n                    }\r\n                }                            \r\n            }            \r\n        }\r\n        \r\n        this.atLeastOneModuleIsStartable = false;        \r\n        for (let m of moduleStore.getModules(false)) {\r\n            m.isStartable = m.hasMainProgram() && !m.dependsOnModulesWithErrors;\r\n            if(m.isStartable){\r\n                this.atLeastOneModuleIsStartable = true;\r\n            }\r\n            if(!(this.main instanceof MainEmbedded) || this.main.config.withFileList){\r\n                m.renderStartButton();\r\n            } \r\n        }\r\n\r\n        if (this.atLeastOneModuleIsStartable) {\r\n\r\n            this.compilerStatus = CompilerStatus.readyToRun;\r\n\r\n        } else {\r\n\r\n            this.compilerStatus = errorfree ? CompilerStatus.error : CompilerStatus.compiledButNothingToRun;\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        let message = \"Compiled in \" + dt + \" ms.\";\r\n\r\n        this.main.getCurrentWorkspace().compilerMessage = message;\r\n\r\n        this.main.getSemicolonAngel().healSemicolons();\r\n\r\n        return null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class ListIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(listHelper: ListHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"ListIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"IteratorHelper\"] = new IteratorHelper(listHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ListIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: IteratorHelper = o.intrinsicData[\"IteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass IteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private listHelper: ListHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = listHelper.objectArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos - 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos - 1, 1);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.listHelper.valueArray.splice(this.nextPos + 1, 1);\r\n                    this.listHelper.objectArray.splice(this.nextPos + 1, 1);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.listHelper.objectArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.listHelper.objectArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.listHelper.objectArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType, DoubleType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\n\r\nexport class ArrayListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"ArrayList\", module, \"Liste mit Zugriff auf das n-te Objekt in konstanter Zeit, Einfügen in konstanter Zeit und Suchen in linearer Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"ArrayList\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue ArrayList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let r: Value = parameters[2];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r, index);\r\n\r\n            }, false, false, \"Ändert das Element an der Position index der Liste. Tipp: Das erste Element der Liste hat index == 0.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n                \r\n                return ah.get(index)?.value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index);\r\n\r\n                return null;\r\n\r\n            }, true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class ListHelper {\r\n\r\n    valueArray: Value[] = [];\r\n    objectArray: any[] = []; // wird mitgeführt, um schnelle indexOf-Operationen zu ermöglichen\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n                break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.objectArray.map(o => \"\" + o).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => {}, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ah: ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            this.valueArray = this.valueArray.concat(ah.valueArray);\r\n            this.objectArray = this.objectArray.concat(ah.objectArray);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    get(index: number): Value {\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            return this.valueArray[index];\r\n        }\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        return null;\r\n    }\r\n\r\n    remove(index: number): Value {\r\n\r\n        if (index >= 0 && index < this.valueArray.length) {\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return null;\r\n        }\r\n\r\n        this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n\r\n        return null;\r\n    }\r\n\r\n    add(r: Value, index?): boolean {\r\n        if(index == null){\r\n            this.valueArray.push(r);\r\n            this.objectArray.push(r.value);\r\n        } else {\r\n            if(index < this.objectArray.length && index >= 0){\r\n                this.valueArray[index] = r;\r\n                this.objectArray[index] = r.value;\r\n            } else {\r\n                this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    pop(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    peek(): any {\r\n        if (this.objectArray.length == 0) {\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    indexOf(o: Value): number {\r\n        return this.objectArray.indexOf(o.value);\r\n    }\r\n\r\n    size(): number {\r\n        return this.objectArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if (index >= 0) {\r\n            this.objectArray.splice(index, 1);\r\n            this.valueArray.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.objectArray.indexOf(object.value) >= 0;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.objectArray = [];\r\n    }\r\n\r\n    peek_last_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n    peek_first_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[0];\r\n        }\r\n    }\r\n    \r\n    removeLast_or_error(){\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    };\r\n\r\n    addLast(object: Value) {\r\n        this.valueArray.push(object);\r\n        this.objectArray.push(object.value);\r\n        return true;\r\n    }\r\n    addFirst(object: Value): any {\r\n        this.valueArray.splice(0, 0, object);\r\n        this.objectArray.splice(0, 0, object.value);\r\n        return true;\r\n    }\r\n    removeFirstOccurrence(object: Value): boolean {\r\n        let index = this.objectArray.indexOf(object.value);\r\n        if(index >= 0){\r\n            this.valueArray.splice(index, 1);\r\n            this.objectArray.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    peek_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            return this.objectArray[this.objectArray.length - 1];\r\n        }\r\n    }\r\n\r\n    poll_or_null(): any {\r\n        if (this.objectArray.length == 0) {\r\n            return null;\r\n        } else {\r\n            this.valueArray.pop();\r\n            return this.objectArray.pop();\r\n        }\r\n    }\r\n\r\n    removeFirst_or_error(): any {\r\n        if(this.objectArray.length == 0){\r\n            this.interpreter.throwException(\"Der ArrayList-Index ist außerhalb des Intervalls von 0 bis \" + (this.valueArray.length - 1) + \". \")\r\n        } else {\r\n            let object = this.objectArray[0];\r\n            this.objectArray.splice(0, 1);\r\n            this.valueArray.splice(0, 1);\r\n            return object;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class CollectionClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Collection\", module, \"Interface für Listen, Maps, Sets usw. mit Methoden zum Einfügen von Objekten, Zugriff auf Objekte und zur Ermittlung der Anzahl der Objekte\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iterableInterface = (<Interface>module.typeStore.getType(\"Iterable\")).clone();\r\n        iterableInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(iterableInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt der Collection ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Collection dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        // TODO: Implement\r\n        // this.addMethod(new Method(\"removeAll\", new Parameterlist([\r\n        //     { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), booleanPrimitiveType,\r\n        //     null,  // no implementation!\r\n        //     true, false, \"Löscht alle Elemente aus dieser Collection, die in c enthalten sind.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n    \r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IterableClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterable\", module, \"Interface mit Funktionalität zum iterieren (d.h. Durchlaufen aller Elemente)\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class IteratorClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"Iterator\", module);\r\n\r\n        let typeA: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeA.identifier = \"E\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            // { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ListClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        \r\n        super(\"List\", module, \"Interface mit Methoden einer Liste (d.h. Anfügen von Elementen nur am Ende)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: {line: 1, column: 1, length: 1},\r\n            scopeTo: {line: 1, column: 1, length: 1},\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element der Liste an der Stelle index zurück. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n            this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class StackClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Stack\", module, \"Stack (Stapelspeicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n        let vectorType = <Klass>module.typeStore.getType(\"Vector\");\r\n\r\n        this.setBaseClass(vectorType);\r\n        this.typeVariables = vectorType.typeVariables;\r\n        let typeE = this.typeVariables[0].type;\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.add(r);\r\n\r\n                return r.value;\r\n\r\n            }, false, false, \"Pushed ein Element oben auf den Stack. Gibt das gerade gepushte Element zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            }, false, false, \"Nimmt das oberste Element vom Stack und gibt es zurück.\"));\r\n\r\n            this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek();\r\n\r\n            }, false, false, \"Gibt das oberste Element des Stacks zurück, nimmt es aber nicht vom Stack herunter.\"));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            true, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"search\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                let index = ah.indexOf(r);\r\n                return index == -1 ? index : ah.objectArray.length - index;\r\n\r\n            },\r\n            true, false, \"Gibt die Position des Objekts auf dem Stack zurück. Dabei hat das oberste Element den Index 1, das nächstunterste den Index 2 usw. . Falls sich das Objekt nicht auf dem Stack befindet, wird -1 zurückgegeben.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, TypeVariable, Interface } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\n\r\nexport class VectorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector\", module, \"Liste mit Zugriff auf das n-te Element in konstanter Zeit\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let listInterface = (<Interface>module.typeStore.getType(\"List\")).clone();\r\n        listInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(listInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"Vector\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert ein neues Vector-Objekt', true));\r\n\r\n            this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n            ]), iteratorType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n    \r\n                    return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n    \r\n                }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n    \r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.get(index).value;\r\n\r\n            }, false, false, \"Gibt das i-te Element der Liste zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                ah.remove(index).value;\r\n\r\n                return null;\r\n\r\n            }, false, false, \"Entfernt das Element an der Stelle index. WICHTIG: Das erste Element hat den Index 0. Es ist 0 <= index < size()\"));\r\n\r\n        this.addMethod(new Method(\"indexOf\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.indexOf(object);\r\n\r\n            }, false, false, \"Gibt den Index des Elements o zurück. Gibt -1 zurück, wenn die Liste das Element o nicht enthält. WICHTIG: Das erste Element hat den Index 0, das letzte den Index size() - 1. \"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class SetClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Set\", module, \"Interface mit Methoden eines Set, d.h. einer Menge, die jedes Element maximal einmal enthält\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = (<Klass>module.typeStore.getType(\"Object\")).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: objectType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set das Objekt o enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsAll\", new Parameterlist([\r\n            { identifier: \"c\", type: collectionInterface, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn das Set alle Elemente der übergebenen Collection enthält.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport type IteratorKind = \"descending\" | \"ascending\";\r\n\r\nexport class SetIteratorImplClass extends Klass {\r\n\r\n    public static getIterator(MapHelper: SetHelper, interpreter: Interpreter, module: Module, kind: IteratorKind): Value {\r\n\r\n        let klass = <Klass>module.typeStore.getType(\"SetIteratorImpl\");\r\n        let rt: RuntimeObject = new RuntimeObject(klass);\r\n        rt.intrinsicData[\"SetIteratorHelper\"] = new SetIteratorHelper(MapHelper, interpreter, kind);\r\n\r\n        return {\r\n            value: rt,\r\n            type: klass\r\n        }\r\n    }\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"SetIteratorImpl\", module);\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let iteratorInterface = (<Interface>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(iteratorInterface);\r\n\r\n        this.addMethod(new Method(\"hasNext\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.hasNext();\r\n\r\n            },\r\n            false, false, \"Gibt genau dann true zurück, wenn sich noch mindestens ein weiteres Element in der Collection befindet.\"));\r\n\r\n        this.addMethod(new Method(\"next\", new Parameterlist([\r\n        ]), typeE,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.next();\r\n\r\n            },\r\n            false, false, \"Gibt das nächste Element der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetIteratorHelper = o.intrinsicData[\"SetIteratorHelper\"];\r\n\r\n                return ah.remove();\r\n\r\n            },\r\n            false, false, \"Löscht das letzte durch next zurückgegebene Objekt. Diese Methode beeinflusst nicht, welches Element als nächstes durch next zurückgegeben wird.\"));\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nclass SetIteratorHelper {\r\n\r\n    nextPos: number;\r\n\r\n    constructor(private MapHelper: SetHelper, private interpreter: Interpreter, private kind: IteratorKind) {\r\n        switch (kind) {\r\n            case \"ascending\": this.nextPos = 0; break;\r\n            case \"descending\": this.nextPos = MapHelper.valueArray.length - 1; break;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos == 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos - 1].value);\r\n                    this.nextPos -= 1;\r\n                }\r\n                break;\r\n            case \"descending\":\r\n                if (this.nextPos == this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl noch nie next() aufgerufen wurde.\")\r\n                } else if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode remove() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                } else {\r\n                    this.MapHelper.removeObject(this.MapHelper.valueArray[this.nextPos + 1].value);\r\n                    this.nextPos += 1;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    next(): any {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                if (this.nextPos > this.MapHelper.valueArray.length - 1) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos++];\r\n            case \"descending\":\r\n                if (this.nextPos < 0) {\r\n                    this.interpreter.throwException(\"Die Methode next() des Iterators wurde aufgerufen, obwohl das letzte Element schon beim vorherigen Aufruf zurückgegeben worden war.\")\r\n                    return null;\r\n                }\r\n                return this.MapHelper.valueArray[this.nextPos--];\r\n        }\r\n    }\r\n\r\n    hasNext(): boolean {\r\n        switch (this.kind) {\r\n            case \"ascending\":\r\n                return this.nextPos < this.MapHelper.valueArray.length;\r\n            case \"descending\":\r\n                return this.nextPos >= 0;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class SetHelper {\r\n\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, boolean> = new Map(); // Maps key objects to index in keyArray/valueArray\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            return \"[\" + this.valueArray.map(o => \"\" + o.value).join(\", \") + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.valueArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    operator: TokenType.plus,\r\n                    leftType: stringPrimitiveType,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    // Only for Set\r\n    adAll(object: RuntimeObject): boolean {\r\n\r\n        let ret: boolean = false;\r\n        let ah: SetHelper | ListHelper = object.intrinsicData[\"ListHelper\"];\r\n        if (ah != null) {\r\n            for (let value of ah.valueArray) {\r\n                ret = ret || this.addToSet(value);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    addToSet(r: Value): boolean {\r\n        if (this.contains(r)) return false;\r\n\r\n        this.valueArray.push(r);\r\n        this.map.set(r.value, true);\r\n        return true;\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    removeObject(object: Value) {\r\n\r\n        if(this.map.get(object.value) == null) return false;\r\n\r\n        for(let i = 0; i < this.valueArray.length; i++){\r\n            if(this.valueArray[i].value == object.value){\r\n                this.valueArray.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        this.map.delete(object.value);\r\n    }\r\n\r\n    contains(object: Value): any {\r\n        return this.map.get(object.value) != null;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class HashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashSet\", module, \"Set mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"HashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues HashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SetIteratorImplClass } from \"./SetIteratorImpl.js\";\r\nimport { SetHelper } from \"./SetHelper.js\";\r\n\r\nexport class LinkedHashSetClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedHashSet\", module, \"Ein LinkedHashSet speichert jedes Element nur genau ein Mal.\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeE: Klass = (<Klass>objectType).clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Set\")).clone();\r\n        setInterface.typeVariables = [tvE];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"LinkedHashSet\", new Parameterlist([\r\n            // { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new SetHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert ein neues LinkedHashSet', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return SetIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addToSet(r);\r\n\r\n            }, false, false, \"Fügt der Liste ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: SetHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class QueueClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Queue\", module);\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let collectionInterface = (<Interface>module.typeStore.getType(\"Collection\")).clone();\r\n        collectionInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(collectionInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class DequeClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Deque\", module, \"Interface für Liste mit zweiseitigem Zugriff (insbesondere Anfügen an beiden Enden)\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n\r\n        let typeE: Klass = objectType.clone();\r\n        typeE.identifier = \"E\";\r\n        typeE.isTypeVariable = true;\r\n\r\n        let tvE: TypeVariable = {\r\n            identifier: \"E\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeE\r\n        };\r\n\r\n        this.typeVariables.push(tvE);\r\n\r\n        let QueueInterface = (<Interface>module.typeStore.getType(\"Queue\")).clone();\r\n        QueueInterface.typeVariables = [tvE];\r\n\r\n        this.extends.push(QueueInterface);\r\n\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeE, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeE,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvE];\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge (Ende -> Anfang) durchläuft.\"));\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType, objectType, StringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { TokenType, TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ListIteratorImplClass } from \"./ListIteratorImpl.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\nexport class LinkedListClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LinkedList\", module, \"Verkettete Liste\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeA: Klass = (<Klass>objectType).clone();\r\n        typeA.identifier = \"A\";\r\n        typeA.isTypeVariable = true;\r\n\r\n        let tvA: TypeVariable = {\r\n            identifier: \"A\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeA\r\n        };\r\n\r\n        this.typeVariables.push(tvA);\r\n\r\n        let dequeInterface = (<Interface>module.typeStore.getType(\"Deque\")).clone();\r\n        dequeInterface.typeVariables = [tvA];\r\n\r\n        this.implements.push(dequeInterface);\r\n\r\n        let iteratorType = (<Klass>module.typeStore.getType(\"Iterator\")).clone();\r\n        iteratorType.typeVariables = [tvA];\r\n\r\n        this.addMethod(new Method(\"LinkedList\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let ah = new ListHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"ListHelper\"] = ah;\r\n\r\n            }, false, false, 'Instanziert eine neue LinkedList', true));\r\n\r\n        this.addMethod(new Method(\"iterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"ascending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"descendingIterator\", new Parameterlist([\r\n        ]), iteratorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ListIteratorImplClass.getIterator(ah, ah.interpreter, module, \"descending\").value;\r\n\r\n            }, false, false, \"Gibt einen Iterator über die Elemente dieser Collection zurück, der die Liste in umgekehrter Reihenfolge durchläuft (Ende -> Anfang).\"));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(r);\r\n\r\n            }, false, false, \"Fügt der Liste am Ende ein Element hinzu. Gibt genau dann true zurück, wenn sich der Zustand der Liste dadurch geändert hat.\"));\r\n\r\n        this.addMethod(new Method(\"addAll\", new Parameterlist([\r\n            { identifier: \"c\", type: this, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: RuntimeObject = parameters[1].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.adAll(object);\r\n\r\n            },\r\n            false, false, \"Fügt alle Elemente von c dieser Collection hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Element aus dieser Collection.\"));\r\n\r\n        this.addMethod(new Method(\"contains\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.contains(object);\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das Element enthält.\"));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"o\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeObject(object);\r\n\r\n            },\r\n            false, false, \"Entfernt das Element o aus der Collection. Gibt true zurück, wenn die Collection das Element enthalten hatte.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die Collection das leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der Elemente der Collection zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"poll\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.poll_or_null();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Kopf der Liste und gibt es zurück. Gibt null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peek\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Kopf der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirstOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Erste Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"removeLastOccurrence\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirstOccurrence(object);\r\n\r\n            },\r\n            false, false, \"Löscht das Letzte Vorkommen des Objekts. Gibt true zurück, wenn die Liste dadurch verändert wurde.\"));\r\n\r\n        this.addMethod(new Method(\"addFirst\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addFirst(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Anfang der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"addLast\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.addLast(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"removeFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeFirst_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Anfang der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"removeLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.removeLast_or_error();\r\n\r\n            },\r\n            false, false, \"Entfernt das Element am Ende der Liste und gibt es zurück. Führt zum Fehler, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekFirst\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_first_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Anfang der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"peekLast\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.peek_last_or_null();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück, entfernt es aber nicht. Gib null zurück, wenn die Liste leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"push\", new Parameterlist([\r\n            { identifier: \"element\", type: typeA, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let object: Value = parameters[1];\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.add(object);\r\n\r\n            },\r\n            false, false, \"Fügt das Element am Ende der Liste hinzu.\"));\r\n\r\n        this.addMethod(new Method(\"pop\", new Parameterlist([\r\n        ]), typeA,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ListHelper = o.intrinsicData[\"ListHelper\"];\r\n\r\n                return ah.pop();\r\n\r\n            },\r\n            false, false, \"Gibt das Element am Ende der Liste zurück und entfernt es von der Liste. Erzeugt einen Fehler, wenn die Liste leer ist.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class ConsoleClass extends Klass {\r\n\r\n    constructor(module: Module){\r\n        super(\"Console\", module, \"Klasse zur Textausgabe in der Konsole.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod( new Method(\"log\", new Parameterlist([{identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: false}]), null, \r\n                (parameters) => { \r\n                    // console.log(<string>(parameters[0].value)); \r\n                    module.main.getBottomDiv()?.console.$consoleTab.find('.jo_console-top').append(\"<div>\" + <string>(parameters[1].value) + \"</div>\"); \r\n                }, false, true));\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\n\r\ntype PrintCommand = {\r\n    text: string;\r\n    color: string;\r\n    newLine: boolean;\r\n}\r\n\r\nexport class PrintManager {\r\n\r\n    color: string = \"\";\r\n    lastSpan: string = \"\";\r\n    $lastSpan: JQuery<HTMLElement>;\r\n\r\n    $lastDiv: JQuery<HTMLElement>;\r\n    $outputDiv: JQuery<HTMLElement>;\r\n\r\n    maxLines: number = 2000;\r\n    $lines: JQuery<HTMLElement>[] = [];\r\n\r\n    newLines: number = 0;\r\n\r\n    printCommands: PrintCommand[] = [];\r\n\r\n    currentLinelength: number = 0;\r\n    beginOfLineState: boolean = true; // Spaces at begin of line are converted to &nbsp;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase) {\r\n        jQuery(() => {\r\n            this.$outputDiv = $runDiv.find('.jo_output');\r\n            this.clear();\r\n\r\n            let that = this;\r\n\r\n            let n: number = 0;\r\n\r\n            let dirty = false;\r\n            let lastPrinting = performance.now();\r\n\r\n            setInterval(() => {\r\n                if (that.printCommands.length > 0) {\r\n                    that.doPrinting();\r\n                    if (performance.now() - lastPrinting > 200) {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                    } else {\r\n                        dirty = true;\r\n                    }\r\n                    lastPrinting = performance.now();\r\n                }\r\n\r\n                if (n++ % 20 == 0 && dirty) {\r\n                    setTimeout(() => {\r\n                        that.$outputDiv[0].scrollTop = that.$outputDiv[0].scrollHeight;\r\n                        dirty = false;\r\n                    }, 200);\r\n                }\r\n\r\n            }, 50);\r\n\r\n\r\n        });\r\n    }\r\n\r\n    getGraphicsDiv():JQuery<HTMLElement> {\r\n        return this.$runDiv.find('.jo_graphics');\r\n    }\r\n\r\n    showProgramEnd() {\r\n        let $programEndDiv = this.$runDiv.find('.jo_run-programend');\r\n        $programEndDiv.show();\r\n        $programEndDiv.addClass('jo_programendkf');\r\n        setTimeout(() => {\r\n            $programEndDiv.removeClass('jo_programendkf');\r\n            $programEndDiv.hide();\r\n        }, 3000);\r\n    }\r\n\r\n    doPrinting() {\r\n\r\n        // If there are more than maxLines in next output batch: \r\n        // Delete surplus lines before printing them and empty output-div\r\n        if (this.newLines >= this.maxLines) {\r\n\r\n            this.$outputDiv.empty();\r\n\r\n            let i = this.printCommands.length - 1;\r\n            let nl = 0;\r\n\r\n            while (i >= 0) {\r\n\r\n                if (this.printCommands[i].newLine) {\r\n                    nl++;\r\n                    if (nl >= this.maxLines) {\r\n                        this.printCommands.splice(0, i + 1);\r\n                        break;\r\n                    }\r\n                }\r\n                i--;\r\n            }\r\n\r\n        }\r\n\r\n        this.newLines = 0;\r\n\r\n        // reopen last printed span-element\r\n        if(this.$lastSpan != null){\r\n            this.$lastSpan.remove();\r\n            if(this.lastSpan.endsWith(\"</span>\")) this.lastSpan = this.lastSpan.substring(0, this.lastSpan.length - 7);\r\n        }\r\n\r\n\r\n        for (let pc of this.printCommands) {\r\n\r\n            // replace spaces with &nbsp;'s\r\n            // pc.text = pc.text.replace(/ /g, \"&nbsp;\");\r\n\r\n\r\n            if (this.beginOfLineState && pc.text.startsWith(\" \")) {\r\n                let match = pc.text.match(/^( *)(.*)$/);\r\n                if (match[2].length > 0) this.beginOfLineState = false;\r\n            } else {\r\n                if (pc.text.length > 0) this.beginOfLineState = false;\r\n            }\r\n\r\n            pc.text = pc.text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n\r\n            if (pc.color == null) pc.color = \"var(--defaultOutputColor)\";\r\n\r\n            if (this.lastSpan == \"\" || this.color != pc.color) {\r\n                if (this.lastSpan != \"\") this.lastSpan += \"</span>\";      // new color => close old span\r\n                this.lastSpan += '<span style=\"color: ' + pc.color + '\">';\r\n                if(pc.newLine && pc.text == \"\") this.lastSpan += \"\\u200b\"; // makes empty lines possible; \\u200b is a space with 0 width but full height.\r\n                this.color = pc.color;\r\n            }\r\n\r\n            if (this.currentLinelength <= 10000) {\r\n                this.lastSpan += pc.text;\r\n                this.currentLinelength += pc.text.length;\r\n            }\r\n\r\n\r\n            if (pc.newLine) {\r\n                this.beginOfLineState = true;\r\n                if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n                this.$lastSpan = jQuery(this.lastSpan);\r\n                this.$lastDiv.append(this.$lastSpan);\r\n                \r\n                this.lastSpan = \"\";\r\n                this.$lastSpan = null;\r\n\r\n                this.$lastDiv = jQuery('<div></div>');\r\n\r\n                let $input = this.main.getInterpreter().inputManager.$input;\r\n                if($input != null){\r\n                    this.$lastDiv.insertBefore($input);\r\n                } else {\r\n                    this.$outputDiv.append(this.$lastDiv);\r\n                }\r\n\r\n                this.$lines.push(this.$lastDiv);\r\n                this.currentLinelength = 0;\r\n            }\r\n\r\n        }\r\n\r\n        if (this.lastSpan != \"\") {\r\n            if (!this.lastSpan.endsWith(\"</span>\")) this.lastSpan += \"</span>\";\r\n            this.$lastSpan = jQuery(this.lastSpan);\r\n            this.$lastDiv.append(this.$lastSpan);\r\n        }\r\n\r\n        if (this.$lines.length > this.maxLines * 1.5) {\r\n            let that = this;\r\n            let linesToDelete = that.$lines.length - that.maxLines;\r\n\r\n            let $linesToDelete = that.$lines.splice(0, linesToDelete);\r\n\r\n            for (let $line of $linesToDelete) {\r\n                $line.remove();\r\n            }\r\n\r\n        }\r\n\r\n        this.printCommands = [];\r\n    }\r\n\r\n    clear() {\r\n        this.$outputDiv.empty();\r\n        this.$lastDiv = jQuery('<div></div>');\r\n        this.$lines.push(this.$lastDiv);\r\n        this.$outputDiv.append(this.$lastDiv);\r\n        this.currentLinelength = 0;\r\n        this.color = \"\";\r\n        this.lastSpan = \"\";\r\n        this.printCommands = [];\r\n    }\r\n\r\n    print(text: string | null, color?: string|number) {\r\n        if (text == null) return;\r\n\r\n        if(typeof color == \"number\"){\r\n            color = color.toString(16);\r\n            while(color.length < 6) color = \"0\" + color;\r\n            color = \"#\" + color;\r\n        }\r\n\r\n        text = text.toString();\r\n        if (text.indexOf(\"\\n\") >= 0) {\r\n            let tList = text.split(\"\\n\");\r\n            for (let i = 0; i < tList.length; i++) {\r\n                let t = tList[i];\r\n                let newLine = i < tList.length - 1;\r\n                if (t == \"\" && i == tList.length - 1) continue;\r\n                this.printCommands.push({\r\n                    text: t,\r\n                    color: color,\r\n                    newLine: newLine\r\n                });\r\n                if (newLine) this.newLines++;\r\n            }\r\n        } else {\r\n            this.printCommands.push({\r\n                text: text,\r\n                color: color,\r\n                newLine: false\r\n            });\r\n        }\r\n    }\r\n\r\n    println(text: string | null, color?: string|number) {\r\n        if (text == null) text = \"\";\r\n        this.print(text + \"\\n\", color);\r\n    }\r\n\r\n}","import { Type, Method, Value } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType, charPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\n\r\nexport class InputManager {\r\n\r\n    $input: JQuery<HTMLInputElement>;\r\n\r\n    constructor(private $runDiv: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public readInput(method: Method, parameters: Value[], callback: (value: Value) => void){\r\n\r\n        let returnType = method.getReturnType();\r\n        let message = parameters[1].value;\r\n        let defaultValue = parameters.length == 3 ? parameters[2].value : null;\r\n\r\n        let printManager: PrintManager = this.main.getInterpreter().printManager;\r\n        if(message != null && message != \"\"){\r\n            printManager.beginOfLineState = true;\r\n            printManager.println(\"\\n\" + message);\r\n            printManager.doPrinting();\r\n        }\r\n\r\n        this.$input = jQuery('<input class=\"jo_newInput\" type=\"text\"/>');\r\n\r\n        let $od = printManager.$outputDiv;\r\n        $od.append(this.$input);\r\n\r\n        let dvt = defaultValue == null ? \"\" : defaultValue;\r\n        this.$input.val(dvt);\r\n\r\n        let that = this;\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').on('mousedown', (e)=>{\r\n        //     e.preventDefault();\r\n        //     that.onSubmit(returnType, callback);\r\n        // });\r\n        \r\n        this.$input.on('keydown', (e) => {\r\n            if(e.key == \"Enter\"){\r\n                that.onSubmit(returnType, callback);\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            that.$input.focus();\r\n        }, 200);\r\n\r\n        printManager.$outputDiv.on('mousedown.inputmanager', (e) => {\r\n            setTimeout(() => {\r\n                that.$input.focus();\r\n            }, 200);\r\n        })\r\n\r\n    }\r\n\r\n    onSubmit(type: Type, callback: (value: Value) => void){\r\n        let v: string = <string>(this.$input.val());\r\n        let printManager = this.main.getInterpreter().printManager;\r\n\r\n        let valueAndError = this.parse(v, type);\r\n\r\n        if(valueAndError.error != null){\r\n            // jQuery('<div style=\"color: red\">' + valueAndError.error + '</div>').insertBefore(this.$input);\r\n            this.$input.detach();\r\n            printManager.println(valueAndError.error, \"#ff0000\");\r\n            printManager.doPrinting();\r\n            printManager.$outputDiv.append(this.$input);\r\n            this.$input[0].scrollIntoView();\r\n            this.$input.focus();\r\n            return;\r\n        }\r\n        \r\n        printManager.$outputDiv.off('mousedown.inputmanager');\r\n        printManager.println(v);\r\n        this.$input.off('keydown');\r\n        this.hide();\r\n\r\n        callback(valueAndError.value);\r\n\r\n    }\r\n\r\n    parse(v: string, type: Type):{value: Value, error: string} {\r\n\r\n        if(type == stringPrimitiveType){\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v.length == 0) return {error: \"Leere Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            if(v.length > 1) return {error: \"Zu lange Eingabe. Erwartet wird ein Zeichen.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v, type: type}\r\n            }\r\n        }\r\n\r\n        if(type == charPrimitiveType){\r\n            if(v != \"true\" && v != \"false\") return {error: \"Erwartet wird true oder false.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: v == \"true\", type: type}\r\n            }\r\n        }\r\n\r\n        v = v.replace(\",\", \".\");\r\n\r\n        let n = Number(v);\r\n\r\n        if(n == null){\r\n            return {error: \"Erwartet wird eine Zahl.\", value: null};\r\n        }\r\n\r\n        if(type == intPrimitiveType){\r\n            if(n != Math.round(n)) return {error: \"Erwartet wird eine ganze Zahl.\", value: null};\r\n            return {\r\n                error: null,\r\n                value: {value: Math.round(n), type: type}\r\n            }\r\n        }\r\n\r\n        return {\r\n            error: null,\r\n            value: {value: n, type: type}\r\n        }\r\n\r\n    }\r\n\r\n\r\n    hide(){\r\n\r\n        if(this.$input != null){\r\n            this.$input.remove();\r\n            this.$input = null;\r\n        }\r\n\r\n        // this.$runDiv.find('.jo_run-input').css('display', 'none');\r\n\r\n        // this.$runDiv.find('.jo_run-input-button').off('mousedown');\r\n        \r\n        // this.$runDiv.find('.jo_run-input-input').off('keydown');\r\n\r\n    }\r\n\r\n\r\n}","import { LoginRequest } from \"./Data.js\";\r\n\r\n// export var credentials: { username: string, password: string } = { username: null, password: null };\r\n\r\n\r\nexport function ajax(url: string, request: any, successCallback: (response: any) => void,\r\n    errorCallback?: (message: string) => void) {\r\n    showNetworkBusy(true);\r\n    $.ajax({\r\n        type: 'POST',\r\n        async: true,\r\n        data: JSON.stringify(request),\r\n        contentType: 'application/json',\r\n        url: url,\r\n        success: function (response: any) {\r\n            showNetworkBusy(false);\r\n            if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n                let error = \"Fehler bei der Bearbeitung der Anfrage\"\r\n                if (response.message != null) error = response.message;\r\n\r\n                if (error == \"Not logged in\") {\r\n                    // setTimeout(() => newLogin(url, request, successCallback, errorCallback), 10000);\r\n                    // location.reload();\r\n                }\r\n\r\n                if (errorCallback) errorCallback(error);\r\n            } else {\r\n                successCallback(response);\r\n            }\r\n            return;\r\n\r\n        },\r\n        error: function (jqXHR, message) {\r\n            showNetworkBusy(false);\r\n            if (errorCallback) {\r\n                let statusText = \"Server nicht erreichbar.\"\r\n                if (jqXHR.status != 0) {\r\n                    statusText = \"\" + jqXHR.status\r\n                }\r\n                errorCallback(message + \": \" + statusText);\r\n                return;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function showNetworkBusy(busy: boolean) {\r\n    if (busy) {\r\n        jQuery('.jo_network-busy').show();\r\n    } else {\r\n        jQuery('.jo_network-busy').hide();\r\n    }\r\n}\r\n\r\n\r\n\r\n// export function newLogin(url: string, request: any, successCallback: (response: any) => void,\r\n//     errorCallback?: (message: string) => void) {\r\n\r\n//     if (credentials.username == null) return;\r\n//     let loginRequest: LoginRequest = {username: credentials.username, password: credentials.password};\r\n\r\n//     $.ajax({\r\n//         type: 'POST',\r\n//         data: JSON.stringify(loginRequest),\r\n//         contentType: 'application/json',\r\n//         url: \"login\",\r\n//         success: function (response: any) {\r\n//             if (response.success != null && response.success == false || typeof (response) == \"string\" && response == '') {\r\n//             } else {\r\n//                 ajax(url, request, successCallback, errorCallback);\r\n//             }\r\n//             return;\r\n//         },\r\n//         error: function (jqXHR, message) {\r\n// //            ajax(url, request, successCallback, errorCallback);\r\n//         }\r\n//     });\r\n// }\r\n","import { Main } from \"../main/Main.js\";\r\nimport { ajax } from \"./AjaxHelper.js\";\r\nimport { WorkspaceData, FileData, SendUpdatesRequest, SendUpdatesResponse, CreateOrDeleteFileOrWorkspaceRequest, CRUDResponse, UpdateUserSettingsRequest, UpdateUserSettingsResponse, DuplicateWorkspaceRequest, DuplicateWorkspaceResponse, ClassData, DistributeWorkspaceRequest, DistributeWorkspaceResponse } from \"./Data.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\n\r\nexport class NetworkManager {\r\n    \r\n    timerhandle: any;\r\n\r\n    ownUpdateFrequencyInSeconds: number = 20;\r\n    teacherUpdateFrequencyInSeconds: number = 5;\r\n\r\n    updateFrequencyInSeconds: number = 20;\r\n    forcedUpdateEvery: number = 2;\r\n    secondsTillNextUpdate: number = this.updateFrequencyInSeconds;\r\n    errorHappened: boolean = false;\r\n\r\n    interval: any;\r\n\r\n    constructor(private main: Main, private $updateTimerDiv: JQuery<HTMLElement>){        \r\n        \r\n    }\r\n\r\n    initializeTimer() {\r\n\r\n        let that = this;\r\n        this.$updateTimerDiv.find('svg').attr('width', that.updateFrequencyInSeconds);\r\n\r\n        if(this.interval != null) clearInterval(this.interval);\r\n\r\n        let counterTillForcedUpdate: number = this.forcedUpdateEvery;\r\n\r\n        this.interval = setInterval(()=>{\r\n            \r\n            if(that.main.user == null) return; // don't call server if no user is logged in\r\n\r\n            that.secondsTillNextUpdate--;\r\n\r\n            if(that.secondsTillNextUpdate < 0 ){\r\n                that.secondsTillNextUpdate = that.updateFrequencyInSeconds;\r\n                counterTillForcedUpdate--;\r\n                let forceUpdate = counterTillForcedUpdate == 0;\r\n                if(forceUpdate) counterTillForcedUpdate = this.forcedUpdateEvery;\r\n                that.sendUpdates(() => {}, forceUpdate);\r\n            }\r\n\r\n            let $rect = this.$updateTimerDiv.find('.jo_updateTimerRect');\r\n\r\n            $rect.attr('width', that.secondsTillNextUpdate + \"px\");\r\n            \r\n            if(that.errorHappened){\r\n                $rect.css('fill', '#c00000');                \r\n                this.$updateTimerDiv.attr('title',\"Fehler beim letzten Speichervorgang -> Werd's wieder versuchen\");\r\n            } else {\r\n                $rect.css('fill', '#008000');                \r\n                this.$updateTimerDiv.attr('title',that.secondsTillNextUpdate + \" Sekunden bis zum nächsten Speichern\");\r\n            }\r\n\r\n        }, 1000);\r\n        \r\n    }\r\n    \r\n    sendUpdates(callback?: ()=>void, sendIfNothingIsDirty: boolean = false){\r\n        \r\n        if(this.main.user == null) return;\r\n\r\n        this.main.projectExplorer.writeEditorTextToFile();\r\n\r\n        let classDiagram = this.main.rightDiv?.classDiagram;\r\n        let userSettings = this.main.user.settings;\r\n\r\n        if(classDiagram?.dirty || this.main.userDataDirty){\r\n            this.main.userDataDirty = false;\r\n            userSettings.classDiagram = classDiagram?.serialize();\r\n            this.sendUpdateUserSettings(() => {});\r\n        }\r\n\r\n        classDiagram.dirty = false;\r\n\r\n        let wdList: WorkspaceData[] = [];\r\n        let fdList: FileData[] = [];\r\n\r\n        for(let ws of this.main.workspaceList){\r\n\r\n            if(!ws.saved){\r\n                wdList.push(ws.getWorkspaceData(false));\r\n                ws.saved = true;\r\n            }\r\n            \r\n            for(let m of ws.moduleStore.getModules(false)){\r\n                if(!m.file.saved){\r\n                    m.file.text = m.getProgramTextFromMonacoModel();\r\n                    fdList.push(m.getFileData(ws));\r\n                    // console.log(\"Save file \" + m.file.name);\r\n                    m.file.saved = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let request: SendUpdatesRequest = {\r\n            workspacesWithoutFiles: wdList,\r\n            files: fdList, \r\n            owner_id: this.main.workspacesOwnerId,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        let that = this;\r\n        if(wdList.length > 0 || fdList.length > 0 || sendIfNothingIsDirty){\r\n            ajax('sendUpdates', request, (response: SendUpdatesResponse) => {\r\n                that.errorHappened = !response.success;\r\n                if(!that.errorHappened){\r\n\r\n                    that.updateWorkspaces(request, response);\r\n\r\n                    if(callback != null){\r\n                        callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }, () => {\r\n                that.errorHappened = true;\r\n            } );\r\n        } else {\r\n            if(callback != null){\r\n                callback();\r\n                return;\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    sendCreateWorkspace(w: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let wd: WorkspaceData = w.getWorkspaceData(false);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"workspace\",\r\n            data: wd,\r\n            owner_id: owner_id,            \r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            w.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendCreateFile(m: Module, ws: Workspace, owner_id: number, callback: (error: string) => void) {\r\n\r\n        let fd: FileData = m.getFileData(ws);\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"create\",\r\n            entity: \"file\",\r\n            data: fd,\r\n            owner_id: owner_id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            m.file.id = response.id;\r\n            callback(null);\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDuplicateWorkspace(ws: Workspace, callback: (error: string, workspaceData?: WorkspaceData) => void) {\r\n\r\n        let request: DuplicateWorkspaceRequest = {\r\n            workspace_id: ws.id\r\n        }\r\n\r\n        ajax(\"duplicateWorkspace\", request, (response: DuplicateWorkspaceResponse) => {\r\n            callback(response.message, response.workspace)\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendDistributeWorkspace(ws: Workspace, klasse: ClassData, student_ids: number[], callback: (error: string) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request: DistributeWorkspaceRequest = {\r\n                workspace_id: ws.id,\r\n                class_id: klasse?.id,\r\n                student_ids: student_ids\r\n            }\r\n    \r\n            ajax(\"distributeWorkspace\", request, (response: DistributeWorkspaceResponse) => {\r\n                callback(response.message)\r\n            }, callback);\r\n    \r\n        }, false);\r\n\r\n    }\r\n\r\n\r\n    sendCreateRepository(ws: Workspace, publish_to: number, repoName: string, repoDescription: string, callback: (error: string, repository_id?: number) => void) {\r\n\r\n        this.sendUpdates(() => {\r\n\r\n            let request = {\r\n                workspace_id: ws.id,\r\n                publish_to: publish_to,\r\n                name: repoName,\r\n                description: repoDescription\r\n            }\r\n    \r\n            ajax(\"createRepository\", request, (response: {success: boolean, message?: string, repository_id?: number}) => {\r\n                ws.moduleStore.getModules(false).forEach(m => {\r\n                    m.file.is_copy_of_id = m.file.id;\r\n                    m.file.repository_file_version = 1;\r\n                })\r\n                ws.repository_id = response.repository_id;\r\n                ws.has_write_permission_to_repository = true;\r\n                callback(response.message, response.repository_id)\r\n            }, callback);\r\n    \r\n        }, true);\r\n\r\n\r\n    }\r\n\r\n    sendDeleteWorkspaceOrFile(type: \"workspace\" | \"file\", id: number, callback: (error: string) => void) {\r\n\r\n        let request: CreateOrDeleteFileOrWorkspaceRequest = {\r\n            type: \"delete\",\r\n            entity: type,\r\n            id: id,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"createOrDeleteFileOrWorkspace\", request, (response: CRUDResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n    sendUpdateUserSettings(callback: (error: string) => void){\r\n\r\n        let request: UpdateUserSettingsRequest = {\r\n            settings: this.main.user.settings,\r\n            userId: this.main.user.id\r\n        }\r\n\r\n        ajax(\"updateUserSettings\", request, (response: UpdateUserSettingsResponse) => {\r\n            if(response.success){\r\n                callback(null);\r\n            } else {\r\n                callback(\"Netzwerkfehler!\");\r\n            }\r\n        }, callback);\r\n\r\n    }\r\n\r\n\r\n    updateWorkspaces(sendUpdatesRequest: SendUpdatesRequest, sendUpdatesResponse: SendUpdatesResponse){\r\n\r\n        let idToRemoteWorkspaceDataMap: Map<number, WorkspaceData> = new Map();\r\n\r\n        let fileIdsSended = [];\r\n        sendUpdatesRequest.files.forEach(file => fileIdsSended.push(file.id));\r\n\r\n        sendUpdatesResponse.workspaces.workspaces.forEach(wd => idToRemoteWorkspaceDataMap.set(wd.id, wd));\r\n\r\n        let newWorkspaceNames: string[] = [];\r\n\r\n        for (let remoteWorkspace of sendUpdatesResponse.workspaces.workspaces) {\r\n\r\n            let localWorkspaces = this.main.workspaceList.filter(ws => ws.id == remoteWorkspace.id);\r\n\r\n            // Did student get a workspace from his/her teacher?\r\n            if (localWorkspaces.length == 0) {\r\n                newWorkspaceNames.push(remoteWorkspace.name);\r\n                this.createNewWorkspaceFromWorkspaceData(remoteWorkspace);\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        for(let workspace of this.main.workspaceList){\r\n            let remoteWorkspace: WorkspaceData = idToRemoteWorkspaceDataMap.get(workspace.id);\r\n            if(remoteWorkspace != null){\r\n                let idToRemoteFileDataMap: Map<number, FileData> = new Map();\r\n                remoteWorkspace.files.forEach(fd => idToRemoteFileDataMap.set(fd.id, fd));\r\n                \r\n                let idToModuleMap: Map<number, Module> = new Map();\r\n                // update/delete files if necessary\r\n                for(let module of workspace.moduleStore.getModules(false)){\r\n                    let fileId = module.file.id;\r\n                    idToModuleMap.set(fileId, module);\r\n                    let remoteFileData = idToRemoteFileDataMap.get(fileId);\r\n                    if(remoteFileData == null){\r\n                        this.main.projectExplorer.fileListPanel.removeElement(module);\r\n                        this.main.currentWorkspace.moduleStore.removeModule(module);\r\n                    } else if(remoteFileData.version > module.file.version){\r\n                        if(fileIdsSended.indexOf(fileId) < 0 || remoteFileData.forceUpdate){\r\n                            module.file.text = remoteFileData.text;\r\n                            module.model.setValue(remoteFileData.text);\r\n\r\n                            module.file.saved = true;\r\n                            module.lastSavedVersionId = module.model.getAlternativeVersionId()\r\n                        }\r\n                        module.file.version = remoteFileData.version;\r\n                    }\r\n                }\r\n\r\n                // add files if necessary\r\n                for(let remoteFile of remoteWorkspace.files){\r\n                    if(idToModuleMap.get(remoteFile.id) == null){\r\n                        this.createFile(workspace, remoteFile);\r\n                    }\r\n                }\r\n            }\r\n        }        \r\n\r\n        if(newWorkspaceNames.length > 0){\r\n            let message: string = newWorkspaceNames.length > 1 ? \"Folgende Workspaces hat Deine Lehrkraft Dir gesendet: \" : \"Folgenden Workspace hat Deine Lehrkraft Dir gesendet: \";\r\n            message += newWorkspaceNames.join(\", \");\r\n            alert(message);\r\n        }\r\n\r\n        this.main.projectExplorer.workspaceListPanel.sortElements();\r\n        this.main.projectExplorer.fileListPanel.sortElements();\r\n\r\n    }\r\n\r\n    public createNewWorkspaceFromWorkspaceData(remoteWorkspace: WorkspaceData, withSort: boolean = false) {\r\n        let w = this.main.createNewWorkspace(remoteWorkspace.name, remoteWorkspace.owner_id);\r\n        w.id = remoteWorkspace.id;\r\n        w.repository_id = remoteWorkspace.repository_id;\r\n        w.has_write_permission_to_repository = remoteWorkspace.has_write_permission_to_repository;\r\n\r\n        this.main.workspaceList.push(w);\r\n        this.main.projectExplorer.workspaceListPanel.addElement({\r\n            name: remoteWorkspace.name,\r\n            externalElement: w,\r\n            iconClass: remoteWorkspace.repository_id == null ? \"workspace\" : \"repository\"\r\n        });\r\n\r\n        for (let fileData of remoteWorkspace.files) {\r\n            this.createFile(w, fileData);\r\n        }\r\n\r\n        if(withSort){\r\n            this.main.projectExplorer.workspaceListPanel.sortElements();\r\n            this.main.projectExplorer.fileListPanel.sortElements();\r\n        }\r\n    }\r\n\r\n    createFile(workspace: Workspace, remoteFile: FileData) {\r\n        let ae: any = null; //AccordionElement\r\n        if (workspace == this.main.currentWorkspace) {\r\n            ae = {\r\n                name: remoteFile.name,\r\n                externalElement: null\r\n            }\r\n\r\n            this.main.projectExplorer.fileListPanel.addElement(ae);\r\n        }\r\n\r\n        let f: any = { // File\r\n            id: remoteFile.id,\r\n            name: remoteFile.name,\r\n            dirty: false,\r\n            saved: true,\r\n            text: remoteFile.text,\r\n            version: remoteFile.version,\r\n            is_copy_of_id: remoteFile.is_copy_of_id,\r\n            repository_file_version: remoteFile.repository_file_version,\r\n            identical_to_repository_version: true,\r\n            workspace_id: workspace.id,\r\n            panelElement: ae\r\n        };\r\n        let m = this.main.projectExplorer.getNewModule(f); //new Module(f, this.main);\r\n        if (ae != null) ae.externalElement = m;\r\n        let modulStore = workspace.moduleStore;\r\n        modulStore.putModule(m);\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { Value, Type, Variable } from \"../compiler/types/Types.js\";\r\nimport { stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\n\r\nexport class DebuggerElement {\r\n\r\n    caption: string; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: DebuggerElement;\r\n    children: DebuggerElement[] = [];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    value: Value;\r\n    variable: Variable;\r\n\r\n    type: Type;\r\n    identifier: string;\r\n\r\n    $debuggerElement: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string, parent: DebuggerElement, identifier: string, value: Value, type: Type, variable: Variable) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n        this.type = type;\r\n        this.variable = variable;\r\n        this.identifier = identifier;\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.$debuggerElement == null) {\r\n            this.$debuggerElement = jQuery('<div>');\r\n            this.$debuggerElement.addClass(\"jo_debuggerElement\");\r\n            this.$debuggerElement.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n            let $deFirstLine = jQuery('<div class=\"jo_deFirstline\"><span class=\"jo_deIdentifier\">' +\r\n                this.identifier + '</span>:&nbsp;<span class=\"jo_deValue\"></span></div>');\r\n\r\n            this.$debuggerElement.append($deFirstLine);\r\n\r\n            // show compound types in own branch of visible tree\r\n            if (this.type instanceof ArrayType ||\r\n                (this.type instanceof Klass && !(this.type instanceof Enum) && !(this.type == stringPrimitiveType))\r\n                || this.type instanceof StaticClass\r\n                || this.type instanceof Interface\r\n            ) {\r\n                this.canOpen = true;\r\n                this.$debuggerElement.addClass('jo_canOpen');\r\n                this.$debuggerElement.append(jQuery('<div class=\"jo_deChildContainer\"></div>'));\r\n\r\n                this.$debuggerElement.find('.jo_deFirstline').on('mousedown', (event) => {\r\n                    if (this.value != null && this.value.value != null) {\r\n                        if (this.children.length == 0) {\r\n                            this.onFirstOpening();\r\n                        }\r\n                        this.$debuggerElement.toggleClass('jo_expanded');\r\n                        this.isOpen = !this.isOpen;\r\n                    } else {\r\n                        this.children = [];\r\n                    }\r\n\r\n                    event.stopPropagation();\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        if (this.type instanceof Klass) {\r\n\r\n            let ro: RuntimeObject = this.value.value;\r\n            let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n            if (listHelper != null) {\r\n                this.renderListElements(listHelper);\r\n            } else {\r\n                for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n            }\r\n\r\n\r\n        } else if (this.type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$debuggerElement.find('.jo_deChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new DebuggerElement(null, this, \"[\" + i + \"]\", a[i], this.type.arrayOfType, null);\r\n                de.render();\r\n                $childContainer.append(de.$debuggerElement);\r\n\r\n            }\r\n\r\n        } else if (this.type instanceof StaticClass) {\r\n\r\n            for (let a of this.type.getAttributes(Visibility.private)) {\r\n                let ro = this.type.classObject;\r\n                let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n            }\r\n\r\n        } else if (this.type instanceof Interface) {\r\n\r\n            if (this.value.value != null && this.value.value instanceof RuntimeObject) {\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new DebuggerElement(null, this, a.identifier, ro.getValue(a.identifier), a.type, null);\r\n                    de.render();\r\n                    this.$debuggerElement.find('.jo_deChildContainer').append(de.$debuggerElement);\r\n                }\r\n\r\n            } else {\r\n                this.children == [];\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderListElements(listHelper: ListHelper) {\r\n\r\n        let valueArray = listHelper.valueArray;\r\n        if (this.children.length > valueArray.length) {\r\n            for (let i = valueArray.length; i < this.children.length; i++) {\r\n                let childElement = this.children[i];\r\n                childElement.$debuggerElement.remove();\r\n            }\r\n            this.children.splice(valueArray.length);\r\n        }\r\n\r\n        if (this.children.length < valueArray.length && this.children.length < 100) {\r\n            for (let i = this.children.length; i < valueArray.length && i <= 100; i++) {\r\n                let v: Value = valueArray[i];\r\n                let title = \"\" + i;\r\n                if (i == 100) {\r\n                    v = { type: stringPrimitiveType, value: \"\" + (listHelper.valueArray.length - 100) + \" weitere...\" };\r\n                    title = \"...\";\r\n                }\r\n                let de = new DebuggerElement(null, this, title, v, v.type, null);\r\n                de.render();\r\n                this.$debuggerElement.find('.jo_deChildContainer').first().append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n        let s: string;\r\n        let v = this.value;\r\n\r\n        if (v == null) {\r\n            this.$debuggerElement.hide();\r\n            return;\r\n        }\r\n\r\n        this.$debuggerElement.show();\r\n        if (v.value == null) {\r\n            s = \"null\";\r\n            this.removeAllChildren();\r\n        } else {\r\n\r\n            if (v.updateValue != null) {\r\n                v.updateValue(v);\r\n            }\r\n\r\n            s = v.type.debugOutput(v);\r\n\r\n            if (this.type instanceof Klass) {\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n                let listHelper: ListHelper = ro.intrinsicData == null ? null : ro.intrinsicData[\"ListHelper\"];\r\n                if (listHelper != null) {\r\n                    this.renderListElements(listHelper);\r\n                    if(listHelper.allElementsPrimitive()){\r\n                        s = \"\" +listHelper.valueArray.length + \" El: \"\r\n                        s += \"[\" + listHelper.objectArray.slice(0, 20).map(o => \"\" + o).join(\", \") + \"]\"\r\n                    } else {\r\n                        s = v.type.identifier + \" (\" +listHelper.valueArray.length + \" Elemente)\";\r\n                    }\r\n                }\r\n            } \r\n            \r\n        }\r\n\r\n        this.$debuggerElement.find('.jo_deValue').first().html(s);\r\n\r\n\r\n        for (let child of this.children) {\r\n            child.renderValue();\r\n        }\r\n    }\r\n\r\n    removeAllChildren() {\r\n        for (let de of this.children) {\r\n            de.$debuggerElement.remove();\r\n        }\r\n        this.children = []\r\n    }\r\n\r\n}","export function hash(s: string){\r\n    let hash: number = 0;\r\n    let chr: number;\r\n    for (let i = 0; i < s.length; i++) {\r\n      chr   = s.charCodeAt(i);\r\n      hash  = ((hash << 5) - hash) + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\nexport function escapeHtml(unsafe: string): string {\r\n  return unsafe\r\n      .replace(/['\"]+/g, '')\r\n       .replace(/&/g, \"&amp;\")\r\n       .replace(/</g, \"&lt;\")\r\n       .replace(/>/g, \"&gt;\")\r\n       .replace(/\"/g, \"&quot;\")\r\n       .replace(/'/g, \"&#039;\");\r\n}\r\n\r\nexport function dateToString(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth() + 1)}.${date.getFullYear()}, ${twoDez(date.getHours())}:${twoDez(date.getMinutes())}`;\r\n}\r\n\r\nexport function dateToStringWithoutTime(date: Date): string{\r\n  return `${twoDez(date.getDate())}.${twoDez(date.getMonth())}.${date.getFullYear()}`;\r\n}\r\n\r\nfunction twoDez(z: number):string {\r\n  if(z < 10) return \"0\" + z;\r\n  return \"\" + z;\r\n}\r\n\r\nexport function stringToDate(text: string): Date {\r\n\r\n  let match = text.match(/^(\\d{2})\\.(\\d{2})\\.(\\d{4}), (\\d{2}):(\\d{2})$/);\r\n\r\n  let date: Date = new Date(Number.parseInt(match[3]), Number.parseInt(match[2]), Number.parseInt(match[1]), Number.parseInt(match[4]), Number.parseInt(match[5]) );\r\n\r\n  return date;\r\n}\r\n\r\nexport function stringWrap(s: string, length: number ): string{\r\n  return s.replace(\r\n    new RegExp(`(?![^\\\\n]{1,${length}}$)([^\\\\n]{1,${length}})\\\\s`, 'g'), '$1\\n'\r\n  );\r\n} \r\n\r\nexport function formatAsJavadocComment(s: string, indent: number|string = \"\"): string {\r\n  let indentString = \"\";\r\n\r\n  if(typeof indent == \"string\"){\r\n    indentString = indent;\r\n  } else {\r\n    for(let i = 0; i < indent; i++){\r\n      indentString += \" \";\r\n    }\r\n  }\r\n\r\n  s = stringWrap(s, 60);\r\n  if(s.length > 0) s = \"\\n\" + s;\r\n  s = indentString + \"/**\" + s.replace(/\\n/g, \"\\n\" + indentString + \" * \") + \"\\n\" + indentString + \" */\";\r\n  return s;\r\n}","import { escapeHtml } from \"./StringTools.js\";\r\n\r\nexport function makeEditable(elementWithText: JQuery<HTMLElement>,\r\n    elementToReplace: JQuery<HTMLElement>,\r\n    renameDoneCallback: (newContent: string) => void, selectionRange: { start: number, end: number } = null) {\r\n\r\n    if (elementToReplace == null) {\r\n        elementToReplace = elementWithText;\r\n    }\r\n\r\n    let $input = jQuery('<input type=\"text\" class=\"jo_inplaceeditor\" spellcheck=\"false\">');\r\n    $input.css({\r\n        width: elementToReplace.css('width'),\r\n        height: elementToReplace.css('height'),\r\n        color: elementToReplace.css('color'),\r\n        position: elementToReplace.css('position'),\r\n        \"background-color\": elementToReplace.css('background-color'),\r\n        \"font-size\": elementToReplace.css('font-size'),\r\n        \"font-weight\": elementToReplace.css('font-weight'),\r\n        \"box-sizing\": \"border-box\"\r\n    });\r\n    $input.val(elementWithText.text());\r\n    $input.on(\"mousedown\", (e) => { e.stopPropagation(); })\r\n\r\n    if (selectionRange != null) {\r\n        (<HTMLInputElement>$input[0]).setSelectionRange(selectionRange.start, selectionRange.end);\r\n    }\r\n\r\n    elementToReplace.after($input);\r\n    elementToReplace.hide();\r\n    setTimeout(() => {\r\n        $input.focus();\r\n    }, 300);\r\n\r\n    $input.on(\"keydown.me\", (ev) => {\r\n        if (ev.key == \"Enter\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n            let newValue = escapeHtml(<string>$input.val());\r\n            renameDoneCallback(newValue);\r\n            return;\r\n        }\r\n        if (ev.key == \"Escape\") {\r\n            $input.off(\"keydown.me\");\r\n            $input.off(\"focuslost.me\");\r\n            $input.remove();\r\n            elementToReplace.show();\r\n        }\r\n    });\r\n\r\n    $input.on(\"focusout.me\", (ev) => {\r\n        $input.off(\"keydown.me\");\r\n        let newValue = <string>$input.val();\r\n        renameDoneCallback(newValue);\r\n        elementToReplace.show()\r\n        $input.remove();\r\n        return;\r\n    });\r\n\r\n}\r\n\r\nexport type ContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: () => void;\r\n    link?: string;\r\n    subMenu?: ContextMenuItem[]\r\n};\r\n\r\nexport function openContextMenu(items: ContextMenuItem[], x: number, y: number):JQuery<HTMLElement> {\r\n\r\n    let $contextMenu = jQuery('<div class=\"jo_contextmenu\"></div>');\r\n\r\n    let $openSubMenu: JQuery<HTMLElement> = null;\r\n    let parentMenuItem: ContextMenuItem = null;\r\n\r\n    for (let mi of items) {\r\n        let caption: string = mi.caption;\r\n        if(mi.link != null){\r\n            caption = `<a href=\"${mi.link}\" target=\"_blank\" class=\"jo_menulink\">${mi.caption}</a>`;\r\n        }\r\n        let $item = jQuery('<div>' + caption + (mi.subMenu != null ? '<span style=\"float: right\"> &nbsp; &nbsp; &gt;</span>' : \"\") +  '</div>');\r\n        if (mi.color != null) {\r\n            $item.css('color', mi.color);\r\n        }\r\n        if(mi.link == null){\r\n            $item.on('mousedown.contextmenu', () => {\r\n                jQuery('.jo_contextmenu').remove();\r\n                jQuery(document).off(\"mousedown.contextmenu\");\r\n                jQuery(document).off(\"keydown.contextmenu\");\r\n                mi.callback();\r\n            });\r\n        } else {\r\n            let $link = $item.find('a');\r\n            $link.on(\"mousedown\", (event) => {\r\n                event.stopPropagation();\r\n                setTimeout(() => {\r\n                    $item.hide();\r\n                }, 500);\r\n            })\r\n\r\n        }\r\n        \r\n        $item.on('mousemove.contextmenu', () => {\r\n            if(mi != parentMenuItem && $openSubMenu != null){\r\n                $openSubMenu.remove();\r\n                parentMenuItem = null;\r\n                $openSubMenu = null;\r\n            }\r\n            if(mi.subMenu != null){\r\n                $openSubMenu = openContextMenu(mi.subMenu, $item.offset().left + $item.width(), $item.offset().top);\r\n            }\r\n        });\r\n\r\n        $contextMenu.append($item);\r\n    }\r\n\r\n    jQuery(document).on(\"mousedown.contextmenu\", () => {\r\n        jQuery(document).off(\"mousedown.contextmenu\");\r\n        jQuery(document).off(\"keydown.contextmenu\");\r\n        jQuery('.jo_contextmenu').remove();\r\n    })\r\n    \r\n    jQuery(document).on(\"keydown.contextmenu\", (ev) => {\r\n        if (ev.key == \"Escape\") {\r\n            jQuery(document).off(\"mousedown.contextmenu\");\r\n            jQuery(document).off(\"keydown.contextmenu\");\r\n            jQuery('.jo_contextmenu').remove();\r\n        }\r\n    });\r\n\r\n    let leftRight = x > window.innerWidth * 0.8 ? \"right\" : \"left\";\r\n    let xp = x > window.innerWidth * 0.8 ? window.innerWidth - x : x;\r\n    let topBottom = y > window.innerHeight * 0.8 ? \"bottom\" : \"top\";\r\n    let yp = y > window.innerHeight * 0.8 ? window.innerHeight - y : y;\r\n\r\n    let css = {};\r\n    css[leftRight] = xp + \"px\";\r\n    css[topBottom] = yp + \"px\";\r\n\r\n    $contextMenu.css(css);\r\n\r\n\r\n    jQuery(\"body\").append($contextMenu);\r\n    $contextMenu.show();\r\n\r\n    return $contextMenu;\r\n}\r\n\r\nexport function makeTabs(tabDiv: JQuery<HTMLElement>) {\r\n    let headings = tabDiv.find('.jo_tabheadings>div').not('.jo_noHeading');\r\n    let tabs = tabDiv.find('.jo_tabs>div');\r\n\r\n    headings.on(\"mousedown\", (ev) => {\r\n        let target = jQuery(ev.target);\r\n        headings.removeClass('jo_active');\r\n        target.addClass('jo_active');\r\n        let tab = tabDiv.find('.' + target.data('target'));\r\n        tabs.removeClass('jo_active');\r\n        tabs.trigger('myhide');\r\n        tab.addClass('jo_active');\r\n        tab.trigger('myshow');\r\n    });\r\n\r\n}\r\n\r\nexport function convertPxToNumber(pxString: string): number {\r\n    pxString = pxString.replace('px', '').trim();\r\n    return Number.parseInt(pxString);\r\n}\r\n\r\nexport function makeDiv(id: string, klass: string = \"\", text: string = \"\", css?: {[id: string]: any}): JQuery<HTMLDivElement>{\r\n\r\n    let s = \"\";\r\n    if(id != null && id != \"\") s += ` id=\"${id}\"`;\r\n\r\n    if(klass != null && klass != \"\") s += ` class=\"${klass}\"`; \r\n\r\n    let div = jQuery(`<div${s}></div>`);\r\n\r\n    if(css !=  null){\r\n        div.css(css);\r\n    }\r\n\r\n    if(text != null && text != \"\"){\r\n        div.text(text);\r\n    }\r\n    \r\n    return <any>div;\r\n\r\n}\r\n\r\nexport type SelectItem = {\r\n    value: string | number,\r\n    object: any,\r\n    caption: string\r\n}\r\n\r\nexport function setSelectItems($selectElement: JQuery<HTMLSelectElement>, items: SelectItem[], activeItemValue?: string | number) {\r\n    $selectElement.empty();\r\n    items.forEach(item => {\r\n        let selected: string = (item.value == activeItemValue) ? ' selected=\"selected\"' : \"\";\r\n        let element = jQuery(`<option value=${item.value}${selected}>${item.caption}</option>`);\r\n        $selectElement.append(element);\r\n        element.data('object', item.object);\r\n    }\r\n    );\r\n\r\n    $selectElement.data('items', items);\r\n\r\n\r\n}\r\n\r\nexport function getSelectedObject($selectDiv: JQuery<HTMLSelectElement>){\r\n\r\n    let items: SelectItem[] = $selectDiv.data('items');\r\n\r\n    let selectedValue = $selectDiv.val();\r\n\r\n    return items.find(item => item.value == selectedValue)?.object;\r\n\r\n}\r\n","import { openContextMenu, makeEditable, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { escapeHtml } from \"../../tools/StringTools.js\";\r\n\r\nexport type AccordionElement = {\r\n    name: string;\r\n    sortName?: string;      // if sortName == null, then name will be used when sorting\r\n    externalElement?: any;\r\n    iconClass?: string;\r\n    $htmlFirstLine?: JQuery<HTMLElement>;\r\n    $htmlSecondLine?: JQuery<HTMLElement>;\r\n}\r\n\r\nexport type AccordionContextMenuItem = {\r\n    caption: string;\r\n    color?: string;\r\n    callback: (panel: AccordionElement) => void;\r\n    subMenu?: AccordionContextMenuItem[]\r\n}\r\n\r\nexport class AccordionPanel {\r\n\r\n    elements: AccordionElement[] = [];\r\n\r\n    $captionElement: JQuery<HTMLElement>;\r\n    $buttonNew: JQuery<HTMLElement>;\r\n    $listElement: JQuery<HTMLElement>;\r\n\r\n    private fixed: boolean;\r\n\r\n    newElementCallback: (ae: AccordionElement, callbackIfSuccessful: (externalElement: any) => void) => void;\r\n    renameCallback: (externalElement: any, newName: string) => string;\r\n    deleteCallback: (externalElement: any, callbackIfSuccessful: () => void) => void;\r\n    selectCallback: (externalElement: any) => void;\r\n    addElementActionCallback: (accordionElement: AccordionElement) => JQuery<HTMLElement>;\r\n    contextMenuProvider: (externalElement: any) => AccordionContextMenuItem[];\r\n\r\n    constructor(private accordion: Accordion, private caption: string, private flexWeight: string,\r\n        private newButtonClass: string, private buttonNewTitle: string,\r\n        private defaultIconClass: string, private withDeleteButton: boolean) {\r\n\r\n        accordion.addPanel(this);\r\n\r\n    }\r\n\r\n    remove() {\r\n        this.$captionElement.remove();\r\n        this.$listElement.remove();\r\n    }\r\n\r\n    setFixed(fixed: boolean) {\r\n        this.fixed = fixed;\r\n        if (this.fixed) {\r\n            this.$captionElement.addClass('jo_fixed');\r\n        } else {\r\n            this.$captionElement.removeClass('jo_fixed');\r\n        }\r\n\r\n    }\r\n\r\n    //     <div class=\"jo_leftpanelcaption expanded\" id=\"workspace\" data-panel=\"filelistouter\">\r\n    //     <span>WORKSPACE</span>\r\n    //     <div class=\"jo_actions\"><img id=\"buttonNewFile\" title=\"Neue Datei hinzufügen\"\r\n    //             src=\"assets/projectexplorer/add-file-dark.svg\"></div>\r\n    // </div>\r\n    // <div id=\"filelistouter\" class=\"jo_projectexplorerdiv scrollable\" data-grow=\"3\"\r\n    //     style=\"flex-grow: 3\">\r\n    //     <div id=\"filelist\"></div>\r\n    // </div>\r\n\r\n\r\n    enableNewButton(enabled: boolean) {\r\n        if (this.$buttonNew != null) {\r\n            if (enabled) {\r\n                this.$buttonNew.show();\r\n            } else {\r\n                this.$buttonNew.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    renderOuterHtmlElements($accordionDiv: JQuery<HTMLElement>) {\r\n        let that = this;\r\n\r\n        this.$captionElement = jQuery(`<div class=\"jo_leftpanelcaption jo_expanded\" id=\"workspace\">\r\n        <span>` + this.caption + `</span><div class=\"jo_actions\"></div></div>`);\r\n\r\n        if (this.newButtonClass != null) {\r\n            this.$buttonNew = jQuery('<div class=\"jo_button jo_active ' + this.newButtonClass + '\" title=\"' + this.buttonNewTitle + '\">');\r\n            this.$captionElement.find('.jo_actions').append(this.$buttonNew);\r\n\r\n            this.$buttonNew.on('mousedown', (ev) => {\r\n\r\n                Helper.close();\r\n                ev.stopPropagation();\r\n\r\n                let ae: AccordionElement = {\r\n                    name: \"Neu\"\r\n                }\r\n\r\n                that.elements.push(ae);\r\n\r\n                let $element = that.renderElement(ae);\r\n                that.$listElement.prepend($element);\r\n\r\n                that.$listElement.scrollTop(0);\r\n\r\n                that.renameElement(ae, () => {\r\n\r\n                    that.newElementCallback(ae, (externalElement: any) => {\r\n\r\n                        ae.externalElement = externalElement;\r\n\r\n                        if (ae.$htmlSecondLine != null) {\r\n                            ae.$htmlSecondLine.insertAfter($element);\r\n                        }\r\n\r\n                        if (that.selectCallback != null) that.select(ae.externalElement);\r\n\r\n                    });\r\n\r\n                });\r\n\r\n            });\r\n\r\n        }\r\n\r\n        let $listOuter = jQuery('<div id=\"filelistouter\" class=\"jo_projectexplorerdiv jo_scrollable\" data-grow=\"'\r\n            + this.flexWeight + '\" style=\"flex-grow: ' + this.flexWeight + '\"></div>');\r\n        this.$listElement = jQuery('<div class=\"jo_filelist\"></div>')\r\n\r\n        $listOuter.append(this.$listElement);\r\n\r\n        $accordionDiv.append(this.$captionElement);\r\n        $accordionDiv.append($listOuter);\r\n\r\n        let $ce = this.$captionElement;\r\n        let $li = this.$listElement.parent();\r\n\r\n        $ce.on('mousedown', (ev) => {\r\n            if (ev.button != 0) {\r\n                return;\r\n            }\r\n\r\n            if (!this.fixed) {\r\n                let targetGrow = $li.data('grow');\r\n                if ($ce.hasClass('jo_expanded')) {\r\n                    if (that.accordion.parts.length > 1) {\r\n                        $li.animate({\r\n                            'flex-grow': 0.001\r\n                        }, 1000, () => { $ce.toggleClass('jo_expanded'); });\r\n                    }\r\n                } else {\r\n                    $ce.toggleClass('jo_expanded');\r\n                    $li.animate({\r\n                        'flex-grow': targetGrow\r\n                    }, 1000);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    addElement(element: AccordionElement) {\r\n        this.elements.push(element);\r\n        element.$htmlFirstLine = this.renderElement(element);\r\n        this.$listElement.prepend(element.$htmlFirstLine);\r\n    }\r\n\r\n    sortElements(){\r\n        this.elements.sort((a, b) => {\r\n            let aName = a.sortName ? a.sortName : a.name;\r\n            let bName = b.sortName ? b.sortName : b.name;\r\n            return (aName.localeCompare(bName));\r\n        });\r\n        this.elements.forEach((element) => {this.$listElement.append(element.$htmlFirstLine)});\r\n    }\r\n\r\n    setTextAfterFilename(element: AccordionElement, text: string, cssClass: string) {\r\n        let $div = element.$htmlFirstLine.find('.jo_textAfterName');\r\n        $div.addClass(cssClass);\r\n        $div.html(text);\r\n    }\r\n\r\n    addAction($element: JQuery<HTMLElement>) {\r\n        this.$captionElement.find('.jo_actions').prepend($element);\r\n    }\r\n\r\n    renderElement(element: AccordionElement): JQuery<HTMLElement> {\r\n\r\n        let that = this;\r\n\r\n        if (element.iconClass == null) element.iconClass = this.defaultIconClass;\r\n\r\n        element.$htmlFirstLine = jQuery(`<div class=\"jo_file jo_${element.iconClass}\">\r\n        <div class=\"jo_fileimage\"></div><div class=\"jo_filename\">${escapeHtml(element.name)}</div>\r\n           <div class=\"jo_textAfterName\"></div>\r\n           <div class=\"jo_additionalButtonHomework\"></div>\r\n           <div class=\"jo_additionalButtonStart\"></div>\r\n           <div class=\"jo_additionalButtonRepository\"></div>\r\n           ${this.withDeleteButton ? '<div class=\"jo_delete img_delete jo_button jo_active\"></div>' : \"\"}\r\n        </div>`);\r\n\r\n        if (this.addElementActionCallback != null) {\r\n            let $elementAction = this.addElementActionCallback(element);\r\n            element.$htmlFirstLine.append($elementAction);\r\n        }\r\n\r\n        element.$htmlFirstLine.on('mousedown', (ev) => {\r\n\r\n            if (ev.button == 0 && that.selectCallback != null) {\r\n                that.selectCallback(element.externalElement);\r\n\r\n                for (let ae of that.elements) {\r\n                    if (ae != element && ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                        ae.$htmlFirstLine.removeClass('jo_active');\r\n                    }\r\n                }\r\n\r\n                element.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n        });\r\n\r\n        element.$htmlFirstLine[0].addEventListener(\"contextmenu\", function (event) {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [];\r\n            if (that.renameCallback != null) {\r\n                contextMenuItems.push({\r\n                    caption: \"Umbenennen\",\r\n                    callback: () => {\r\n                        that.renameElement(element);\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (that.contextMenuProvider != null) {\r\n\r\n                for (let cmi of that.contextMenuProvider(element)) {\r\n                    contextMenuItems.push({\r\n                        caption: cmi.caption,\r\n                        callback: () => {\r\n                            cmi.callback(element);\r\n                        },\r\n                        color: cmi.color,\r\n                        subMenu: cmi.subMenu == null ? null : cmi.subMenu.map((mi) => {\r\n                            return {\r\n                                caption: mi.caption,\r\n                                callback: () => {\r\n                                    mi.callback(element);\r\n                                },\r\n                                color: mi.color\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (contextMenuItems.length > 0) {\r\n                event.preventDefault();\r\n                openContextMenu(contextMenuItems, event.pageX, event.pageY);\r\n            }\r\n        }, false);\r\n\r\n        if (that.withDeleteButton) {\r\n            element.$htmlFirstLine.find('.jo_delete').on('mousedown', (ev) => {\r\n                ev.preventDefault();\r\n                openContextMenu([{\r\n                    caption: \"Abbrechen\",\r\n                    callback: () => {\r\n                        // nothing to do.\r\n                    }\r\n                }, {\r\n                    caption: \"Ich bin mir sicher: löschen!\",\r\n                    color: \"#ff6060\",\r\n                    callback: () => {\r\n                        that.deleteCallback(element.externalElement, () => {\r\n                            element.$htmlFirstLine.remove();\r\n                            if (element.$htmlSecondLine != null) element.$htmlSecondLine.remove();\r\n                            that.elements.splice(that.elements.indexOf(element), 1);\r\n\r\n                            if (that.selectCallback != null) {\r\n                                if (that.elements.length > 0) {\r\n                                    that.select(that.elements[0].externalElement);\r\n                                } else {\r\n                                    that.select(null);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }], ev.pageX + 2, ev.pageY + 2);\r\n                ev.stopPropagation();\r\n            });\r\n        }\r\n\r\n        return element.$htmlFirstLine;\r\n\r\n    }\r\n\r\n    renameElement(element: AccordionElement, callback?: () => void) {\r\n        let that = this;\r\n        let $div = element.$htmlFirstLine.find('.jo_filename');\r\n        let pointPos = element.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            if (element.externalElement != null) newText = that.renameCallback(element.externalElement, newText);\r\n            element.name = newText;\r\n            $div.html(element.name);\r\n            if (callback != null) callback();\r\n            that.sortElements();\r\n        }, selection);\r\n    }\r\n\r\n    select(externalElement: any, invokeCallback: boolean = true) {\r\n\r\n        if (externalElement == null) {\r\n            for (let ae1 of this.elements) {\r\n                if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n            }\r\n        } else {\r\n            let ae = this.findElement(externalElement);\r\n\r\n            if(ae != null){\r\n                for (let ae1 of this.elements) {\r\n                    if (ae1.$htmlFirstLine.hasClass('jo_active')) ae1.$htmlFirstLine.removeClass('jo_active');\r\n                }\r\n    \r\n                ae.$htmlFirstLine.addClass('jo_active');\r\n            }\r\n\r\n        }\r\n\r\n        if (invokeCallback && this.selectCallback != null) this.selectCallback(externalElement);\r\n\r\n    }\r\n\r\n    setElementClass(element: AccordionElement, iconClass: string){\r\n        if(element != null){\r\n            element.$htmlFirstLine?.removeClass(\"jo_\" + element.iconClass).addClass(\"jo_\" + iconClass);\r\n            element.iconClass = iconClass;\r\n        }\r\n        \r\n    }\r\n\r\n    findElement(externalElement: any): AccordionElement {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                return ae;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    removeElement(externalElement: any) {\r\n        for (let ae of this.elements) {\r\n            if (ae.externalElement == externalElement) {\r\n                ae.$htmlFirstLine.remove();\r\n                if (ae.$htmlSecondLine != null) ae.$htmlSecondLine.remove();\r\n                this.elements.splice(this.elements.indexOf(ae), 1);\r\n\r\n                if (this.selectCallback != null) {\r\n                    if (this.elements.length > 0) {\r\n                        this.select(this.elements[0].externalElement);\r\n                    } else {\r\n                        this.select(null);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.$listElement.empty();\r\n        this.elements = [];\r\n    }\r\n\r\n    setCaption(text: string) {\r\n        this.$captionElement.find('span').html(text);\r\n    }\r\n\r\n    getSelectedElementData(): any {\r\n        for (let ae of this.elements) {\r\n            if (ae.$htmlFirstLine.hasClass('jo_active')) {\r\n                return ae;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Accordion {\r\n\r\n    parts: AccordionPanel[] = [];\r\n    $html: JQuery<HTMLElement>;\r\n\r\n    constructor($html: JQuery<HTMLElement>) {\r\n        this.$html = $html;\r\n        $html.addClass('jo_leftpanelinner');\r\n    }\r\n\r\n    addPanel(panel: AccordionPanel) {\r\n        panel.renderOuterHtmlElements(this.$html);\r\n        this.parts.push(panel);\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class WatcherElement {\r\n\r\n    constructor(public expression: string, public accordionElement: AccordionElement,\r\n        private main: MainBase, private $secondLine: JQuery<HTMLElement>, private $rightTextInFirstLine: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    setError(error: string) {\r\n        this.$secondLine.empty();\r\n        this.$secondLine.append(jQuery('<div class=\"jo_watcherResult\">' + \"---\" + '</div>'));\r\n    }\r\n\r\n    evaluate() {\r\n\r\n        let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n        let result = evaluator.evaluate(this.expression);\r\n        if (result.error != null) {\r\n            this.setError(result.error);\r\n        } else {\r\n\r\n            let v = \"---\";\r\n            if (result.value != null) {\r\n                v = result.value.type.debugOutput(result.value);\r\n            }\r\n\r\n            this.$secondLine.empty();\r\n            this.$rightTextInFirstLine.empty();\r\n\r\n            monaco.editor.colorize(v, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n                let $result = jQuery('<div class=\"jo_watcherResult\">' + command + '</div>');\r\n\r\n                if (this.expression.length + v.length < 20) {\r\n                    this.$rightTextInFirstLine.append($result);\r\n                } else {\r\n                    this.$secondLine.append($result);\r\n                }\r\n\r\n            }\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { Interpreter, ProgramStackElement, InterpreterState } from \"./Interpreter.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Value, Heap } from \"../compiler/types/Types.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { DebuggerElement } from \"./DebuggerElement.js\";\r\nimport { Accordion, AccordionPanel, AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { StaticClass } from \"../compiler/types/Class.js\";\r\nimport { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { WatcherElement } from \"./WatcherElement.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Debugger {\r\n\r\n    lastSymboltable: SymbolTable;\r\n    lastDebuggerElements: DebuggerElement[] = [];\r\n    accordion: Accordion;\r\n\r\n    variablePanel: AccordionPanel;\r\n\r\n    watchPanel: AccordionPanel;\r\n\r\n\r\n    constructor(private main: MainBase, private $debuggerDiv: JQuery<HTMLElement>, private $projectexplorerDiv?: JQuery<HTMLElement>) {\r\n\r\n        this.accordion = new Accordion($debuggerDiv);\r\n\r\n        this.variablePanel = new AccordionPanel(this.accordion, \"Variablen\", \"3\", null, null, \"\", false);\r\n        this.variablePanel.$listElement.css('margin-left', '4px');\r\n\r\n        this.watchPanel = new AccordionPanel(this.accordion, \"Beobachten\", \"2\",\r\n            \"img_add-dark\", \"Beobachtungsterm hinzufügen\",\r\n            \"watcher\", true);\r\n        this.watchPanel.$listElement.css('margin-left', '4px');\r\n\r\n        let that = this;\r\n        this.watchPanel.newElementCallback = (accordionElement, callbackIfSuccesful) => {\r\n            that.addWatchExpression(accordionElement);\r\n            callbackIfSuccesful(accordionElement.externalElement);\r\n            return null;\r\n        };\r\n\r\n        this.watchPanel.deleteCallback = (watchExpression, callbackIfSuccesful) => {\r\n            that.deleteWatchExpression(watchExpression);\r\n            callbackIfSuccesful();\r\n        };\r\n\r\n        this.watchPanel.renameCallback = (watchExpression, newName) => {\r\n            that.renameWatchExpression(watchExpression, newName);\r\n            return newName;\r\n        }\r\n\r\n        this.$debuggerDiv.hide();\r\n    }\r\n\r\n    public enable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.hide();\r\n        }\r\n        this.$debuggerDiv.show();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").hide();\r\n    }\r\n\r\n    public disable() {\r\n        if (this.$projectexplorerDiv != null) {\r\n            this.$projectexplorerDiv.show();\r\n        }\r\n        this.$debuggerDiv.hide();\r\n        this.$debuggerDiv.parent().find(\".jo_alternativeText\").show();\r\n    }\r\n\r\n    showData(currentProgram: Program, textPosition: TextPosition,\r\n        stack: Value[], stackframe: number, heap: Heap) {\r\n\r\n        if (currentProgram.module.file == null) return; // inside command line\r\n\r\n        let elementsToKeep: HTMLElement[] = [];\r\n\r\n        let module = currentProgram.module;\r\n        let symbolTable = module.findSymbolTableAtPosition(textPosition.line, textPosition.column);\r\n\r\n        let oldDebuggerElements = this.lastDebuggerElements;\r\n\r\n        this.lastDebuggerElements = [];\r\n        let $variableList = this.variablePanel.$listElement;\r\n\r\n        let st = symbolTable;\r\n\r\n        if (st.classContext != null) {\r\n\r\n            let object = stack[stackframe];\r\n            // same object context as before?\r\n            if (oldDebuggerElements.length > 0 && oldDebuggerElements[0].value == object && oldDebuggerElements[0].variable == null) {\r\n                // yes => keep old Debugger Element and html-Element\r\n                this.lastDebuggerElements.push(oldDebuggerElements[0]);\r\n                elementsToKeep.push(this.lastDebuggerElements[0].$debuggerElement[0]);\r\n            } else {\r\n                // no => make a new one\r\n                let thisString = (st.classContext instanceof StaticClass) ? st.classContext.identifier : \"this\";\r\n                let de: DebuggerElement = new DebuggerElement(null, null, thisString, object, st.classContext, null);\r\n                this.lastDebuggerElements.push(de);\r\n            }\r\n\r\n        }\r\n\r\n        // in nested scopes there may be a variable in inner scope with same\r\n        // identifier as variable in outer scope. We only want to show the variable in \r\n        // the inner scope, so we iterate from inner scope to outer scope and keep\r\n        // track of already shown variable names:\r\n        let visibleVariablesMap: { [identifier: string]: boolean } = {};\r\n\r\n        // iterate over SymbolTable from inside to outside\r\n        while (st != null) {\r\n\r\n            st.variableMap.forEach((variable, identifier) => {\r\n\r\n                // had there been a variable with same identifier in inner scope?\r\n                if (visibleVariablesMap[variable.identifier] == null) {\r\n                    // no\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    // Reuse old Debugger Element vor variable, if present\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            if (de.value == null && de.variable != null) {\r\n                                de.value = stack[stackframe + de.variable.stackPos];\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // no old debugger element present, so make a new one\r\n                    if (de == null) {\r\n                        let value = stack[stackframe + variable.stackPos];\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n\r\n            }, this);\r\n\r\n            // next outer symbol table\r\n            st = st.parent;\r\n        }\r\n\r\n        // if we are outside class context, then variables on heap are visible:\r\n        if (symbolTable.classContext == null) {\r\n            for (let identifier in heap) {\r\n\r\n                let variable = heap[identifier];\r\n\r\n                if (visibleVariablesMap[variable.identifier] != true) {\r\n\r\n                    visibleVariablesMap[variable.identifier] = true;\r\n\r\n                    let de: DebuggerElement;\r\n\r\n                    for (let oldDe of oldDebuggerElements) {\r\n                        if (oldDe.variable == variable) {\r\n                            de = oldDe;\r\n                            elementsToKeep.push(de.$debuggerElement[0]);\r\n\r\n                            de.value = de.variable.value;\r\n\r\n                        }\r\n                    }\r\n\r\n                    if (de == null) {\r\n                        let value = variable.value;\r\n                        de = new DebuggerElement(null, null, identifier, value, variable.type, variable);\r\n                    }\r\n\r\n                    this.lastDebuggerElements.push(de);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // remove unused elements from html DOM:\r\n        for (let child of $variableList.children()) {\r\n            if (!(elementsToKeep.indexOf(child) >= 0)) {\r\n                child.remove();\r\n            }\r\n        }\r\n\r\n        // inject new values into debugger elements:\r\n        for (let de of this.lastDebuggerElements) {\r\n\r\n            if (de.variable != null) {\r\n                if (de.variable.stackPos != null) {\r\n                    de.value = stack[stackframe + de.variable.stackPos];\r\n                } else {\r\n                    de.value = de.variable.value;\r\n                }\r\n            }\r\n\r\n            de.render();\r\n\r\n            // if html element corresponding to debugger element is not already present in Browser-DOM\r\n            // then append it to DOM\r\n            if (elementsToKeep.indexOf(de.$debuggerElement[0]) < 0) {\r\n                $variableList.append(de.$debuggerElement);\r\n            }\r\n        }\r\n\r\n        this.lastSymboltable = symbolTable;\r\n\r\n        // this.evaluateWatcherExpressions(currentProgram, textPosition, stack, stackframe);\r\n        this.evaluateWatcherExpressions();\r\n\r\n    }\r\n\r\n    renameWatchExpression(watcherElement: WatcherElement, newName: string) {\r\n        watcherElement.expression = newName;\r\n\r\n        monaco.editor.colorize(newName, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = watcherElement.accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', watcherElement.expression);\r\n\r\n        });\r\n\r\n        if (this.main.getInterpreter().state == InterpreterState.paused) {\r\n            watcherElement.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    deleteWatchExpression(watchExpression: any) {\r\n        // nothing to do\r\n    }\r\n\r\n    addWatchExpression(accordionElement: AccordionElement) {\r\n\r\n        accordionElement.$htmlSecondLine = jQuery('<div></div>');\r\n        let $rightTextAfterFilename = accordionElement.$htmlFirstLine.parent().find('.jo_textAfterName').first();\r\n\r\n        let we = new WatcherElement(accordionElement.name, accordionElement,\r\n            this.main, accordionElement.$htmlSecondLine, $rightTextAfterFilename);\r\n\r\n        accordionElement.externalElement = we;\r\n\r\n        monaco.editor.colorize(accordionElement.name, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            let $div = accordionElement.$htmlFirstLine.find('.jo_filename');\r\n            command = '<span class=\"jo_watcherExpression\">' + command + \"</span>\";\r\n            $div.html(command);\r\n            $div.attr('title', accordionElement.externalElement.expression);\r\n\r\n        });\r\n\r\n        we.evaluate();\r\n\r\n    }\r\n\r\n    evaluateWatcherExpressions() {\r\n\r\n        for (let ae of this.watchPanel.elements) {\r\n            let we: WatcherElement = ae.externalElement;\r\n            we.evaluate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { Error, Lexer } from \"./lexer/Lexer.js\";\r\nimport { CodeGenerator } from \"./parser/CodeGenerator.js\";\r\nimport { File, Module, ModuleStore } from \"./parser/Module.js\";\r\nimport { Parser } from \"./parser/Parser.js\";\r\nimport { TypeResolver, getArrayType } from \"./parser/TypeResolver.js\";\r\nimport { SymbolTable } from \"./parser/SymbolTable.js\";\r\nimport { Program } from \"./parser/Program.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { Heap } from \"./types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { TokenType } from \"./lexer/Token.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport type Compilation = {\r\n    errors: Error[],\r\n    program: Program,\r\n    symbolTable: SymbolTable\r\n}\r\n\r\nexport class AdhocCompiler {\r\n\r\n    moduleStore: ModuleStore;\r\n    lexer: Lexer;\r\n    module: Module;\r\n    parser: Parser;\r\n    codeGenerator: CodeGenerator;\r\n\r\n    constructor(private main: MainBase) {\r\n        this.moduleStore = new ModuleStore(this.main, true);\r\n        this.lexer = new Lexer();\r\n        this.parser = new Parser(true);\r\n        this.codeGenerator = new CodeGenerator();\r\n        this.module = new Module(null, main);\r\n    }\r\n\r\n    compile(code: string, moduleStore: ModuleStore, heap: Heap, symbolTable?: SymbolTable): Compilation {\r\n\r\n        let t0 = performance.now();\r\n\r\n        let errors: Error[] = [];\r\n\r\n        this.module.clear();\r\n        if (symbolTable == null) {\r\n            symbolTable = new SymbolTable(null, { column: 1, line: 1, length: 0 }, { column: 1, line: 100, length: 0 });\r\n            symbolTable.beginsNewStackframe = true;\r\n        } else {\r\n            symbolTable = symbolTable.getImitation();\r\n        }\r\n\r\n        // 1st pass: lexing\r\n        let lexed = this.lexer.lex(code);\r\n        errors = lexed.errors;\r\n        this.module.tokenList = lexed.tokens;\r\n\r\n        // 2nd pass: parse tokenlist and generate AST\r\n\r\n        let parser: Parser = new Parser(true);\r\n        parser.parse(this.module);\r\n        errors = errors.concat(this.module.errors[1]);\r\n\r\n        // 3rd pass: resolve types and populate typeStores\r\n\r\n        for (let typenode of this.module.typeNodes) {\r\n            if (typenode.resolvedType == null) {\r\n                let resolvedTypeAndModule = moduleStore.getType(typenode.identifier);\r\n                if (resolvedTypeAndModule == null) {\r\n                    errors.push({\r\n                        text: \"Der Datentyp \" + typenode.identifier + \" ist nicht bekannt.\",\r\n                        position: typenode.position,\r\n                        level: \"error\"\r\n                    })\r\n                } else {\r\n                    typenode.resolvedType = getArrayType(resolvedTypeAndModule.type, typenode.arrayDimension);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 4th pass: code generation\r\n\r\n        // let codeGeneratorErrors = this.codeGenerator\r\n        //     .startAdhocCompilation(this.module, this.moduleStore, symbolTable, heap);\r\n        let codeGeneratorErrors = this.codeGenerator\r\n            .startAdhocCompilation(this.module, moduleStore, symbolTable, heap);\r\n        errors = errors.concat(codeGeneratorErrors);\r\n\r\n\r\n\r\n        if (errors.length == 0) {\r\n\r\n            let statements = this.module.mainProgram.statements;\r\n            for (let statement of statements) {\r\n                statement.stepFinished = false;\r\n            }\r\n\r\n            if (statements.length > 0 && statements[statements.length - 1].type == TokenType.programEnd) {\r\n                statements.splice(statements.length - 1, 1);\r\n            }\r\n\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        dt = Math.round(dt * 100) / 100;\r\n\r\n        return {\r\n            program: this.module.mainProgram,\r\n            errors: errors,\r\n            symbolTable: symbolTable\r\n        };\r\n    }\r\n\r\n\r\n}","import { AdhocCompiler } from \"../compiler/AdhocCompiler.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\nimport { SymbolTable } from \"../compiler/parser/SymbolTable.js\";\r\nimport { Heap, Value } from \"../compiler/types/Types.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class Evaluator {\r\n\r\n    private programMap: Map<string, Map<number, Program>> = new Map();\r\n    private compiler: AdhocCompiler;\r\n\r\n    constructor(private workspace: Workspace, private main: MainBase){\r\n        this.compiler = new AdhocCompiler(main);\r\n    }\r\n\r\n    compile(expression: string, symbolTable: SymbolTable): {error: string, program: Program} {\r\n\r\n        if(symbolTable == null) return;\r\n\r\n        let pmEntry = this.programMap.get(expression);\r\n        if(pmEntry != null){\r\n            let program = pmEntry.get(symbolTable.id);\r\n            if(program != null){\r\n                return {error: null, program: program};\r\n            }\r\n        } else {\r\n            pmEntry = new Map();\r\n            this.programMap.set(expression, pmEntry);\r\n        }\r\n\r\n        let moduleStore = this.workspace.moduleStore;\r\n        let heap: Heap = this.main.getInterpreter().heap;\r\n\r\n        if (expression.length > 0 && moduleStore != null) {\r\n\r\n            let compilation = this.compiler.compile(expression, moduleStore, heap, symbolTable);\r\n\r\n            if (compilation.errors.length > 0) {\r\n                return { error: compilation.errors[0].text, program: null};\r\n            } else {\r\n\r\n                pmEntry.set(symbolTable.id, compilation.program);\r\n\r\n                return {error: null, program: compilation.program};\r\n            }\r\n\r\n        } else {\r\n            return {error: \"Leerer Ausdruck\", program: null};\r\n        }\r\n    }\r\n\r\n    evaluate(expression: string, symbolTable?: SymbolTable): { error: string, value: Value } {\r\n\r\n        if(symbolTable == null) symbolTable = this.main.getDebugger().lastSymboltable;\r\n\r\n        let c = this.compile(expression, symbolTable);\r\n\r\n        if(c?.error != null){\r\n            return { error: c.error, value: null};\r\n        }\r\n\r\n        if(c == null){\r\n            return { error: \"Fehler beim Kompilieren\", value: null};\r\n        }\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n\r\n        return interpreter.evaluate(c.program);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import { WorkspaceData } from \"../communication/Data.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Evaluator } from \"../interpreter/Evaluator.js\";\r\nimport { AccordionElement } from \"../main/gui/Accordion.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\n\r\nexport class Workspace {\r\n    \r\n    name: string;\r\n    id: number;\r\n    owner_id: number;\r\n\r\n    version: number;\r\n    // published_to 0: none; 1: class; 2: school; 3: all\r\n    published_to: number;\r\n    \r\n    repository_id: number;    // id of repository-workspace\r\n    has_write_permission_to_repository: boolean; // true if owner of this working copy has write permission to repository workspace\r\n\r\n    moduleStore: ModuleStore;\r\n    panelElement: AccordionElement;\r\n    currentlyOpenModule: Module;\r\n    saved: boolean = true;\r\n\r\n    compilerMessage: string;\r\n\r\n    evaluator: Evaluator;\r\n    \r\n    constructor(name: string, private main: MainBase, owner_id: number){\r\n        this.name = name;\r\n        this.owner_id = owner_id;\r\n        this.moduleStore = new ModuleStore(main);\r\n        this.evaluator = new Evaluator(this, main);\r\n    }\r\n    \r\n    getWorkspaceData(withFiles: boolean): WorkspaceData {\r\n        let wd: WorkspaceData = {\r\n            name: this.name,\r\n            id: this.id,\r\n            owner_id: this.owner_id,\r\n            currentFileId: this.currentlyOpenModule == null ? null : this.currentlyOpenModule.file.id,\r\n            files: [],\r\n            version: this.version,\r\n            repository_id: this.repository_id,\r\n            has_write_permission_to_repository: this.has_write_permission_to_repository\r\n        }\r\n\r\n        if(withFiles){\r\n            for(let m of this.moduleStore.getModules(false)){\r\n    \r\n                wd.files.push(m.getFileData(this));\r\n    \r\n            }\r\n        }\r\n\r\n        return wd;\r\n    }\r\n\r\n\r\n    renderSynchronizeButton(panelElement: AccordionElement) {\r\n        let $buttonDiv = panelElement?.$htmlFirstLine?.find('.jo_additionalButtonRepository');\r\n        if ($buttonDiv == null) return;\r\n        \r\n        let that = this;\r\n        let myMain: Main = <Main>this.main;\r\n\r\n        if (this.repository_id != null && this.owner_id == myMain.user.id) {\r\n            let $button = jQuery('<div class=\"jo_startButton img_open-change jo_button jo_active\" title=\"Workspace mit Repository synchronisieren\"></div>');\r\n            $buttonDiv.append($button);\r\n            let that = this;\r\n            $button.on('mousedown', (e) => e.stopPropagation());\r\n            $button.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.synchronizeWithRepository();\r\n\r\n            });\r\n\r\n        } else {\r\n            $buttonDiv.find('.jo_startButton').remove();\r\n        }\r\n    }\r\n\r\n    synchronizeWithRepository(){\r\n        let myMain: Main = <Main>this.main;\r\n        if(this.repository_id != null && this.owner_id == myMain.user.id){\r\n            myMain.networkManager.sendUpdates(() => {\r\n                myMain.synchronizationManager.synchronizeWithWorkspace(this);\r\n            }, true);\r\n        }\r\n    }\r\n\r\n    static restoreFromData(ws: WorkspaceData, main: Main): Workspace {\r\n\r\n        let w = new Workspace(ws.name, main, ws.owner_id);\r\n        w.id = ws.id;\r\n        w.owner_id = ws.owner_id;\r\n        w.version = ws.version;\r\n        w.repository_id = ws.repository_id;\r\n        w.has_write_permission_to_repository = ws.has_write_permission_to_repository;\r\n\r\n        for(let f of ws.files){\r\n\r\n            let m: Module = Module.restoreFromData(f, main);\r\n            w.moduleStore.putModule(m);\r\n\r\n            if(f.id == ws.currentFileId){\r\n                w.currentlyOpenModule = m;\r\n            }\r\n\r\n        }\r\n\r\n        return w;\r\n\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        \r\n        return this.moduleStore.hasErrors();\r\n        \r\n    }\r\n\r\n    getModuleByMonacoModel(model: monaco.editor.ITextModel): Module {\r\n        for(let m of this.moduleStore.getModules(false)){\r\n            if(m.model == model){\r\n                return m;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    }\r\n}\r\n\r\n","export type SoundType = {\r\n    url: string,\r\n    name: string,\r\n    player?: Howl,\r\n    description: string\r\n}\r\n\r\nexport class SoundTools {\r\n\r\n    static sounds: SoundType[] = [\r\n        {\r\n            url: \"assets/mp3/nearby_explosion_with_debris.mp3\",\r\n            name: \"nearby_explosion_with_debris\",\r\n            description: \"nahe Explosion mit herabfallenden Trümmern\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/nearby_explosion.mp3\",\r\n            name: \"nearby_explosion\",\r\n            description: \"nahe Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_bomb.mp3\",\r\n            name: \"far_bomb\",\r\n            description: \"fernes Geräusch einer Bombe\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/cannon_boom.mp3\",\r\n            name: \"cannon_boom\",\r\n            description: \"einzelner Kanonendonner\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/far_explosion.mp3\",\r\n            name: \"far_explosion\",\r\n            description: \"ferne Explosion\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/laser_shoot.mp3\",\r\n            name: \"laser_shoot\",\r\n            description: \"Laserschuss (oder was man dafür hält...)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_bell.mp3\",\r\n            name: \"short_bell\",\r\n            description: \"kurzes Klingeln (wie bei alter Landenkasse)\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/flamethrower.mp3\",\r\n            name: \"flamethrower\",\r\n            description: \"Flammenwerfer\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/digging.mp3\",\r\n            name: \"digging\",\r\n            description: \"Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_digging.mp3\",\r\n            name: \"short_digging\",\r\n            description: \"kurzes Geräusch beim Sandschaufeln\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/shoot.mp3\",\r\n            name: \"shoot\",\r\n            description: \"Schussgeräusch\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/short_shoot.mp3\",\r\n            name: \"short_shoot\",\r\n            description: \"ein kurzer Schuss\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/step.mp3\",\r\n            name: \"step\",\r\n            description: \"ein Schritt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/boulder.mp3\",\r\n            name: \"boulder\",\r\n            description: \"Geräusch eines Steins, der auf einen zweiten fällt\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_d5.wav\",\r\n            name: \"pong_d\",\r\n            description: \"Tiefer Pong-Ton\"\r\n        },\r\n        {\r\n            url: \"assets/mp3/pong_f5.wav\",\r\n            name: \"pong_f\",\r\n            description: \"Hoher Pong-Ton\"\r\n        },\r\n    ]\r\n\r\n    static soundMap: Map<string, SoundType> = new Map();\r\n\r\n    public static init(){\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            sound.player = new Howl({src: [sound.url], preload: true})\r\n            SoundTools.soundMap.set(sound.name, sound);\r\n        }\r\n\r\n    }\r\n\r\n    public static play(name: string){\r\n        let st: SoundType = SoundTools.soundMap.get(name);\r\n        if(st != null){\r\n            st.player.play();\r\n        }\r\n    }\r\n\r\n}","import { SoundTools } from \"../../tools/SoundTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type ButtonToggler = (state: boolean) => void;\r\n\r\nexport type Action = (name: string, buttonToggler?: ButtonToggler, pressed_key?: string) => void;\r\n\r\nexport type ActionEntry = {\r\n    text?: string,\r\n    keys: string[],\r\n    action: Action,\r\n    identifier: string, // name of Action is copied automatically to name of ActionEntry\r\n    active: boolean\r\n}\r\n\r\nexport class ActionManager {\r\n\r\n    actions: { [actionIdentifier: string]: ActionEntry } = { };\r\n\r\n    keyEntries: { [key: string]: ActionEntry[] } = {};\r\n\r\n    buttons: { [actionIdentifier: string]: JQuery<HTMLElement>[] } = {};\r\n\r\n    constructor(private $mainElement: JQuery<HTMLElement>, private main: MainBase){\r\n\r\n    }\r\n\r\n    public init(){\r\n\r\n        let $element:JQuery<any> = this.$mainElement;\r\n        \r\n        if($element == null) $element = jQuery(document);\r\n\r\n        let that = this;\r\n        $element.on(\"keydown\", function (event: JQuery.KeyDownEvent) { \r\n            if(event != null)\r\n            that.executeKeyDownEvent(event); \r\n        });\r\n\r\n    }\r\n\r\n    trigger(actionIdentifier: string) {\r\n        let ae = this.actions[actionIdentifier];\r\n        if(ae != null){\r\n            ae.action(actionIdentifier, null, \"\");\r\n        }\r\n    }\r\n\r\n\r\n    public registerAction(identifier: string, keys: string[], action: Action, text: string = \"\", button?: JQuery<HTMLElement>){\r\n        let ae: ActionEntry = {\r\n            action: action,\r\n            identifier: identifier,\r\n            keys: keys,\r\n            text: text,\r\n            active: true\r\n        };\r\n\r\n        this.actions[identifier] = ae;\r\n\r\n        for(let key of keys){\r\n            if(this.keyEntries[key.toLowerCase()] == null){\r\n                this.keyEntries[key.toLowerCase()] = [];\r\n            }\r\n            this.keyEntries[key.toLowerCase()].push(ae);\r\n        }\r\n\r\n        if(button != null){\r\n            if(this.buttons[identifier] == null){\r\n                this.buttons[identifier] = [];\r\n            }\r\n            this.buttons[identifier].push(button);\r\n\r\n            let t = text;\r\n            if(keys.length > 0){\r\n                t += \" [\" + keys.join(\", \") + \"]\";\r\n            }\r\n\r\n            button.attr(\"title\", t);\r\n\r\n            button.on('mousedown', () => {\r\n                if(ae.active){\r\n                    action(identifier, null, \"mousedown\");\r\n                }\r\n                if(identifier == \"interpreter.start\" && this.main.isEmbedded()){\r\n                    SoundTools.init();\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public isActive(actionIdentifier: string): boolean {\r\n\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae == null) return false;\r\n\r\n        return ae.active;\r\n    \r\n    }\r\n\r\n    public setActive(actionIdentifier: string, active: boolean){\r\n        let ae: ActionEntry = this.actions[actionIdentifier];\r\n        \r\n        if(ae != null){\r\n            ae.active = active;\r\n        }\r\n\r\n        let buttons = this.buttons[actionIdentifier];\r\n        if(buttons != null){\r\n            for(let button of buttons){\r\n                if(active){\r\n                    button.addClass('jo_active');\r\n                } else {\r\n                    button.removeClass('jo_active');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public executeKeyDownEvent(event: JQuery.KeyDownEvent) {\r\n\r\n        if(document.activeElement.tagName.toLowerCase() == \"input\"){\r\n            return;\r\n        }\r\n\r\n        if (event.keyCode <= 18 && event.keyCode >= 16) {\r\n            return; // ctrl, alt, shift\r\n        }\r\n\r\n        let key: string = \"\";\r\n\r\n        if (event.ctrlKey) {\r\n            key += \"ctrl+\";\r\n        }\r\n\r\n        if (event.shiftKey) {\r\n            key += \"shift+\";\r\n        }\r\n\r\n        if (event.altKey) {\r\n            key += \"alt+\";\r\n        }\r\n\r\n        if(event.key != null){\r\n            key += event.key.toLowerCase();\r\n        }\r\n\r\n        let actionEntries = this.keyEntries[key];\r\n\r\n        if(actionEntries != null){\r\n            for(let actionEntry of actionEntries){\r\n                if (actionEntry.active) {\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    actionEntry.action(actionEntry.identifier, null, key);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n}","import { TokenType, TokenTypeReadable } from \"../lexer/Token.js\";\r\nimport { Variable } from \"../types/Types.js\";\r\nimport { Statement } from \"./Program.js\";\r\nimport { Module } from \"./Module.js\";\r\nimport { Klass } from \"../types/Class.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\n\r\ntype Label = {\r\n    number: number;\r\n}\r\n\r\nexport class ProgramPrinter {\r\n\r\n\r\n\r\n    private $pcodeTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>){\r\n        this.$pcodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n    }\r\n\r\n    showNode(node: Statement) {\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pCodeTab = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n        $pCodeTab.find('div').removeClass(\"jo_revealProgramPointer\");\r\n        let $div:JQuery<HTMLElement> = node[\"$div\"];\r\n        if($div != null){\r\n            $div.addClass(\"jo_revealProgramPointer\");\r\n            let pos = $div.position().top + this.$pcodeTab.scrollTop();\r\n            pos -= this.$pcodeTab.height()/2;\r\n            this.$pcodeTab.scrollTop(pos);\r\n\r\n            // $div[0].scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\r\n        }\r\n    }\r\n\r\n    initGUI(){\r\n        this.$pcodeTab.on('myshow', () => {\r\n            this.main.printProgram();\r\n        });\r\n\r\n    }\r\n\r\n    printModuleToBottomDiv(workspace: Workspace, m: Module){\r\n\r\n        if(m == null) return;\r\n\r\n        if(!this.$pcodeTab.hasClass('jo_active')) return;\r\n\r\n        let $pcode = this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab');\r\n\r\n        $pcode.html(\"\");\r\n        $pcode.append(this.printModule(m));\r\n\r\n        if(workspace != null && workspace.compilerMessage != null){\r\n            $pcode.prepend(\"<div>\" + workspace.compilerMessage + \"</div>\");\r\n        }\r\n        \r\n\r\n        $pcode.find('.jo_label_destination').on(\"click\", (ev) => {\r\n            let dest = jQuery(ev.target).data('destination');\r\n            if(dest == null){\r\n                dest = jQuery(ev.target).parent().data('destination');\r\n            }\r\n            if(dest != null){\r\n                let $dest = this.$pcodeTab.find('.' + dest);\r\n                $dest[0].scrollIntoView();            \r\n            } \r\n                \r\n        });\r\n\r\n    }\r\n\r\n    printModule(m: Module): JQuery<HTMLElement>[] {\r\n\r\n        if (m == null) {\r\n            return [jQuery(\"<div></div>\")];\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n\r\n        if (m.mainProgram != null) {\r\n            s.push(jQuery(\"<h3>Main Program: </h3>\"));\r\n            s = s.concat(this.print(m.mainProgram.statements));\r\n        }\r\n\r\n        if (m.typeStore != null && m.typeStore.typeList != null) {\r\n\r\n            for (let c of m.typeStore.typeList) {\r\n                if (c instanceof Klass) {\r\n                    s.push(jQuery(\"<h2>Class \" + c.identifier + \":</h2>\"));\r\n\r\n                    if(c.attributeInitializationProgram.statements.length > 0){\r\n                        s.push(jQuery(\"<h3>Attribute-initialization:</h3>\"));\r\n                        s = s.concat(this.print(c.attributeInitializationProgram.statements));\r\n                }\r\n\r\n                    for (let m of c.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                    for (let m of c.staticClass.methods) {\r\n                        if (m.program != null) {\r\n                            s.push(jQuery(\"<h3>Static Method \" + m.signature + \":</h3>\"));\r\n                            s = s.concat(this.print(m.program.statements));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    print(statements: Statement[], indent: string = \"\"): JQuery<HTMLElement>[] {\r\n\r\n        let labels: Map<number, Label> = new Map();\r\n        let lastLabelNumber: number = 0;\r\n\r\n        for(let statement of statements){\r\n            if(statement.type == TokenType.jumpAlways || statement.type == TokenType.jumpIfFalse || \r\n                statement.type == TokenType.jumpIfTrue || statement.type == TokenType.jumpIfFalseAndLeaveOnStack || \r\n                statement.type == TokenType.jumpIfTrueAndLeaveOnStack || statement.type ==TokenType.extendedForLoopCheckCounterAndGetElement ){\r\n                let dest = statement.destination;\r\n                let label = labels.get(dest);\r\n                if(label == null){\r\n                    labels.set(dest, {\r\n                        number: lastLabelNumber++\r\n                    });\r\n                }\r\n            }\r\n            if(statement.type == TokenType.keywordSwitch){\r\n                for(let value in statement.destinationMap){\r\n                    let dest = statement.destinationMap[value];\r\n                    let label = labels.get(dest);\r\n                    if(label == null){\r\n                        labels.set(dest, {\r\n                            number: lastLabelNumber++\r\n                        });\r\n                    }                        \r\n                }\r\n                if(statement.defaultDestination != null){\r\n                    let label = labels.get(statement.defaultDestination);\r\n                    if(label == null){\r\n                        labels.set(statement.defaultDestination, {\r\n                            number: lastLabelNumber++\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let s: JQuery<HTMLElement>[] = [];\r\n        let i = 0;\r\n\r\n        for (let statement of statements) {\r\n            s.push(this.printNode(statement, indent, i, labels));\r\n            i++;\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    printNode(node: Statement, indent: string, n: number, labels: Map<number, Label>): JQuery<HTMLElement> {\r\n\r\n        let s = indent;\r\n\r\n        let label = labels.get(n);\r\n        if(label != null){\r\n            s += \"<span style='font-weight: bold' class='label\" + label.number + \"'>Label&nbsp;<span style='color: green'>\" + label.number + \":</span></span><br>\";\r\n        }\r\n\r\n        if (node.position != null) {\r\n            s += \"(l\" + this.format3(node.position.line) + \",&nbsp;c\" + this.format3(node.position.column) + \"): \";\r\n        } else {\r\n            s += \"(l&nbsp;xxx,&nbsp;c&nbsp;xxx):\";\r\n        }\r\n        // s += \"<span style='fontweight: bold; color: darkgreen'>[\" + n + \"]</span>&nbsp;\";\r\n        s += \"<span style='fontweight: bold; color: #8080ff'>\" + TokenType[node.type] + \"</span>&nbsp;\";\r\n\r\n        let s1: string = \"\";\r\n        switch (node.type) {\r\n            case TokenType.localVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n                s1 += \"V: \" + this.printVariable(node.variable) + \"&nbsp;&nbsp;pushToStackTop: \" + node.pushOnTopOfStackForInitialization;\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                s1 += \"StackPos: \" + node.stackposOfVariable;\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                s1 += \"v: \" + node.identifier;    \r\n            break;\r\n            case TokenType.pushAttribute:\r\n                s1 += \"Identifier: \" + node.attributeIdentifier + \", use THIS-Object: \" + node.useThisObject\r\n                break;\r\n            case TokenType.assignment:\r\n            case TokenType.plusAssignment:\r\n            case TokenType.minusAssignment:\r\n            case TokenType.multiplicationAssignment:\r\n            case TokenType.divisionAssignment:\r\n                s1 += \"Assignmenttype: \" + TokenTypeReadable[node.type] + \"&nbsp;&nbsp;\";\r\n                if(node.type == TokenType.assignment){\r\n                    s1 += \", leaveValueOnStack: \" + node.leaveValueOnStack;\r\n                }\r\n                \r\n                break;\r\n            case TokenType.binaryOp:\r\n            case TokenType.unaryOp:\r\n                s1 += \"Operator: \" + TokenTypeReadable[node.operator];\r\n                break;\r\n            case TokenType.pushConstant:\r\n                s1 += \"Value: \" + node.value;\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                s1 += \"Static class: \" + node.klass.identifier;\r\n                break;\r\n            case TokenType.castValue:\r\n                s1 += \"New Type: \" + node.newType.identifier;\r\n                break;\r\n            case TokenType.selectArrayElement:\r\n                break;\r\n            case TokenType.callMethod:\r\n                s1 += node.method.identifier;\r\n                s1 += \", StackframeBegin: \" + node.stackframeBegin\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                s1 += \"count: \" + node.popCount;\r\n                break;\r\n            case TokenType.return:\r\n                s1 += \"copyReturnValueToStackframePos0: \" + node.copyReturnValueToStackframePos0;\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n            case TokenType.jumpAlways:\r\n            case TokenType.jumpIfFalse:\r\n            case TokenType.jumpIfTrue:\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                let number: number = labels.get(node.destination).number;\r\n                s1 += \"destination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n            case TokenType.incrementDecrementAfter:\r\n                s1 += \"amount: \" + node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.beginArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                break;\r\n            case TokenType.addToArray:\r\n                s1 += \"count: \" + node.numberOfElementsToAdd;\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                s1 += \"type: \" + node.arrayType.identifier;\r\n                s1 += \", dimension: \" + node.dimension;\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                s1 += \"destinationMap: {\";\r\n                for(let key in node.destinationMap){\r\n                    let number: number = labels.get(node.destinationMap[key]).number;\r\n                    s1 += key + \": <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\" + \", \";\r\n                }\r\n\r\n                if(s1.endsWith(\", \")) s1 = s1.substring(0, s1.length - 2);\r\n\r\n                s1 += \"}\";\r\n                if(node.defaultDestination != null){\r\n                    let number = labels.get(node.defaultDestination).number;\r\n                    s1 += \", defaultDestination: <span style='font-weight: bold' class='jo_label_destination' data-destination='label\" + number + \"'>Label<span style='color: green'>&nbsp;\" + number + \"</span></span>\";\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                if(node.klass != null)\r\n                s1 += \"class: \" + node.klass.identifier + \", attribute: \" + node.attributeIdentifier;\r\n                break;\r\n            case TokenType.newObject: \r\n                s1 += \"class: \" + node.class.identifier;\r\n                break;\r\n        }\r\n\r\n\r\n        if(s1 != \"\") s += ` [${s1}]`;\r\n\r\n        if (node.stepFinished == true) {\r\n            s += \"::\"\r\n        }\r\n\r\n        s = \"<div>\" + s + \"</div>\";\r\n\r\n        let $div = jQuery(s);\r\n\r\n        node[\"$div\"] = $div;\r\n\r\n        return $div;\r\n    }\r\n\r\n    printVariable(v: Variable): string {\r\n        return v.type.identifier + \" \" + v.identifier + (v.stackPos == null ? \"\" :\" (sp: \" + v.stackPos + \")\");\r\n    }\r\n\r\n    format3(n: number):string{\r\n        if(n >= 100) return \"\" + n;\r\n        if(n >= 10) return \"&nbsp;\" + n;\r\n        return \"&nbsp;&nbsp;\" + n;\r\n    }\r\n\r\n}","import { Value } from \"../../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../../compiler/types/Array.js\";\r\nimport { Klass, Visibility, StaticClass, Interface } from \"../../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../../compiler/types/Enum.js\";\r\nimport { RuntimeObject } from \"../../../interpreter/RuntimeObject.js\";\r\nimport { stringPrimitiveType } from \"../../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class ConsoleEntry {\r\n\r\n    caption: string|JQuery<HTMLElement>; // only used for root elements, e.g. \"Local variables\"\r\n    // if caption is set then value == null and parent == null\r\n\r\n    parent: ConsoleEntry;\r\n    children: ConsoleEntry[];\r\n\r\n    canOpen: boolean;\r\n    isOpen: boolean = false;\r\n\r\n    identifier: string;\r\n    value: Value;\r\n\r\n    $consoleEntry: JQuery<HTMLElement>;\r\n\r\n    constructor(caption: string|JQuery<HTMLElement>, value: Value, identifier: string, parent: ConsoleEntry, \r\n        private withBottomBorder: boolean, private color: string = null ) {\r\n        this.caption = caption;\r\n        this.parent = parent;\r\n        if (parent != null) {\r\n            parent.children.push(this);\r\n        }\r\n        this.value = value;\r\n\r\n        this.identifier = identifier;\r\n\r\n        this.render();\r\n    }\r\n\r\n    getLevel(): number {\r\n        return this.parent == null ? 0 : this.parent.getLevel() + 1;\r\n    }\r\n\r\n    getIndent(): number {\r\n        // return this.getLevel() * 15;\r\n        return this.getLevel() == 0 ? 0 : 15;\r\n    }\r\n\r\n    render() {\r\n\r\n        this.$consoleEntry = jQuery('<div>');\r\n        this.$consoleEntry.addClass(\"jo_consoleEntry\");\r\n        this.$consoleEntry.css('margin-left', '' + this.getIndent() + 'px');\r\n\r\n        if(this.color != null){\r\n            this.$consoleEntry.css('background-color', this.color);\r\n        }\r\n\r\n        if(this.withBottomBorder){\r\n            this.$consoleEntry.addClass('jo_withBorder');\r\n        }\r\n\r\n        let $deFirstLine = jQuery('<div class=\"jo_ceFirstline\"></div>');\r\n\r\n        this.$consoleEntry.append($deFirstLine);\r\n\r\n\r\n        if (this.value != null && this.value.type != null && (this.value.type instanceof ArrayType ||\r\n            (this.value.type instanceof Klass && !(this.value.type instanceof Enum) && !(this.value.type == stringPrimitiveType))\r\n            || this.value.type instanceof Interface\r\n            )) {\r\n            this.canOpen = true;\r\n            this.$consoleEntry.addClass('jo_canOpen');\r\n            this.$consoleEntry.append(jQuery('<div class=\"jo_ceChildContainer\"></div>'));\r\n\r\n            this.$consoleEntry.find('.jo_ceFirstline').on('mousedown', (event) => {\r\n                if (this.value != null && this.value.value != null) {\r\n                    if (this.children == null) {\r\n                        this.onFirstOpening();\r\n                    }\r\n                    this.$consoleEntry.toggleClass('jo_expanded');\r\n                    this.isOpen = !this.isOpen;\r\n                } else {\r\n                    this.children = null;\r\n                }\r\n\r\n                event.stopPropagation();\r\n\r\n            });\r\n\r\n        } else {\r\n            if(this.caption == null && this.getLevel() == 0){\r\n                this.$consoleEntry.addClass('jo_cannotOpen');\r\n            }\r\n        }\r\n\r\n        this.renderValue();\r\n\r\n    }\r\n\r\n    onFirstOpening() {\r\n\r\n        this.children = [];\r\n\r\n        let type = this.value.type;\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            for (let a of (<Klass>this.value.type).getAttributes(Visibility.private)) {\r\n                let ro = <RuntimeObject>this.value.value;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                this.$consoleEntry.find('.jo_ceChildContainer').append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof ArrayType) {\r\n\r\n            let a = <Value[]>this.value.value;\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let i = 0; i < a.length && i < 100; i++) {\r\n\r\n                let de = new ConsoleEntry(null, a[i], \"[\" + i + \"]\", this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n\r\n            }\r\n\r\n        } else if (type instanceof StaticClass) {\r\n\r\n            let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n            for (let a of type.getAttributes(Visibility.private)) {\r\n                let ro = type.classObject;\r\n                let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                de.render();\r\n                $childContainer.append(de.$consoleEntry);\r\n            }\r\n\r\n        } else if (type instanceof Interface) {\r\n\r\n            if(this.value.value != null && this.value.value instanceof RuntimeObject){\r\n\r\n                let $childContainer = this.$consoleEntry.find('.jo_ceChildContainer');\r\n\r\n                let ro: RuntimeObject = this.value.value;\r\n\r\n                for (let a of (<Klass>ro.class).getAttributes(Visibility.private)) {\r\n                    let de = new ConsoleEntry(null, ro.getValue(a.identifier), a.identifier, this, false);\r\n                    de.render();\r\n                    $childContainer.append(de.$consoleEntry);\r\n                }\r\n\r\n            } else {\r\n                this.children == null;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderValue() {\r\n\r\n        let $firstLine = this.$consoleEntry.find('.jo_ceFirstline');\r\n\r\n        let v = this.value;\r\n        \r\n        if (v == null) {\r\n            if(this.caption != null){\r\n                if(typeof this.caption == \"string\" ){\r\n                    $firstLine.append(jQuery('<span class=\"jo_ceCaption\">' + this.caption + \"</span>\"));\r\n                } else {\r\n                    let span = jQuery('<span class=\"jo_ceCaption\"></span>');\r\n                    span.append(this.caption);\r\n                    $firstLine.append(span);\r\n                }\r\n            } else {\r\n                $firstLine.append(jQuery('<span class=\"jo_ceNoValue\">Kein Wert zurückgegeben.</span>'));\r\n            }\r\n            return;\r\n        }\r\n        \r\n        let valueString = \"\";\r\n        if (v.value == null) {\r\n            valueString = \"null\";\r\n        } else {\r\n            valueString = v.type.debugOutput(v, 400);\r\n        }\r\n        \r\n        if(this.identifier != null){\r\n            $firstLine.append(jQuery('<span class=\"jo_ceIdentifier\">' + this.identifier + \":&nbsp;</span>\"));\r\n        }\r\n        $firstLine.append(jQuery('<span class=\"jo_ceValue\">' + valueString + \"</span>\"));\r\n    }\r\n\r\n    detachValue() {\r\n        this.value = undefined;\r\n        this.$consoleEntry.removeClass('jo_canOpen');\r\n        if(this.getLevel() == 0 && this.caption == null){\r\n            this.$consoleEntry.addClass('jo_cannotOpen');\r\n        }\r\n    }\r\n\r\n}","import { AdhocCompiler } from \"../../../compiler/AdhocCompiler.js\";\r\nimport { Error } from \"../../../compiler/lexer/Lexer.js\";\r\nimport { Heap, Value } from \"../../../compiler/types/Types.js\";\r\nimport { InterpreterState, Interpreter } from \"../../../interpreter/Interpreter.js\";\r\nimport { ConsoleEntry } from \"./ConsoleEntry.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { Module } from \"../../../compiler/parser/Module.js\";\r\nimport { TextPosition, TokenType } from \"../../../compiler/lexer/Token.js\";\r\nimport { Program } from \"../../../compiler/parser/Program.js\";\r\nimport { Helper } from \"../Helper.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport class MyConsole {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n    history: string[] = [];\r\n    historyPos: number = 0;\r\n\r\n    timerHandle: any;\r\n    isDirty: boolean = false;\r\n    readyToExecute: boolean = false;\r\n\r\n    compiler: AdhocCompiler;\r\n\r\n    consoleEntries: ConsoleEntry[] = [];\r\n\r\n    errorDecoration: string[] = [];\r\n    $consoleTabHeading: JQuery<HTMLElement>;\r\n    $consoleTab: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>){\r\n        if($bottomDiv == null) return; // Console is only used to highlight exceptions\r\n\r\n        this.$consoleTabHeading = $bottomDiv.find('.jo_tabheadings>.jo_console-tab');\r\n        this.$consoleTab = $bottomDiv.find('.jo_tabs>.jo_consoleTab');\r\n    }\r\n\r\n    initConsoleClearButton(){\r\n\r\n        let that = this;\r\n\r\n        let $consoleClear = this.$consoleTabHeading.parent().find('.jo_console-clear');\r\n\r\n        this.$consoleTab.on('myshow', () => {\r\n            $consoleClear.show();\r\n            that.editor.layout();\r\n        });\r\n\r\n        this.$consoleTab.on('myhide', () => {\r\n            $consoleClear.hide();\r\n        });\r\n\r\n        $consoleClear.on('mousedown', (e) => {\r\n            e.stopPropagation();\r\n            that.clear();\r\n        });\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        if(this.$bottomDiv == null) return;\r\n\r\n        this.initConsoleClearButton();\r\n\r\n        let $editorDiv = this.$consoleTab.find('.jo_commandline');\r\n\r\n        this.editor = monaco.editor.create($editorDiv[0], {\r\n            value: [\r\n                ''\r\n            ].join('\\n'),\r\n            automaticLayout: false,\r\n            renderLineHighlight: \"none\",\r\n            renderIndentGuides: false,\r\n            overviewRulerLanes: 0,\r\n            lineNumbers: 'off',\r\n            glyphMargin: false,\r\n            folding: false,\r\n            // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\r\n            lineDecorationsWidth: 0,\r\n            lineNumbersMinChars: 0,\r\n            fixedOverflowWidgets: true,\r\n            language: 'myJava',\r\n\r\n            fontSize: 14,\r\n            fontFamily: \"Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            occurrencesHighlight: false,\r\n            suggest: { \r\n                localityBonus: true,\r\n                snippetsPreventQuickSuggestions: false\r\n            },\r\n            minimap: {\r\n                enabled: false\r\n            },\r\n            scrollbar: {\r\n                vertical: 'hidden',\r\n                horizontal: 'hidden'\r\n            },\r\n            theme: \"myCustomThemeDark\"\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.layout();\r\n        \r\n        let that = this;\r\n\r\n        this.editor.addCommand(monaco.KeyCode.Enter, () => {\r\n\r\n            that.compileIfDirty();\r\n\r\n            if (that.readyToExecute) {\r\n                let command = that.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n\r\n                if(command == \"\"){\r\n                    return;\r\n                }\r\n\r\n                that.history.push(command);\r\n                that.historyPos = 0;\r\n\r\n                that.execute();\r\n\r\n                that.editor.setValue(\"\");\r\n\r\n            } else {\r\n                // TODO: Fehlermeldung!\r\n            }\r\n\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.UpArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos + 1);\r\n            if (nextHistoryPos >= 0) {\r\n                that.historyPos++;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.editor.addCommand(monaco.KeyCode.DownArrow, () => {\r\n\r\n            let nextHistoryPos = that.history.length - (that.historyPos - 1);\r\n            if (nextHistoryPos <= that.history.length - 1) {\r\n                that.historyPos--;\r\n                let text = that.history[nextHistoryPos];\r\n                that.editor.setValue(text);\r\n                that.editor.setPosition({\r\n                    lineNumber: 1,\r\n                    column: text.length + 1\r\n                })\r\n            } else {\r\n                that.editor.setValue(\"\");\r\n                that.historyPos = 0;\r\n            }\r\n\r\n        }, \"!suggestWidgetVisible\");\r\n\r\n        this.compiler = new AdhocCompiler(this.main);\r\n\r\n        let model = this.editor.getModel();\r\n        let lastVersionId = 0;\r\n\r\n        model.onDidChangeContent(() => {\r\n            let versionId = model.getAlternativeVersionId();\r\n\r\n            if (versionId != lastVersionId) {\r\n                that.isDirty = true;\r\n                lastVersionId = versionId;\r\n            }\r\n        });\r\n\r\n        this.startTimer();\r\n\r\n        this.$consoleTabHeading.on(\"mousedown\", ()=>{\r\n            Helper.showHelper(\"consoleHelper\", this.main);\r\n\r\n            setTimeout(() => {\r\n                that.editor.focus();\r\n            }, 500);\r\n        });\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.stopTimer();\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n    }\r\n\r\n    stopTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n            this.timerHandle = null;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.isDirty) {\r\n\r\n            let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n            let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n            let symbolTable = this.main.getDebugger().lastSymboltable;\r\n            let heap = this.main.getInterpreter().heap;\r\n\r\n            if (command.length > 0 && moduleStore != null) {\r\n\r\n                let compilation = this.compiler.compile(command, moduleStore, heap, symbolTable);\r\n\r\n                this.readyToExecute = compilation.errors.length == 0;\r\n\r\n                this.showErrors(compilation.errors);\r\n\r\n                this.isDirty = false;\r\n\r\n            } else {\r\n                this.showErrors([]);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    showErrors(errors: Error[]) {\r\n\r\n        let markers: monaco.editor.IMarkerData[] = [];\r\n\r\n        for (let error of errors) {\r\n            markers.push({\r\n                startLineNumber: error.position.line,\r\n                startColumn: error.position.column,\r\n                endLineNumber: error.position.line,\r\n                endColumn: error.position.column + error.position.length,\r\n                message: error.text,\r\n                severity: monaco.MarkerSeverity.Error\r\n            });\r\n\r\n        }\r\n\r\n        monaco.editor.setModelMarkers(this.editor.getModel(), 'Fehler', markers);\r\n\r\n    }\r\n\r\n    execute() {\r\n\r\n        let interpreter = this.main.getInterpreter();\r\n        let module = this.compiler.module;\r\n        let command = this.editor.getModel().getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n        let program = module.mainProgram;\r\n\r\n        monaco.editor.colorize(command, 'myJava', { tabSize: 3 }).then((command) => {\r\n\r\n            // if(this.programHasMethodCalls(program)){\r\n                // this.executeInStepMode(interpreter, program, command);\r\n            // } else {\r\n                this.executeRapidly(interpreter, program, command);\r\n            // }\r\n\r\n        });\r\n\r\n    }\r\n    programHasMethodCalls(program: Program): boolean {\r\n        \r\n        for(let statement of program.statements){\r\n            if(statement.type == TokenType.callMethod && statement.method.invoke == null){\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n\r\n    }\r\n\r\n    executeInStepMode(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        interpreter.pushCurrentProgram();\r\n\r\n        interpreter.currentProgram = program;\r\n        interpreter.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = interpreter.stack.length;\r\n        let oldInterpreterState = interpreter.state;\r\n\r\n        interpreter.setState(InterpreterState.paused);\r\n\r\n        interpreter.start(() => {\r\n\r\n            let stackTop: Value;\r\n            if (interpreter.stack.length > stacksizeBefore) {\r\n                stackTop = interpreter.stack.pop();\r\n\r\n                while (interpreter.stack.length > stacksizeBefore) {\r\n                    interpreter.stack.pop();\r\n                }\r\n\r\n            }\r\n\r\n            this.writeConsoleEntry(command, stackTop);\r\n\r\n            interpreter.setState(oldInterpreterState);\r\n            if (oldInterpreterState == InterpreterState.paused) {\r\n                interpreter.showProgramPointerAndVariables();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    executeRapidly(interpreter: Interpreter, program: Program, command: string ){\r\n\r\n        let result = interpreter.evaluate(program);\r\n\r\n        if(result.error == null){\r\n            \r\n            this.writeConsoleEntry(command, result.value);\r\n\r\n        } else {\r\n\r\n            let $entry = jQuery('<div><div>' + command + '</div></div>');\r\n            $entry.append(jQuery('<div class=\"jo_console-error\"> ' + result.error + '</div>'));\r\n\r\n            this.writeConsoleEntry($entry, null)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showTab(){\r\n        this.$consoleTabHeading.trigger(\"mousedown\");\r\n    }\r\n\r\n    writeConsoleEntry(command: string|JQuery<HTMLElement>, stackTop: Value, color: string = null) {\r\n\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n\r\n        let commandEntry = new ConsoleEntry(command, null, null, null, stackTop == null, color);\r\n        this.consoleEntries.push(commandEntry);\r\n        consoleTop.append(commandEntry.$consoleEntry);\r\n\r\n        if(stackTop != null){\r\n            let resultEntry = new ConsoleEntry(null, stackTop, null, null, true, color);\r\n            this.consoleEntries.push(resultEntry);\r\n            consoleTop.append(resultEntry.$consoleEntry);\r\n        }\r\n\r\n        var height = consoleTop[0].scrollHeight;\r\n        consoleTop.scrollTop(height);\r\n\r\n    }\r\n\r\n    clear() {\r\n        let consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        consoleTop.children().remove(); // empty();\r\n        this.consoleEntries = [];\r\n    }\r\n\r\n    detachValues() {\r\n        for(let ce of this.consoleEntries){\r\n            ce.detachValue();\r\n        }\r\n    }\r\n\r\n    showError(m: Module, position: TextPosition) {\r\n\r\n        if(this.main instanceof Main){\r\n            if (m?.file?.name != this.main.projectExplorer.getCurrentlyEditedModule()?.file?.name) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealError' }\r\n\r\n            },\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealErrorWholeLine', isWholeLine: true }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n    clearErrors(){\r\n        this.errorDecoration = this.main.getMonacoEditor().deltaDecorations(this.errorDecoration, [\r\n        ]);\r\n    }\r\n\r\n    clearExceptions(){\r\n        if(this.$bottomDiv == null) return;\r\n        let $consoleTop = this.$consoleTab.find('.jo_console-top');\r\n        $consoleTop.find('.jo_exception').parents('.jo_consoleEntry').remove();\r\n    }\r\n\r\n}","import { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error } from \"../../compiler/lexer/Lexer.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class ErrorManager {\r\n\r\n    oldDecorations: string[] = [];\r\n    oldErrorDecorations: string[] = [];\r\n    $errorDiv: JQuery<HTMLElement>;\r\n\r\n    $bracket_warning: JQuery<HTMLElement>;\r\n\r\n    minimapColor: {[key: string]:string } = {};\r\n\r\n    lightBulbOnClickFunctionList: {class: string, onClickFunction: () => void, title: string}[] = [];\r\n\r\n    constructor(private main: MainBase, private $bottomDiv: JQuery<HTMLElement>, private $mainDiv: JQuery<HTMLElement>) {\r\n        this.minimapColor[\"error\"] = \"#bc1616\";\r\n        this.minimapColor[\"warning\"] = \"#cca700\";\r\n        this.minimapColor[\"info\"] = \"#75beff\";\r\n\r\n        this.$bracket_warning = $mainDiv.find(\".jo_parenthesis_warning\");\r\n\r\n        this.$bracket_warning.attr('title', 'Klammeralarm!');\r\n        this.$bracket_warning.children().attr('title', 'Klammeralarm!');\r\n\r\n        let that = this;\r\n        $mainDiv.find(\".jo_pw_undo\").on(\"click\", () => {\r\n            let editor = that.main.getMonacoEditor();\r\n            editor.trigger(\".\", \"undo\", {});\r\n        }).attr('title', 'Undo');\r\n    }\r\n\r\n    showParenthesisWarning(error: string){\r\n        if(error != null){\r\n            this.$bracket_warning.css(\"visibility\", \"visible\");\r\n            this.$bracket_warning.find(\".jo_pw_heading\").text(error);\r\n        } else {\r\n            this.$bracket_warning.css(\"visibility\", \"hidden\");\r\n        }\r\n    }\r\n\r\n    showErrors(workspace: Workspace): Map<Module, number> {\r\n\r\n        this.lightBulbOnClickFunctionList = [];\r\n\r\n        let errorCountMap: Map<Module, number> = new Map();\r\n\r\n        this.$errorDiv = this.$bottomDiv.find('.jo_tabs>.jo_errorsTab');\r\n        this.$errorDiv.empty();\r\n\r\n        let hasErrors = false;\r\n\r\n        let ms = workspace.moduleStore;\r\n        let editor: monaco.editor.IStandaloneCodeEditor = this.main.getMonacoEditor();\r\n\r\n        for (let m of ms.getModules(false)) {\r\n            let markers: monaco.editor.IMarkerData[] = [];\r\n            let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n            let $errorList: JQuery<HTMLElement>[] = [];\r\n\r\n            let errors = m.getSortedAndFilteredErrors();\r\n            errorCountMap.set(m, m.getErrorCount());\r\n\r\n            for (let error of errors) {\r\n\r\n                let linesDecorationsClassName: string;\r\n                let borderLeftClass: string;\r\n                let minimapColor: string = this.minimapColor[error.level];\r\n\r\n                switch (error.level) {\r\n                    case \"error\": linesDecorationsClassName = 'jo_revealErrorLine'; borderLeftClass = \"jo_borderLeftError\"; break;\r\n                    case \"warning\": linesDecorationsClassName = 'jo_revealWarningLine'; borderLeftClass = \"jo_borderLeftWarning\"; break;\r\n                    case \"info\": linesDecorationsClassName = 'jo_revealInfoLine'; borderLeftClass = \"jo_borderLeftInfo\"; break;\r\n                }\r\n\r\n                if (error.quickFix != null) {\r\n                    let quickFix = error.quickFix;\r\n                    let lightBulbClass = \"lb_\" + Math.trunc(Math.random() * 1000000);\r\n                    linesDecorationsClassName = 'jo_yellowLightBulb ' + borderLeftClass + \" \" + lightBulbClass;\r\n\r\n                    this.lightBulbOnClickFunctionList.push({class: '.' + lightBulbClass, \r\n                    onClickFunction: () => {\r\n\r\n                        let edits = quickFix.editsProvider(m.model.uri);\r\n                        editor.executeEdits(\"\", edits.map((edit) => {\r\n                            let r = edit.edit.range;\r\n                            return {\r\n                                range: new monaco.Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn),\r\n                                text: edit.edit.text,\r\n                                forceMoveMarkers: true\r\n                            }\r\n                        }\r\n                        ));\r\n\r\n                    },\r\n                    title: quickFix.title\r\n                })\r\n\r\n\r\n                }\r\n\r\n                this.processError(error, m, $errorList);\r\n\r\n                let severity: monaco.MarkerSeverity;\r\n                switch (error.level) {\r\n                    case \"error\": severity = monaco.MarkerSeverity.Error; break;\r\n                    case \"warning\": severity = monaco.MarkerSeverity.Warning; break;\r\n                    case \"info\": severity = monaco.MarkerSeverity.Info; break;\r\n                }\r\n\r\n                markers.push({\r\n                    startLineNumber: error.position.line,\r\n                    startColumn: error.position.column,\r\n                    endLineNumber: error.position.line,\r\n                    endColumn: error.position.column + error.position.length,\r\n                    message: error.text,\r\n                    severity: severity,\r\n                    //@ts-ignore\r\n                    relatedInformation: error.quickFix\r\n                });\r\n\r\n                decorations.push({\r\n                    range: {\r\n                        startLineNumber: error.position.line,\r\n                        startColumn: error.position.column,\r\n                        endLineNumber: error.position.line,\r\n                        endColumn: error.position.column + error.position.length\r\n                    },\r\n                    options: {\r\n                        linesDecorationsClassName: linesDecorationsClassName,\r\n                        minimap: {\r\n                            position: monaco.editor.MinimapPosition.Inline,\r\n                            color: minimapColor\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n            monaco.editor.setModelMarkers(m.model, 'test', markers);\r\n            m.oldErrorDecorations = m.model.deltaDecorations(m.oldErrorDecorations, decorations);\r\n\r\n            // decorations used when user clicks on error in error-list:\r\n            this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, []);\r\n\r\n\r\n            if ($errorList.length > 0 && this.$errorDiv.length > 0) {\r\n                hasErrors = true;\r\n                let $file = jQuery('<div class=\"jo_error-filename\">' + m.file.name + '&nbsp;</div>');\r\n                this.$errorDiv.append($file);\r\n                for (let $error of $errorList) {\r\n                    this.$errorDiv.append($error);\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasErrors && this.$errorDiv.length > 0) {\r\n            this.$errorDiv.append(jQuery('<div class=\"jo_noErrorMessage\">Keine Fehler gefunden :-)</div>'));\r\n        }\r\n\r\n        this.registerLightbulbOnClickFunctions();\r\n\r\n        return errorCountMap;\r\n\r\n    }\r\n\r\n    registerLightbulbOnClickFunctions() {\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            for(let locf of that.lightBulbOnClickFunctionList){\r\n                    jQuery(locf.class).off('click', locf.onClickFunction);\r\n                    jQuery(locf.class).on('click', locf.onClickFunction).attr('title', locf.title);\r\n            }            \r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    processError(error: Error, m: Module, $errorDivs: JQuery<HTMLElement>[]) {\r\n\r\n        let $div = jQuery('<div class=\"jo_error-line\"></div>');\r\n        let $lineColumn = jQuery('<span class=\"jo_error-position\">[Z&nbsp;<span class=\"jo_linecolumn\">' + error.position.line + '</span>' +\r\n            ' Sp&nbsp;<span class=\"jo_linecolumn\">' + error.position.column + '</span>]</span>:&nbsp;');\r\n        let category = \"\";\r\n        switch (error.level) {\r\n            case \"error\": break;\r\n            case \"warning\": category = '<span class=\"jo_warning_category\">Warnung: </span>'; break;\r\n            case \"info\": category = '<span class=\"jo_info_category\">Info: </span>'; break;\r\n        }\r\n        let $message = jQuery('<div class=\"jo_error-text\">' + category + error.text + \"</div>\");\r\n\r\n        $div.append($lineColumn).append($message);\r\n\r\n        let that = this;\r\n        $div.on(\"mousedown\", (ev) => {\r\n            this.$errorDiv.find('.jo_error-line').removeClass('jo_active');\r\n            $div.addClass('jo_active');\r\n            that.showError(m, error);\r\n        });\r\n\r\n        $errorDivs.push($div);\r\n    }\r\n\r\n    showError(m: Module, error: Error) {\r\n\r\n        if (this.main instanceof Main) {\r\n            if (m != this.main.projectExplorer.getCurrentlyEditedModule()) {\r\n                this.main.editor.dontDetectLastChange();\r\n                this.main.projectExplorer.setModuleActive(m);\r\n            }\r\n        }\r\n        let position = error.position;\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.main.getMonacoEditor().revealRangeInCenter(range);\r\n\r\n        let className: string = \"\";\r\n        switch (error.level) {\r\n            case \"error\": className = \"jo_revealError\"; break;\r\n            case \"warning\": className = \"jo_revealWarning\"; break;\r\n            case \"info\": className = \"jo_revealInfo\"; break;\r\n        }\r\n\r\n\r\n        this.oldDecorations = this.main.getMonacoEditor().deltaDecorations(this.oldDecorations, [\r\n            {\r\n                range: range,\r\n                options: { className: className }\r\n\r\n            }\r\n        ]);\r\n\r\n\r\n    }\r\n\r\n}","import { MainBase } from \"../MainBase.js\";\r\nimport { makeDiv } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { stringToDate, dateToStringWithoutTime } from \"../../tools/StringTools.js\";\r\nimport { Main } from \"../Main.js\";\r\n\r\ntype ModuleWithWorkspace = {\r\n    module: Module,\r\n    workspace: Workspace\r\n}\r\n\r\ntype DayWithModules = {\r\n    date: Date;\r\n    day: string;\r\n    modules: ModuleWithWorkspace[];\r\n}\r\n\r\nexport class HomeworkManager {\r\n\r\n    $homeworkTab: JQuery<HTMLElement>;\r\n    $homeworkTabLeft: JQuery<HTMLElement>;\r\n    $homeworkTabRight: JQuery<HTMLElement>;\r\n\r\n    $showRevisionButton: JQuery<HTMLElement>;\r\n    showRevisionActive: boolean = false;\r\n\r\n    diffEditor: monaco.editor.IStandaloneDiffEditor;\r\n\r\n    constructor(private main: Main, public $bottomDiv: JQuery<HTMLElement>) {\r\n        this.$homeworkTab = $bottomDiv.find('.jo_tabs>.jo_homeworkTab');\r\n    }\r\n\r\n    initGUI() {\r\n        let that = this;\r\n        this.$homeworkTab.append(this.$homeworkTabLeft = makeDiv(\"\", \"jo_homeworkTabLeft jo_scrollable\"));\r\n        this.$homeworkTab.append(this.$homeworkTabRight = makeDiv(\"\", \"jo_homeworkTabRight jo_scrollable\"));\r\n        jQuery('#view-mode').prepend(this.$showRevisionButton = makeDiv(\"\", \"jo_button jo_active jo_homeworkRevisionButton\", \"\"));\r\n        this.$showRevisionButton.on(\"click\", () => {\r\n            if (this.showRevisionActive) {\r\n                this.hideRevision();\r\n            } else {\r\n                this.showRevision(that.main.getCurrentlyEditedModule());\r\n            }\r\n        });\r\n        this.$showRevisionButton.hide();\r\n        jQuery('#diffEditor').hide();\r\n    }\r\n\r\n    showHomeWorkRevisionButton() {\r\n        this.$showRevisionButton.text(this.showRevisionActive ? \"Normalansicht\" : \"Korrekturen zeigen\");\r\n        this.$showRevisionButton.show();\r\n    }\r\n\r\n    hideHomeworkRevisionButton() {\r\n        this.$showRevisionButton.hide();\r\n    }\r\n\r\n    showRevision(module: Module) {\r\n\r\n        module.file.text = module.getProgramTextFromMonacoModel();\r\n        let file = module.file;\r\n\r\n        jQuery('#editor').hide();\r\n        jQuery('#diffEditor').show();\r\n\r\n        var originalModel = monaco.editor.createModel(file.text_before_revision, \"myJava\");\r\n        var modifiedModel = monaco.editor.createModel(file.text, \"myJava\");\r\n\r\n        this.diffEditor = monaco.editor.createDiffEditor(document.getElementById(\"diffEditor\"), {\r\n            // You can optionally disable the resizing\r\n            enableSplitViewResizing: true,\r\n            originalEditable: false,\r\n            readOnly: true,\r\n            // Render the diff inline\r\n            renderSideBySide: true\r\n        });\r\n\r\n        this.diffEditor.setModel({\r\n            original: originalModel,\r\n            modified: modifiedModel\r\n        });\r\n\r\n        this.showRevisionActive = true;\r\n        this.showHomeWorkRevisionButton();\r\n    }\r\n\r\n    hideRevision() {\r\n        if (this.showRevisionActive) {\r\n\r\n            jQuery('#diffEditor').hide();\r\n            this.diffEditor.dispose();\r\n            this.diffEditor = null;\r\n            jQuery('#editor').show();\r\n\r\n            this.showRevisionActive = false;\r\n            this.showHomeWorkRevisionButton();\r\n        }\r\n    }\r\n\r\n\r\n    attachToWorkspaces(workspaces: Workspace[]) {\r\n\r\n        let daysWithModules: DayWithModules[] = [];\r\n        let map: { [day: string]: DayWithModules } = {};\r\n\r\n        workspaces.forEach(ws => {\r\n            ws.moduleStore.getModules(false).forEach(module => {\r\n\r\n                let dateString = module.file.submitted_date;\r\n                if (dateString != null) {\r\n\r\n                    let date: Date = stringToDate(dateString);\r\n                    let dateWithoutTime = dateToStringWithoutTime(date);\r\n                    let dwm: DayWithModules = map[dateWithoutTime];\r\n                    if (dwm == null) {\r\n                        dwm = {\r\n                            date: date,\r\n                            day: dateWithoutTime,\r\n                            modules: []\r\n                        };\r\n                        map[dateWithoutTime] = dwm;\r\n                        daysWithModules.push(dwm);\r\n                    }\r\n                    dwm.modules.push({module: module, workspace: ws});\r\n\r\n                }\r\n\r\n            });\r\n\r\n        });\r\n\r\n        this.$homeworkTabLeft.empty();\r\n        this.$homeworkTabRight.empty();\r\n\r\n        let that = this;\r\n\r\n        this.$homeworkTabLeft.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgabetage:\"));\r\n\r\n\r\n        daysWithModules.sort((a, b) => {\r\n            if (a.date.getFullYear() != b.date.getFullYear()) return -Math.sign(a.date.getFullYear() - b.date.getFullYear());\r\n            if (a.date.getMonth() != b.date.getMonth()) return -Math.sign(a.date.getMonth() - b.date.getMonth());\r\n            if (a.date.getDate() != b.date.getDate()) return -Math.sign(a.date.getDate() - b.date.getDate());\r\n            return 0;\r\n        });\r\n\r\n        let first: boolean = true;\r\n\r\n        daysWithModules.forEach(dwm => {\r\n\r\n            dwm.modules.sort((m1, m2) => m1.module.file.name.localeCompare(m2.module.file.name));\r\n\r\n            let $div = makeDiv(\"\", \"jo_homeworkDate\", dwm.day);\r\n            this.$homeworkTabLeft.append($div);\r\n\r\n            $div.on(\"click\", (e) => {\r\n                this.$homeworkTabLeft.find('.jo_homeworkDate').removeClass('active');\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            });\r\n\r\n            if (first) {\r\n                first = false;\r\n                $div.addClass('jo_active');\r\n                that.select(dwm);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    select(dwm: DayWithModules) {\r\n        this.$homeworkTabRight.empty();\r\n        this.$homeworkTabRight.append(makeDiv(\"\", \"jo_homeworkHeading\", \"Abgegebene Dateien:\"));\r\n        let that = this;\r\n        dwm.modules.forEach(moduleWithWorkspace => {\r\n            let $div = jQuery(`<div class=\"jo_homeworkEntry\">Workspace <span class=\"jo_homework-workspace\">\r\n                    ${moduleWithWorkspace.workspace.name}</span>, Datei <span class=\"jo_homework-file\">\r\n                    ${moduleWithWorkspace.module.file.name}</span> (Abgabe: ${moduleWithWorkspace.module.file.submitted_date} )</div>`);\r\n            that.$homeworkTabRight.append($div);\r\n            $div.on(\"click\", () => {\r\n                    that.main.projectExplorer.setWorkspaceActive(moduleWithWorkspace.workspace);\r\n                    that.main.projectExplorer.setModuleActive(moduleWithWorkspace.module);\r\n                    that.main.projectExplorer.fileListPanel.select(moduleWithWorkspace.module, false);\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n\r\n\r\n}","import { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { MyConsole } from \"./console/MyConsole.js\";\r\nimport { ErrorManager } from \"./ErrorManager.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { HomeworkManager } from \"./HomeworkManager.js\";\r\n\r\nexport class BottomDiv {\r\n\r\n    programPrinter: ProgramPrinter;\r\n    console: MyConsole;\r\n    errorManager: ErrorManager;\r\n    homeworkManager: HomeworkManager;\r\n\r\n    constructor(private main: MainBase, public $bottomDiv: JQuery<HTMLElement>, public $mainDiv: JQuery<HTMLElement>) {\r\n\r\n        if (this.$bottomDiv.find('.jo_tabs>.jo_pcodeTab').length > 0) {\r\n            this.programPrinter = new ProgramPrinter(main, $bottomDiv);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_console-tab').length > 0) {\r\n            this.console = new MyConsole(main, $bottomDiv);\r\n        } else {\r\n            this.console = new MyConsole(main, null);\r\n        }\r\n\r\n        if (this.$bottomDiv.find('.jo_tabheadings>.jo_homeworkTabheading').length > 0) {\r\n            this.homeworkManager = new HomeworkManager(<Main>main, $bottomDiv);\r\n        }\r\n\r\n        this.errorManager = new ErrorManager(main, $bottomDiv, $mainDiv);\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$bottomDiv);\r\n        if (this.programPrinter != null) this.programPrinter.initGUI();\r\n        if (this.console != null) this.console.initGUI();\r\n        if(this.homeworkManager != null) this.homeworkManager.initGUI();\r\n\r\n        this.$bottomDiv.find('.jo_tabs').children().first().trigger(\"click\");\r\n\r\n        let that = this;\r\n        jQuery(\".jo_pcodeTab\").on(\"myshow\", () => {\r\n            that.printCurrentlyExecutedModule();\r\n        });\r\n\r\n    }\r\n\r\n    printCurrentlyExecutedModule() {\r\n        let interpreter = this.main.getInterpreter();\r\n        if (interpreter.state == InterpreterState.running || interpreter.state == InterpreterState.paused) {\r\n            let module = interpreter.currentProgram?.module;\r\n            this.printModuleToBottomDiv(null, module);\r\n        }\r\n    }\r\n\r\n    printModuleToBottomDiv(currentWorkspace: Workspace, module: Module) {\r\n        if (this.programPrinter != null) this.programPrinter.printModuleToBottomDiv(currentWorkspace, module);\r\n    }\r\n\r\n\r\n    showHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'visible');\r\n        jQuery('.jo_homeworkTabheading').trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n    hideHomeworkTab() {\r\n\r\n        jQuery('.jo_homeworkTabheading').css('visibility', 'hidden');\r\n        jQuery('.jo_tabheadings').children().first().trigger(\"mousedown\");\r\n\r\n    }\r\n\r\n\r\n}","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, getVisibilityUpTo, Interface, Visibility, StaticClass } from \"../../compiler/types/Class.js\";\r\nimport { SymbolTable } from \"../../compiler/parser/SymbolTable.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class MyCompletionItemProvider implements monaco.languages.CompletionItemProvider {\r\n\r\n    isConsole: boolean;\r\n\r\n    public triggerCharacters: string[] = ['.', 'abcdefghijklmnopqrstuvwxyzäöüß_ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜ', ' '];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    first: boolean = true;\r\n    provideCompletionItems(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.CompletionContext, token: monaco.CancellationToken): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n\r\n        setTimeout(() => {\r\n            //@ts-ignore\r\n            let sw = this.main.getMonacoEditor()._contentWidgets[\"editor.widget.suggestWidget\"].widget;\r\n            if (this.first) {\r\n                sw.toggleDetails();\r\n                this.first = false;\r\n            }\r\n            // sw.toggleSuggestionDetails();\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.toggleSuggestionDetails', {});\r\n            // this.main.monaco.trigger('keyboard', 'editor.action.triggerSuggest', {});\r\n            // this.main.monaco.trigger(monaco.KeyMod.CtrlCmd + monaco.KeyCode.Space, 'type', {});\r\n        }, 300);\r\n\r\n        let consoleModel = this.main.getBottomDiv()?.console?.editor?.getModel();\r\n        this.isConsole = model == consoleModel;\r\n\r\n        let isMainWindow = model == this.main.getMonacoEditor().getModel();\r\n\r\n        if (!(this.isConsole || isMainWindow)) return;\r\n\r\n        let module: Module = this.isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isStringLiteral(module, position)) return null;\r\n\r\n        let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        if (context.triggerCharacter == \" \") {\r\n            let newMatch = textUntilPosition.match(/.*(new )$/);\r\n            if (newMatch != null) {\r\n                return this.getCompletionItemsAfterNew(module);\r\n            }\r\n            let classMatch = textUntilPosition.match(/.*(class )[\\wöäüÖÄÜß<> ,]*[\\wöäüÖÄÜß<> ] $/);\r\n            if (classMatch != null) {\r\n\r\n                let classIndex = textUntilPosition.lastIndexOf('class');\r\n                let countLower = 0;\r\n                let countGreater = 0;\r\n                for (let i = classIndex; i < textUntilPosition.length; i++) {\r\n                    let c = textUntilPosition.charAt(i);\r\n                    switch (c) {\r\n                        case '<': countLower++; break;\r\n                        case '>': countGreater++; break;\r\n                    }\r\n                }\r\n\r\n                return this.getCompletionItemsAfterClass(module, countLower > countGreater, textAfterPosition);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let ibMatch = textAfterPosition.match(/^([\\wöäüÖÄÜß]*\\(?)/);\r\n        let identifierAndBracketAfterCursor = \"\";\r\n        if (ibMatch != null && ibMatch.length > 0) {\r\n            identifierAndBracketAfterCursor = ibMatch[0];\r\n        }\r\n\r\n        let leftBracketAlreadyThere = identifierAndBracketAfterCursor.endsWith(\"(\");\r\n\r\n        // First guess:  dot followed by part of Identifier?\r\n        let dotMatch = textUntilPosition.match(/.*(\\.)([\\wöäüÖÄÜß]*)$/);\r\n        if (dotMatch != null) {\r\n            if (this.isConsole) {\r\n                this.main.getBottomDiv()?.console?.compileIfDirty();\r\n            } else {\r\n                this.main.compileIfDirty();\r\n            }\r\n        }\r\n\r\n        let symbolTable = this.isConsole ? this.main.getDebugger().lastSymboltable : module.findSymbolTableAtPosition(position.lineNumber, position.column);\r\n        let classContext = symbolTable == null ? null : symbolTable.classContext;\r\n\r\n\r\n        if (dotMatch != null) {\r\n            return this.getCompletionItemsAfterDot(dotMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere);\r\n        }\r\n\r\n        let varOrClassMatch = textUntilPosition.match(/.*[^\\wöäüÖÄÜß]([\\wöäüÖÄÜß]*)$/);\r\n\r\n        if (varOrClassMatch == null) {\r\n            varOrClassMatch = textUntilPosition.match(/^([\\wöäüÖÄÜß]*)$/);\r\n        }\r\n\r\n        if (varOrClassMatch != null) {\r\n\r\n            return this.getCompletionItemsInsideIdentifier(varOrClassMatch, position, module,\r\n                identifierAndBracketAfterCursor, classContext, leftBracketAlreadyThere, symbolTable);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    isStringLiteral(module: Module, position: monaco.Position) {\r\n\r\n        let tokenList = module.tokenList;\r\n        if (tokenList == null || tokenList.length == 0) return false;\r\n\r\n        let posMin = 0;\r\n        let posMax = tokenList.length - 1;\r\n        let pos: number;\r\n\r\n        let watchDog = 1000;\r\n\r\n        while (true) {\r\n            let posOld = pos;\r\n            pos = Math.round((posMax + posMin) / 2);\r\n\r\n            if (posOld == pos) return false;\r\n\r\n            watchDog--;\r\n            if (watchDog == 0) return false;\r\n\r\n            let t = tokenList[pos];\r\n            let p = t.position;\r\n\r\n            if (p.line < position.lineNumber || p.line == position.lineNumber && p.column + p.length < position.column) {\r\n                posMin = pos;\r\n                continue;\r\n            }\r\n\r\n            if (p.line > position.lineNumber || p.line == position.lineNumber && p.column > position.column) {\r\n                posMax = pos;\r\n                continue;\r\n            }\r\n\r\n            return t.tt == TokenType.stringConstant;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getCompletionItemsAfterNew(module: Module): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        for (let i = 0; i < completionItems.length; i++) {\r\n            let item = completionItems[i];\r\n            if (item.detail.match('Primitiv')) {\r\n                completionItems.splice(i, 1);\r\n                i--;\r\n                continue;\r\n            }\r\n            if (item[\"generic\"]) {\r\n                item.insertText += \"<>($0)\";\r\n            } else {\r\n                item.insertText += \"($0)\";\r\n            }\r\n            item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n            item.command = {\r\n                id: \"editor.action.triggerParameterHints\",\r\n                title: '123',\r\n                arguments: []\r\n            };\r\n\r\n        }\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterClass(module: Module, insideGenericParameterDefinition: boolean, textAfterPosition: string): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let startsWithCurlyBrace: boolean = textAfterPosition.trimLeft().startsWith(\"{\");\r\n\r\n        completionItems = completionItems.concat([\r\n            {\r\n                label: \"extends\",\r\n                insertText: \"extends $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"extends-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"implements\",\r\n                insertText: \"implements $1\" + (insideGenericParameterDefinition || startsWithCurlyBrace ? \"\" : \" {\\n\\t$0\\n}\"),\r\n                detail: \"implements-Operator\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined,\r\n                command: {\r\n                    id: \"editor.action.triggerSuggest\",\r\n                    title: '123',\r\n                    arguments: []\r\n                }\r\n            },\r\n            {\r\n                label: \"{}\",\r\n                insertText: \"{\\n\\t$0\\n}\",\r\n                detail: \"Klassenrumpf\",\r\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                kind: monaco.languages.CompletionItemKind.Snippet,\r\n                range: undefined\r\n            },\r\n        ]);\r\n\r\n        // completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, undefined));\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsInsideIdentifier(varOrClassMatch: RegExpMatchArray, position: monaco.Position, module: Module, identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean, symbolTable: SymbolTable): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let text = varOrClassMatch[1];\r\n\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - text.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        if (symbolTable?.classContext != null && symbolTable?.method == null && symbolTable.classContext instanceof Klass) {\r\n            completionItems = completionItems.concat(this.getOverridableMethodsCompletion(symbolTable.classContext));\r\n        }\r\n\r\n        if (symbolTable != null) {\r\n            completionItems = completionItems.concat(symbolTable.getLocalVariableCompletionItems(rangeToReplace).map(ci => {\r\n                ci.sortText = \"aaa\" + ci.label;\r\n                return ci;\r\n            }));\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.main.getCurrentWorkspace().moduleStore.getTypeCompletionItems(module, rangeToReplace));\r\n\r\n        if (classContext != null && symbolTable?.method != null) {\r\n            completionItems = completionItems.concat(\r\n                classContext.getCompletionItems(Visibility.private, leftBracketAlreadyThere, identifierAndBracketAfterCursor, rangeToReplace, symbolTable.method)\r\n                    .map(ci => {\r\n                        ci.sortText = \"aa\" + ci.label;\r\n                        return ci;\r\n                    })\r\n            );\r\n            completionItems.push(\r\n                {\r\n                    label: \"super\",\r\n                    filterText: \"super\",\r\n                    insertText: \"super.\",\r\n                    detail: \"Aufruf einer Methode einer Basisklasse\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined,\r\n                    command: {\r\n                        id: \"editor.action.triggerSuggest\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    }    \r\n                }\r\n            )\r\n        } else {\r\n            // Use filename to generate completion-item for class ... ?\r\n            let name = module.file?.name;\r\n            if (name != null) {\r\n                if (name.endsWith(\".java\")) name = name.substr(0, name.indexOf(\".java\"));\r\n                let m = name.match(/([\\wöäüÖÄÜß]*)$/);\r\n                if (module.classDefinitionsAST.length == 0 && m != null && m.length > 0 && m[0] == name && name.length > 0) {\r\n                    name = name.charAt(0).toUpperCase() + name.substring(1);\r\n                    completionItems.push({\r\n                        label: \"class \" + name,\r\n                        filterText: \"class\",\r\n                        insertText: \"class ${1:\" + name + \"} {\\n\\t$0\\n}\\n\",\r\n                        detail: \"Definition der Klasse \" + name,\r\n                        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                        kind: monaco.languages.CompletionItemKind.Snippet,\r\n                        range: undefined\r\n                    },\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        completionItems = completionItems.concat(this.getKeywordCompletion(symbolTable));\r\n\r\n\r\n        // console.log(\"Complete variable/Class/Keyword \" + text);\r\n\r\n        return Promise.resolve({\r\n            suggestions: completionItems\r\n        });\r\n    }\r\n\r\n    getCompletionItemsAfterDot(dotMatch: RegExpMatchArray, position: monaco.Position, module: Module,\r\n        identifierAndBracketAfterCursor: string, classContext: Klass | StaticClass,\r\n        leftBracketAlreadyThere: boolean): monaco.languages.ProviderResult<monaco.languages.CompletionList> {\r\n        let textAfterDot = dotMatch[2];\r\n        let dotColumn = position.column - textAfterDot.length - 1;\r\n        let tStatic = module.getTypeAtPosition(position.lineNumber, dotColumn);\r\n        let rangeToReplace: monaco.IRange =\r\n        {\r\n            startLineNumber: position.lineNumber, startColumn: position.column - textAfterDot.length,\r\n            endLineNumber: position.lineNumber, endColumn: position.column + identifierAndBracketAfterCursor.length\r\n        }\r\n\r\n        if (tStatic == null) return null;\r\n\r\n        let { type, isStatic } = tStatic;\r\n\r\n\r\n        // console.log(\"Complete element.praefix; praefix: \" + textAfterDot + \", Type: \" + (type == null ? null : type.identifier));\r\n\r\n\r\n        if (type instanceof Klass) {\r\n\r\n            let visibilityUpTo = getVisibilityUpTo(type, classContext);\r\n\r\n            if (isStatic) {\r\n                return Promise.resolve({\r\n                    suggestions: type.staticClass.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace)\r\n                });\r\n            } else {\r\n                return Promise.resolve({\r\n                    suggestions: type.getCompletionItems(visibilityUpTo, leftBracketAlreadyThere,\r\n                        identifierAndBracketAfterCursor, rangeToReplace, null)\r\n                });\r\n            }\r\n        }\r\n\r\n        if (type instanceof Interface) {\r\n            return Promise.resolve({\r\n                suggestions: type.getCompletionItems(leftBracketAlreadyThere,\r\n                    identifierAndBracketAfterCursor, rangeToReplace)\r\n            });\r\n        }\r\n\r\n        if (type instanceof ArrayType) {\r\n            return Promise.resolve({\r\n                suggestions: [\r\n                    {\r\n                        label: \"length\",\r\n                        filterText: \"length\",\r\n                        kind: monaco.languages.CompletionItemKind.Field,\r\n                        insertText: \"length\",\r\n                        range: rangeToReplace,\r\n                        documentation: {\r\n                            value: \"Anzahl der Elemente des Arrays\"\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getKeywordCompletion(symbolTable: SymbolTable): monaco.languages.CompletionItem[] {\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n        if (!this.isConsole && (symbolTable?.classContext == null || symbolTable?.method != null))\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"while(Bedingung){Anweisungen}\",\r\n                    detail: \"while-Wiederholung\",\r\n                    filterText: 'while',\r\n                    // insertText: \"while(${1:Bedingung}){\\n\\t$0\\n}\",\r\n                    insertText: \"while($1){\\n\\t$0\\n}\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for( $1 ; $2 ; $3 ){\\n\\t$0\\n}\",\r\n                    detail: \"for-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"for(int i = 0; i < 10; i++){}\",\r\n                    // insertText: \"for(${1:Startanweisung};${2:Solange-Bedingung};${3:Nach_jeder_Wiederholung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"for(int ${1:i} = 0; ${1:i} < ${2:10}; ${1:i}++){\\n\\t$0\\n}\",\r\n                    detail: \"Zähl-Wiederholung\",\r\n                    filterText: 'for',\r\n                    // command: {\r\n                    //     id: \"editor.action.triggerParameterHints\",\r\n                    //     title: '123',\r\n                    //     arguments: []\r\n                    // },    \r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"switch(){case...}\",\r\n                    // insertText: \"switch(${1:Selektor}){\\n\\tcase ${2:Wert_1}: {\\n\\t\\t ${3:Anweisungen}\\n\\t\\t}\\n\\tcase ${4:Wert_2}: {\\n\\t\\t ${0:Anweisungen}\\n\\t\\t}\\n}\",\r\n                    insertText: \"switch($1){\\n\\tcase $2:\\n\\t\\t $3\\n\\t\\tbreak;\\n\\tcase $4:\\n\\t\\t $5\\n\\t\\tbreak;\\n\\tdefault:\\n\\t\\t $0\\n}\",\r\n                    detail: \"switch-Anweisung\",\r\n                    filterText: 'switch',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){}\",\r\n                    // insertText: \"if(${1:Bedingung}){\\n\\t${0:Anweisungen}\\n}\",\r\n                    insertText: \"if($1){\\n\\t$0\\n}\",\r\n                    detail: \"Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"if(){} else {}\",\r\n                    insertText: \"if($1){\\n\\t$2\\n}\\nelse {\\n\\t$0\\n}\",\r\n                    detail: \"Zweiseitige Bedingung\",\r\n                    filterText: 'if',\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }]);\r\n\r\n        if (symbolTable?.classContext == null || symbolTable?.method != null) {\r\n\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"instanceof\",\r\n                    insertText: \"instanceof $0\",\r\n                    detail: \"instanceof-Operator\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"print\",\r\n                    insertText: \"print($1);$0\",\r\n                    detail: \"Ausgabe (ggf. mit Farbe \\nals zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"println\",\r\n                    insertText: \"println($1);$0\",\r\n                    detail: \"Ausgabe mit Zeilenumbruch (ggf. mit \\nFarbe als zweitem Parameter)\",\r\n                    command: {\r\n                        id: \"editor.action.triggerParameterHints\",\r\n                        title: '123',\r\n                        arguments: []\r\n                    },\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n\r\n            ]);\r\n        }\r\n\r\n        if (!this.isConsole && (symbolTable == null || symbolTable.classContext == null)) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"class\",\r\n                    filterText: \"class\",\r\n                    insertText: \"class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public class\",\r\n                    filterText: \"public class\",\r\n                    insertText: \"public class ${1:Bezeichner} {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Öffentliche Klassendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n\r\n            ]);\r\n        } else if (!this.isConsole && symbolTable?.method == null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"public\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public \",\r\n                    detail: \"Schlüsselwort public\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"public void method(){}\",\r\n                    filterText: \"public\",\r\n                    insertText: \"public ${1:void} ${2:Bezeichner}(${3:Parameter}) {\\n\\t$0\\n}\\n\",\r\n                    detail: \"Methodendefinition\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"protected\",\r\n                    filterText: \"protected\",\r\n                    insertText: \"protected \",\r\n                    detail: \"Schlüsselwort protected\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"static\",\r\n                    filterText: \"static\",\r\n                    insertText: \"static \",\r\n                    detail: \"Schlüsselwort static\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                },\r\n                {\r\n                    label: \"private\",\r\n                    filterText: \"private\",\r\n                    insertText: \"private \",\r\n                    detail: \"Schlüsselwort private\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        if (symbolTable != null && symbolTable.method != null) {\r\n            keywordCompletionItems = keywordCompletionItems.concat([\r\n                {\r\n                    label: \"return\",\r\n                    filterText: \"return\",\r\n                    insertText: \"return\",\r\n                    detail: \"Schlüsselwort return\",\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            ]);\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n    getOverridableMethodsCompletion(classContext: Klass) {\r\n\r\n        let keywordCompletionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        let methods: Method[] = [];\r\n        let c = classContext.baseClass;\r\n        while (c != null) {\r\n            methods = methods.concat(c.methods.filter((m) => {\r\n                if (m.isAbstract || (m.program == null && m.invoke == null)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }));\r\n            c = c.baseClass;\r\n        }\r\n\r\n        for (let i of classContext.implements) {\r\n            methods = methods.concat(i.getMethods());\r\n        }\r\n\r\n        for (let m of methods) {\r\n\r\n            let alreadyImplemented = false;\r\n            for (let m1 of classContext.methods) {\r\n                if (m1.signature == m.signature) {\r\n                    alreadyImplemented = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (alreadyImplemented) continue;\r\n\r\n            let label: string = (m.isAbstract ? \"implement \" : \"override \") + m.getCompletionLabel();\r\n            let filterText = m.identifier;\r\n            let insertText = Visibility[m.visibility] + \" \" + (m.getReturnType() == null ? \"void\" : m.getReturnType().identifier) + \" \";\r\n            insertText += m.identifier + \"(\";\r\n            for (let i = 0; i < m.getParameterList().parameters.length; i++) {\r\n                let p = m.getParameterList().parameters[i];\r\n                insertText += m.getParameterType(i).identifier + \" \" + p.identifier;\r\n                if (i < m.getParameterCount() - 1) {\r\n                    insertText += \", \";\r\n                }\r\n            }\r\n            insertText += \") {\\n\\t$0\\n}\";\r\n\r\n            keywordCompletionItems.push(\r\n                {\r\n                    label: label,\r\n                    detail: (m.isAbstract ? \"Implementiere \" : \"Überschreibe \") + \"die Methode \" + label + \" der Basisklasse.\",\r\n                    filterText: filterText,\r\n                    insertText: insertText,\r\n                    insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\r\n                    kind: monaco.languages.CompletionItemKind.Snippet,\r\n                    range: undefined\r\n                }\r\n            );\r\n\r\n        }\r\n\r\n        return keywordCompletionItems;\r\n\r\n    }\r\n\r\n}","import { Klass, Interface, Visibility } from \"./Class.js\";\r\nimport { Method, Attribute, Type, PrimitiveType, Variable } from \"./Types.js\";\r\nimport { objectType } from \"./PrimitiveTypes.js\";\r\nimport { ArrayType } from \"./Array.js\";\r\nimport { formatAsJavadocComment } from \"../../tools/StringTools.js\";\r\n\r\nexport function getDeclarationAsString(element: Klass | Interface | Method | Attribute | Variable,\r\n    indent: string = \"\", short: boolean = false): string {\r\n\r\n    if (element instanceof Klass) {\r\n\r\n        if (element.isTypeVariable) {\r\n            return getTypeVariableDeclaration(element);\r\n        }\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\") {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                // s += indent + \"/**  \\n\" + element.documentation + \"  \\n**/  \\n\" + indent;\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n        if (element.isAbstract) s += \"abstract \";\r\n        s += \"class \" + element.identifier + \" \";\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            s += getGenericParameterDefinition(element);\r\n        }\r\n\r\n\r\n        if (element.baseClass != null && element.baseClass.identifier != \"Object\") {\r\n            s += \"extends \" + element.baseClass.identifier + \" \";\r\n            if (element.baseClass.typeVariables.length > 0) {\r\n                s += getGenericParameterDefinition(element.baseClass);\r\n            }\r\n        }\r\n\r\n        if (element.implements != null && element.implements.length > 0) {\r\n            s += \"implements \";\r\n            for (let i = 0; i < element.implements.length; i++) {\r\n                s += element.implements[i].identifier;\r\n                if (element.implements[i].typeVariables.length > 0) {\r\n                    s += getGenericParameterDefinition(element.implements[i]);\r\n                }\r\n                if (i < element.implements.length - 1) {\r\n                    s += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (short) return s;\r\n\r\n        s += indent + \"{\\n  \";\r\n\r\n        for (let a of element.getAttributes(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let a of element.staticClass.getAttributes(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(a, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n        for (let m of element.getMethods(Visibility.protected)) {\r\n            s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n        }\r\n\r\n        if (element.staticClass != null) {\r\n            for (let m of element.staticClass.getMethods(Visibility.protected)) {\r\n                s += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n        }\r\n\r\n\r\n        s += \"\\n}\";\r\n\r\n        return s;\r\n\r\n    }\r\n\r\n    if (element instanceof Interface) {\r\n\r\n        let decl = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                decl += (indent + element.documentation).replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                decl += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        decl += indent + \"interface \" + element.identifier;\r\n\r\n        if (element.typeVariables.length > 0) {\r\n            decl += getGenericParameterDefinition(element);\r\n        }\r\n\r\n        if (element.extends != null && element.extends.length > 0) {\r\n            decl += \"extends \";\r\n            for (let i = 0; i < element.extends.length; i++) {\r\n                decl += element.extends[i].identifier;\r\n                if (element.extends[i].typeVariables.length > 0) {\r\n                    decl += getGenericParameterDefinition(element.extends[i]);\r\n                }\r\n                if (i < element.extends.length - 1) {\r\n                    decl += \", \";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!short) {\r\n\r\n            decl += \"{\\n\";\r\n\r\n            for (let m of element.getMethods()) {\r\n                decl += indent + \"\\n\" + getDeclarationAsString(m, \"  \") + \";\\n\";\r\n            }\r\n\r\n            decl += \"\\n}\";\r\n        }\r\n\r\n        return decl;\r\n\r\n    }\r\n\r\n    if (element instanceof Attribute) {\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        s += getTypeIdentifier(element.type) + \" \" + element.identifier;\r\n\r\n        return s;\r\n    }\r\n\r\n    if (element instanceof Method) {\r\n\r\n        let s = \"\";\r\n\r\n        if (element.documentation != null && element.documentation != \"\" && !short) {\r\n            if(element.documentation.startsWith(\"/*\")){\r\n                s += indent + element.documentation.replace(/\\n/g, \"\\n\" + indent) + \"\\n\";\r\n            } else {\r\n                s += formatAsJavadocComment(element.documentation, indent) + \"\\n\";\r\n            }\r\n        }\r\n\r\n        s += indent;\r\n\r\n        if (element.visibility != null) s += Visibility[element.visibility] + \" \";\r\n\r\n        if (element.isStatic) s += \"static \";\r\n\r\n        if (element.getReturnType() != null) {\r\n            s += getTypeIdentifier(element.getReturnType()) + \" \";\r\n        } else {\r\n            s += element.isConstructor ? \"\" : \"void \";\r\n        }\r\n\r\n        s += element.identifier + \"(\";\r\n\r\n        let parameters = element.getParameterList().parameters;\r\n        for (let i = 0; i < parameters.length; i++) {\r\n\r\n            let p = parameters[i];\r\n            let type: Type = element.getParameterType(i);\r\n\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            s += getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n\r\n            if (i < parameters.length - 1) {\r\n                s += \", \";\r\n            }\r\n\r\n        }\r\n\r\n        s += \")\";\r\n\r\n        return s;\r\n\r\n\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nfunction getTypeVariableDeclaration(element: Klass) {\r\n    let s: string = element.identifier;\r\n\r\n    if (element.isGenericVariantFrom != objectType) s += \" extends \" + getTypeIdentifier(element.isGenericVariantFrom);\r\n    if (element.implements.length > 0) {\r\n        let implList = element.implements.filter(impl => element.isGenericVariantFrom.implements.indexOf(impl) < 0)\r\n            .map(impl => getTypeIdentifier(impl)).join(\", \");\r\n        if (implList != \"\") {\r\n            s += \" implements \" + implList;\r\n        }\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport function getTypeIdentifier(type: Type): string {\r\n    if (type instanceof Klass || type instanceof Interface) {\r\n        if (type.typeVariables.length > 0) {\r\n            let s: string = (type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type.isGenericVariantFrom?.identifier) : type.identifier)\r\n                + \"<\";\r\n            s += type.typeVariables.map(tv => getTypeIdentifier(tv.type)).join(\", \");\r\n            return s + \">\";\r\n        }\r\n    }\r\n\r\n    return type[\"isTypeVariable\"] ? (type.identifier + \" extends \" + type[\"isGenericVariantFrom\"]?.identifier) : type.identifier;\r\n}\r\n\r\nexport function getGenericParameterDefinition(element: Klass | Interface): string {\r\n\r\n    let s: string = \"\";\r\n\r\n    if (element.typeVariables.length > 0) {\r\n        s = \"<\";\r\n\r\n        let typeList: string[] = [];\r\n        for (let tv of element.typeVariables) {\r\n            let t: string = tv.type.identifier;\r\n            let k: Klass = tv.type;\r\n            if (k.isGenericVariantFrom != null && k.isGenericVariantFrom.identifier != \"Object\") {\r\n                t += \" extends \" + k.isGenericVariantFrom.identifier;\r\n            }\r\n            if (k.implements != null) {\r\n\r\n                let implList = k.implements;\r\n                if (k.isGenericVariantFrom != null) {\r\n                    implList = implList.filter(impl => k.isGenericVariantFrom.implements.indexOf(impl) < 0);\r\n                }\r\n\r\n                for (let im of implList) {\r\n                    t += \" & \" + im.identifier;\r\n                }\r\n            }\r\n            typeList.push(t);\r\n        }\r\n\r\n        s += typeList.join(\", \");\r\n        s += \"> \";\r\n    }\r\n\r\n    return s;\r\n}","import { Main } from \"../Main.js\";\r\nimport { Module, MethodCallPosition } from \"../../compiler/parser/Module.js\";\r\nimport { Method } from \"../../compiler/types/Types.js\";\r\nimport { sign } from \"crypto\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { getTypeIdentifier } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\n\r\n\r\n\r\nexport class MySignatureHelpProvider implements monaco.languages.SignatureHelpProvider {\r\n\r\n    signatureHelpTriggerCharacters?: readonly string[] = ['(', ',', ';', '<', '>', '=']; // semicolon, <, >, = for for-loop, if, while, ...\r\n    signatureHelpRetriggerCharacters?: readonly string[] = [];\r\n\r\n    constructor(private main: MainBase) {\r\n    }\r\n\r\n    provideSignatureHelp(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model == this.main.getBottomDiv()?.console?.editor?.getModel());\r\n\r\n        if (!isConsole && model != this.main.getMonacoEditor().getModel()) {\r\n            return;\r\n        }\r\n\r\n        let that = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            setTimeout(() => {\r\n\r\n                if (isConsole) {\r\n                    this.main.getBottomDiv()?.console?.compileIfDirty();\r\n                } else {\r\n                    this.main.compileIfDirty();\r\n                }\r\n\r\n                resolve(that.provideSignatureHelpLater(model, position, token, context));\r\n\r\n            }, 300);\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    provideSignatureHelpLater(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        token: monaco.CancellationToken,\r\n        context: monaco.languages.SignatureHelpContext):\r\n        monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let isConsole = (model != this.main.getMonacoEditor().getModel());\r\n\r\n        let module: Module = isConsole ? this.main.getBottomDiv()?.console?.compiler.module :\r\n            this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        // let textUntilPosition = model.getValueInRange({ startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column });\r\n        // let textAfterPosition = model.getValueInRange({ startLineNumber: position.lineNumber, startColumn: position.column, endLineNumber: position.lineNumber + 5, endColumn: 1 });\r\n\r\n        let methodCallPositions = module.methodCallPositions[position.lineNumber];\r\n\r\n        if (methodCallPositions == null) return null;\r\n\r\n        let methodCallPosition: MethodCallPosition = null;\r\n        let rightMostPosition: number = -1;\r\n\r\n        for (let i = methodCallPositions.length - 1; i >= 0; i--) {\r\n            let mcp = methodCallPositions[i];\r\n            if (mcp.identifierPosition.column + mcp.identifierPosition.length < position.column\r\n                && mcp.identifierPosition.column > rightMostPosition) {\r\n                if (mcp.rightBracketPosition == null ||\r\n                    (position.lineNumber <= mcp.rightBracketPosition.line && position.column <= mcp.rightBracketPosition.column)\r\n                    || (position.lineNumber < mcp.rightBracketPosition.line)) {\r\n                    methodCallPosition = mcp;\r\n                    rightMostPosition = mcp.identifierPosition.column;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (methodCallPosition == null) return null;\r\n\r\n        return this.getSignatureHelp(methodCallPosition, position);\r\n\r\n\r\n\r\n    }\r\n\r\n    getSignatureHelp(methodCallPosition: MethodCallPosition,\r\n        position: monaco.Position): monaco.languages.ProviderResult<monaco.languages.SignatureHelpResult> {\r\n\r\n        let parameterIndex: number = 0;\r\n\r\n        for (let cp of methodCallPosition.commaPositions) {\r\n            if (cp.line < position.lineNumber || (cp.line == position.lineNumber && cp.column < position.column)) {\r\n                parameterIndex++;\r\n            }\r\n        }\r\n\r\n        let signatureInformationList: monaco.languages.SignatureInformation[] = [];\r\n\r\n        if ((typeof methodCallPosition.possibleMethods) == \"string\") {\r\n            signatureInformationList = signatureInformationList.concat(this.makeIntrinsicSignatureInformation(<string>methodCallPosition.possibleMethods, parameterIndex));\r\n        } else {\r\n            for (let method of methodCallPosition.possibleMethods) {\r\n                let m = <Method>method;\r\n                if (m.getParameterCount() > parameterIndex) {\r\n\r\n                    signatureInformationList = signatureInformationList.concat(this.makeSignatureInformation(m));\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            value: {\r\n                activeParameter: parameterIndex,\r\n                activeSignature: 0,\r\n                signatures: signatureInformationList\r\n            },\r\n            dispose: () => { }\r\n        });\r\n    }\r\n\r\n    makeIntrinsicSignatureInformation(method: string, parameterIndex: number): monaco.languages.SignatureInformation[] {\r\n\r\n        switch (method) {\r\n            case \"while\":\r\n                return [\r\n                    {\r\n                        label: \"while(Bedingung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit Anfangsbedingung (while-loop)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                        ]\r\n                    }];\r\n            case \"if\":\r\n                return [\r\n                    {\r\n                        label: \"if(Bedingung){ Anweisungen1 } else { Anweisungen2 }\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Bedingung\", documentation: \"Ist die Bedingung erfüllt (d.h. hat sie den Wert true), so werden die Anweisungen1 ausgeführt. Trifft die Bedingung nicht zu (d.h. hat sie den Wert false), so werden die Anweisungen2 ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"switch\":\r\n                return [\r\n                    {\r\n                        label: \"switch(Selektor){case Wert_1: Anweisungen1; break; case Wert_2 Anweisungen2; break; default: Defaultanweisungen; break;}\",\r\n                        documentation: \"Bedingung (else... ist optional)\",\r\n                        parameters: [\r\n                            { label: \"Selektor\", documentation: \"Der Wert des Selektor-Terms wird ausgewertet. Hat er den Wert Wert_1, so werden die Anweisungen1 ausgeführt. Hat er den Wert Wert_2, so werden die Anweisungen2 ausgeführt usw. Hat er keinen der bei case... aufgeführten Werte, so werden die Defaultanweisungen ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"for\":\r\n                return [\r\n                    {\r\n                        label: \"for(Startanweisung; Bedingung; Anweisung am Ende jeder Wiederholung){ Anweisungen }\",\r\n                        documentation: \"Wiederholung mit for (for-loop)\",\r\n                        parameters: [\r\n                            { label: \"Startanweisung\", documentation: \"Diese Anweisung wird vor der ersten Wiederholung einmal ausgeführt.\" },\r\n                            { label: \"Bedingung\", documentation: \"Die Bedingung wird vor jeder Wiederholung ausgewertet. Ist sie erfüllt ist (d.h. hat sie den Wert true), so werden die Anweisungen in {} erneut ausgeführt, ansonsten wird mit der nächsten Anweisung nach { } fortgefahren.\" },\r\n                            { label: \"Anweisung am Ende jeder Wiederholung\", documentation: \"Diese Anweisung wird stets am Ende jeder Wiederholung ausgeführt.\" },\r\n                        ]\r\n                    }];\r\n            case \"print\":\r\n                let methods: monaco.languages.SignatureInformation[] =\r\n                    [\r\n                        {\r\n                            label: \"print(text: String, color: String)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255)) oder statisches Attribut der Klasse Color, z.B. Color.red\" }\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String, color: int)\",\r\n                            documentation: \"Gibt Text farbig in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                                { label: \"color: String\", documentation: \"Farbe als int-Wert kodiert, z.B. 0xff00ff\" },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: \"print(text: String)\",\r\n                            documentation: \"Gibt Text in der Ausgabe aus\",\r\n                            parameters: [\r\n                                { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                            ]\r\n                        }\r\n                    ];\r\n                return methods;\r\n            case \"println\":\r\n\r\n                return [\r\n                    {\r\n                        label: \"println(text: String, color: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: String\", documentation: \"Farbe (englischer Name oder #ffffff oder rgb(255,255,255) oder statisches Attribut der Klasse Color, z.B. Color.red)\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String, color: int)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" },\r\n                            { label: \"color: int\", documentation: \"Farbe als int-kodierter Wert, z.B. 0xffffff\" }\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: \"println(text: String)\",\r\n                        documentation: \"Gibt Text farbig in der Ausgabe aus. Der nächste Text landet eine Zeile tiefer.\",\r\n                        parameters: [\r\n                            { label: \"text: String\", documentation: \"text: Text, der ausgegeben werden soll\" }\r\n                        ]\r\n                    },\r\n                ];\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeSignatureInformation(method: Method): monaco.languages.SignatureInformation[] {\r\n\r\n        let label: string = \"\";\r\n\r\n        if (method.getReturnType() != null && !method.isConstructor) {\r\n            label += getTypeIdentifier(method.getReturnType()) + \" \";\r\n        }\r\n\r\n        label += method.identifier + \"(\";\r\n\r\n        let parameterInformationList: monaco.languages.ParameterInformation[] = [];\r\n\r\n        let pl = method.getParameterList().parameters;\r\n\r\n        for (let i = 0; i < pl.length; i++) {\r\n\r\n            let p = pl[i];\r\n            let posFrom = label.length;\r\n            let type = p.type;\r\n            if (p.isEllipsis) {\r\n                type = (<ArrayType>type).arrayOfType;\r\n            }\r\n\r\n            let pLabel = getTypeIdentifier(type) + (p.isEllipsis ? \"...\" : \"\") + \" \" + p.identifier;\r\n            label += pLabel;\r\n            let posTo = label.length;\r\n\r\n            if (i < pl.length - 1) {\r\n                label += \", \";\r\n            }\r\n\r\n            let pi: monaco.languages.ParameterInformation = {\r\n                label: [posFrom, posTo],\r\n                documentation: \"\" //Test: Parameter documentation\"\r\n            };\r\n\r\n            parameterInformationList.push(pi);\r\n\r\n        }\r\n\r\n\r\n\r\n        label += \")\";\r\n\r\n        return [{\r\n            label: label,\r\n            parameters: parameterInformationList,\r\n            documentation: method.documentation == null ? \"\" : method.documentation\r\n        }]\r\n\r\n    }\r\n\r\n}\r\n","import { Editor } from \"./Editor.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString, getGenericParameterDefinition } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class MyHoverProvider {\r\n\r\n    private static keywordDescriptions: { [keyword: string]: string } = {\r\n        \"print\": \"Die Anweisung ```print``` gibt eine Zeichenkette aus.\",\r\n        \"new\": \"Das Schlüsselwort ```new``` bewirkt die Instanzierung (\\\"Erschaffung\\\") eines neuen Objektes einer Klasse.\",\r\n        \"println\": \"Die Anweisung ```println``` gibt eine Zeichenkette gefolgt von einem Zeilenumbruch aus.\",\r\n        \"while\": \"```\\nwhile (Bedingung) {Anweisungen}\\n```  \\nbewirkt die Wiederholung der Anweisungen solange ```Bedingung == true``` ist.\",\r\n        \"for\": \"```\\nfor(Startanweisung;Solange-Bedingung;Nach_jeder_Wiederholung){Anweisungen}\\n```  \\n\"\r\n            + \"führt zunächst die Startanweisung aus und wiederholt dann die Anweisungen solange ```Bedingung == true``` ist. Am Ende jeder wiederholung wird Nach_jeder_Wiederholung ausgeführt.\",\r\n        \"if\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.  \\nDer ```else```-Teil kann auch weggelassen werden.\",\r\n        \"else\": \"```\\nif(Bedingung){Anweisungen_1} else {Anweisungen_2}\\n```  \\nwertet die Bedingung aus und führt Anweisungen_1 nur dann aus, wenn die Bedingung ```true``` ergibt, Anweisungen_2 nur dann, wenn die Bedingung ```false``` ergibt.\",\r\n        \"switch\": \"```\\nswitch(Selektor){ case Wert_1: Anweisungen_1; break; case Wert_2: Anweisungen_2; break; default: Default-Anweisungen } \\n```  \\nwertet den Selektor-Term aus und führt abhängig vom Termwert Anweisungen_1, Anweisungen_2, ... aus. Entspricht der Termwert keinem der Werte Wert_1, Wert_2, ..., so werden die Default-Anweisungen ausgeführt.\",\r\n        \"%\": \"```\\na % b\\n```  \\n (sprich: 'a modulo b') berechnet den **Rest** der ganzzahligen Division a/b.\",\r\n        \"==\": \"```\\na == b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` gleich sind.  \\nSind a und b **Objekte**, so ergibt ```a == b``` nur dann ```true```, wenn ```a``` und ```b``` auf das **identische** Objekt zeigen.  \\n```==``` nennt man **Vergleichsoperator**.\",\r\n        \"<=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` kleiner oder gleich dem Wert von ```b``` ist.\",\r\n        \">=\": \"```\\na <= b\\n```  \\nergibt genau dann ```true```, wenn der Wert von ```a``` größer oder gleich dem Wert von ```b``` ist.\",\r\n        \"!=\": \"```\\na != b\\n```  \\nergibt genau dann ```true```, wenn ```a``` und ```b``` **un**gleich sind.  \\nSind ```a``` und ```b``` **Objekte**, so ergibt ```a != b``` dann ```true```, wenn ```a``` und ```b``` **nicht** auf das **identische** Objekt zeigen.  \\n```!=``` nennt man **Ungleich-Operator**.\",\r\n        \"+=\": \"```\\na += b\\n(Kurzschreibweise für a = a + b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erhöht** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"-=\": \"```\\na -= b\\n(Kurzschreibweise für a = a - b)\\n```  \\nbewirkt, dass der Wert von ```a``` um den Wert von ```b``` **erniedrigt** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"*=\": \"```\\na *= b\\n(Kurzschreibweise für a = a * b)\\n```  \\nbewirkt, dass der Wert von ```a``` mit dem Wert von ```b``` **multipliziert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"/=\": \"```\\na /= b\\n(Kurzschreibweise für a = a / b)\\n```  \\nbewirkt, dass der Wert von ```a``` durch den Wert von ```b``` **dividiert** wird. Das Ergebnis wird in die Variable ```a``` geschrieben.\",\r\n        \"++\": \"```\\na++\\n(Kurzschreibweise für a = a + 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins erhöht wird.\",\r\n        \"--\": \"```\\na--\\n(Kurzschreibweise für a = a - 1)\\n```  \\nbewirkt, dass der Wert von ```a``` um eins eniedrigt wird.\",\r\n        \"=\": \"```\\na = Term\\n```  \\nberechnet den Wert des Terms und weist ihn der Variablen ```a``` zu.  \\n**Vorsicht:**  \\nVerwechsle ```=```(**Zuweisungsoperator**) nicht mit ```==```(**Vergleichsoperator**)!\",\r\n        \"!\": \"```\\n!a\\n```  \\nergibt genau dann ```true```, wenn ```a``` ```false``` ergibt.  \\n```!``` spricht man '**nicht**'.\",\r\n        \"public\": \"```\\npublic\\n```  \\nAttribute und Methoden, die als ```public``` deklariert werden, sind überall (auch außerhalb der Klasse) sichtbar.\",\r\n        \"private\": \"```\\nprivate\\n```  \\nAttribute und Methoden, die als ```private``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse sichtbar.\",\r\n        \"protected\": \"```\\nprotected\\n```  \\nAttribute und Methoden, die als ```protected``` deklariert werden, sind nur innerhalb von Methoden derselben Klasse oder innerhalb von Methoden von Kindklassen sichtbar.\",\r\n        \"return\": \"```\\nreturn Term\\n```  \\nbewirkt, dass die Methode verlassen wird und der Wert des Terms an die aufrufende Stelle zurückgegeben wird.\",\r\n        \"break\": \"```\\nbreak;\\n```  \\ninnerhalb einer Schleife bewirkt, dass die Schleife sofort verlassen und mit den Anweisungen nach der Schleife fortgefahren wird.  \\n\"+\r\n        \"```break``` innerhalb einer ```switch```-Anweisung bewirkt, dass der Block der ```switch```-Anweisung verlassen wird.\",\r\n        \"class\": \"```\\nclass\\n```  \\nMit dem Schlüsselwort ```class``` werden Klassen definiert.\",\r\n        \"extends\": \"```\\nextends\\n```  \\n```class A extends B { ... }``` bedeutet, dass die Klasse A Unterklasse der Klasse B ist.\",\r\n        \"implements\": \"```\\nimplements\\n```  \\n```class A implements B { ... }``` bedeutet, dass die Klasse A das Interface B implementiert, d.h., dass sie alle Methoden besitzen muss, die in B definiert sind.\",\r\n        \"this\": \"```\\nthis\\n```  \\nInnerhalb einer Methodendefinition bezeichnet das Schlüsselwor ```this``` immer dasjenige Objekt, für das die Methode gerade ausgeführt wird.\",\r\n\r\n    }\r\n\r\n    constructor(private editor: Editor) {\r\n\r\n    }\r\n\r\n    provideHover(model: monaco.editor.ITextModel, position: monaco.Position, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Hover> {\r\n\r\n        let selection: monaco.Selection = this.editor.editor.getSelection();\r\n        \r\n        // if cursor is inside current selection then don't show hover, because editor.onDidChangeCursorPosition evaluates selected Text \r\n        // (see class Editor).\r\n        if(selection != null){\r\n            if(selection.startLineNumber != selection.endLineNumber || selection.startColumn != selection.endColumn){\r\n                if(\r\n                    (selection.startLineNumber < position.lineNumber || selection.startLineNumber == position.lineNumber && selection.startColumn <= position.column) && \r\n                    (selection.endLineNumber > position.lineNumber || selection.endLineNumber == position.lineNumber && selection.endColumn >= position.column) \r\n                ){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        let module: Module = this.editor.main.getCurrentWorkspace()?.getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        for(let errorList of module.errors){\r\n            for(let error of errorList){\r\n                if(error.position.line == position.lineNumber && \r\n                    error.position.column <= position.column && \r\n                    error.position.column + error.position.length >= position.column){\r\n                        return null; // Show error-tooltip and don't show hover-tooltip\r\n                    }\r\n            }\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let declarationAsString = \"\";\r\n\r\n        if (element != null) {\r\n            if (element instanceof Klass || element instanceof Method || element instanceof Interface\r\n                || element instanceof Attribute) {\r\n                declarationAsString = getDeclarationAsString(element);\r\n            } else if (element instanceof PrimitiveType) {\r\n                declarationAsString = \"```\\n\" + element.identifier + \"\\n```  \\nprimitiver Datentyp: \" + element.description + \"\";\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: declarationAsString }],\r\n                }\r\n            } else {\r\n                // Variable\r\n                let typeIdentifier: string = element?.type?.identifier;\r\n                if(element?.type instanceof Klass || element?.type instanceof Interface){\r\n                    typeIdentifier += \" \" + getGenericParameterDefinition(element.type);\r\n                }\r\n\r\n                if (typeIdentifier == null) {\r\n                    typeIdentifier = \"\";\r\n                } else {\r\n                    typeIdentifier += \" \";\r\n                }\r\n\r\n                declarationAsString = typeIdentifier + element?.identifier;\r\n            }\r\n        } else {\r\n            let word = this.getWordUnderCursor(model, position);\r\n            let desc = MyHoverProvider.keywordDescriptions[word];\r\n            if (desc != null) {\r\n                return {\r\n                    range: null,\r\n                    contents: [{ value: desc }],\r\n                }\r\n            }\r\n        }\r\n\r\n        let state = this.editor.main.getInterpreter().state;\r\n\r\n        let value: string = null;\r\n\r\n        if (state == InterpreterState.paused) {\r\n            let evaluator = this.editor.main.getCurrentWorkspace().evaluator;\r\n\r\n            let identifier: string = this.widenDeclaration(model, position, element?.identifier);\r\n\r\n            if(identifier == null){\r\n                return null;\r\n            }\r\n\r\n            let result = evaluator.evaluate(identifier);\r\n            if (result.error == null && result.value != null) {\r\n                value = result.value.type.debugOutput(result.value);\r\n                declarationAsString = identifier;\r\n            }\r\n\r\n        }\r\n\r\n        let contents = [];\r\n\r\n        if (value == null && declarationAsString.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        if (value != null) {\r\n            if (value.length + declarationAsString.length > 40) {\r\n                contents.push({ value: '```\\n' + declarationAsString + ' ==\\n```' });\r\n                contents.push({ value: '```\\n' + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            } else {\r\n                contents.push({ value: '```\\n' + declarationAsString + \" == \" + value.replace(/&nbsp;/g, \" \") + '\\n```' });\r\n            }\r\n        } else {\r\n            contents.push({ value: '```\\n' + declarationAsString + '\\n```' });\r\n        }\r\n\r\n        let range = null;\r\n\r\n        return {\r\n            range: range,\r\n            contents: contents,\r\n        }\r\n\r\n    }\r\n\r\n    getWordUnderCursor(model: monaco.editor.ITextModel, position: monaco.Position)\r\n         : string {\r\n        \r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let word = \"\";\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierOrArrayDescriptor(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        if (end - begin > 1) {\r\n            word = text.substring(begin, end);\r\n        } else {\r\n            end = pos;\r\n            while (end < text.length && this.isInsideOperator(text.charAt(end))) {\r\n                end++;\r\n            }\r\n    \r\n            begin = pos;\r\n            while (begin > 0 && this.isInsideOperator(text.charAt(begin - 1))) {\r\n                begin--;\r\n            }\r\n    \r\n            if (end - begin > 0) {\r\n                word = text.substring(begin, end);\r\n            }\r\n        }\r\n\r\n        return word;\r\n\r\n    }\r\n\r\n    widenDeclaration(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        identifier: string): string {\r\n\r\n        let pos = model.getValueLengthInRange({\r\n            startColumn: 0,\r\n            startLineNumber: 0,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        });\r\n\r\n        let text = model.getValue();\r\n\r\n        let end = pos;\r\n        while (end < text.length && this.isInsideIdentifierOrArrayDescriptor(text.charAt(end))) {\r\n            end++;\r\n        }\r\n\r\n        let begin = pos;\r\n        while (begin > 0 && this.isInsideIdentifierChain(text.charAt(begin - 1))) {\r\n            begin--;\r\n        }\r\n\r\n        let lenght: number = identifier?.length == null ? 1 : identifier.length;\r\n\r\n        if (end - begin > length) {\r\n            return text.substring(begin, end);\r\n        }\r\n\r\n        return identifier;\r\n    }\r\n\r\n    isInsideIdentifierChain(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß_\\[\\]\\.]/i);\r\n\r\n    }\r\n\r\n    isInsideOperator(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[!%<>=\\+\\-\\*\\/]/i);\r\n\r\n    }\r\n\r\n    isInsideIdentifierOrArrayDescriptor(t: string) {\r\n\r\n        return t.toLocaleLowerCase().match(/[a-z0-9äöüß\\[\\]]/i);\r\n\r\n    }\r\n\r\n\r\n}","import { QuickFix } from \"../../compiler/lexer/Lexer.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyCodeActionProvider implements monaco.languages.CodeActionProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideCodeActions(model: monaco.editor.ITextModel, range: monaco.Range, context: monaco.languages.CodeActionContext, token: monaco.CancellationToken): monaco.languages.CodeActionList | Promise<monaco.languages.CodeActionList> {\r\n        const actions = context.markers.map(error => {\r\n            let quickFix: QuickFix = <any>error.relatedInformation;\r\n            if (quickFix == null) return null;\r\n\r\n            let codeAction: monaco.languages.CodeAction = {\r\n                title: quickFix.title,\r\n                diagnostics: [error],\r\n                kind: \"quickfix\",\r\n                edit: {\r\n                    edits: quickFix.editsProvider(model.uri)\r\n                },\r\n                isPreferred: true\r\n            };\r\n            return codeAction;\r\n        });\r\n        return {\r\n            actions: actions,\r\n            dispose: () => { }\r\n        }\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Editor } from \"./Editor.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class MyReferenceProvider implements monaco.languages.ReferenceProvider {\r\n\r\n    constructor(private main: MainBase) {\r\n\r\n    }\r\n\r\n    provideReferences(model: monaco.editor.ITextModel, position: monaco.Position, context: monaco.languages.ReferenceContext, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Location[]> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) return null;\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let referencePositions: monaco.languages.Location[] = [];\r\n\r\n        usagePositions.forEach((upInCurrentModule, module) => {\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    referencePositions.push(\r\n                        {\r\n                            uri: module.uri,\r\n                            range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length }\r\n                        });\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return referencePositions;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { MyCompletionItemProvider } from \"./MyCompletionItemProvider.js\";\r\nimport { defineMyJava } from \"./MyJava.js\";\r\nimport { MySignatureHelpProvider } from \"./MySignatureHelpProvider.js\";\r\nimport { Klass, Interface } from \"../../compiler/types/Class.js\";\r\nimport { Method, Attribute, PrimitiveType } from \"../../compiler/types/Types.js\";\r\nimport { getDeclarationAsString } from \"../../compiler/types/DeclarationHelper.js\";\r\nimport { MyHoverProvider } from \"./MyHoverProvider.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\nimport { MyCodeActionProvider } from \"./MyCodeActionProvider.js\";\r\nimport { MyReferenceProvider } from \"./MyReferenceProvider.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { System } from \"pixi.js\";\r\n\r\nexport type HistoryEntry = {\r\n    module_id: number,\r\n    workspace_id: number,\r\n    position: monaco.Position;\r\n}\r\n\r\nexport class Editor implements monaco.languages.RenameProvider {\r\n\r\n    editor: monaco.editor.IStandaloneCodeEditor;\r\n\r\n    highlightCurrentMethod: boolean = true;\r\n\r\n    cw: monaco.editor.IContentWidget = null;\r\n\r\n    lastPosition: HistoryEntry;\r\n    dontPushNextCursorMove: number = 0;\r\n\r\n    constructor(public main: MainBase, private showMinimap: boolean, private isEmbedded: boolean) {\r\n    }\r\n\r\n    initGUI($element: JQuery<HTMLElement>) {\r\n\r\n\r\n\r\n        defineMyJava();\r\n\r\n        monaco.editor.defineTheme('myCustomThemeDark', {\r\n            base: 'vs-dark', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: 'dcdcaa', fontStyle: 'italic' },\r\n                { token: 'print', foreground: 'dcdcaa', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: '3DC9B0' },\r\n                { token: 'number', foreground: 'b5cea8' },\r\n                { token: 'type', foreground: '499cd6' },\r\n                { token: 'identifier', foreground: '9cdcfe' },\r\n                { token: 'statement', foreground: 'bb96c0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '68bed4', fontStyle: 'bold' },\r\n                // { token: 'comment.js', foreground: '008800', fontStyle: 'bold italic underline' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#1e1e1e\",\r\n                \"jo_highlightMethod\": \"#2b2b7d\"\r\n            }\r\n        });\r\n\r\n        monaco.editor.defineTheme('myCustomThemeLight', {\r\n            base: 'vs', // can also be vs-dark or hc-black\r\n            inherit: true, // can also be false to completely replace the builtin rules\r\n            rules: [\r\n                { token: 'method', foreground: '694E16', fontStyle: 'italic bold' },\r\n                { token: 'print', foreground: '811f3f', fontStyle: 'italic bold' },\r\n                { token: 'class', foreground: 'a03030' },\r\n                { token: 'number', foreground: '404040' },\r\n                { token: 'type', foreground: '0000ff', fontStyle: 'bold' },\r\n                { token: 'identifier', foreground: '001080' },\r\n                { token: 'statement', foreground: '8000e0', fontStyle: 'bold' },\r\n                { token: 'keyword', foreground: '00a000', fontStyle: 'bold' },\r\n                { token: 'comment', foreground: '808080', fontStyle: 'italic' },\r\n            ],\r\n            colors: {\r\n                \"editor.background\": \"#FFFFFF\",\r\n                \"editor.foreground\": \"#000000\",\r\n                \"editor.inactiveSelectionBackground\": \"#E5EBF1\",\r\n                \"editorIndentGuide.background\": \"#D3D3D3\",\r\n                \"editorIndentGuide.activeBackground\": \"#939393\",\r\n                \"editor.selectionHighlightBackground\": \"#ADD6FF80\",\r\n                \"editorSuggestWidget.background\": \"#F3F3F3\",\r\n                \"activityBarBadge.background\": \"#007ACC\",\r\n                \"sideBarTitle.foreground\": \"#6F6F6F\",\r\n                \"list.hoverBackground\": \"#E8E8E8\",\r\n                \"input.placeholderForeground\": \"#767676\",\r\n                \"searchEditor.textInputBorder\": \"#CECECE\",\r\n                \"settings.textInputBorder\": \"#CECECE\",\r\n                \"settings.numberInputBorder\": \"#CECECE\",\r\n                \"statusBarItem.remoteForeground\": \"#FFF\",\r\n                \"statusBarItem.remoteBackground\": \"#16825D\",\r\n                \"jo_highlightMethod\": \"#babaec\"\r\n            }\r\n        });\r\n\r\n\r\n        this.editor = monaco.editor.create($element[0], {\r\n            // value: [\r\n            //     'function x() {',\r\n            //     '\\tconsole.log(\"Hello world!\");',\r\n            //     '}'\r\n            // ].join('\\n'),\r\n            // language: 'myJava',\r\n            language: 'myJava',\r\n            lightbulb: {\r\n                enabled: true\r\n            },\r\n            // gotoLocation: {\r\n            //     multipleReferences: \"gotoAndPeek\"\r\n            // },\r\n            lineDecorationsWidth: 0,\r\n            peekWidgetDefaultFocus: \"tree\",\r\n            fixedOverflowWidgets: true,\r\n            quickSuggestions: true,\r\n            quickSuggestionsDelay: 10,\r\n            fontSize: 14,\r\n            fontFamily: \"Consolas, Roboto Mono\",\r\n            fontWeight: \"500\",\r\n            roundedSelection: true,\r\n            selectOnLineNumbers: false,\r\n            // selectionHighlight: false,\r\n            automaticLayout: true,\r\n            scrollBeyondLastLine: false,\r\n            occurrencesHighlight: false,\r\n            autoIndent: \"full\",\r\n            dragAndDrop: true,\r\n            formatOnType: true,\r\n            formatOnPaste: true,\r\n            suggestFontSize: 16,\r\n            suggestLineHeight: 22,\r\n            suggest: {\r\n                localityBonus: true,\r\n                // snippetsPreventQuickSuggestions: false\r\n            },\r\n            parameterHints: { enabled: true, cycle: true },\r\n            // //@ts-ignore\r\n            // contribInfo: {\r\n            //     suggestSelection: 'recentlyUsedByPrefix',\r\n            // },\r\n\r\n            mouseWheelZoom: this.isEmbedded,\r\n\r\n            minimap: {\r\n                enabled: this.showMinimap\r\n            },\r\n            scrollbar: {\r\n                vertical: 'auto',\r\n                horizontal: 'auto'\r\n            },\r\n            theme: \"myCustomThemeDark\",\r\n            // automaticLayout: true\r\n\r\n\r\n        }\r\n        );\r\n\r\n        this.editor.onKeyDown((e: monaco.IKeyboardEvent) => {\r\n            let state = this.main.getInterpreter().state;\r\n\r\n            if ([InterpreterState.done, InterpreterState.error, InterpreterState.not_initialized].indexOf(state) < 0) {\r\n\r\n                if (e.code.indexOf(\"Arrow\") >= 0 || e.code.indexOf(\"Page\") >= 0) return; // don't react to Cursor keys\r\n\r\n                this.main.getActionManager().trigger(\"interpreter.stop\");\r\n            }\r\n        });\r\n\r\n        // this.uri = monaco.Uri.from({ path: '/file1.java', scheme: 'file' })\r\n        // this.modelJava = monaco.editor.createModel(\"\", \"myJava\", this.uri);\r\n        // this.editor.setModel(this.modelJava);\r\n\r\n        let that = this;\r\n\r\n        let mouseWheelListener = (event: WheelEvent) => {\r\n            if (event.ctrlKey === true) {\r\n\r\n                that.changeEditorFontSize(Math.sign(event.deltaY), true);\r\n\r\n                event.preventDefault();\r\n            }\r\n        };\r\n\r\n        if (!this.isEmbedded) {\r\n\r\n            let _main: Main = <Main>this.main;\r\n\r\n            _main.windowStateManager.registerBackButtonListener((event: PopStateEvent) => {\r\n                let historyEntry: HistoryEntry = <HistoryEntry>event.state;\r\n                if(event.state == null) return;\r\n                let workspace: Workspace = _main.workspaceList.find((ws) => ws.id == historyEntry.workspace_id);\r\n                if(workspace == null) return;\r\n                let module: Module = workspace.moduleStore.findModuleById(historyEntry.module_id);\r\n                if(module == null) return; \r\n\r\n                // console.log(\"Processing pop state event, returning to module \" + historyEntry.module_id);\r\n\r\n                if(workspace != _main.currentWorkspace) \r\n                {\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setWorkspaceActive(workspace);\r\n                    that.dontPushNextCursorMove--;\r\n                }\r\n                if(module != _main.getCurrentlyEditedModule()){\r\n                    that.dontPushNextCursorMove++;\r\n                    _main.projectExplorer.setModuleActive(module);\r\n                    that.dontPushNextCursorMove--;\r\n                } \r\n                that.dontPushNextCursorMove++;\r\n                that.editor.setPosition(historyEntry.position);\r\n                that.editor.revealPosition(historyEntry.position);\r\n                that.dontPushNextCursorMove--;\r\n                that.pushHistoryState(true, historyEntry);\r\n            });\r\n        }\r\n\r\n        this.editor.onDidChangeConfiguration((event) => {\r\n            if (event.hasChanged(monaco.editor.EditorOption.fontInfo) && this.isEmbedded) {\r\n\r\n                this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n            }\r\n        });\r\n\r\n        this.editor.onDidChangeCursorPosition((event) => {\r\n\r\n            let currentModelId = this.main.getCurrentlyEditedModule().file.id;\r\n            let pushNeeded = this.lastPosition == null\r\n                || event.source == \"api\"\r\n                || currentModelId != this.lastPosition.module_id\r\n                || Math.abs(this.lastPosition.position.lineNumber - event.position.lineNumber) > 20;\r\n            \r\n            if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                this.pushHistoryState(false, this.getPositionForHistory());\r\n            } else if(currentModelId == history.state?.module_id){\r\n\r\n                    this.pushHistoryState(true, this.getPositionForHistory());\r\n            }\r\n\r\n            that.onDidChangeCursorPosition(event.position);\r\n\r\n            that.onEvaluateSelectedText(event);\r\n\r\n        });\r\n\r\n        // We need this to set our model after user uses Strg+click on identifier\r\n        this.editor.onDidChangeModel((event) => {\r\n\r\n            let element: HTMLDivElement = <any>$element.find('.monaco-editor')[0];\r\n            element.removeEventListener(\"wheel\", mouseWheelListener);\r\n            element.addEventListener(\"wheel\", mouseWheelListener, { passive: false });\r\n\r\n            if (this.main.getCurrentWorkspace() == null) return;\r\n\r\n            let module = this.main.getCurrentWorkspace().getModuleByMonacoModel(this.editor.getModel());\r\n            if (this.main instanceof Main && module != null) {\r\n\r\n                // if(!this.dontPushHistoryStateOnNextModelChange){\r\n                //     this.lastPosition = {\r\n                //         position: this.editor.getPosition(),\r\n                //         workspace_id: this.main.getCurrentWorkspace().id,\r\n                //         module_id: module.file.id\r\n                //     }\r\n                //     this.pushHistoryState(false);\r\n                // }\r\n                // this.dontPushHistoryStateOnNextModelChange = false;\r\n\r\n                this.main.projectExplorer.setActiveAfterExternalModelSet(module);\r\n\r\n                let pushNeeded = this.lastPosition == null\r\n                    || module.file.id != this.lastPosition.module_id;\r\n                \r\n                if(pushNeeded && this.dontPushNextCursorMove == 0){\r\n                    this.pushHistoryState(false, this.getPositionForHistory());\r\n                }    \r\n\r\n            }\r\n\r\n        });\r\n\r\n        monaco.languages.registerRenameProvider('myJava', this);\r\n\r\n        monaco.languages.registerDefinitionProvider('myJava', {\r\n            provideDefinition: (model, position, cancellationToken) => {\r\n                return that.provideDefinition(model, position, cancellationToken);\r\n            }\r\n        });\r\n\r\n        monaco.languages.registerHoverProvider('myJava', new MyHoverProvider(this));\r\n\r\n        monaco.languages.registerCompletionItemProvider('myJava', new MyCompletionItemProvider(this.main));\r\n        monaco.languages.registerCodeActionProvider('myJava', new MyCodeActionProvider(this.main));\r\n        monaco.languages.registerReferenceProvider('myJava', new MyReferenceProvider(this.main));\r\n\r\n\r\n        monaco.languages.registerSignatureHelpProvider('myJava', new MySignatureHelpProvider(this.main));\r\n\r\n        this.editor.onMouseDown((e: monaco.editor.IEditorMouseEvent) => {\r\n            const data = e.target.detail;\r\n            if (e.target.type !== monaco.editor.MouseTargetType.GUTTER_GLYPH_MARGIN &&\r\n                e.target.type !== monaco.editor.MouseTargetType.GUTTER_LINE_NUMBERS || data.isAfterLines) {\r\n                return;\r\n            }\r\n            that.onMarginMouseDown(e.target.position.lineNumber);\r\n            return;\r\n        });\r\n\r\n\r\n        // If editor is instantiated before fonts are loaded then indentation-lines\r\n        // are misplaced, see https://github.com/Microsoft/monaco-editor/issues/392\r\n        // so:\r\n        setTimeout(() => {\r\n            monaco.editor.remeasureFonts();\r\n        }, 2000);\r\n\r\n        this.addActions();\r\n\r\n        //@ts-ignore\r\n        this.editor.onDidType((text) => { that.onDidType(text) });\r\n\r\n        return this.editor;\r\n    }\r\n\r\n    getPositionForHistory(): HistoryEntry {\r\n        return {\r\n            position: this.editor.getPosition(),\r\n            workspace_id: this.main.getCurrentWorkspace().id,\r\n            module_id: this.main.getCurrentlyEditedModule().file.id\r\n        }\r\n    }\r\n\r\n    lastPushTime: number = 0;\r\n    pushHistoryState(replace: boolean, historyEntry: HistoryEntry){\r\n        \r\n        if(this.main.isEmbedded()) return;\r\n\r\n        if(replace){\r\n            history.replaceState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${this.lastPosition.position.lineNumber}, Spalte ${this.lastPosition.position.column})`);\r\n            // console.log(\"Replace History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        } else {\r\n            let time = new Date().getTime();\r\n            if(time - this.lastPushTime > 200){\r\n                history.pushState(historyEntry, \"\"); //`Java-Online, ${module.file.name} (Zeile ${historyEntry.position.lineNumber}, Spalte ${historyEntry.position.column})`);\r\n            } else {\r\n                history.replaceState(historyEntry, \"\");\r\n            }\r\n            this.lastPushTime = time;\r\n            // console.log(\"Pushed History state with workspace-id: \" + historyEntry.workspace_id + \", module-id: \" + historyEntry.module_id);\r\n        }\r\n\r\n        this.lastPosition = historyEntry;\r\n    }\r\n\r\n    onDidType(text: string) {\r\n        //        const endOfCommentText = \" * \\n */\";\r\n\r\n        const insertEndOfComment = (pos, insertText: string, newLine: number, newColumn: number) => {\r\n            const range = new monaco.Range(\r\n                pos.lineNumber,\r\n                pos.column,\r\n                pos.lineNumber,\r\n                pos.column\r\n            );\r\n            this.editor.executeEdits(\"new-bullets\", [\r\n                { range, text: insertText }\r\n            ]);\r\n\r\n            // Set position after bulletText\r\n            this.editor.setPosition({\r\n                lineNumber: newLine,\r\n                column: newColumn\r\n            });\r\n        };\r\n\r\n        if (text === \"\\n\") {\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            const prevLine = model.getLineContent(position.lineNumber - 1);\r\n            if (prevLine.trim().indexOf(\"/*\") === 0 && !prevLine.trimRight().endsWith(\"*/\")) {\r\n                const nextLine = position.lineNumber < model.getLineCount() ? model.getLineContent(position.lineNumber + 1) : \"\";\r\n                if(!nextLine.trim().startsWith(\"*\")){\r\n                    let spacesAtBeginningOfLine: string = prevLine.substr(0, prevLine.length - prevLine.trimLeft().length);\r\n                    if (prevLine.trim().indexOf(\"/**\") === 0) {\r\n                        insertEndOfComment(position, \"\\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    } else {\r\n                        insertEndOfComment(position, \" * \\n\" + spacesAtBeginningOfLine + \" */\", position.lineNumber, position.column + 3 + spacesAtBeginningOfLine.length);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    lastTime: number = 0;\r\n    setFontSize(fontSizePx: number) {\r\n\r\n        // console.log(\"Set font size: \" + fontSizePx);\r\n        let time = new Date().getTime();\r\n        if (time - this.lastTime < 150) return;\r\n        this.lastTime = time;\r\n\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (this.main instanceof Main) {\r\n            this.main.viewModeController.saveFontSize(fontSizePx);\r\n        }\r\n\r\n        if (fontSizePx != editorfs) {\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx\r\n            });\r\n\r\n            // editor does not set fontSizePx, but fontSizePx * zoomfactor with unknown zoom factor, so \r\n            // we have to do this dirty workaround:\r\n            let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n            let factor = newEditorfs / fontSizePx;\r\n            this.editor.updateOptions({\r\n                fontSize: fontSizePx / factor\r\n            });\r\n\r\n            let bottomDiv1 = this.main.getBottomDiv();\r\n            if (bottomDiv1 != null && bottomDiv1.console != null) {\r\n                bottomDiv1.console.editor.updateOptions({\r\n                    fontSize: fontSizePx / factor\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let bottomDiv = this.main.getBottomDiv();\r\n        if (bottomDiv != null && bottomDiv.console != null) {\r\n            let $commandLine = bottomDiv.$bottomDiv.find('.jo_commandline');\r\n            $commandLine.css({\r\n                height: (fontSizePx * 1.1 + 4) + \"px\",\r\n                \"line-height\": (fontSizePx * 1.1 + 4) + \"px\"\r\n            })\r\n            bottomDiv.console.editor.layout();\r\n        }\r\n\r\n\r\n        // let newEditorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        // console.log({editorFS: editorfs, newFs: fontSizePx, newEditorFs: newEditorfs});\r\n\r\n\r\n        jQuery('.jo_editorFontSize').css('font-size', fontSizePx + \"px\");\r\n        jQuery('.jo_editorFontSize').css('line-height', (fontSizePx + 2) + \"px\");\r\n\r\n        document.documentElement.style.setProperty('--breakpoint-size', fontSizePx + 'px');\r\n        document.documentElement.style.setProperty('--breakpoint-radius', fontSizePx / 2 + 'px');\r\n\r\n\r\n        this.main.getBottomDiv().errorManager.registerLightbulbOnClickFunctions();\r\n\r\n    }\r\n\r\n    changeEditorFontSize(delta: number, dynamic: boolean = true) {\r\n        let editorfs = this.editor.getOptions().get(monaco.editor.EditorOption.fontSize);\r\n\r\n        if (dynamic) {\r\n            if (editorfs < 10) {\r\n                delta *= 1;\r\n            } else if (editorfs < 20) {\r\n                delta *= 2;\r\n            } else {\r\n                delta *= 4;\r\n            }\r\n        }\r\n\r\n        let newEditorFs = editorfs + delta;\r\n        if (newEditorFs >= 6 && newEditorFs <= 80) {\r\n            this.setFontSize(newEditorFs);\r\n        }\r\n    }\r\n\r\n\r\n    addActions() {\r\n        this.editor.addAction({\r\n            // An unique identifier of the contributed action.\r\n            id: 'Find bracket',\r\n\r\n            // A label of the action that will be presented to the user.\r\n            label: 'Finde korrespondierende Klammer',\r\n\r\n            // An optional array of keybindings for the action.\r\n            keybindings: [\r\n                monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_K],\r\n\r\n            // A precondition for this action.\r\n            precondition: null,\r\n\r\n            // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\r\n            keybindingContext: null,\r\n\r\n            contextMenuGroupId: 'navigation',\r\n\r\n            contextMenuOrder: 1.5,\r\n\r\n            // Method that will be executed when the action is triggered.\r\n            // @param editor The editor instance is passed in as a convinience\r\n            run: function (ed) {\r\n                ed.getAction('editor.action.jumpToBracket').run();\r\n                return null;\r\n            }\r\n        });\r\n\r\n        //console.log(this.editor.getSupportedActions());\r\n    }\r\n\r\n    onEvaluateSelectedText(event: monaco.editor.ICursorPositionChangedEvent) {\r\n\r\n        let that = this;\r\n\r\n        if (that.cw != null) {\r\n            that.editor.removeContentWidget(that.cw);\r\n            that.cw = null;\r\n        }\r\n\r\n        if (that.main.getInterpreter().state == InterpreterState.paused) {\r\n\r\n            let model = that.editor.getModel();\r\n            let text = model.getValueInRange(that.editor.getSelection());\r\n            if (text != null && text.length > 0) {\r\n                let evaluator = this.main.getCurrentWorkspace().evaluator;\r\n                let result = evaluator.evaluate(text);\r\n                if (result.error == null && result.value != null) {\r\n                    let v = result.value.type.debugOutput(result.value);\r\n\r\n                    monaco.editor.colorize(text + \": \", 'myJava', { tabSize: 3 }).then((text) => {\r\n                        if (text.endsWith(\"<br/>\")) text = text.substr(0, text.length - 5);\r\n                        that.cw = {\r\n                            getId: function () {\r\n                                return 'my.content.widget';\r\n                            },\r\n                            getDomNode: function () {\r\n                                let dn = jQuery('<div class=\"jo_editorTooltip jo_codeFont\">' + text + v + '</div>');\r\n                                return dn[0];\r\n                            },\r\n                            getPosition: function () {\r\n                                return {\r\n                                    position: event.position,\r\n                                    preference: [monaco.editor.ContentWidgetPositionPreference.ABOVE, monaco.editor.ContentWidgetPositionPreference.BELOW]\r\n                                };\r\n                            }\r\n                        };\r\n                        that.editor.addContentWidget(that.cw);\r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onMarginMouseDown(lineNumber: number) {\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        module.toggleBreakpoint(lineNumber, true);\r\n\r\n        if (this.main.getInterpreter().moduleStore != null) {\r\n            let runningModule = this.main.getInterpreter().moduleStore.findModuleByFile(module.file);\r\n            if (runningModule != null) runningModule.toggleBreakpoint(lineNumber, false);\r\n        }\r\n\r\n    }\r\n\r\n    elementDecoration: string[] = [];\r\n    onDidChangeCursorPosition(position: { lineNumber: number, column: number }) {\r\n\r\n        if (position == null) position = this.editor.getPosition();\r\n\r\n        let module = this.getCurrentlyEditedModule();\r\n        if (module == null) {\r\n            this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, []);\r\n            return;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        if (element != null) {\r\n            let usagePositions = element.usagePositions;\r\n            let upInCurrentModule = usagePositions.get(module);\r\n            if (upInCurrentModule != null) {\r\n                for (let up of upInCurrentModule) {\r\n                    decorations.push({\r\n                        range: { startColumn: up.column, startLineNumber: up.line, endColumn: up.column + up.length, endLineNumber: up.line },\r\n                        options: {\r\n                            className: 'jo_revealSyntaxElement', isWholeLine: false, overviewRuler: {\r\n                                color: { id: \"editorIndentGuide.background\" },\r\n                                darkColor: { id: \"editorIndentGuide.activeBackground\" },\r\n                                position: monaco.editor.OverviewRulerLane.Left\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (this.highlightCurrentMethod) {\r\n\r\n            let method = module.getMethodDeclarationAtPosition(position);\r\n            if (method != null) {\r\n                decorations.push({\r\n                    range: { startColumn: 0, startLineNumber: method.position.line, endColumn: 100, endLineNumber: method.scopeTo.line },\r\n                    options: {\r\n                        className: 'jo_highlightMethod', isWholeLine: true, overviewRuler: {\r\n                            color: { id: \"jo_highlightMethod\" },\r\n                            darkColor: { id: \"jo_highlightMethod\" },\r\n                            position: monaco.editor.OverviewRulerLane.Left\r\n                        },\r\n                        minimap: {\r\n                            color: { id: 'jo_highlightMethod' },\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        },\r\n                        zIndex: -100\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.elementDecoration = this.editor.deltaDecorations(this.elementDecoration, decorations);\r\n\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.main.getCurrentlyEditedModule();\r\n    }\r\n\r\n    dontDetectLastChange() {\r\n        // this.dontDetectLastChanging = true;\r\n    }\r\n\r\n    provideRenameEdits(model: monaco.editor.ITextModel, position: monaco.Position,\r\n        newName: string, token: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.WorkspaceEdit & monaco.languages.Rejection> {\r\n\r\n        let currentlyEditedModule = this.getCurrentlyEditedModule();\r\n        if (currentlyEditedModule == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = currentlyEditedModule.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) {\r\n            return;\r\n        }\r\n\r\n        let usagePositions = element.usagePositions;\r\n\r\n        //06.06.2020\r\n        let resourceEdits: monaco.languages.WorkspaceTextEdit[] = [];\r\n\r\n        usagePositions.forEach((usagePositionsInModule, module) => {\r\n            if (usagePositionsInModule != null) {\r\n                let edits: monaco.languages.TextEdit[] = [];\r\n                for (let up of usagePositionsInModule) {\r\n                    resourceEdits.push(\r\n                        {\r\n                            resource: module.uri, edit:\r\n                            {\r\n                                range: { startColumn: up.column, startLineNumber: up.line, endLineNumber: up.line, endColumn: up.column + up.length },\r\n                                text: newName\r\n                            }\r\n                        });\r\n                }\r\n                if (edits.length > 0) {\r\n                    module.file.dirty = true;\r\n                    module.file.saved = false;\r\n                    module.file.identical_to_repository_version = false;\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        return {\r\n            edits: resourceEdits\r\n        }\r\n\r\n    }\r\n\r\n    provideDefinition(model: monaco.editor.ITextModel, position: monaco.Position, cancellationToken: monaco.CancellationToken):\r\n        monaco.languages.ProviderResult<monaco.languages.Definition> {\r\n\r\n        let module: Module = this.main.getCurrentWorkspace().getModuleByMonacoModel(model);\r\n\r\n        if (module == null) {\r\n            return null;\r\n        }\r\n\r\n        let element = module.getElementAtPosition(position.lineNumber, position.column);\r\n        if (element == null) return null;\r\n\r\n        let decl = element.declaration;\r\n\r\n        if (decl == null) {\r\n            // class from Base-Module? Let definition point to current position, so that ctrl + click opens peek references widget\r\n            if (element instanceof Klass || element instanceof Enum || element instanceof Interface || element instanceof Method || element instanceof Attribute) {\r\n                return Promise.resolve({\r\n                    range: {\r\n                        startLineNumber: position.lineNumber, endLineNumber: position.lineNumber,\r\n                        startColumn: position.column, endColumn: position.column + element.identifier.length\r\n                    },\r\n                    uri: module.uri\r\n                });\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return Promise.resolve({\r\n            range: {\r\n                startLineNumber: decl.position.line, endLineNumber: decl.position.line,\r\n                startColumn: decl.position.column, endColumn: decl.position.column + decl.position.length\r\n            },\r\n            uri: decl.module.uri\r\n        });\r\n\r\n    }\r\n\r\n}","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function defineMyJava() {\r\n    monaco.languages.register({ id: 'myJava', \r\n    extensions: ['.learnJava'],\r\n    //  mimetypes: [\"text/x-java-source\", \"text/x-java\"]  \r\n    });\r\n\r\n    let conf: monaco.languages.LanguageConfiguration = {\r\n        indentationRules: {\r\n            // ^(.*\\*/)?\\s*\\}.*$\r\n            decreaseIndentPattern: /^(.*\\*\\/)?\\s*\\}.*$/,\r\n            // ^.*\\{[^}\"']*$\r\n            increaseIndentPattern: /^.*\\{[^}\"']*$/\r\n        },\r\n        onEnterRules: [\r\n            {\r\n                // e.g. /** | */\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                afterText: /^\\s*\\*\\/$/,\r\n                action: { indentAction: monaco.languages.IndentAction.IndentOutdent, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g. /** ...|\r\n                beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: ' * ' }\r\n            },\r\n            {\r\n                // e.g.  * ...|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, appendText: '* ' }\r\n            },\r\n            {\r\n                // e.g.  */|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            },\r\n            {\r\n                // e.g.  *-----*/|\r\n                beforeText: /^(\\t|(\\ \\ ))*\\ \\*[^/]*\\*\\/\\s*$/,\r\n                action: { indentAction: monaco.languages.IndentAction.None, removeText: 1 }\r\n            }\r\n        ],\r\n        // the default separators except `@$`\r\n        wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n        comments: {\r\n            lineComment: '//',\r\n            blockComment: ['/*', '*/'],\r\n        },\r\n        brackets: [\r\n            ['{', '}'],\r\n            ['[', ']'],\r\n            ['(', ')'],\r\n        ],\r\n        autoClosingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n        ],\r\n        surroundingPairs: [\r\n            { open: '{', close: '}' },\r\n            { open: '[', close: ']' },\r\n            { open: '(', close: ')' },\r\n            { open: '\"', close: '\"' },\r\n            { open: '\\'', close: '\\'' },\r\n            { open: '<', close: '>' },\r\n        ],\r\n        folding: {\r\n            markers: {\r\n                start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n                end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n            }\r\n        },\r\n\r\n    };\r\n    let language = {\r\n        defaultToken: '',\r\n        tokenPostfix: '.java',\r\n        keywords: [\r\n            'abstract', 'continue', 'new', 'switch', 'assert', 'default',\r\n            'goto', 'package', 'synchronized', 'private',\r\n            'this', 'implements', 'protected', 'throw',\r\n            'import', 'public', 'throws', 'case', 'instanceof', 'return',\r\n            'transient', 'catch', 'extends', 'try', 'final',\r\n            'static', 'finally', 'strictfp',\r\n            'volatile', 'const', 'native', 'super', 'true', 'false', 'null'\r\n        ],\r\n        print: ['print', 'println'],\r\n        statements: ['for', 'while', 'if', 'then', 'else', 'do', 'break', 'continue'],\r\n        types: ['int', 'boolean', 'char', 'float', 'double', 'long', 'void', 'byte', 'short',\r\n        'class', 'enum', 'interface'],\r\n        operators: [\r\n            '=', '>', '<', '!', '~', '?', ':',\r\n            '==', '<=', '>=', '!=', '&&', '||', '++', '--',\r\n            '+', '-', '*', '/', '&', '|', '^', '%', '<<',\r\n            '>>', '>>>', '+=', '-=', '*=', '/=', '&=', '|=',\r\n            '^=', '%=', '<<=', '>>=', '>>>='\r\n        ],\r\n        // we include these common regular expressions\r\n        symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n        escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n        digits: /\\d+(_+\\d+)*/,\r\n        octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n        binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n        hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n        // The main tokenizer for our languages\r\n        tokenizer: {\r\n            root: [\r\n                // identifiers and keywords\r\n                // [/[a-zA-Z_$][\\w$]*/, {\r\n                [/[a-z_$äöü][\\w$äöüßÄÖÜ]*(?=\\()/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@print': { token: 'print.$0' },\r\n                        '@default': 'method'\r\n                    }\r\n                }],\r\n                [/[a-z_$äöüß][\\w$äöüßÄÖÜ]*/, {\r\n                    cases: {\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@statements': { token: 'statement.$0' },\r\n                        '@types': { token: 'type.$0' },\r\n                        '@default': 'identifier'\r\n                    }\r\n                }],\r\n                [/[A-Z$ÄÖÜ][\\w$äöüßÄÖÜ]*/, 'class'],\r\n                // whitespace\r\n                { include: '@whitespace' },\r\n                // delimiters and operators\r\n                [/[{}()\\[\\]]/, '@brackets'],\r\n                [/[<>](?!@symbols)/, '@brackets'],\r\n                [/@symbols/, {\r\n                    cases: {\r\n                        '@operators': 'delimiter',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n                // @ annotations.\r\n                [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, 'annotation'],\r\n                // numbers\r\n                [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float'],\r\n                [/0[xX](@hexdigits)[Ll]?/, 'number.hex'],\r\n                [/0(@octaldigits)[Ll]?/, 'number.octal'],\r\n                [/0[bB](@binarydigits)[Ll]?/, 'number.binary'],\r\n                [/(@digits)[fFdD]/, 'number.float'],\r\n                [/(@digits)[lL]?/, 'number'],\r\n                // delimiter: after number because of .\\d floats\r\n                [/[;,.]/, 'delimiter'],\r\n                // strings\r\n                [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n                [/\"/, 'string', '@string'],\r\n                // characters\r\n                [/'[^\\\\']'/, 'string'],\r\n                [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\r\n                [/'/, 'string.invalid']\r\n            ],\r\n            whitespace: [\r\n                [/[ \\t\\r\\n]+/, ''],\r\n                [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@javadoc'],\r\n                [/\\/\\*/, 'comment', '@comment'],\r\n                [/\\/\\/.*$/, 'comment'],\r\n            ],\r\n            comment: [\r\n                [/[^\\/*]+/, 'comment'],\r\n                // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n                // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n                [/\\*\\//, 'comment', '@pop'],\r\n                [/[\\/*]/, 'comment']\r\n            ],\r\n            //Identical copy of comment above, except for the addition of .doc\r\n            javadoc: [\r\n                [/[^\\/*]+/, 'comment.doc'],\r\n                // [/\\/\\*/, 'comment.doc', '@push' ],    // nested comment not allowed :-(\r\n                [/\\/\\*/, 'comment.doc.invalid'],\r\n                [/\\*\\//, 'comment.doc', '@pop'],\r\n                [/[\\/*]/, 'comment.doc']\r\n            ],\r\n            string: [\r\n                [/[^\\\\\"]+/, 'string'],\r\n                [/@escapes/, 'string.escape'],\r\n                [/\\\\./, 'string.escape.invalid'],\r\n                [/\"/, 'string', '@pop']\r\n            ],\r\n        },\r\n    };\r\n\r\n    //@ts-ignore\r\n    monaco.languages.setLanguageConfiguration('myJava', conf);\r\n    //@ts-ignore\r\n    monaco.languages.setMonarchTokensProvider('myJava', language);\r\n\r\n    // monaco.languages.registerCompletionItemProvider(\"myJava\", {    // Or any other language...\r\n    //     provideCompletionItems: (model, position) => {\r\n    //         // Retrieve the text until the current cursor's position, anything\r\n    //         // after that doesn't really matter.\r\n    //         var textToMatch = model.getValueInRange({\r\n    //             startLineNumber: 1,\r\n    //             startColumn: 1,\r\n    //             endLineNumber: position.lineNumber,\r\n    //             endColumn: position.column\r\n    //         });\r\n\r\n    //         // Return JSON array containing all completion suggestions.\r\n    //         return {\r\n    //             suggestions: [\r\n    //                 // Example: io.write ()\r\n    //                 {\r\n    //                     label: \"io.write (string)\",\r\n    //                     kind: monaco.languages.CompletionItemKind.Function,\r\n    //                     documentation: \"Writes a string to stdout.\",\r\n    //                     insertText: \"io.write (\\\"\\\")\",  // Escape JSON as needed.\r\n    //                     range: {\r\n    //                         startLineNumber: position.lineNumber,\r\n    //                         endLineNumber: position.lineNumber,\r\n    //                         startColumn: position.column,\r\n    //                         endColumn: position.column\r\n    //                     }\r\n    //                 },  // Other items.\r\n    //             ]\r\n    //         };\r\n    //     }\r\n    // });\r\n\r\n\r\n}","export type DialogButton = {\r\n    caption: string,\r\n    color: string,\r\n    callback: () => void\r\n}\r\n\r\nexport class Dialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n\r\n    init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            '<div style=\"flex: 1\"></div>' +\r\n            '<div class=\"dialog-main\"></div>' +\r\n            '<div style=\"flex: 4\"></div>'\r\n        ));\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n    }\r\n\r\n    heading(text: string) {\r\n        let $div = jQuery('<div class=\"dialog-heading\">' + text + \"</div>\")\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    description(text: string, color?: string) {\r\n        let colorStyle = color == null ? \"\" : `style=\"color: ${color}\"`;\r\n        let $div = jQuery(`<div class=\"dialog-description\" ${colorStyle}>${text}</div>`)\r\n        this.$dialogMain.append($div);\r\n        return $div;\r\n    }\r\n\r\n    input(type: string, placeholder: string):JQuery<HTMLInputElement> {\r\n        let $div = jQuery(`<input class=\"dialog-input\" type=\"${type}\" placeholder=\"${placeholder}\"></input>`)\r\n        this.$dialogMain.append($div);\r\n        return <any>$div;\r\n    }\r\n\r\n    buttons(buttons: DialogButton[]){\r\n\r\n        let $buttonRow = jQuery('<div class=\"dialog-buttonRow\"></div>')\r\n        this.$dialogMain.append($buttonRow);\r\n\r\n        for(let button of buttons){\r\n\r\n            let $button = jQuery(`<button style=\"background-color: ${button.color};margin-left: 20px\">${button.caption}</button>`)\r\n            $button.on(\"click\", () => {button.callback()})\r\n            $buttonRow.append($button);\r\n        }\r\n    }\r\n\r\n    waitMessage(text: string): (visible: boolean) => void {\r\n\r\n        let $message = jQuery(`<div class=\"dialog-wait\">${text}<img src=\"assets/projectexplorer/svg-loaders/ball-triangle.svg\"></div>`)\r\n        this.$dialogMain.append($message);\r\n\r\n        return (visible: boolean) => {\r\n            let visibility = visible ? \"visible\" : \"hidden\";\r\n            $message.css(\"visibility\", visibility);\r\n        }\r\n\r\n    }\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { openContextMenu, ContextMenuItem } from \"../../tools/HtmlTools.js\";\r\nimport { Dialog } from \"./Dialog.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\n\r\nexport class UserMenu {\r\n\r\n\r\n\r\n    constructor(private main: Main){\r\n        \r\n    }\r\n\r\n    init(){\r\n        let $userSettingsButton = jQuery('#buttonUserSettings');\r\n        let that = this;\r\n\r\n        $userSettingsButton.on(\"click\", (e) => {\r\n\r\n            let contextMenuItems: ContextMenuItem[] = [\r\n                {\r\n                    caption: \"Passwort ändern...\",\r\n                    callback: () => {\r\n                        let passwortChanger = new PasswordChanger(that.main);\r\n                        passwortChanger.show();\r\n                    }\r\n                }\r\n            ]\r\n\r\n\r\n            openContextMenu(contextMenuItems, $userSettingsButton.offset().left, $userSettingsButton.offset().top + $userSettingsButton.height());\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PasswordChanger {\r\n\r\n    dialog: Dialog;\r\n\r\n    constructor(private main: Main){\r\n\r\n        this.dialog = new Dialog();\r\n\r\n    }\r\n\r\n    show() {\r\n        this.dialog.init();\r\n        this.dialog.heading(\"Passwort ändern\");\r\n        this.dialog.description(\"Bitte geben Sie Ihr bisheriges Passwort und darunter zweimal Ihr neues Passwort ein. <br>\" + \r\n        \"Das Passwort muss mindestens 8 Zeichen lang sein und sowohl Buchstaben als auch Zahlen oder Sonderzeichen enthalten.\")\r\n        let $oldPassword = this.dialog.input(\"password\", \"Altes Passwort\");\r\n        let $newPassword1 = this.dialog.input(\"password\", \"Neues Passwort\");\r\n        let $newPassword2 = this.dialog.input(\"password\", \"Neues Passwort wiederholen\");\r\n        let $errorDiv = this.dialog.description(\"\", \"red\");\r\n        let waitDiv = this.dialog.waitMessage(\"Bitte warten...\")\r\n\r\n        this.dialog.buttons([\r\n            {\r\n                caption: \"Abbrechen\",\r\n                color: \"#a00000\",\r\n                callback: () => {this.dialog.close()}\r\n            },\r\n            {\r\n                caption: \"OK\",\r\n                color: \"green\",\r\n                callback: () => {\r\n                    if($newPassword1.val() != $newPassword2.val()){\r\n                        $errorDiv.text(\"Die zwei eingegebenen neuen Passwörter stimmen nicht überein.\")\r\n                    } else {\r\n                        waitDiv(true);\r\n                        ajax(\"changePassword\", {oldPassword: $oldPassword.val(), newPassword: $newPassword1.val()}, () => {\r\n                            waitDiv(false);\r\n                            alert(\"Das Passwort wurde erfolgreich geändert.\");\r\n                            this.dialog.close();\r\n                        }, (message) => {\r\n                            waitDiv(false);\r\n                            $errorDiv.text(message)\r\n                        })\r\n                    }\r\n\r\n                }\r\n            },\r\n        ])\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { UserData } from \"../../communication/Data.js\";\r\nimport { PasswordChanger } from \"./UserMenu.js\";\r\n\r\nexport type Action = (identifier: string) => void;\r\n\r\ntype Menu = {\r\n    items: MenuItem[];\r\n    $element?: JQuery<HTMLElement>;\r\n    level?: number;\r\n}\r\n\r\ntype MenuItem = {\r\n    identifier: string;\r\n    $element?: JQuery<HTMLElement>;\r\n    action?: Action;\r\n    link?: string;\r\n    subMenu?: Menu;\r\n}\r\n\r\nexport class MainMenu {\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n\r\n    currentSubmenu: { [level: number]: JQuery<HTMLElement> } = {};\r\n    openSubmenusOnMousemove: boolean = false;\r\n\r\n    initGUI(user: UserData) {\r\n\r\n        let that = this;\r\n        let editor = this.main.getMonacoEditor();\r\n\r\n        let mainMenu: Menu = {\r\n            items: [\r\n                {\r\n                    identifier: \"Datei\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Speichern und Beenden\",\r\n                                action: () => { jQuery('#buttonLogout').trigger(\"click\"); }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Bearbeiten\", subMenu:\r\n                    {\r\n                        items: [\r\n                            { identifier: \"Rückgängig (Strg + z)\", action: () => { editor.trigger(\".\", \"undo\", {}); } },\r\n                            { identifier: \"Wiederholen (Strg + y)\", action: () => { editor.trigger(\".\", \"redo\", {}); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Kopieren (Strg + c)\", action: () => { editor.getAction(\"editor.action.clipboardCopyAction\").run(); } },\r\n                            { identifier: \"Ausschneiden (Strg + x)\", action: () => { editor.getAction(\"editor.action.clipboardCutAction\").run(); } },\r\n                            { identifier: \"Nach oben kopieren (Alt + Shift + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.copyLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten kopieren (Alt + Shift + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.copyLinesDownAction\").run(); } },\r\n                            { identifier: \"Nach oben verschieben (Alt + Pfeil rauf)\", action: () => { editor.getAction(\"editor.action.moveLinesUpAction\").run(); } },\r\n                            { identifier: \"Nach unten verschieben (Alt + Pfeil runter)\", action: () => { editor.getAction(\"editor.action.moveLinesDownAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Suchen... (Strg + f)\", action: () => { editor.getAction(\"actions.find\").run(); } },\r\n                            { identifier: \"Ersetzen... (Strg + h)\", action: () => { editor.getAction(\"editor.action.startFindReplaceAction\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Aus-/Einkommentieren (Strg + #)\", action: () => { editor.getAction(\"editor.action.commentLine\").run(); } },\r\n                            { identifier: \"Dokument formatieren (Alt + Shift + f)\", action: () => { editor.getAction(\"editor.action.formatDocument\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Finde zugehörige Klammer (Strg + k)\", action: () => { editor.getAction(\"editor.action.jumpToBracket\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Alles zusammenfalten\", action: () => { editor.getAction(\"editor.foldAll\").run(); } },\r\n                            { identifier: \"Alles auffalten\", action: () => { editor.getAction(\"editor.unfoldAll\").run(); } },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Vorschlag auslösen (Strg + Leertaste)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.triggerSuggest\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n                            { identifier: \"Parameterhilfe (Strg + Shift + Leertaste)\", action: () => { editor.getAction(\"editor.action.triggerParameterHints\").run(); } },\r\n                            {\r\n                                identifier: \"Gehe zur Definition (Strg + Click)\", action: () => {\r\n                                    editor.focus();\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.revealDefinition\").run();\r\n                                    }, 200);\r\n                                }\r\n                            },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Ansicht\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Theme\",\r\n                                subMenu: {\r\n                                    items: [\r\n                                        {\r\n                                            identifier: \"Dark\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"dark\");\r\n                                            }\r\n                                        },\r\n                                        {\r\n                                            identifier: \"Light\",\r\n                                            action: () => {\r\n                                                that.switchTheme(\"light\");\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Hoher Kontrast im Editor ein/aus\", action: () => { editor.getAction(\"editor.action.toggleHighContrast\").run(); } },\r\n\r\n                            { identifier: \"-\" },\r\n                            { identifier: \"Zoom out (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(-4); } },\r\n                            { identifier: \"Zoom normal\", action: () => { this.main.editor.setFontSize(14); }},\r\n                            { identifier: \"Zoom in (Strg + Mausrad)\", action: () => { this.main.editor.changeEditorFontSize(4); } },\r\n\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Repository\", subMenu: {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Eigene Repositories verwalten ...\",\r\n                                action: () => {this.main.repositoryUpdateManager.show(null)}\r\n                            },\r\n                            {\r\n                                identifier: \"Workspace mit Repository verbinden (checkout) ...\",\r\n                                action: () => {this.main.repositoryCheckoutManager.show(null)}\r\n                            },\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    identifier: \"Hilfe\", subMenu:\r\n                    {\r\n                        items: [\r\n                            {\r\n                                identifier: \"Sprite-Bilderübersicht\",\r\n                                link: \"spriteLibrary.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Dokumentation\",\r\n                                link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                // link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"API-Verzeichnis\",\r\n                                //link: \"https://www.learnj.de/doku.php?id=api:documentation:start\"\r\n                                link: \"api_documentation.html\"\r\n                            },\r\n                            {\r\n                                identifier: \"Tastaturkommandos (Shortcuts)\",\r\n                                link: \"shortcuts.html\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Interaktives Java-Tutorial mit vielen Beispielen\",\r\n                                link: \"https://www.learnj.de/doku.php\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Changelog\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:changelog\"\r\n                            },\r\n                            {\r\n                                identifier: \"Java-Online Roadmap\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:roadmap\"\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Befehlspalette\",\r\n                                action: () => {\r\n                                    setTimeout(() => {\r\n                                        editor.getAction(\"editor.action.quickCommand\").run();\r\n                                    }, 500);\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Passwort ändern...\",\r\n                                action: () => {\r\n                                    let passwortChanger = new PasswordChanger(that.main);\r\n                                    passwortChanger.show();\r\n                                }\r\n                            },\r\n                            { identifier: \"-\" },\r\n                            {\r\n                                identifier: \"Über die Online-IDE...\",\r\n                                link: \"https://www.learnj.de/doku.php?id=javaonline:ueber\"\r\n                            }\r\n\r\n                        ]\r\n                    }\r\n                },\r\n\r\n                // ,\r\n                // {\r\n                //     identifier: \"Bearbeiten\", subMenu:\r\n                //     {\r\n                //         items: [\r\n                //             { identifier: \"Undo\" },\r\n                //             { identifier: \"Redo\" },\r\n                //             { identifier: \"Kopieren\" },\r\n                //             { identifier: \"Formatieren\"}\r\n                //         ]\r\n                //     }\r\n                // },\r\n            ]\r\n        };\r\n\r\n        if (user != null && (user.is_admin || user.is_schooladmin || user.is_teacher)) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Schulen/Klassen/Benutzer ...\",\r\n                            link: \"administration_mc.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        if (user != null && (user.is_admin )) {\r\n            mainMenu.items[0].subMenu.items.push(\r\n                        {\r\n                            identifier: \"Serverauslastung ...\",\r\n                            link: \"statistics.html\"\r\n                        }\r\n            )\r\n        }\r\n\r\n        jQuery('#mainmenu').empty();\r\n        this.initMenu(mainMenu, 0);\r\n    }\r\n\r\n    switchTheme(theme: string) {\r\n        this.main.viewModeController.setTheme(theme);\r\n    }\r\n\r\n    initMenu(menu: Menu, level?: number) {\r\n\r\n        menu.level = level;\r\n\r\n        if (level == 0) {\r\n            menu.$element = jQuery('#mainmenu');\r\n        } else {\r\n            menu.$element = jQuery('<div class=\"jo_submenu\"></div>');\r\n            jQuery('body').append(menu.$element);\r\n        }\r\n\r\n        menu.$element.data('model', menu);\r\n        for (let mi of menu.items) {\r\n            if (mi.identifier == '-') {\r\n                mi.$element = jQuery('<div class=\"jo_menuitemdivider\"></div>');\r\n            } else {\r\n                mi.$element = jQuery('<div>' + mi.identifier + '</div>');\r\n                if (mi.link != null) {\r\n                    let $link = jQuery('<a href=\"' + mi.link + '\" target=\"_blank\" class=\"jo_menulink\"></a>');\r\n                    $link.on(\"mousedown\", (event) => {\r\n                        event.stopPropagation();\r\n                        setTimeout(() => {\r\n                            menu.$element.hide();\r\n                        }, 500);\r\n                    })\r\n                    $link.append(mi.$element);\r\n                    mi.$element = $link;\r\n                }\r\n                if (mi.subMenu != null) {\r\n                    this.initMenu(mi.subMenu, level + 1);\r\n                }\r\n                this.initMenuitemCallbacks(menu, mi);\r\n                if (level == 0) {\r\n                    mi.$element.addClass('jo_mainmenuitem');\r\n                }\r\n            }\r\n            menu.$element.append(mi.$element);\r\n            mi.$element.data('model', mi);\r\n        }\r\n\r\n        let that = this;\r\n        jQuery(document).on('mousedown', () => {\r\n            for (let i = 0; i < 5; i++) {\r\n                if (that.currentSubmenu[i] != null) {\r\n                    that.currentSubmenu[i].hide();\r\n                    that.currentSubmenu[i] = null;\r\n                }\r\n            }\r\n            that.openSubmenusOnMousemove = false;\r\n        });\r\n\r\n    }\r\n\r\n    initMenuitemCallbacks(menu: Menu, mi: MenuItem) {\r\n        let that = this;\r\n\r\n        if (mi.action != null) {\r\n            mi.$element.on('mousedown', (ev) => { mi.action(mi.identifier); });\r\n        }\r\n\r\n        if (mi.subMenu != null) {\r\n            mi.$element.on('mousedown', (ev) => {\r\n                that.opensubmenu(mi);\r\n                that.openSubmenusOnMousemove = true;\r\n                ev.stopPropagation();\r\n            });\r\n\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.openSubmenusOnMousemove) {\r\n                    that.opensubmenu(mi);\r\n                } else {\r\n                    if (that.currentSubmenu[menu.level + 1] != null) {\r\n                        that.currentSubmenu[menu.level + 1].hide();\r\n                        that.currentSubmenu[menu.level + 1] = null;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            mi.$element.on('mousemove.mainmenu', () => {\r\n                if (that.currentSubmenu[menu.level + 1] != null) {\r\n                    that.currentSubmenu[menu.level + 1].hide();\r\n                    that.currentSubmenu[menu.level + 1] = null;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    opensubmenu(mi: MenuItem) {\r\n\r\n        let subMenu = mi.subMenu;\r\n\r\n        let left: number;\r\n        let top: number;\r\n        if (subMenu.level == 1) {\r\n            left = mi.$element.position().left;\r\n            top = 30;\r\n        } else {\r\n            left = mi.$element.offset().left + mi.$element.width();\r\n            top = mi.$element.offset().top;\r\n        }\r\n\r\n        subMenu.$element.css({\r\n            top: \"\" + top + \"px\",\r\n            left: \"\" + left + \"px\"\r\n        })\r\n\r\n        if (this.currentSubmenu[subMenu.level] != null) {\r\n            this.currentSubmenu[subMenu.level].hide();\r\n        }\r\n\r\n        subMenu.$element.show();\r\n        this.currentSubmenu[subMenu.level] = subMenu.$element;\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { convertPxToNumber } from \"../../tools/HtmlTools.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\n\r\nexport class SpeedControl {\r\n\r\n    position: number = 0;\r\n    xMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $bar: JQuery<HTMLElement>;\r\n    $display: JQuery<HTMLElement>;\r\n    $outer: JQuery<HTMLElement>;\r\n\r\n    gripWidth: number = 10;\r\n    overallWidth: number = 100;\r\n\r\n    interpreter: Interpreter\r\n\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n\r\n\r\n    constructor($container: JQuery<HTMLElement>){\r\n\r\n        this.$outer = jQuery('<div class=\"jo_speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\"></div>');\r\n        this.$bar = jQuery('<div class=\"jo_speedcontrol-bar\" draggable=\"false\"></div>');\r\n        this.$grip = jQuery('<div class=\"jo_speedcontrol-grip\" draggable=\"false\"></div>');\r\n        this.$display = jQuery('<div class=\"jo_speedcontrol-display\" draggable=\"false\">100 Schritte/s</div>');\r\n\r\n        this.$grip.append(this.$display);\r\n        this.$outer.append(this.$bar, this.$grip);\r\n\r\n        $container.append(this.$outer);\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n    }\r\n\r\n    initGUI(){\r\n        \r\n        let mousedownX: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallWidth = convertPxToNumber(this.$outer.css('width'));\r\n        that.gripWidth = convertPxToNumber(that.$grip.css('width'));\r\n        that.xMax = that.overallWidth - that.gripWidth;\r\n        \r\n        that.$outer.on('mousedown', (e) => {\r\n            \r\n            \r\n\r\n            let x = e.pageX - that.$outer.offset().left - 4;\r\n            that.setSpeed(x);\r\n            that.$grip.css('left', x + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientX]);\r\n\r\n            // jQuery('#speedcontrol-display').show();\r\n            // jQuery(document).on('mouseup.speedcontrol1', () => {\r\n            //     jQuery(document).off('mouseup.speedcontrol1');\r\n            //     jQuery('#speedcontrol-display').hide();\r\n            // });\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, x) => {\r\n            if(x == null) x = e.clientX;\r\n            mousedownX = x;\r\n            oldPosition = that.position;\r\n            jQuery('.joe_controlPanel_top').css(\"z-index\", \"1000\");\r\n            that.$display.show();\r\n\r\n            jQuery(document).on('mousemove.speedcontrol', (e)=>{\r\n                let deltaX = e.clientX - mousedownX;\r\n                that.setSpeed(oldPosition + deltaX);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.speedcontrol', () => {\r\n                jQuery(document).off('mouseup.speedcontrol');\r\n                jQuery(document).off('mousemove.speedcontrol');\r\n                that.$display.hide();\r\n                jQuery('.joe_controlPanel_top').css(\"z-index\", \"0\");\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setSpeed(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.xMax){\r\n            newPosition = this.xMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('left', newPosition + \"px\");\r\n\r\n        // in steps/s\r\n        let intervalBorders = [1, 10, 100, 1000, 10000, 100000, this.interpreter.maxStepsPerSecond];\r\n\r\n        let intervalDelta = this.xMax / (intervalBorders.length - 1);\r\n        let intervalIndex = Math.floor(newPosition/intervalDelta);\r\n        if(intervalIndex == intervalBorders.length - 1) intervalIndex--;\r\n        let factorInsideInterval = (newPosition - intervalIndex*intervalDelta)/intervalDelta;\r\n\r\n        let intervalMin = intervalBorders[intervalIndex];\r\n        let intervalMax = intervalBorders[intervalIndex + 1];\r\n\r\n        let speed = intervalMin + (intervalMax - intervalMin) * factorInsideInterval;\r\n\r\n        this.interpreter.stepsPerSecond = speed;\r\n\r\n        this.interpreter.hideProgrampointerPosition();\r\n\r\n        let speedString = \"\" + Math.ceil(speed);\r\n        if(speed >= this.interpreter.maxStepsPerSecond - 10){\r\n            speedString = \"Maximale Geschwindigkeit\";\r\n        }\r\n\r\n        this.$display.html(speedString + \" Schritte/s\");\r\n        \r\n        // console.log( speed + ' steps/s entspricht ' + this.interpreter.timerDelayMs + ' ms zwischen Steps')\r\n\r\n    }\r\n    \r\n\r\n\r\n}","// <div id=\"controls\">\r\n// <div id=\"speedcontrol-outer\" title=\"Geschwindigkeitsregler\" draggable=\"false\">\r\n//     <div id=\"speedcontrol-bar\" draggable=\"false\"></div>\r\n//     <div id=\"speedcontrol-grip\" draggable=\"false\">\r\n//         <div id=\"speedcontrol-display\">100 Schritte/s</div>\r\n//     </div>\r\n// </div>\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n// </div>\r\n\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpeedControl } from \"./SpeedControl.js\";\r\n\r\n\r\n\r\nexport class ProgramControlButtons {\r\n\r\n    speedControl: SpeedControl;\r\n\r\n    $buttonStart: JQuery<HTMLElement>;\r\n    $buttonPause: JQuery<HTMLElement>;\r\n    $buttonStop: JQuery<HTMLElement>;\r\n    $buttonStepOver: JQuery<HTMLElement>;\r\n    $buttonStepInto: JQuery<HTMLElement>;\r\n    $buttonStepOut: JQuery<HTMLElement>;\r\n    $buttonRestart: JQuery<HTMLElement>;\r\n\r\n    // $buttonEdit: JQuery<HTMLElement>;\r\n\r\n    private interpreter: Interpreter;\r\n\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private $editorContainer: JQuery<HTMLElement>){\r\n\r\n        this.speedControl = new SpeedControl($buttonsContainer);\r\n        this.speedControl.initGUI();\r\n\r\n        this.$buttonStart = jQuery('<div title=\"Start\" class=\"img_start-dark jo_button\"></div>');\r\n        this.$buttonPause = jQuery('<div title=\"Pause\" class=\"img_pause-dark jo_button\"></div>');\r\n        this.$buttonStop = jQuery('<div title=\"Stop\" class=\"img_stop-dark jo_button\"></div>');\r\n        this.$buttonStepOver = jQuery('<div title=\"Step over\" class=\"img_step-over-dark jo_button\"></div>');\r\n        this.$buttonStepInto = jQuery('<div title=\"Step into\" class=\"img_step-into-dark jo_button\"></div>');\r\n        this.$buttonStepOut = jQuery('<div title=\"Step out\" class=\"img_step-out-dark jo_button\"></div>');\r\n        this.$buttonRestart = jQuery('<div title=\"Restart\" class=\"img_restart-dark jo_button\"></div>');\r\n\r\n        // this.$buttonEdit = jQuery('<div class=\"jo_editButton\" title=\"Programm anhalten damit der Programmtext bearbeitbar wird\"></div>')\r\n        // $editorContainer.append(this.$buttonEdit);\r\n\r\n        $buttonsContainer.append(this.$buttonStart, this.$buttonPause, this.$buttonStop,\r\n            this.$buttonStepOver, this.$buttonStepInto, this.$buttonStepOut, this.$buttonRestart);\r\n\r\n// <!-- <img id=\"buttonStart\" title=\"Start\" src=\"assets/projectexplorer/start-dark.svg\"> -->\r\n// <div id=\"buttonStart\" title=\"Start\" class=\"img_start-dark button\"></div>\r\n// <div id=\"buttonPause\" title=\"Pause\" class=\"img_pause-dark button\"></div>\r\n// <div id=\"buttonStop\" title=\"Stop\" class=\"img_stop-dark button\"></div>\r\n// <div id=\"buttonStepOver\" title=\"Step over\" class=\"img_step-over-dark button\"></div>\r\n// <div id=\"buttonStepInto\" title=\"Step into\" class=\"img_step-into-dark button\"></div>\r\n// <div id=\"buttonStepOut\" title=\"Step out\" class=\"img_step-out-dark button\"></div>\r\n// <div id=\"buttonRestart\" title=\"Restart\" class=\"img_restart-dark button\"></div>\r\n\r\n\r\n\r\n    }\r\n\r\n    setInterpreter(i: Interpreter){\r\n        this.interpreter = i;\r\n        this.speedControl.setInterpreter(i);\r\n        this.speedControl.setSpeed(20);\r\n    }\r\n}","import { ClassData, UserData } from \"../../communication/Data.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { isEmptyObject } from \"jquery\";\r\n\r\nexport class DistributeToStudentsDialog {\r\n\r\n    $dialog: JQuery<HTMLElement>;\r\n    $dialogMain: JQuery<HTMLElement>;\r\n    studentCount: number = 0;\r\n\r\n    constructor(private classes: ClassData[], private workspace: Workspace, private main: Main){\r\n        this.init();\r\n    }\r\n\r\n    private init() {\r\n        this.$dialog = jQuery('#dialog');\r\n        jQuery('#main').css('visibility', 'hidden');\r\n        this.$dialog.append(jQuery(\r\n            `<div class=\"jo_ds_heading\">Austeilen eines Workspace an einzelne Schüler/innen</div>\r\n             <div class=\"jo_ds_settings\">\r\n                <div class=\"jo_ds_settings_caption\">Workspace:</div><div class=\"jo_ds_workspacename\">${this.workspace.name}</div>\r\n                <div class=\"jo_ds_settings_caption\">Liste filtern:</div><div class=\"jo_ds_filterdiv\"><input class=\"dialog-input\"></input></div>\r\n             </div>\r\n             <div class=\"jo_ds_student_list jo_scrollable\">\r\n             </div>\r\n             <div class=\"jo_ds_selected_message\"></div>\r\n             <div class=\"dialog-buttonRow jo_ds_buttonRow\">\r\n                <button id=\"jo_ds_cancel_button\">Abbrechen</button>\r\n                <button id=\"jo_ds_distribute_button\">Austeilen</button>\r\n             </div>\r\n            `\r\n        ));\r\n\r\n        let $studentList = jQuery('.jo_ds_student_list');\r\n        let that = this;\r\n\r\n        for(let klass of this.classes){\r\n            for(let student of klass.students){\r\n                let $studentLine = jQuery('<div class=\"jo_ds_student_line\">');\r\n                let $studentClass = jQuery(`<div class=\"jo_ds_student_class\">${klass.name}</div>`);                \r\n                let $studentName = jQuery(`<div class=\"jo_ds_student_name\">${student.rufname} ${student.familienname}</div>`);\r\n                $studentLine.append($studentClass, $studentName);\r\n                $studentList.append($studentLine);\r\n                $studentLine.on('mousedown', () => {\r\n                    $studentLine.toggleClass('jo_active');\r\n                     that.studentCount += $studentLine.hasClass('jo_active') ? 1 : -1;\r\n                     jQuery('.jo_ds_selected_message').text(`${that.studentCount} Schüler/inn/en selektiert`);\r\n                });\r\n                $studentLine.data('student', student);\r\n                $studentLine.data('klass', klass);\r\n            }\r\n        }\r\n\r\n        jQuery('.jo_ds_filterdiv>input').on('input', () => {\r\n            let filterText = <string>jQuery('.jo_ds_filterdiv>input').val();\r\n            if(filterText == null || filterText == \"\"){\r\n                $('.jo_ds_student_line').show();\r\n            } else {\r\n                $('.jo_ds_student_line').each((index, element) => {\r\n                    let $element = jQuery(element);\r\n                    let klass:ClassData = $element.data('klass');\r\n                    let student: UserData = $element.data('student');\r\n                    let text = klass.name + \" \" + student.rufname + \" \" + student.familienname;\r\n                    if(text.indexOf(filterText) >= 0){\r\n                        $element.show();\r\n                    } else {\r\n                        $element.hide();\r\n                    }\r\n                });\r\n\r\n            }\r\n            \r\n        });\r\n\r\n\r\n        this.$dialogMain = this.$dialog.find('.dialog-main');\r\n        this.$dialog.css('visibility', 'visible');\r\n\r\n        jQuery('#jo_ds_cancel_button').on('click', () => { window.history.back(); });\r\n        jQuery('#jo_ds_distribute_button').on('click', () => {that.distributeWorkspace();});\r\n\r\n        this.main.windowStateManager.registerOneTimeBackButtonListener(() => {\r\n            that.close();\r\n        });\r\n\r\n    }\r\n\r\n    distributeWorkspace() {\r\n\r\n        let student_ids: number[] = [];\r\n        $('.jo_ds_student_line').each((index, element) => {\r\n            let $element = jQuery(element);\r\n            if($element.hasClass('jo_active')){\r\n                let student: UserData = $element.data('student');\r\n                student_ids.push(student.id);\r\n            }\r\n        });\r\n\r\n        window.history.back();\r\n\r\n        this.main.networkManager.sendDistributeWorkspace(this.workspace, null, student_ids, (error: string) => {\r\n            if (error == null) {\r\n                let networkManager = this.main.networkManager;\r\n                let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                alert(`Der Workspace ${this.workspace.name} wurde an ${student_ids.length} Schüler/innen ausgeteilt. Er wird in maximal ${dt} s bei jedem Schüler ankommen.`);\r\n            } else {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    close() {\r\n        this.$dialog.css('visibility', 'hidden');\r\n        this.$dialog.empty();\r\n        jQuery('#main').css('visibility', 'visible');\r\n    }\r\n\r\n\r\n}","import { NetworkManager } from \"../../communication/NetworkManager.js\";\r\nimport { TextPosition } from \"../../compiler/lexer/Token.js\";\r\nimport { File, Module } from \"../../compiler/parser/Module.js\";\r\nimport { ProgramPrinter } from \"../../compiler/parser/ProgramPrinter.js\";\r\nimport { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { makeEditable, openContextMenu } from \"../../tools/HtmlTools.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { AccordionPanel, Accordion, AccordionElement, AccordionContextMenuItem } from \"./Accordion.js\";\r\nimport { Helper } from \"./Helper.js\";\r\nimport { text } from \"express\";\r\nimport { WorkspaceData, Workspaces, ClassData } from \"../../communication/Data.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { dateToString } from \"../../tools/StringTools.js\";\r\nimport { DistributeToStudentsDialog } from \"./DistributeToStudentsDialog.js\";\r\n\r\n\r\nexport class ProjectExplorer {\r\n\r\n    programPointerModule: Module = null;\r\n    programPointerPosition: TextPosition;\r\n    programPointerDecoration: string[] = [];\r\n\r\n    accordion: Accordion;\r\n    fileListPanel: AccordionPanel;\r\n    workspaceListPanel: AccordionPanel;\r\n\r\n    $homeAction: JQuery<HTMLElement>;\r\n    $synchronizeAction: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: Main, private $projectexplorerDiv: JQuery<HTMLElement>) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.accordion = new Accordion(this.$projectexplorerDiv);\r\n\r\n        this.initFilelistPanel();\r\n\r\n        this.initWorkspacelistPanel();\r\n\r\n    }\r\n\r\n    initFilelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.fileListPanel = new AccordionPanel(this.accordion, \"Kein Workspace gewählt\", \"3\",\r\n            \"img_add-file-dark\", \"Neue Datei...\", \"java\", true);\r\n\r\n        this.fileListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                if (that.main.currentWorkspace == null) {\r\n                    alert('Bitte wählen Sie zuerst einen Workspace aus.');\r\n                    return null;\r\n                }\r\n\r\n                let f: File = {\r\n                    name: accordionElement.name,\r\n                    dirty: false,\r\n                    saved: true,\r\n                    text: \"\",\r\n                    text_before_revision: null,\r\n                    submitted_date: null,\r\n                    student_edited_after_revision: false,\r\n                    version: 1,\r\n                    panelElement: accordionElement,\r\n                    identical_to_repository_version: false\r\n                };\r\n                let m = new Module(f, that.main);\r\n                let modulStore = that.main.currentWorkspace.moduleStore;\r\n                modulStore.putModule(m);\r\n                that.setModuleActive(m);\r\n                that.main.networkManager.sendCreateFile(m, that.main.currentWorkspace, that.main.workspacesOwnerId,\r\n                    (error: string) => {\r\n                        if (error == null) {\r\n                            successfulNetworkCommunicationCallback(m);\r\n                        } else {\r\n                            alert('Der Server ist nicht erreichbar!');\r\n\r\n                        }\r\n                    });\r\n\r\n            };\r\n\r\n        this.fileListPanel.renameCallback =\r\n            (module: Module, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                let file = module.file;\r\n\r\n                file.name = newName;\r\n                file.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.fileListPanel.deleteCallback =\r\n            (module: Module, callbackIfSuccessful: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"file\", module.file.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.currentWorkspace.moduleStore.removeModule(module);\r\n                        callbackIfSuccessful();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.fileListPanel.contextMenuProvider = (accordionElement: AccordionElement) => {\r\n\r\n                let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n                if(!(that.main.user.is_teacher || that.main.user.is_admin || that.main.user.is_schooladmin)){\r\n                    let module: Module = <Module>accordionElement.externalElement;\r\n                    let file = module.file;\r\n\r\n                    if(file.submitted_date == null){\r\n                        cmiList.push({\r\n                            caption: \"Als Hausaufgabe markieren\",\r\n                            callback: (element: AccordionElement) => {\r\n\r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = dateToString(new Date());\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        cmiList.push({\r\n                            caption: \"Hausaufgabenmarkierung entfernen\",\r\n                            callback: (element: AccordionElement) => {\r\n                                \r\n                                let file = (<Module>element.externalElement).file;\r\n                                file.submitted_date = null;\r\n                                file.saved = false;\r\n                                that.main.networkManager.sendUpdates(null, true);\r\n                                that.renderHomeworkButton(file);\r\n                                \r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n                return cmiList;\r\n            }    \r\n\r\n\r\n\r\n        this.fileListPanel.selectCallback =\r\n            (module: Module) => {\r\n                that.setModuleActive(module);\r\n            }\r\n\r\n\r\n        this.$synchronizeAction = jQuery('<div class=\"img_open-change jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Workspace mit Repository synchronisieren\">');\r\n        this.$synchronizeAction.on('mousedown', (e) => {\r\n\r\n            this.main.getCurrentWorkspace().synchronizeWithRepository();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.fileListPanel.addAction(this.$synchronizeAction);\r\n        this.$synchronizeAction.hide();\r\n\r\n    }\r\n\r\n    renderHomeworkButton(file: File) {\r\n        let $buttonDiv = file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonHomework');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_homeworkButton').remove();\r\n\r\n        let klass: string = null;\r\n        let title: string = \"\";\r\n        if(file.submitted_date != null){\r\n            klass = \"img_homework\";\r\n            title = \"Wurde als Hausaufgabe abgegeben: \" + file.submitted_date\r\n            if(file.text_before_revision){\r\n                klass = \"img_homework-corrected\";\r\n                title = \"Korrektur liegt vor.\"\r\n            }\r\n        } \r\n\r\n        if (klass != null) {\r\n            let $homeworkButtonDiv = jQuery(`<div class=\"jo_homeworkButton ${klass}\" title=\"${title}\"></div>`);\r\n            $buttonDiv.prepend($homeworkButtonDiv);\r\n            if(klass.indexOf(\"jo_active\") >= 0){\r\n                $homeworkButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n                $homeworkButtonDiv.on('click', (e) => {\r\n                    e.stopPropagation();\r\n                    // TODO\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    initWorkspacelistPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.workspaceListPanel = new AccordionPanel(this.accordion, \"WORKSPACES\", \"2\",\r\n            \"img_add-workspace-dark\", \"Neuer Workspace...\", \"workspace\", true);\r\n\r\n        this.workspaceListPanel.newElementCallback =\r\n\r\n            (accordionElement, successfulNetworkCommunicationCallback) => {\r\n\r\n                let owner_id: number = that.main.user.id;\r\n                if(that.main.workspacesOwnerId != null){\r\n                    owner_id = that.main.workspacesOwnerId;\r\n                }\r\n\r\n                let w: Workspace = new Workspace(accordionElement.name, that.main, owner_id);\r\n                that.main.workspaceList.push(w);\r\n\r\n                that.main.networkManager.sendCreateWorkspace(w, that.main.workspacesOwnerId, (error: string) => {\r\n                    if (error == null) {\r\n                        that.fileListPanel.enableNewButton(true);\r\n                        successfulNetworkCommunicationCallback(w);\r\n                        that.setWorkspaceActive(w);\r\n                        w.renderSynchronizeButton(accordionElement);\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            };\r\n\r\n        this.workspaceListPanel.renameCallback =\r\n            (workspace: Workspace, newName: string) => {\r\n                newName = newName.substr(0, 80);\r\n                workspace.name = newName;\r\n                workspace.saved = false;\r\n                that.main.networkManager.sendUpdates();\r\n                return newName;\r\n            }\r\n\r\n        this.workspaceListPanel.deleteCallback =\r\n            (workspace: Workspace, successfulNetworkCommunicationCallback: () => void) => {\r\n                that.main.networkManager.sendDeleteWorkspaceOrFile(\"workspace\", workspace.id, (error: string) => {\r\n                    if (error == null) {\r\n                        that.main.removeWorkspace(workspace);\r\n                        that.fileListPanel.enableNewButton(that.main.workspaceList.length > 0);\r\n                        successfulNetworkCommunicationCallback();\r\n                    } else {\r\n                        alert('Der Server ist nicht erreichbar!');\r\n\r\n                    }\r\n                });\r\n            }\r\n\r\n        this.workspaceListPanel.selectCallback =\r\n            (workspace: Workspace) => {\r\n                that.main.networkManager.sendUpdates(() => {\r\n                    that.setWorkspaceActive(workspace);\r\n                });\r\n            }\r\n\r\n        this.$homeAction = jQuery('<div class=\"img_home-dark jo_button jo_active\" style=\"margin-right: 4px\"' +\r\n            ' title=\"Meine eigenen Workspaces anzeigen\">');\r\n        this.$homeAction.on('mousedown', (e) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n                that.onHomeButtonClicked();\r\n            });\r\n\r\n            that.main.bottomDiv.hideHomeworkTab();\r\n\r\n            e.stopPropagation();\r\n        })\r\n\r\n        this.workspaceListPanel.addAction(this.$homeAction);\r\n        this.$homeAction.hide();\r\n\r\n        this.workspaceListPanel.contextMenuProvider = (workspaceAccordionElement: AccordionElement) => {\r\n\r\n            let cmiList: AccordionContextMenuItem[] = [];\r\n\r\n            cmiList.push({\r\n                caption: \"Duplizieren\",\r\n                callback: (element: AccordionElement) => {\r\n                    this.main.networkManager.sendDuplicateWorkspace(element.externalElement,\r\n                        (error: string, workspaceData) => {\r\n                            if (error == null && workspaceData != null) {\r\n                                let newWorkspace: Workspace = Workspace.restoreFromData(workspaceData, this.main);\r\n                                this.main.workspaceList.push(newWorkspace);\r\n                                newWorkspace.panelElement = {\r\n                                    name: newWorkspace.name,\r\n                                    externalElement: newWorkspace,\r\n                                    iconClass: newWorkspace.repository_id == null ? 'workspace' : 'repository'\r\n                                };\r\n\r\n                                this.workspaceListPanel.addElement(newWorkspace.panelElement);\r\n                                this.workspaceListPanel.sortElements();\r\n                            }\r\n                            if (error != null) {\r\n                                alert(error);\r\n                            }\r\n                        })\r\n                }\r\n            });\r\n\r\n            if(this.main.user.is_teacher && this.main.teacherExplorer.classPanel.elements.length > 0){\r\n                cmiList.push({\r\n                    caption: \"An Klasse austeilen...\",\r\n                    callback: (element: AccordionElement) => { },\r\n                    subMenu: this.main.teacherExplorer.classPanel.elements.map((ae) => {\r\n                        return {\r\n                            caption: ae.name,\r\n                            callback: (element: AccordionElement) => {\r\n                                let klasse = <any>ae.externalElement;\r\n\r\n                                let workspace: Workspace = element.externalElement;\r\n\r\n                                this.main.networkManager.sendDistributeWorkspace(workspace, klasse, null, (error: string) => {\r\n                                    if (error == null) {\r\n                                        let networkManager = this.main.networkManager;\r\n                                        let dt = networkManager.updateFrequencyInSeconds * networkManager.forcedUpdateEvery;\r\n                                        alert(\"Der Workspace \" + workspace.name + \" wurde an die Klasse \" + klasse.name + \" ausgeteilt. Er wird in maximal \" + \r\n                                                      dt + \" s bei jedem Schüler ankommen.\");\r\n                                    } else {\r\n                                        alert(error);\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n                    })\r\n                },\r\n                {\r\n                    caption: \"An einzelne Schüler/innen austeilen...\",\r\n                    callback: (element: AccordionElement) => { \r\n                        let classes: ClassData[] = this.main.teacherExplorer.classPanel.elements.map(ae => ae.externalElement);\r\n                        let workspace: Workspace = element.externalElement;\r\n                        new DistributeToStudentsDialog(classes, workspace, this.main);\r\n                    }\r\n                }\r\n                );\r\n            }\r\n\r\n            if (this.main.repositoryOn && this.main.workspacesOwnerId == this.main.user.id) {\r\n                if (workspaceAccordionElement.externalElement.repository_id == null) {\r\n                    cmiList.push({\r\n                        caption: \"Repository anlegen...\",\r\n                        callback: (element: AccordionElement) => { \r\n                            let workspace: Workspace = element.externalElement;\r\n\r\n                            that.main.repositoryCreateManager.show(workspace);\r\n                },\r\n                        subMenu: null,\r\n                        // [{ n: 0, text: \"nur privat sichtbar\" }, { n: 1, text: \"sichtbar für die Klasse\" },\r\n                        // { n: 2, text: \"sichtbar für die Schule\" }].map((k) => {\r\n                        //     return {\r\n                        //         caption: k.text,\r\n                        //         callback: (element: AccordionElement) => {\r\n\r\n\r\n                                    // this.main.networkManager.sendCreateRepository(workspace, k.n, (error: string, repository_id?: number) => {\r\n                                    //     if (error == null) {\r\n                                    //         this.workspaceListPanel.setElementClass(element, \"repository\");\r\n                                    //         workspace.renderSynchronizeButton();\r\n                                    //         this.showRepositoryButtonIfNeeded(workspace);\r\n                                    //     } else {\r\n                                    //         alert(error);\r\n                                    //     }\r\n                                    // });\r\n\r\n                        //         }\r\n                        //     }\r\n                        // })\r\n                    });\r\n                } else {\r\n                    cmiList.push({\r\n                        caption: \"Mit Repository synchronisieren\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.synchronizeWithRepository();\r\n                        }\r\n                    });\r\n                    cmiList.push({\r\n                        caption: \"Vom Repository loslösen\",\r\n                        color: \"#ff8080\",\r\n                        callback: (element: AccordionElement) => {\r\n                            let workspace: Workspace = element.externalElement;\r\n                            workspace.repository_id = null;\r\n                            workspace.saved = false;\r\n                            this.main.networkManager.sendUpdates(() => {\r\n                                that.workspaceListPanel.setElementClass(element, \"workspace\");\r\n                                workspace.renderSynchronizeButton(element);\r\n                            }, true);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            return cmiList;\r\n        }\r\n\r\n    }\r\n\r\n    onHomeButtonClicked() {\r\n        this.main.teacherExplorer.restoreOwnWorkspaces();\r\n        this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.ownUpdateFrequencyInSeconds;\r\n        this.$homeAction.hide();\r\n        this.fileListPanel.enableNewButton(this.main.workspaceList.length > 0);\r\n    }\r\n\r\n    renderFiles(workspace: Workspace) {\r\n\r\n        let name = workspace == null ? \"Kein Workspace vorhanden\" : workspace.name;\r\n\r\n        this.fileListPanel.setCaption(name);\r\n        this.fileListPanel.clear();\r\n\r\n        if (this.main.getCurrentWorkspace() != null) {\r\n            for (let module of this.main.getCurrentWorkspace().moduleStore.getModules(false)) {\r\n                module.file.panelElement = null;\r\n            }\r\n        }\r\n\r\n        if (workspace != null) {\r\n            let moduleList: Module[] = [];\r\n\r\n            for (let m of workspace.moduleStore.getModules(false)) {\r\n                moduleList.push(m);\r\n            }\r\n\r\n            moduleList.sort((a, b) => { return a.file.name > b.file.name ? 1 : a.file.name < b.file.name ? -1 : 0 });\r\n\r\n            for (let m of moduleList) {\r\n\r\n                m.file.panelElement = {\r\n                    name: m.file.name,\r\n                    externalElement: m\r\n                };\r\n\r\n                this.fileListPanel.addElement(m.file.panelElement);\r\n                this.renderHomeworkButton(m.file);\r\n            }\r\n\r\n            this.fileListPanel.sortElements();\r\n\r\n        }\r\n    }\r\n\r\n    renderWorkspaces(workspaceList: Workspace[]) {\r\n\r\n        this.fileListPanel.clear();\r\n        this.workspaceListPanel.clear();\r\n\r\n        for (let w of workspaceList) {\r\n            w.panelElement = {\r\n                name: w.name,\r\n                externalElement: w,\r\n                iconClass: w.repository_id == null ? 'workspace' : 'repository'\r\n            };\r\n\r\n            this.workspaceListPanel.addElement(w.panelElement);\r\n\r\n            w.renderSynchronizeButton(w.panelElement);\r\n        }\r\n\r\n        this.workspaceListPanel.sortElements();\r\n        this.fileListPanel.enableNewButton(workspaceList.length > 0);\r\n\r\n\r\n\r\n    }\r\n\r\n    renderErrorCount(workspace: Workspace, errorCountMap: Map<Module, number>) {\r\n        if (errorCountMap == null) return;\r\n        for (let m of workspace.moduleStore.getModules(false)) {\r\n            let errorCount: number = errorCountMap.get(m);\r\n            let errorCountS: string = ((errorCount == null || errorCount == 0) ? \"\" : \"(\" + errorCount + \")\");\r\n\r\n            this.fileListPanel.setTextAfterFilename(m.file.panelElement, errorCountS, 'jo_errorcount');\r\n        }\r\n    }\r\n\r\n    showRepositoryButtonIfNeeded(w: Workspace){\r\n        if(w.repository_id != null && w.owner_id == this.main.user.id){\r\n            this.$synchronizeAction.show();\r\n\r\n            if (!this.main.user.settings.helperHistory.repositoryButtonDone) {\r\n\r\n                Helper.showHelper(\"repositoryButton\", this.main, this.$synchronizeAction);\r\n\r\n            }\r\n\r\n\r\n\r\n        } else {\r\n            this.$synchronizeAction.hide();\r\n        }\r\n    }\r\n\r\n    setWorkspaceActive(w: Workspace) {\r\n\r\n        this.workspaceListPanel.select(w, false);\r\n\r\n        if (this.main.interpreter.state == InterpreterState.running) {\r\n            this.main.interpreter.stop();\r\n        }\r\n\r\n        this.main.currentWorkspace = w;\r\n        this.renderFiles(w);\r\n\r\n        if (w != null) {\r\n            let nonSystemModules = w.moduleStore.getModules(false);\r\n\r\n            if (w.currentlyOpenModule != null) {\r\n                this.setModuleActive(w.currentlyOpenModule);\r\n            } else if (nonSystemModules.length > 0) {\r\n                this.setModuleActive(nonSystemModules[0]);\r\n            } else {\r\n                this.setModuleActive(null);\r\n            }\r\n\r\n            for (let m of nonSystemModules) {\r\n                m.file.dirty = true;\r\n            }\r\n\r\n            if (nonSystemModules.length == 0 && !this.main.user.settings.helperHistory.newFileHelperDone) {\r\n\r\n                Helper.showHelper(\"newFileHelper\", this.main, this.fileListPanel.$captionElement);\r\n\r\n            }\r\n\r\n            this.showRepositoryButtonIfNeeded(w);\r\n\r\n        } else {\r\n            this.setModuleActive(null);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    writeEditorTextToFile() {\r\n        let cem = this.getCurrentlyEditedModule();\r\n        if (cem != null)\r\n            cem.file.text = cem.getProgramTextFromMonacoModel(); // 29.03. this.main.monaco.getValue();\r\n    }\r\n\r\n\r\n    lastOpenModule: Module = null;\r\n    setModuleActive(m: Module) {\r\n\r\n        this.main.bottomDiv.homeworkManager.hideRevision();\r\n\r\n        if (this.lastOpenModule != null) {\r\n            this.lastOpenModule.getBreakpointPositionsFromEditor();\r\n            this.lastOpenModule.file.text = this.lastOpenModule.getProgramTextFromMonacoModel(); // this.main.monaco.getValue();\r\n            this.lastOpenModule.editorState = this.main.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (m == null) {\r\n            this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        } else {\r\n            this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.main.getMonacoEditor().setModel(m.model);\r\n            if(this.main.getBottomDiv() != null) this.main.getBottomDiv().errorManager.showParenthesisWarning(m.bracketError);\r\n\r\n            if(m.file.text_before_revision != null){\r\n                this.main.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n            } else {\r\n                this.main.bottomDiv.homeworkManager.hideHomeworkRevisionButton();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setActiveAfterExternalModelSet(m: Module) {\r\n        this.fileListPanel.select(m, false);\r\n\r\n        this.lastOpenModule = m;\r\n\r\n        if (m.editorState != null) {\r\n            this.main.editor.dontPushNextCursorMove++;\r\n            this.main.getMonacoEditor().restoreViewState(m.editorState);\r\n            this.main.editor.dontPushNextCursorMove--;\r\n        }\r\n\r\n        m.renderBreakpointDecorators();\r\n\r\n        this.setCurrentlyEditedModule(m);\r\n\r\n        this.showProgramPointer();\r\n\r\n        setTimeout(() => {\r\n            if (!this.main.getMonacoEditor().getOptions().get(monaco.editor.EditorOption.readOnly)) {\r\n                this.main.getMonacoEditor().focus();\r\n            }\r\n        }, 300);\r\n\r\n    }\r\n\r\n\r\n    private showProgramPointer() {\r\n\r\n        if (this.programPointerModule == this.getCurrentlyEditedModule() && this.getCurrentlyEditedModule() != null) {\r\n            let position = this.programPointerPosition;\r\n            let range = {\r\n                startColumn: position.column, startLineNumber: position.line,\r\n                endColumn: position.column + position.length, endLineNumber: position.line\r\n            };\r\n\r\n            this.main.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n            this.programPointerDecoration = this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n                {\r\n                    range: range,\r\n                    options: {\r\n                        className: 'jo_revealProgramPointer', isWholeLine: true,\r\n                        overviewRuler: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.OverviewRulerLane.Center\r\n                        },\r\n                        minimap: {\r\n                            color: \"#6fd61b\",\r\n                            position: monaco.editor.MinimapPosition.Inline\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    range: range,\r\n                    options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n                }\r\n            ]);\r\n\r\n        }\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        // console statement execution:\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        let module = this.main.currentWorkspace.moduleStore.findModuleByFile(file);\r\n        if (module == null) {\r\n            return;\r\n        }\r\n\r\n        this.programPointerModule = module;\r\n        this.programPointerPosition = position;\r\n\r\n        if (module != this.getCurrentlyEditedModule()) {\r\n            this.setModuleActive(module);\r\n        } else {\r\n            this.showProgramPointer();\r\n        }\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.main.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws == null) return null;\r\n\r\n        return ws.currentlyOpenModule;\r\n    }\r\n\r\n    setCurrentlyEditedModule(m: Module) {\r\n        if (m == null) return;\r\n        let ws = this.main.currentWorkspace;\r\n        if (ws.currentlyOpenModule != m) {\r\n            ws.currentlyOpenModule = m;\r\n            ws.saved = false;\r\n            m.file.dirty = true;\r\n        }\r\n    }\r\n\r\n    setExplorerColor(color: string) {\r\n        let caption: string;\r\n\r\n        if (color == null) {\r\n            color = \"transparent\";\r\n            caption = \"Meine WORKSPACES\";\r\n        } else {\r\n            caption = \"Schüler-WORKSPACES\";\r\n        }\r\n\r\n        this.fileListPanel.$listElement.parent().css('background-color', color);\r\n        this.workspaceListPanel.$listElement.parent().css('background-color', color);\r\n\r\n        this.workspaceListPanel.setCaption(caption);\r\n    }\r\n\r\n    getNewModule(file: File): Module {\r\n        return new Module(file, this.main);\r\n    }\r\n\r\n}","import { convertPxToNumber } from \"../../../tools/HtmlTools.js\";\r\n\r\nexport class ZoomControl {\r\n    \r\n    public static preventFading:boolean = false;\r\n\r\n    position: number = 0;\r\n    yMax: number;\r\n    $grip: JQuery<HTMLElement>;\r\n    $zoomcontrolDisplay: JQuery<HTMLElement>;\r\n\r\n    gripHeight: number = 10;\r\n    overallHeight: number = 150;\r\n\r\n    zoomMin: number = 0.2;\r\n    zoomMax: number = 2;\r\n\r\n\r\n    constructor($parentElement: JQuery<HTMLElement>, private callback?: (zoomfactor: number) => void){\r\n        let $zoomcontrolOuter = jQuery('<div class=\"jo_zoomcontrol-outer\" title=\"Zoom\" draggable=\"false\"></div>');\r\n        $parentElement.append($zoomcontrolOuter);\r\n        let $zoomcontrolBar = jQuery('<div class=\"jo_zoomcontrol-bar\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append($zoomcontrolBar);\r\n        this.$grip = jQuery('<div class=\"jo_zoomcontrol-grip\" draggable=\"false\"></div>');\r\n        $zoomcontrolOuter.append(this.$grip);\r\n        this.$zoomcontrolDisplay = jQuery('<div class=\"jo_zoomcontrol-display\"></div>');\r\n        this.$grip.append(this.$zoomcontrolDisplay);\r\n\r\n        let mousedownY: number;\r\n        let oldPosition: number;\r\n        let that = this;\r\n        that.overallHeight = convertPxToNumber($zoomcontrolOuter.css('height'));\r\n        that.gripHeight = convertPxToNumber(that.$grip.css('height'));\r\n        that.yMax = that.overallHeight - that.gripHeight;\r\n        \r\n        $zoomcontrolBar.on('mousedown', (e) => {\r\n\r\n            let y = e.pageY - $zoomcontrolOuter.offset().top - 4;\r\n            that.setZoom(y);\r\n            that.$grip.css('top', y + 'px');\r\n            //@ts-ignore\r\n            that.$grip.trigger('mousedown', [e.clientY]);\r\n\r\n        });\r\n        \r\n        \r\n        this.$grip.on('mousedown', (e, y) => {\r\n            if(y == null) y = e.clientY;\r\n            mousedownY = y;\r\n            oldPosition = that.position;\r\n            this.$zoomcontrolDisplay.show();\r\n\r\n            jQuery(document).on('mousemove.zoomcontrol', (e)=>{\r\n                let deltaY = e.clientY - mousedownY;\r\n                that.setZoom(oldPosition + deltaY);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.zoomcontrol', () => {\r\n                jQuery(document).off('mouseup.zoomcontrol');\r\n                jQuery(document).off('mousemove.zoomcontrol');\r\n                this.$zoomcontrolDisplay.hide();\r\n            });\r\n\r\n            e.stopPropagation();\r\n\r\n        });\r\n\r\n        $parentElement.on(\"mouseenter\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeIn();\r\n        });\r\n        \r\n        $parentElement.on(\"mouseleave\", (e) => {\r\n            if(!ZoomControl.preventFading)\r\n            $zoomcontrolOuter.fadeOut();\r\n        });\r\n\r\n        let factor = (1.0 - this.zoomMin)/(this.zoomMax - this.zoomMin);\r\n        this.position = factor*(this.overallHeight - this.gripHeight);\r\n        this.$grip.css('top', this.position + \"px\");\r\n    }\r\n\r\n    setZoom(newPosition: number){\r\n\r\n        if(newPosition < 0){\r\n            newPosition = 0;\r\n        }\r\n\r\n        if(newPosition > this.yMax){\r\n            newPosition = this.yMax;\r\n        }\r\n\r\n        this.position = newPosition;\r\n\r\n        this.$grip.css('top', newPosition + \"px\");\r\n\r\n        let zoomfactor = newPosition/(this.overallHeight - this.gripHeight);\r\n        zoomfactor = this.zoomMin + zoomfactor*(this.zoomMax - this.zoomMin);\r\n\r\n        let zfs = Math.round(zoomfactor * 100) + \" %\";\r\n        this.$zoomcontrolDisplay.html(zfs);\r\n\r\n        if(this.callback != null){\r\n            this.callback(zoomfactor);\r\n        }\r\n\r\n    }\r\n\r\n}","import { ZoomControl } from \"./ZoomControl.js\";\r\nimport { ClassBox } from \"./classdiagram/ClassBox.js\";\r\nimport { Rectangle, Point } from \"./classdiagram/Router.js\";\r\nimport { DiagramElement } from \"./DiagramElement.js\";\r\nimport { Main } from \"../../Main.js\";\r\nimport { MainBase } from \"../../MainBase.js\";\r\n\r\nexport var DiagramUnitCm = 0.2; // in cm\r\n\r\nexport class Diagram {\r\n\r\n    zoomControl: ZoomControl;\r\n    zoomfactor: number = 1.0;\r\n\r\n    $canvas: JQuery<HTMLElement>;\r\n    svgElement: Element;\r\n\r\n    $menuButton: JQuery<HTMLElement>;\r\n\r\n    defs: Element;\r\n    style: Element;\r\n\r\n    inlineStyles: { [selector: string]: { [key: string]: string } } = {};\r\n    marginCm = 1.6;\r\n    minDistance = 2.0;\r\n    minWidthHeightCm = 10;\r\n    widthCm = this.minWidthHeightCm;\r\n    heightCm = this.minWidthHeightCm;\r\n\r\n    $centerRectangle: JQuery<SVGElement>;\r\n\r\n    constructor($htmlElement: JQuery<HTMLElement>, public main: MainBase){\r\n\r\n        this.$menuButton = jQuery('<div class=\"jo_classDiagram_Menubutton jo_button jo_active img_menu-three-bars\"></div>');\r\n        $htmlElement.append(this.$menuButton);\r\n\r\n        let $scrollpane = jQuery('<div></div>');\r\n        $htmlElement.append($scrollpane);\r\n        $scrollpane.addClass('jo_scrollable');\r\n        $scrollpane.css({overflow: \"auto\", position: \"relative\", width: \"100%\", height: \"100%\"});\r\n\r\n        this.$canvas = jQuery('<div class=\"jo_diagram-canvas\"></div>');\r\n        $scrollpane.append(this.$canvas);\r\n        this.zoomControl = new ZoomControl($htmlElement, (factor: number) => {\r\n            this.$canvas.css({\r\n                transform: \"scale(\" + factor + \")\"\r\n            });\r\n            this.zoomfactor = factor;\r\n        });\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        this.svgElement = document.createElementNS(ns, 'svg');\r\n        // jQuery(this.svgElement).css('pointer-events', 'none');\r\n        jQuery(this.svgElement).addClass(\"jo_diagram-svg svg_all_pointer_events\");\r\n\r\n        // this.insertStyleElement({\".svp_draggable\": {cursor: \"pointer\"}});\r\n\r\n        this.$canvas[0].appendChild(this.svgElement);\r\n\r\n        this.$centerRectangle = <any>jQuery(this.createElement(\"rect\", this.svgElement));\r\n\r\n        this.$centerRectangle.css({fill: \"#ffffff\", \"stroke\": \"none\"});\r\n\r\n        this.adjustCenterRectangle();\r\n\r\n        let $svgElement =  jQuery(this.svgElement);\r\n\r\n        let x: number;\r\n        let y: number;\r\n\r\n        $svgElement.on('mousedown', (ev1) => {\r\n            x = ev1.screenX;\r\n            y = ev1.screenY;\r\n            \r\n            jQuery(document).on('mousemove.diagram', (ev) => {\r\n                let dx = ev.screenX - x;\r\n                let dy = ev.screenY - y;\r\n                x = ev.screenX;\r\n                y = ev.screenY;\r\n                $scrollpane.scrollLeft($scrollpane.scrollLeft() - dx);\r\n                $scrollpane.scrollTop($scrollpane.scrollTop() - dy);\r\n            })\r\n\r\n            jQuery(document).on('mouseup.diagram', () => {\r\n                jQuery(document).off('mousemove.diagram');\r\n                jQuery(document).off('mouseup.diagram');\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n    }    \r\n\r\n    adjustCenterRectangle(){\r\n        this.$centerRectangle.attr({\r\n            x: this.marginCm + \"cm\",\r\n            y: this.marginCm + \"cm\",\r\n            width: (this.widthCm - 2*this.marginCm) + \"cm\",    \r\n            height: (this.heightCm - 2*this.marginCm) + \"cm\"\r\n        });\r\n    }\r\n\r\n    setSize(widthCm: number, heightCm: number){\r\n        if(widthCm < this.minWidthHeightCm) widthCm = this.minWidthHeightCm;\r\n        if(heightCm < this.minWidthHeightCm) heightCm = this.minWidthHeightCm;\r\n\r\n        this.$canvas.css({\r\n            width: widthCm + \"cm\",\r\n            height: heightCm + \"cm\"\r\n        })\r\n\r\n        this.widthCm = widthCm;\r\n        this.heightCm = heightCm;\r\n\r\n        this.adjustCenterRectangle();\r\n    }\r\n\r\n    adjustSizeAndElements(diagramElements: DiagramElement[]): {isAdjusted: boolean}{\r\n\r\n        let xMin = 100000;\r\n        let yMin = 100000;\r\n        let xMax = -100000;\r\n        let yMax = -100000;\r\n\r\n        for(let rr of diagramElements){\r\n            if(xMin > rr.leftCm) xMin = rr.leftCm;\r\n            if(xMax < rr.leftCm + rr.widthCm) xMax = rr.leftCm + rr.widthCm;\r\n            if(yMin > rr.topCm) yMin = rr.topCm;\r\n            if(yMax < rr.topCm + rr.heightCm) yMax = rr.topCm + rr.heightCm;\r\n        }\r\n\r\n        xMin -= this.marginCm;\r\n        xMax += this.marginCm;\r\n        yMin -= this.marginCm;\r\n        yMax += this.marginCm;\r\n\r\n        let isAdjusted: boolean = false;\r\n        let newWidthCm = this.widthCm;\r\n        let newHeightCm = this.heightCm;\r\n\r\n        if(xMin < 0 || xMax > this.widthCm || (xMax - xMin <= this.widthCm && this.widthCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newWidthCm = Math.max(this.minWidthHeightCm, xMax - xMin);\r\n\r\n            if(xMin < 0){\r\n                delta = -xMin;\r\n            }\r\n\r\n            if(xMin > 0 && xMax > newWidthCm){\r\n                delta = newWidthCm - xMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(delta, 0, true, true);\r\n            }\r\n\r\n        }\r\n\r\n        if(yMin < 0 || yMax > this.heightCm || (yMax - yMin <= this.heightCm && this.heightCm > this.minWidthHeightCm)){\r\n            let delta = 0;\r\n            newHeightCm = Math.max(this.minWidthHeightCm, yMax - yMin);\r\n\r\n            if(yMin < 0){\r\n                delta = -yMin;\r\n            }\r\n\r\n            if(yMin > 0 && yMax > newHeightCm){\r\n                delta = newHeightCm - yMax;\r\n            }\r\n            isAdjusted = delta != 0;\r\n\r\n            if(isAdjusted)\r\n            for(let rr of diagramElements){\r\n                rr.move(0, delta, true, true);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        this.setSize(newWidthCm, newHeightCm);\r\n        \r\n\r\n        return {isAdjusted: isAdjusted};\r\n\r\n    }\r\n\r\n    public insertStyleElement(styles: { [selector: string]: { [key: string]: string } } = null) {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n\r\n        if (this.style == null) {\r\n            this.defs = document.createElementNS(ns, 'defs');\r\n            this.style = document.createElementNS(ns, 'style');\r\n            this.defs.appendChild(this.style);\r\n            this.svgElement.appendChild(this.defs);\r\n        }\r\n\r\n        if (styles != null) {\r\n            this.inlineStyles = styles;\r\n            this.refreshInlineStyles();\r\n        }\r\n\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    private refreshInlineStyles() {\r\n\r\n        let s: string = \"\";\r\n\r\n        for (let selector in this.inlineStyles) {\r\n            let stylesForSelector = this.inlineStyles[selector];\r\n            if (stylesForSelector != null) {\r\n                s += selector + \"{\\n\";\r\n                for (let key in stylesForSelector) {\r\n                    s += \"   \" + key + \":\" + stylesForSelector[key] + \";\\n\";\r\n                }\r\n                s += \"}\\n\";\r\n            } else {\r\n                s += selector + \"\\n\";\r\n            }\r\n        }\r\n\r\n        this.style.textContent = s;\r\n\r\n    }\r\n\r\n    findFreeSpace(elements: DiagramElement[], width: number, height: number, minDistance: number): Point {\r\n\r\n        let radius = 0;\r\n        let fertig: boolean = false;\r\n        let xCm = 0;\r\n        let yCm = 0;\r\n        while(!fertig){\r\n\r\n            let y = radius;\r\n            let x = 0;\r\n            for(x = 0; x <= radius; x++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(fertig) break;\r\n            x--;\r\n            for(y = 0; y <= radius - 1; y++){\r\n                xCm = this.marginCm + x * DiagramUnitCm;\r\n                yCm = this.marginCm + y * DiagramUnitCm;\r\n                if(this.isFree(elements, width, height, xCm, yCm, minDistance)){\r\n                    fertig = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            radius += 2;\r\n\r\n        }\r\n\r\n        return {x: xCm, y: yCm};\r\n\r\n    }\r\n\r\n    isFree(elements: DiagramElement[], widthCm: number, heightCm: number, leftCm: number, topCm: number, minDistance: number):boolean {\r\n\r\n        for(let element of elements){\r\n\r\n            let insideX = Math.abs(element.leftCm + element.widthCm/2 - leftCm - widthCm/2) \r\n                       <= (element.widthCm + widthCm)/2 + minDistance;\r\n\r\n            let insideY = Math.abs(element.topCm + element.heightCm/2 - topCm - heightCm/2) <= (element.heightCm + heightCm)/2 + minDistance;\r\n\r\n            if(insideX && insideY) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"./Diagram.js\"; \r\nimport { Rectangle } from \"./classdiagram/Router.js\";\r\n\r\nexport enum Alignment {\r\n    left, center, right\r\n}\r\n\r\nexport type TextLine = {\r\n    type: \"text\",\r\n    text: string,\r\n    tooltip?: string,\r\n    alignment?: Alignment,\r\n    bold?: boolean,\r\n    italics?: boolean,\r\n    textHeightCm?: number,\r\n    textWidthCm?: number,\r\n    yCm?: number\r\n    $element?: JQuery<SVGTextElement>,\r\n    onClick?: () => void\r\n}\r\n\r\nexport type HorizontalLine = {\r\n    type: \"line\",\r\n    $element?: JQuery<SVGLineElement>,\r\n    thicknessCm: number,\r\n    yCm?: number\r\n}\r\n\r\nexport abstract class DiagramElement {\r\n\r\n    public static cmPerPx: number = 2.54/96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    public leftCm: number = 0; // x-Koordinate in cm\r\n    public topCm: number = 0; // y-Koordinate in cm\r\n \r\n    public widthCm: number;\r\n    public heightCm: number; \r\n\r\n    protected lines: (TextLine | HorizontalLine)[] = [];\r\n\r\n    public backgroundColor: string = \"#ffffff\";\r\n\r\n    constructor(protected parent: Element) {\r\n\r\n    }\r\n\r\n    getRoutingRectangle(): Rectangle{\r\n        return {\r\n            left: Math.round(this.leftCm/DiagramUnitCm),\r\n            top: Math.round(this.topCm/DiagramUnitCm),\r\n            width: Math.round(this.widthCm/DiagramUnitCm),\r\n            height: Math.round(this.heightCm/DiagramUnitCm) \r\n        };\r\n    }\r\n\r\n    public show(){\r\n        if(this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide(){\r\n        if(this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if(this.$element == null) return;\r\n        this.$element.detach();        \r\n    }\r\n\r\n    remove() {\r\n        if(this.$element == null) return;\r\n        this.$element.remove();\r\n        this.$element = null;        \r\n    }\r\n\r\n    appendTo($element: JQuery<Element>){\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear(){\r\n        if(this.$element == null) return;\r\n        this.$element.empty();\r\n        this.lines = [];\r\n    }\r\n\r\n    public move(xCm: number, yCm: number, withRaster: boolean, adjustToRaster: boolean = false) {\r\n        this.leftCm += xCm;\r\n        this.topCm += yCm;\r\n\r\n        let x = this.leftCm;\r\n        let y = this.topCm;\r\n\r\n        if(withRaster){\r\n            x = Math.round(x/DiagramUnitCm)*DiagramUnitCm;\r\n            y = Math.round(y/DiagramUnitCm)*DiagramUnitCm;\r\n        }\r\n\r\n        if(adjustToRaster){\r\n            this.leftCm = x;\r\n            this.topCm = y;\r\n        }\r\n\r\n        jQuery(this.$element).css(\"transform\", \"translate(\" + x + \"cm,\" + y + \"cm)\");\r\n    }\r\n\r\n    public moveTo(xCm: number, yCm: number, withRaster: boolean) {\r\n        this.move(xCm - this.leftCm, yCm - this.topCm, withRaster);\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if(attributes != null) $element.attr(attributes);\r\n\r\n        if(parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n            let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n                font: \"16px Roboto\",\r\n                \"font-family\": \"sans-serif\",\r\n                fill: \"#000\",\r\n                \"alignment-baseline\":\"hanging\"\r\n            });\r\n\r\n            if(attributes != null) $element.attr(attributes);\r\n\r\n            $element.text(text);\r\n\r\n            return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>):{height: number, width: number}{\r\n        let bbox:DOMRect = textElement[0].getBBox();\r\n        \r\n        return {\r\n            height: bbox.height * DiagramElement.cmPerPx,\r\n            width: bbox.width * DiagramElement.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n    public addTextLine(line: TextLine | HorizontalLine){\r\n\r\n        this.lines.push(line);\r\n\r\n        if(line.type == \"text\"){\r\n            if(line.alignment == null) line.alignment = Alignment.left;\r\n            if(line.bold == null) line.bold = false;\r\n            if(line.italics == null) line.italics = false;\r\n        }\r\n\r\n    }\r\n\r\n    public render(){\r\n\r\n        let $group = this.$element;\r\n        if($group == null){\r\n            $group = this.createElement(\"g\", this.parent);\r\n            $group.addClass(\"svg_draggable\");\r\n            $group.addClass(\"svg_all_pointer_events\");\r\n            this.$element = $group;\r\n            jQuery(this.$element).css(\"transform\", \"translate(\" + this.leftCm + \"cm,\" + this.topCm + \"cm)\");\r\n        }\r\n\r\n        let $rect = this.createElement(\"rect\", $group[0]);\r\n\r\n        let textPosYCm: number = 0.1;\r\n        let maxWidthCm: number = 0;\r\n\r\n        let first: boolean = true;\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n                if(first) textPosYCm += 0.1;\r\n                first = false;\r\n                line.yCm = textPosYCm;\r\n                line.$element = <JQuery<SVGTextElement>>this.createTextElement(line.text, $group[0], {\r\n                    \"font-weight\" : line.bold?\"bold\":\"normal\",\r\n                    \"font-size\": \"12pt\",\r\n                    \"font-style\": line.italics?\"italic\":\"normal\",\r\n                    \"text-anchor\": line.alignment == Alignment.left ? \"start\" : line.alignment == Alignment.center ? \"middle\" : \"end\",\r\n                    \"cursor\": line.onClick == null ? \"\" : \"pointer\"\r\n                } );\r\n                line.$element.css(\"transform\", \"translate(0cm,\" + textPosYCm + \"cm)\");\r\n                if(line.onClick != null){\r\n                    line.$element.addClass(\"clickable\");\r\n                    line.$element.on(\"mousedown\", (event) => {\r\n                        //@ts-ignore\r\n                        line.onClick();\r\n                        event.stopPropagation();\r\n                    })\r\n                }\r\n                let metrics = this.getTextMetrics(line.$element);\r\n                line.textHeightCm = metrics.height;\r\n                line.textWidthCm = metrics.width;\r\n                maxWidthCm = Math.max(maxWidthCm, line.textWidthCm);\r\n                textPosYCm += line.textHeightCm;\r\n                if(line.tooltip != null){\r\n                    let $tooltip = this.createElement(\"title\", line.$element[0]);\r\n                    $tooltip.text(line.tooltip);\r\n                }\r\n            } else {\r\n                line.yCm = textPosYCm + line.thicknessCm/2;\r\n                textPosYCm += line.thicknessCm + 0.1;\r\n                first = true;\r\n            }\r\n        }\r\n\r\n        let width = 2 * 0.05 + 2*0.2 + maxWidthCm;\r\n        this.widthCm = (Math.trunc(width/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n        this.heightCm = (Math.trunc(textPosYCm/DiagramUnitCm) + 1)*DiagramUnitCm;\r\n\r\n        let textLeft = 0.05 + 0.2;\r\n        let textCenter = width/2;\r\n        let textRight = width - textLeft;\r\n\r\n        $rect.css({\r\n            width: this.widthCm + \"cm\",\r\n            height: this.heightCm + \"cm\",\r\n            fill: this.backgroundColor,\r\n            stroke: \"#000\",\r\n            \"stroke-width\": \"0.05cm\"\r\n        });\r\n\r\n\r\n        for(let line of this.lines){\r\n            if(line.type == \"text\"){\r\n\r\n                let x: number;\r\n                switch(line.alignment){\r\n                    case Alignment.center: x = textCenter; break;\r\n                    case Alignment.left: x = textLeft; break;\r\n                    case Alignment.right: x = textRight; break;\r\n                }\r\n                line.$element.css(\"transform\", \"translate(\" + x + \"cm,\"+line.yCm + \"cm)\");\r\n\r\n            } else {\r\n                line.$element = <JQuery<SVGLineElement>>this.createElement(\"line\", $group[0], {\r\n                    x1: \"0\",\r\n                    y1: line.yCm + \"cm\",\r\n                    x2: this.widthCm + \"cm\",\r\n                    y2: line.yCm + \"cm\"\r\n                });\r\n\r\n                line.$element.css({\r\n                    stroke: \"#000\",\r\n                    \"stroke-width\": line.thicknessCm + \"cm\"        \r\n                });\r\n\r\n            }\r\n        }\r\n\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { DiagramElement, Alignment } from \"../DiagramElement.js\";\r\nimport { Klass, Visibility, Interface } from \"../../../../compiler/types/Class.js\";\r\nimport { getDeclarationAsString, getTypeIdentifier } from \"../../../../compiler/types/DeclarationHelper.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { Point } from \"./Router.js\";\r\nimport { ClassDiagram } from \"./ClassDiagram.js\";\r\nimport { TextLine } from \"../DiagramElement.js\";\r\nimport { hash } from \"../../../../tools/StringTools.js\";\r\nimport { Method, Attribute } from \"../../../../compiler/types/Types.js\";\r\n\r\nexport type SerializedClassBox = {\r\n    className: string,\r\n    filename: string,\r\n    hashedSignature: number,\r\n    withMethods: boolean,\r\n    withAttributes: boolean,\r\n    leftCm: number,\r\n    topCm: number,\r\n    isSystemClass: boolean,\r\n    workspaceId?: number\r\n}\r\n\r\nexport class ClassBox extends DiagramElement {\r\n\r\n    className: string;\r\n    klass: Klass | Interface;\r\n    filename: string;\r\n    hashedSignature: number;\r\n    documentation: string;\r\n    active: boolean = true;\r\n    withMethods: boolean = true;\r\n    withAttributes: boolean = true;\r\n\r\n    inDebounce: any;\r\n\r\n    isSystemClass: boolean;\r\n\r\n    $dropdownTriangle: JQuery<Element>;\r\n\r\n    constructor(public diagram: Diagram, leftCm: number, topCm: number, klass: Klass | Interface) {\r\n        super(diagram.svgElement);\r\n\r\n        this.klass = klass;\r\n\r\n        if (klass != null) {\r\n            this.attachToClass(this.klass);\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.withAttributes = false; //!this.isSystemClass;\r\n            this.withMethods = false; // !this.isSystemClass;\r\n        }\r\n\r\n        this.moveTo(leftCm, topCm, true);\r\n\r\n    }\r\n\r\n    serialize(): SerializedClassBox {\r\n        return {\r\n            className: this.className,\r\n            filename: this.filename,\r\n            hashedSignature: this.hashedSignature,\r\n            withAttributes: this.withAttributes,\r\n            withMethods: this.withMethods,\r\n            isSystemClass: this.isSystemClass,\r\n            leftCm: this.leftCm,\r\n            topCm: this.topCm\r\n        }\r\n    }\r\n\r\n    static deserialize(diagram: Diagram, scb: SerializedClassBox): ClassBox {\r\n\r\n        let cb = new ClassBox(diagram, scb.leftCm, scb.topCm, null);\r\n        cb.hashedSignature = scb.hashedSignature;\r\n        cb.className = scb.className;\r\n        cb.filename = scb.filename;\r\n        cb.withAttributes = scb.withAttributes;\r\n        cb.withMethods = scb.withMethods;\r\n        cb.isSystemClass = scb.isSystemClass;\r\n\r\n        return cb;\r\n\r\n    }\r\n\r\n    attachToClass(klass: Klass | Interface) {\r\n\r\n        this.klass = klass;\r\n        let klassSignature: number = this.getSignature(klass);\r\n\r\n        if (this.className != klass.identifier || this.hashedSignature != klassSignature || this.widthCm < 0.7 || this.documentation != klass.documentation) {\r\n            this.isSystemClass = klass.module.isSystemModule;\r\n            this.renderLines();\r\n        } else {\r\n            this.addMouseEvents();\r\n        }\r\n\r\n        this.className = klass.identifier;\r\n        this.filename = klass.module.file.name;\r\n        this.hashedSignature = klassSignature;\r\n        this.documentation = klass.documentation;\r\n    }\r\n\r\n    jumpToDeclaration(element: Klass | Interface | Method | Attribute) {\r\n        this.diagram.main.jumpToDeclaration(this.klass.module, element.declaration);\r\n    }\r\n\r\n\r\n    renderLines() {\r\n\r\n        this.clear();\r\n\r\n        let parametersWithTypes = (<ClassDiagram>this.diagram).currentClassBoxes.parametersWithTypes;\r\n\r\n        this.addTextLine({\r\n            type: \"text\",\r\n            text: (this.klass instanceof Interface ? \"<<interface>> \" : \"\") + this.klass.identifier,\r\n            tooltip: getDeclarationAsString(this.klass, \"\", true),\r\n            alignment: Alignment.center,\r\n            bold: true,\r\n            italics: this.klass instanceof Interface,\r\n            onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(this.klass) }\r\n        });\r\n\r\n        if (this.klass instanceof Klass && this.withAttributes) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            for (let a of this.klass.attributes) {\r\n\r\n                let text: string = this.getVisibilityText(a.visibility) + getTypeIdentifier(a.type) + \" \" +  a.identifier;\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(a),\r\n                    alignment: Alignment.left,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(a) }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.withMethods) {\r\n            this.addTextLine({\r\n                type: \"line\",\r\n                thicknessCm: 0.05\r\n            });\r\n            this.klass.methods.filter(m => m.signature != \"toJson()\").forEach(m => {\r\n                let text: string = this.getVisibilityText(m.visibility) + m.identifier + \"()\";\r\n\r\n                if (parametersWithTypes) {\r\n                    let returnType: string = m.isConstructor ? \"\" :\r\n                        (m.returnType == null ? \"void \" : getTypeIdentifier(m.returnType) + \" \");\r\n                    text = this.getVisibilityText(m.visibility) + returnType + m.identifier + \"(\" +\r\n                        m.parameterlist.parameters.map((p) => { return getTypeIdentifier(p.type) + \" \" + p.identifier }).join(\", \") + \")\";\r\n                }\r\n\r\n                this.addTextLine({\r\n                    type: \"text\",\r\n                    text: text,\r\n                    tooltip: getDeclarationAsString(m),\r\n                    alignment: Alignment.left,\r\n                    italics: this.klass instanceof Interface,\r\n                    onClick: this.isSystemClass ? undefined : () => { this.jumpToDeclaration(m) }\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n        this.backgroundColor = this.isSystemClass ? \"#aaaaaa\" : \"#ffffff\";\r\n        this.render();\r\n\r\n        this.$dropdownTriangle = this.createElement(\"path\", this.$element[0], {\r\n            d: this.getTrianglePath(),\r\n            class: \"dropdown-triangle\",\r\n            style: \"transform: \" + \"translate(\" + (this.widthCm - 0.35) + \"cm,0.05cm)\", // + (<TextLine>this.lines[0]).textHeightCm + \"cm)\"\r\n        })\r\n\r\n        this.addMouseEvents();\r\n    }\r\n\r\n    getTrianglePath() {\r\n        if (this.withMethods) {\r\n            return \"M 0 8 L 11 8 L 5.5 2 L 0 8\";\r\n        } else {\r\n            return \"M 0 2 L 11 2 L 5.5 8 L 0 2\";\r\n        }\r\n        // if (this.withMethods) {\r\n        //     return \"M 3 6 L 11 6 L 7 2 L 3 6\";\r\n        // } else {\r\n        //     return \"M 3 2 L 11 2 L 7 6 L 3 2\";\r\n        // }\r\n    }\r\n\r\n    detach() {\r\n        this.$element?.off('mousedown.diagramElement');\r\n        jQuery(document).off('mouseup.diagramElement');\r\n        jQuery(document).off('mousemove.diagramElement');\r\n        super.detach();\r\n    }\r\n\r\n    addMouseEvents() {\r\n        let that = this;\r\n\r\n        if (this.$dropdownTriangle != null) {\r\n            this.$dropdownTriangle.off(\"mouseup.dropdowntriangle\");\r\n            this.$dropdownTriangle.off(\"mousedown.dropdowntriangle\");\r\n        }\r\n\r\n        this.$dropdownTriangle.on(\"mousedown.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n        });\r\n        this.$dropdownTriangle.on(\"mouseup.dropdowntriangle\", (e) => {\r\n            e.stopPropagation();\r\n            this.withMethods = !this.withMethods;\r\n            this.withAttributes = !this.withAttributes;\r\n            this.$dropdownTriangle.attr(\"d\", this.getTrianglePath());\r\n            this.renderLines();\r\n            (<ClassDiagram><any>this.diagram).adjustClassDiagramSize();\r\n            (<ClassDiagram><any>this.diagram).updateArrows();\r\n        });\r\n\r\n        this.$element.on('mousedown.diagramElement', (event: JQuery.MouseDownEvent) => {\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            if (event.button != 0) return;\r\n\r\n            let x = event.screenX;\r\n            let y = event.screenY;\r\n\r\n            that.$element.find('rect').addClass('dragging');\r\n\r\n            jQuery(document).off('mouseup.diagramElement');\r\n            jQuery(document).off('mousemove.diagramElement');\r\n\r\n            jQuery(document).on('mousemove.diagramElement', (event: JQuery.MouseMoveEvent) => {\r\n                let cmPerPixel = 1 / 96 * 2.36 / this.diagram.zoomfactor;\r\n                let dx = (event.screenX - x) * cmPerPixel;\r\n                let dy = (event.screenY - y) * cmPerPixel;\r\n\r\n                x = event.screenX;\r\n                y = event.screenY;\r\n\r\n                that.move(dx, dy, true);\r\n\r\n\r\n                clearTimeout(that.inDebounce);\r\n                that.inDebounce = setTimeout(() => {\r\n                    let classDiagram = <ClassDiagram><any>that.diagram;\r\n                    classDiagram.updateArrows();\r\n                }, 200);\r\n            });\r\n\r\n            jQuery(document).on('mouseup.diagramElement', () => {\r\n                that.move(0, 0, true, true);\r\n                let classDiagram = <ClassDiagram><any>that.diagram;\r\n                classDiagram.adjustClassDiagramSize();\r\n                classDiagram.updateArrows();\r\n                that.$element.find('rect').removeClass('dragging');\r\n                jQuery(document).off('mouseup.diagramElement');\r\n                jQuery(document).off('mousemove.diagramElement');\r\n                classDiagram.dirty = true;\r\n            });\r\n\r\n\r\n        })\r\n    }\r\n\r\n    getVisibilityText(visibility: Visibility) {\r\n        switch (visibility) {\r\n            case Visibility.private: return \"-\";\r\n            case Visibility.protected: return \"#\";\r\n            case Visibility.public: return \"+\";\r\n        }\r\n    }\r\n\r\n    getSignature(klass: Klass | Interface): number {\r\n\r\n        let s: string = \"\";\r\n\r\n        if (klass instanceof Klass && this.withAttributes && klass.attributes.length > 0) {\r\n            for (let a of klass.attributes) s += this.getVisibilityText(a.visibility) + a.type.identifier + \" \" + a.identifier;\r\n        }\r\n\r\n        if (this.withMethods && klass.methods.length > 0) {\r\n            for (let m of klass.methods) {\r\n                if (m.isConstructor) continue;\r\n                let rt: string = m.returnType == null ? \"void\" : m.returnType.identifier;\r\n                s += this.getVisibilityText(m.visibility) + rt + \" \" + m.identifier + \"(\" +\r\n                    m.parameterlist.parameters.map((p) => { return p.type.identifier + \" \" + p.identifier }).join(\", \") + \")\";\r\n            }\r\n        }\r\n\r\n        return hash(s);\r\n\r\n    }\r\n\r\n    hasSignatureAndFileOf(klass: Klass | Interface) {\r\n        return klass.module.file.name == this.filename &&\r\n            this.getSignature(klass) == this.hashedSignature;\r\n    }\r\n\r\n\r\n\r\n}","import { Point } from \"./Router.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { DiagramUnitCm } from \"../Diagram.js\";\r\n\r\ntype Step = {r: number, f: number};\r\ntype Arrow = {\r\n    steps: Step[],\r\n    stroke: string,\r\n    fill: string,\r\n    \"stroke-dasharray\": string\r\n}\r\n\r\nexport class ArrowHead {\r\n\r\n    static rauteAlpha = 60;\r\n    static arrows: {[type: string]: Arrow} = {\r\n        \"inheritance\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined //\"4\"\r\n        },\r\n        \"realization\": {\r\n            steps: [{r: 150, f: 0.4}, {r: 120, f: 0.4}, {r: 120, f: 0.4}],\r\n            stroke: \"#000000\",\r\n            fill: \"#8080ff\",\r\n            \"stroke-dasharray\": \"4\"\r\n        },\r\n        \"composition\": {\r\n            steps: [{r: 90 + ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3},\r\n                 {r: 2*ArrowHead.rauteAlpha, f: 0.3}, {r: 180 - 2*ArrowHead.rauteAlpha, f: 0.3}],\r\n            stroke: \"#000000\",\r\n            fill: \"#ffffff\",\r\n            \"stroke-dasharray\": undefined\r\n        },\r\n    }\r\n\r\n    static makeHead(position1Cm: Point, position2Cm: Point, type: string): {\r\n        path: string,\r\n        stroke: string,\r\n        fill: string,\r\n    } {\r\n\r\n        let dx = position2Cm.x - position1Cm.x;\r\n        let dy = position2Cm.y - position1Cm.y;\r\n\r\n        let d = Math.sqrt(dx*dx+dy*dy);\r\n        \r\n        if(d < 0.00001) return {path: \"\", stroke: \"none\", fill: \"none\"};\r\n\r\n        let ex = dx/d;\r\n        let ey = dy/d;\r\n\r\n        let path: string = \"M \" + position2Cm.x * DiagramUnitCm / DiagramArrow.cmPerPx \r\n            + \" \" + position2Cm.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n\r\n        let arrow = this.arrows[type];\r\n\r\n        for(let step of arrow.steps){\r\n            let angle = step.r / 180 * Math.PI;\r\n            let ex1 = ex * Math.cos(angle) - ey * Math.sin(angle);\r\n            let ey1 = ex * Math.sin(angle) + ey * Math.cos(angle);\r\n            path += \" l \" + ex1 * step.f / DiagramArrow.cmPerPx + \" \" + ey1 * step.f / DiagramArrow.cmPerPx;\r\n            ex = ex1;\r\n            ey = ey1;\r\n        }\r\n\r\n        return {\r\n            path: path,\r\n            fill: arrow.fill,\r\n            stroke: arrow.stroke\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { DiagramUnitCm, Diagram } from \"../Diagram.js\";\r\nimport { RoutingArrow, Point } from \"./Router.js\";\r\nimport { ArrowHead } from \"./ArrowHead.js\";\r\n\r\nexport class DiagramArrow {\r\n\r\n    public static cmPerPx: number = 2.54 / 96;\r\n\r\n    public $element: JQuery<Element>;\r\n\r\n    constructor(protected parent: Element, private routingArrow: RoutingArrow, private color: string) {\r\n\r\n    }\r\n\r\n    public show() {\r\n        if (this.$element == null) return;\r\n        this.$element.show();\r\n    }\r\n\r\n    public hide() {\r\n        if (this.$element == null) return;\r\n        this.$element.hide();\r\n    }\r\n\r\n    detach() {\r\n        if (this.$element == null) return;\r\n        this.$element.detach();\r\n    }\r\n\r\n    remove() {\r\n        if (this.$element == null) return;\r\n        this.$element.remove();\r\n    }\r\n\r\n    appendTo($element: JQuery<Element>) {\r\n        $element.append(this.$element);\r\n    }\r\n\r\n    public clear() {\r\n        if (this.$element == null) return;\r\n        this.$element.empty();\r\n    }\r\n\r\n    public createElement(name: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let ns = 'http://www.w3.org/2000/svg';\r\n        let $element = jQuery(document.createElementNS(ns, name));\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        if (parent != null) parent.appendChild($element[0]);\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n\r\n    public createTextElement(text: string, parent: Element = null, attributes?:\r\n        { [key: string]: string }): JQuery<Element> {\r\n\r\n        let $element: JQuery<Element> = this.createElement(\"text\", parent, {\r\n            font: \"16px Roboto\",\r\n            \"font-family\": \"sans-serif\",\r\n            fill: \"#000\",\r\n            \"alignment-baseline\": \"hanging\"\r\n        });\r\n\r\n        if (attributes != null) $element.attr(attributes);\r\n\r\n        $element.text(text);\r\n\r\n        return $element;\r\n    }\r\n\r\n    public getTextMetrics(textElement: JQuery<SVGTextElement>): { height: number, width: number } {\r\n        let bbox: DOMRect = textElement[0].getBBox();\r\n\r\n        return {\r\n            height: bbox.height * DiagramArrow.cmPerPx,\r\n            width: bbox.width * DiagramArrow.cmPerPx\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public render() {\r\n\r\n        let $group = this.$element;\r\n        if ($group == null) {\r\n            $group = this.createElement(\"g\", this.parent);\r\n            this.$element = $group;\r\n            $group.css(\"stroke\", this.color);\r\n        } else {\r\n            $group.empty();\r\n        }\r\n\r\n        let points = this.routingArrow.minimalPoints;\r\n        if (points == null || points.length < 2) {\r\n            return;\r\n        }\r\n\r\n        let path = \"M \" + this.getPathCoordinates(points[0]);\r\n\r\n        for (let i = 1; i < points.length; i++) {\r\n            path += \" L \" + this.getPathCoordinates(points[i]);\r\n        }\r\n\r\n        let arrowData = ArrowHead.arrows[this.routingArrow.arrowType];\r\n        let $path = this.createElement(\"path\", $group[0], { d: path });\r\n        $path.css({\r\n            // stroke: \"#000000\",\r\n            \"stroke-width\": \"0.2 cm\",\r\n            \"fill\": \"none\",\r\n            \"stroke-dasharray\": arrowData[\"stroke-dasharray\"]\r\n        });\r\n\r\n        while (points.length > 1 && points[points.length - 1].x == points[points.length - 2].x &&\r\n            points[points.length - 1].y == points[points.length - 2].y) {\r\n            points.pop();\r\n        }\r\n\r\n        if (points.length > 1 && this.routingArrow.endsOnArrowWithIdentifier == null) {\r\n            let head = ArrowHead.makeHead(points[points.length - 2], points[points.length - 1],\r\n                this.routingArrow.arrowType);\r\n\r\n            let $head = this.createElement(\"path\", $group[0], { d: head.path });\r\n            $head.css({\r\n                stroke: this.color,\r\n                \"stroke-width\": \"0.2 cm\",\r\n                \"fill\": head.fill\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    getPathCoordinates(point: Point): string {\r\n        let x = point.x * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        let y = point.y * DiagramUnitCm / DiagramArrow.cmPerPx;\r\n        return \"\" + x + \" \" + y;\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Interface, Klass } from \"../../../../compiler/types/Class.js\";\r\nimport { Workspace } from \"../../../../workspace/Workspace.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram, DiagramUnitCm } from \"../Diagram.js\";\r\nimport { ClassBox, SerializedClassBox } from \"./ClassBox.js\";\r\nimport { DiagramArrow } from \"./DiagramArrow.js\";\r\nimport { RoutingInput, RoutingOutput } from \"./Router.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\nimport { openContextMenu } from \"../../../../tools/HtmlTools.js\";\r\nimport { TeachersWithClassesMI } from \"../../../../administration/TeachersWithClasses.js\";\r\n\r\ntype ClassBoxes = {\r\n    active: ClassBox[],\r\n    inactive: ClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n};\r\n\r\nexport type SerializedClassDiagram = {\r\n    classBoxes: SerializedClassBox[],\r\n    displaySystemClasses: boolean,\r\n    parametersWithTypes: boolean\r\n}\r\n\r\nexport class ClassDiagram extends Diagram {\r\n\r\n    classBoxesRepository: { [workspaceId: number]: ClassBoxes } = {};\r\n\r\n    arrows: DiagramArrow[] = [];\r\n\r\n    currentWorkspaceId: number = null;\r\n    currentWorkspace: Workspace;\r\n    currentClassBoxes: ClassBoxes;\r\n\r\n    version: number = 0;\r\n\r\n    straightArrowSectionAfterRectangle = 2;\r\n    distanceFromRectangles = 2;\r\n    slotDistance = 2;\r\n\r\n    dirty: boolean = false;\r\n    routingWorker: Worker;\r\n\r\n    constructor(private $htmlElement: JQuery<HTMLElement>, main: MainBase) {\r\n        super($htmlElement, main);\r\n\r\n        let that = this;\r\n        this.$menuButton.on('click', (ev) => {\r\n            ev.preventDefault();\r\n            let displaysSystemClasses = that.currentClassBoxes.displaySystemClasses == true;\r\n            let parametersWithTypes = that.currentClassBoxes.parametersWithTypes == true;\r\n            openContextMenu([\r\n                {\r\n                    caption: displaysSystemClasses ? \"Systemklassen ausblenden\" : \"Systemklassen einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.displaySystemClasses = !displaysSystemClasses;\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n                {\r\n                    caption: parametersWithTypes ? \"Parameter ausblenden\" : \"Parameter einblenden\",\r\n                    callback: () => {\r\n                        that.currentClassBoxes.parametersWithTypes = !parametersWithTypes;\r\n                        that.currentClassBoxes.active.forEach((cb) => {cb.hashedSignature = -1});\r\n                        that.drawDiagram(that.currentWorkspace, false);\r\n                    }\r\n                },\r\n            ], ev.pageX + 2, ev.pageY + 2);\r\n            ev.stopPropagation();\r\n        });\r\n    }\r\n\r\n    clearAfterLogout() {\r\n        this.classBoxesRepository = {};\r\n        this.arrows.forEach((arrow) => { arrow.remove(); });\r\n        $(this.svgElement).empty();\r\n    }\r\n\r\n    serialize(): SerializedClassDiagram {\r\n\r\n        let scd: SerializedClassDiagram = {\r\n            classBoxes: [],\r\n            displaySystemClasses: this.currentClassBoxes.displaySystemClasses,\r\n            parametersWithTypes: this.currentClassBoxes.parametersWithTypes\r\n        }\r\n\r\n        for (let workspaceId in this.classBoxesRepository) {\r\n            let classBox = this.classBoxesRepository[workspaceId];\r\n            for (let cb of classBox.active) {\r\n                let cbs = cb.serialize();\r\n                cbs.workspaceId = Number.parseInt(workspaceId);\r\n                scd.classBoxes.push(cbs);\r\n            }\r\n        }\r\n\r\n        return scd;\r\n\r\n    }\r\n\r\n    deserialize(serializedClassDiagram: SerializedClassDiagram) {\r\n        for (let cb of serializedClassDiagram.classBoxes) {\r\n            let classBoxes: ClassBoxes = this.classBoxesRepository[cb.workspaceId];\r\n            if (classBoxes == null) {\r\n                classBoxes = {\r\n                    active: [],\r\n                    inactive: [],\r\n                    displaySystemClasses: false,\r\n                    parametersWithTypes: false\r\n                }\r\n                this.classBoxesRepository[cb.workspaceId] = classBoxes;\r\n            }\r\n            classBoxes.inactive.push(ClassBox.deserialize(this, cb));\r\n            classBoxes.displaySystemClasses = serializedClassDiagram.displaySystemClasses;\r\n            classBoxes.parametersWithTypes = serializedClassDiagram.parametersWithTypes;\r\n        }\r\n    }\r\n\r\n\r\n    adjustClassDiagramSize() {\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n        this.adjustSizeAndElements(classBoxes.active);\r\n    }\r\n\r\n    getClassBoxes(workspace: Workspace): ClassBoxes {\r\n        let cb: ClassBoxes = this.classBoxesRepository[workspace.id];\r\n        if (cb == null) {\r\n            cb = {\r\n                active: [],\r\n                inactive: [],\r\n                displaySystemClasses: false,\r\n                parametersWithTypes: false\r\n            }\r\n            this.classBoxesRepository[workspace.id] = cb;\r\n        }\r\n        return cb;\r\n    }\r\n\r\n    switchToWorkspace(workspace: Workspace): ClassBoxes {\r\n        let cbs1 = this.getClassBoxes(workspace);\r\n\r\n        if (this.currentWorkspaceId != workspace.id) {\r\n            if (this.currentWorkspaceId != null) {\r\n                let cbs = this.classBoxesRepository[this.currentWorkspaceId];\r\n                if (cbs != null) {\r\n                    for (let cb of cbs.active) {\r\n                        cb.detach();\r\n                    }\r\n                    for (let cb of cbs.inactive) {\r\n                        cb.detach();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let cb of cbs1.active) {\r\n                this.svgElement.appendChild(cb.$element[0]);\r\n            }\r\n            for (let cb of cbs1.inactive) {\r\n                if (cb.$element != null) {\r\n                    this.svgElement.appendChild(cb.$element[0]);\r\n                }\r\n            }\r\n\r\n            this.adjustSizeAndElements(cbs1.active);\r\n        }\r\n\r\n        this.currentWorkspaceId = workspace.id;\r\n\r\n        return cbs1;\r\n\r\n    }\r\n\r\n    drawDiagram(workspace: Workspace, onlyUpdateIdentifiers: boolean) {\r\n\r\n        if (workspace == null) return;\r\n        this.currentWorkspace = workspace;\r\n        this.currentClassBoxes = this.switchToWorkspace(workspace);\r\n\r\n        let moduleStore = workspace.moduleStore;\r\n\r\n        let newClassBoxes: ClassBox[] = [];\r\n\r\n        let anyTypelistThere: boolean = false;\r\n        let newClassesToDraw: (Klass | Interface)[] = [];\r\n        let usedSystemClasses: (Klass | Interface)[] = [];\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let typeList = module?.typeStore?.typeList;\r\n            if (typeList == null) continue;\r\n            anyTypelistThere = true;\r\n\r\n\r\n            typeList.filter((type) => {\r\n                return type instanceof Klass ||\r\n                    type instanceof Interface\r\n            }).forEach((klass: Klass | Interface) => {\r\n                let cb: ClassBox = this.findAndEnableClass(klass, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n                if (klass instanceof Klass) {\r\n                    klass.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            });\r\n        }\r\n\r\n        // recursively register system classes that are used by other system classes\r\n        let uscList1: (Klass | Interface)[] = [];\r\n        while (uscList1.length < usedSystemClasses.length) {\r\n            uscList1 = usedSystemClasses.slice(0);\r\n            for (let usc of uscList1) {\r\n                if (usc instanceof Klass) {\r\n                    usc.registerUsedSystemClasses(usedSystemClasses);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentClassBoxes.displaySystemClasses) {\r\n            for (let usc of usedSystemClasses) {\r\n                let cb: ClassBox = this.findAndEnableClass(usc, this.currentClassBoxes, newClassesToDraw);\r\n                if (cb != null) newClassBoxes.push(cb);\r\n            }\r\n        }\r\n\r\n        this.dirty = this.dirty || newClassesToDraw.length > 0;\r\n\r\n        for (let klass of newClassesToDraw) {\r\n            let cb = new ClassBox(this, Math.random() * 10 * DiagramUnitCm, Math.random() * 10 * DiagramUnitCm, klass);\r\n\r\n            cb.renderLines();\r\n\r\n            let freePos = this.findFreeSpace(newClassBoxes, cb.widthCm, cb.heightCm, this.minDistance);\r\n\r\n            cb.moveTo(freePos.x, freePos.y, true);\r\n\r\n            newClassBoxes.push(cb);\r\n\r\n        }\r\n\r\n        if (newClassesToDraw.length > 0) {\r\n            this.adjustSizeAndElements(newClassBoxes);\r\n        }\r\n\r\n        if (!anyTypelistThere) return;\r\n\r\n        for (let cb of this.currentClassBoxes.active) {\r\n            cb.hide();\r\n            cb.active = false;\r\n            this.currentClassBoxes.inactive.push(cb);\r\n        }\r\n\r\n        this.currentClassBoxes.active = newClassBoxes;\r\n\r\n        if (!onlyUpdateIdentifiers) {\r\n            this.adjustClassDiagramSize();\r\n            this.updateArrows();\r\n        }\r\n\r\n    }\r\n\r\n    updateArrows() {\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n        // return;\r\n\r\n        let colors: string[] = [\"#0075dc\", \"#993f00\", \"#005c31\", \"#ff5005\", \"#2bce48\",\r\n            \"#0000ff\", \"#ffa405\", '#ffa8bb', '#740aff', '#990000', '#ff0000'];\r\n        let colorIndex = 0;\r\n\r\n        let routingInput = this.drawArrows();\r\n\r\n        this.version++;\r\n        routingInput.version = this.version;\r\n\r\n        if (this.routingWorker != null) {\r\n            this.routingWorker.terminate();\r\n        }\r\n\r\n        this.routingWorker = new Worker('js/main/gui/diagrams/classdiagram/Router.js');\r\n        let that = this;\r\n        this.routingWorker.onmessage = function (e) {\r\n            // when worker finished:\r\n            let ro: RoutingOutput = e.data;\r\n            if (ro.version == that.version) {\r\n                that.$htmlElement.find('.jo_classdiagram-spinner').hide();\r\n\r\n                that.arrows.forEach((arrow) => { arrow.remove(); });\r\n\r\n                let arrowIdentifierToColorMap: { [identifier: string]: string } = {};\r\n\r\n                let arrowsWithoutColor: number = ro.arrows.length + 1;\r\n                let arrowsWithoutColorLast: number;\r\n                do {\r\n                    arrowsWithoutColorLast = arrowsWithoutColor;\r\n                    arrowsWithoutColor = 0;\r\n                    ro.arrows.forEach((arrow) => {\r\n                        if (arrow.color == null) {\r\n                            arrowsWithoutColor++;\r\n                            if (arrow.endsOnArrowWithIdentifier == null) {\r\n                                arrow.color = colors[colorIndex];\r\n                                arrowIdentifierToColorMap[arrow.identifier] = arrow.color;\r\n                                colorIndex++;\r\n                                if (colorIndex > colors.length - 1) colorIndex = 0;\r\n                            } else {\r\n                                arrow.color = arrowIdentifierToColorMap[arrow.endsOnArrowWithIdentifier];\r\n                            }\r\n                        }\r\n                    });\r\n                } while (arrowsWithoutColor < arrowsWithoutColorLast);\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    if (arrow.color == null) {\r\n                        arrow.color = \"#ff0000\";\r\n                    }\r\n                });\r\n\r\n                ro.arrows.forEach((arrow) => {\r\n                    let da: DiagramArrow = new DiagramArrow(that.svgElement, arrow, arrow.color);\r\n                    da.render();\r\n                    that.arrows.push(da);\r\n                });\r\n\r\n\r\n            }\r\n        }\r\n\r\n        this.routingWorker.postMessage(routingInput); // start worker!\r\n        this.$htmlElement.find('.jo_classdiagram-spinner').show();\r\n\r\n    }\r\n\r\n    drawArrows(): RoutingInput {\r\n\r\n        let routingInput: RoutingInput = {\r\n            rectangles: [],\r\n            arrows: [],\r\n            xMax: Math.ceil(this.widthCm / DiagramUnitCm),\r\n            yMax: Math.ceil(this.heightCm / DiagramUnitCm),\r\n            straightArrowSectionAfterRectangle: this.straightArrowSectionAfterRectangle,\r\n            distanceFromRectangles: this.distanceFromRectangles,\r\n            slotDistance: this.slotDistance\r\n        }\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n            routingInput.rectangles.push(cb.getRoutingRectangle());\r\n        });\r\n\r\n        classBoxes.active.forEach((cb) => {\r\n\r\n            if (cb.klass instanceof Klass) {\r\n                if (cb.klass.baseClass != null) {\r\n                    let cb1 = this.findClassbox(cb.klass.baseClass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"inheritance\", routingInput);\r\n                    }\r\n                }\r\n                for (let intf of cb.klass.implements) {\r\n                    let cb1 = this.findClassbox(intf, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb, cb1, \"realization\", routingInput);\r\n                    }\r\n                }\r\n                for (let cd of cb.klass.getCompositeData()) {\r\n                    let cb1 = this.findClassbox(cd.klass, classBoxes.active);\r\n                    if (cb1 != null) {\r\n                        this.drawArrwow(cb1, cb, \"composition\", routingInput);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return routingInput;\r\n\r\n    }\r\n\r\n    drawArrwow(cb1: ClassBox, cb2: ClassBox, arrowType: string, routingInput: RoutingInput) {\r\n\r\n        let rect1 = cb1.getRoutingRectangle();\r\n        let rect2 = cb2.getRoutingRectangle();\r\n\r\n        let classBoxes = this.classBoxesRepository[this.currentWorkspaceId];\r\n\r\n        routingInput.arrows.push({\r\n            arrowType: arrowType,\r\n\r\n            destRectangleIndex: classBoxes.active.indexOf(cb2),\r\n\r\n            sourceRectangleIndex: classBoxes.active.indexOf(cb1),\r\n\r\n            destinationIdentifier: cb2.className,\r\n            identifier: cb1.className + \"(extends)\" + cb2.className\r\n        });\r\n\r\n    }\r\n\r\n    findClassbox(klass: Klass | Interface, classBoxes: ClassBox[]): ClassBox {\r\n\r\n        for (let cb of classBoxes) {\r\n            if (cb.klass == klass) return cb;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    findAndEnableClass(klass: Klass | Interface, classBoxes: ClassBoxes, newClassesToDraw: (Klass | Interface)[]): ClassBox {\r\n        let i = 0;\r\n        while (i < classBoxes.active.length) {\r\n            let k = classBoxes.active[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                k.attachToClass(klass);\r\n                classBoxes.active.splice(i, 1);\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < classBoxes.inactive.length) {\r\n            let k = classBoxes.inactive[i];\r\n            if (k.className == klass.identifier || k.hasSignatureAndFileOf(klass)) {\r\n                classBoxes.inactive.splice(i, 1);\r\n                k.klass = klass;\r\n                k.renderLines();\r\n                k.show();\r\n                k.active = true;\r\n                this.dirty = true;\r\n                return k;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        newClassesToDraw.push(klass);\r\n\r\n        return null;\r\n    }\r\n\r\n    clear() {\r\n\r\n        let cb = this.classBoxesRepository[this.currentWorkspaceId];\r\n        if (cb != null) {\r\n            for (let c of cb.active) {\r\n                c.detach();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Klass, Interface, Visibility } from \"../../../../compiler/types/Class.js\";\r\nimport { Variable, Value } from \"../../../../compiler/types/Types.js\";\r\nimport { ObjectClass } from \"../../../../compiler/types/ObjectClass.js\";\r\nimport { RuntimeObject } from \"../../../../interpreter/RuntimeObject.js\";\r\n\r\ntype Reference = {\r\n    sourceValue: RuntimeObject,\r\n    destValue: RuntimeObject,\r\n    attributeIdentifier: string\r\n}\r\n\r\nexport class ListDiagram extends ObjectDiagramVariant {\r\n\r\n    rootIdentifier: string;\r\n\r\n    $selectElement: JQuery<HTMLSelectElement>;\r\n\r\n    getSettingsElement(): JQuery<HTMLElement> {\r\n\r\n        let moduleStore = this.main.getCurrentWorkspace().moduleStore;\r\n\r\n        let $element = jQuery('<span>Start der Liste:&nbsp;</span>');\r\n        this.$selectElement = jQuery('<select></select>');\r\n        $element.append(this.$selectElement);\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n            let childSymbolTables = module.mainSymbolTable?.childSymbolTables;\r\n            if (childSymbolTables == null || childSymbolTables.length == 0) continue;\r\n            let variableMap = childSymbolTables[0].variableMap;\r\n            if (variableMap == null || childSymbolTables[0].classContext != null) continue;\r\n            variableMap.forEach((variable, identifier) => {\r\n                let type = variable.type;\r\n                if (type != null && type instanceof Klass && type.module != null && !type.module.isSystemModule) {\r\n                    let selected: string = identifier == this.rootIdentifier ? \" selected\" : \"\";\r\n                    this.$selectElement.append('<option value=\"' + identifier + selected + '\">' + identifier +\r\n                        ' (Modul \"' + module.file.name + '\")</option>');\r\n                }\r\n            });\r\n        }\r\n\r\n        return $element;\r\n\r\n    }\r\n\r\n    getName(): string { return \"Liste\" }\r\n\r\n    updateDiagram(): void {\r\n\r\n        let heap = this.main.getInterpreter().heap;\r\n        let rootValue = heap[this.rootIdentifier]?.value;\r\n        if (rootValue == null) {\r\n            this.objectDiagram.error(\"Konnte die Variable \" + this.rootIdentifier + \" nicht finden.\");\r\n            return;\r\n        }\r\n\r\n        if (rootValue.type == null || !(rootValue.type instanceof Klass)) {\r\n            this.objectDiagram.error(\"Die Variable \" + this.rootIdentifier + \" zeigt auf kein Objekt.\");\r\n        }\r\n\r\n        let klass: Klass = <Klass>rootValue.type;\r\n        let rto: RuntimeObject = rootValue.value;\r\n\r\n        // if rootValue is self of self referncing type then this array holds values:\r\n        let rootValueSelfReferenceType = this.analyzeSelfReference(klass);\r\n\r\n        // ... else find referenced class which is of self referencing type;\r\n        let attributesWithSelfReference: string[] = [];\r\n        let selfReferenceType: Klass | Interface;\r\n\r\n        if (rootValueSelfReferenceType == null) {\r\n\r\n            let k = klass;\r\n            while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n                for (let a of k.attributes) {\r\n                    let value = rto.attributeValues[k.identifier][a.identifier];\r\n                    if (!(value.type instanceof Klass)) continue;\r\n                    if (selfReferenceType != null && selfReferenceType == a.type) {\r\n                        attributesWithSelfReference.push(a.identifier);\r\n                    } else {\r\n                        let sr = this.analyzeSelfReference(value.type);\r\n                        if (sr != null) {\r\n                            selfReferenceType = sr;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                k = k.baseClass;\r\n            }\r\n\r\n        }\r\n\r\n        if (rootValueSelfReferenceType == null && selfReferenceType == null) {\r\n            this.objectDiagram.error(\"Konnte kein sich selbst referenzierendes Objekt finden.\");\r\n        } else {\r\n            this.drawDiagram(rootValue, rootValueSelfReferenceType, attributesWithSelfReference, selfReferenceType);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    drawDiagram(rootValue: Value, rootValueSelfReferenceType: Klass | Interface,\r\n        attributesWithSelfReference: string[], selfReferenceType: Klass | Interface) {\r\n\r\n        \r\n\r\n\r\n    }\r\n\r\n\r\n    analyzeSelfReference(klass: Klass): Klass | Interface {\r\n\r\n        let tImplements: Interface[] = [];\r\n        let tExtends: Klass[];\r\n\r\n        let k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n            if (k.implements.length > 0)\r\n                tImplements = tImplements.concat(k.implements);\r\n\r\n            if (k.baseClass != null && !(k.baseClass instanceof ObjectClass)) {\r\n                tExtends.push(k.baseClass);\r\n            }\r\n            k = k.baseClass;\r\n        }\r\n\r\n        k = klass;\r\n        while (k != null && !(k instanceof ObjectClass)) {\r\n\r\n            for (let a of k.attributes) {\r\n                let type = a.type;\r\n                if (tImplements.indexOf(<Interface>type) >= 0 || tExtends.indexOf(<Klass>type) >= 0) {\r\n                    return <Klass | Interface>type;\r\n                }\r\n            }\r\n\r\n            k = k.baseClass;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    clear(): void {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Main } from \"../../../Main.js\";\r\nimport { ObjectDiagram } from \"./ObjectDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\n\r\nexport abstract class ObjectDiagramVariant {\r\n\r\n    constructor(protected main: MainBase, protected objectDiagram: ObjectDiagram){\r\n\r\n    }\r\n\r\n    abstract getName(): string;\r\n\r\n    abstract getSettingsElement(): JQuery<HTMLElement>;\r\n    \r\n    abstract updateDiagram(): void;\r\n\r\n    abstract clear(): void;\r\n\r\n}","import { ObjectDiagramVariant } from \"./ObjectDiagramVariant.js\";\r\nimport { Main } from \"../../../Main.js\";\r\nimport { Diagram } from \"../Diagram.js\";\r\nimport { ListDiagram } from \"./ListDiagram.js\";\r\nimport { MainBase } from \"../../../MainBase.js\";\r\n\r\nexport class ObjectDiagram extends Diagram {\r\n\r\n    variants: ObjectDiagramVariant[] = [];\r\n    currentVariant: ObjectDiagramVariant = null;\r\n\r\n    constructor(main: MainBase, private $objectDiagramDiv: JQuery<HTMLElement>) {\r\n        super($objectDiagramDiv.find('.jo_objectdiagram-canvas'), main);\r\n        this.variants.push(new ListDiagram(main, this));\r\n\r\n        let $typeOption = $objectDiagramDiv.find('.jo_objectdiagram-type');\r\n        $typeOption.empty();\r\n        $typeOption.append('<option value=\"none\" selected>Bitte auswählen...</option>');\r\n\r\n        let i = 0;\r\n        for (let variant of this.variants) {\r\n            $typeOption.append('<option value=\"' + i + '\">' + variant.getName() + '</option>');\r\n        }\r\n\r\n        let that = this;\r\n        $typeOption.on('change', (e) => {\r\n            //@ts-ignore\r\n            let value: string = e.currentTarget.value;\r\n            if(value == null){\r\n                if(that.currentVariant != null){\r\n                    that.$canvas.find('.jo_objectDiagramError').remove();\r\n                    that.currentVariant.clear();\r\n                }\r\n                that.currentVariant = null;\r\n            } else {\r\n                let intValue = Number.parseInt(value);\r\n                that.currentVariant = that.variants[intValue];\r\n            }\r\n            that.updateSettings();\r\n        });\r\n\r\n    }\r\n\r\n    error(error: string){\r\n        this.$canvas.append('<div class=\"jo_objectDiagramError\">' + error + '</div>')\r\n    }\r\n\r\n\r\n    updateSettings(){\r\n        let $settingsDiv = this.$objectDiagramDiv.find('.jo_objectdiagram-settings');\r\n        if(this.currentVariant != null){\r\n            $settingsDiv.empty();\r\n            $settingsDiv.append(this.currentVariant.getSettingsElement());\r\n        } else {\r\n            $settingsDiv.empty();\r\n        }\r\n    }\r\n    \r\n    updateDiagram(){\r\n        if(this.currentVariant != null){\r\n            this.currentVariant.updateDiagram();\r\n        }\r\n    }\r\n\r\n}","import { InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { WorldHelper } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { makeTabs } from \"../../tools/HtmlTools.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassDiagram } from \"./diagrams/classdiagram/ClassDiagram.js\";\r\nimport { ObjectDiagram } from \"./diagrams/objectdiagram/ObjectDiagram.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport class RightDiv {\r\n\r\n    classDiagram: ClassDiagram;\r\n    objectDiagram: ObjectDiagram;\r\n    isWholePage: boolean = false;\r\n\r\n    $tabs: JQuery<HTMLElement>;\r\n    $headings: JQuery<HTMLElement>;\r\n\r\n    constructor(private main: MainBase, public $rightDiv: JQuery<HTMLElement>) {\r\n\r\n        this.$tabs = $rightDiv.find('.jo_tabs');\r\n        this.$headings = $rightDiv.find('.jo_tabheadings');\r\n        \r\n        let withClassDiagram = this.$headings.find('.jo_classDiagramTabHeading').length > 0;\r\n        let withObjectDiagram = this.$headings.find('.jo_objectDiagramTabHeading').length > 0;\r\n\r\n        if(withClassDiagram){\r\n            this.classDiagram = new ClassDiagram(this.$tabs.find('.jo_classdiagram'), main);\r\n            this.$headings.find('.jo_classDiagramTabHeading').on(\"click\", () => { that.main.drawClassDiagrams(false) });\r\n        }\r\n\r\n        if(withObjectDiagram){\r\n            this.objectDiagram = new ObjectDiagram(this.main, this.$tabs.find('.jo_objectdiagram'));\r\n            this.$headings.find('.jo_objectDiagramTabHeading').on(\"click\", () => { that.onObjectDiagramEnabled() });\r\n        }\r\n\r\n        let that = this;\r\n        let rightdiv_width: string = \"100%\";\r\n        $rightDiv.find('.jo_whole-window').on(\"click\", () => {\r\n\r\n            that.isWholePage = !that.isWholePage;\r\n            \r\n            let $wholeWindow = jQuery('.jo_whole-window');\r\n\r\n            if (!that.isWholePage) {\r\n                jQuery('#code').css('display', 'flex');\r\n                jQuery('#rightdiv').css('width', rightdiv_width);\r\n                // jQuery('#run').css('width', '');\r\n                $wholeWindow.removeClass('img_whole-window-back');\r\n                $wholeWindow.addClass('img_whole-window');\r\n                jQuery('#controls').insertAfter(jQuery('#view-mode'));\r\n                $wholeWindow.attr('title', 'Auf Fenstergröße vergrößern');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            } else {\r\n                jQuery('#code').css('display', 'none');\r\n                rightdiv_width = jQuery('#rightdiv').css('width');\r\n                jQuery('#rightdiv').css('width', '100%');\r\n                $wholeWindow.removeClass('img_whole-window');\r\n                $wholeWindow.addClass('img_whole-window-back');\r\n                // that.adjustWidthToWorld();\r\n                jQuery('.jo_control-container').append(jQuery('#controls'));\r\n                $wholeWindow.attr('title', 'Auf normale Größe zurückführen');\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    adjustWidthToWorld() {\r\n        let worldHelper: WorldHelper = this.main.getInterpreter().worldHelper;\r\n        if (worldHelper != null && this.isWholePage) {\r\n            let screenHeight = window.innerHeight - this.$headings.height() - 6;\r\n            let screenWidthToHeight = window.innerWidth / (screenHeight);\r\n            let worldWidthToHeight = worldHelper.width / worldHelper.height;\r\n            if (worldWidthToHeight <= screenWidthToHeight) {\r\n                let newWidth = worldWidthToHeight * screenHeight;\r\n                this.$tabs.find('.jo_run').css('width', newWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', screenHeight + \"px\");\r\n            } else {\r\n                let newHeight = window.innerWidth / worldWidthToHeight;\r\n                this.$tabs.find('.jo_run').css('width', window.innerWidth + \"px\");\r\n                this.$tabs.find('.jo_run').css('height', newHeight + \"px\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initGUI() {\r\n        makeTabs(this.$rightDiv);\r\n    }\r\n\r\n    isClassDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_classDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    isObjectDiagramEnabled(): boolean {\r\n        let heading = this.$headings.find('.jo_objectDiagramTabHeading');\r\n        if(heading.length == 0) return false;\r\n        return heading.hasClass(\"jo_active\");\r\n    }\r\n\r\n    updateObjectDiagramSettings() {\r\n        if (this.isObjectDiagramEnabled) {\r\n            this.objectDiagram.updateSettings();\r\n        }\r\n    }\r\n\r\n    onObjectDiagramEnabled() {\r\n        this.objectDiagram.updateSettings();\r\n        if (this.main.getInterpreter().state == InterpreterState.paused || this.main.getInterpreter().state == InterpreterState.running) {\r\n            this.objectDiagram.updateDiagram();\r\n        }\r\n    }\r\n\r\n\r\n}","import { Main } from \"../Main.js\";\r\nimport { ZoomControl } from \"./diagrams/ZoomControl.js\";\r\n\r\nexport class Sliders {\r\n\r\n    main: Main;\r\n\r\n    constructor(main: Main) {\r\n        this.main = main;\r\n    }\r\n\r\n    initSliders() {\r\n        let that = this;\r\n\r\n        jQuery('#slider1').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#leftpanel');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n\r\n            jQuery(document).on(\"mousemove.slider1\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width + dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth - dx) + \"px\");\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n                x = mm.clientX;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider1\", () => {\r\n                jQuery(document).off(\"mousemove.slider1\");\r\n                jQuery(document).off(\"mouseup.slider1\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider2').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let ee = jQuery('#bottomdiv-outer');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider2\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dy = mm.clientY - y;\r\n\r\n                let height = Number.parseInt(ee.css('height').replace('px', ''));\r\n                ee.css('height', (height - dy) + \"px\");\r\n\r\n                let meheight = Number.parseInt(me.css('height').replace('px', ''));\r\n                me.css('height', (meheight + dy) + \"px\");\r\n\r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                y = mm.clientY;\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider2\", () => {\r\n                jQuery(document).off(\"mousemove.slider2\");\r\n                jQuery(document).off(\"mouseup.slider2\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        jQuery('#slider3').on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let pe = jQuery('#rightdiv');\r\n            let me = jQuery('#editor>.monaco-editor');\r\n            let x = md.clientX;\r\n            ZoomControl.preventFading = true;\r\n\r\n            jQuery(document).on(\"mousemove.slider3\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n\r\n                let width = Number.parseInt(pe.css('width').replace('px', ''));\r\n                pe.css('width', (width - dx) + \"px\");\r\n\r\n                let mewidth = Number.parseInt(me.css('width').replace('px', ''));\r\n                me.css('width', (mewidth + dx) + \"px\");\r\n                \r\n                that.main.getMonacoEditor().layout();\r\n                if(that.main.bottomDiv.homeworkManager.diffEditor != null){\r\n                    that.main.bottomDiv.homeworkManager.diffEditor.layout();\r\n                }\r\n\r\n                jQuery('.jo_graphics').trigger('sizeChanged');\r\n                width += dx;\r\n                x = mm.clientX;\r\n                mm.stopPropagation();\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider3\", () => {\r\n                jQuery(document).off(\"mousemove.slider3\");\r\n                jQuery(document).off(\"mouseup.slider3\");\r\n                ZoomControl.preventFading = false;\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { AccordionPanel, AccordionElement } from \"./Accordion.js\";\r\nimport { Main } from \"../Main.js\";\r\nimport { ClassData, UserData, CRUDUserRequest, CRUDClassRequest, GetWorkspacesResponse, GetWorkspacesRequest, Workspaces } from \"../../communication/Data.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Helper } from \"./Helper.js\";\r\n\r\nexport class TeacherExplorer {\r\n\r\n    studentPanel: AccordionPanel;\r\n    classPanel: AccordionPanel;\r\n\r\n    // save them here when displaying pupils workspaces:\r\n    ownWorkspaces: Workspace[];\r\n    currentOwnWorkspace: Workspace;\r\n\r\n    constructor(private main: Main, private classData: ClassData[]) {\r\n\r\n    }\r\n\r\n    removePanels() {\r\n        this.classPanel.remove();\r\n        this.studentPanel.remove();\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        this.initStudentPanel();\r\n\r\n        this.initClassPanel();\r\n\r\n        this.renderClasses(this.classData);\r\n\r\n    }\r\n\r\n    initStudentPanel() {\r\n\r\n        let that = this;\r\n\r\n        this.studentPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Schüler/innen\", \"2\", null,\r\n            \"\", \"student\", false);\r\n\r\n        this.studentPanel.selectCallback = (ae: UserData) => {\r\n\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let request: GetWorkspacesRequest = {\r\n                    ws_userId: ae.id,\r\n                    userId: this.main.user.id\r\n                }\r\n\r\n                ajax(\"getWorkspaces\", request, (response: GetWorkspacesResponse) => {\r\n                    if (response.success == true) {\r\n\r\n                        if (that.main.workspacesOwnerId == that.main.user.id) {\r\n                            that.ownWorkspaces = that.main.workspaceList.slice();\r\n                            that.currentOwnWorkspace = that.main.currentWorkspace;\r\n                        }\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = ae.id;\r\n                        that.main.projectExplorer.setExplorerColor(\"rgba(255, 0, 0, 0.2\");\r\n                        that.main.projectExplorer.$homeAction.show();\r\n                        Helper.showHelper(\"homeButtonHelper\", this.main);\r\n\r\n                        that.main.bottomDiv.showHomeworkTab();\r\n                        that.main.bottomDiv.homeworkManager.attachToWorkspaces(that.main.workspaceList);\r\n                    }\r\n\r\n                    this.main.networkManager.updateFrequencyInSeconds = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n                    this.main.networkManager.secondsTillNextUpdate = this.main.networkManager.teacherUpdateFrequencyInSeconds;\r\n\r\n                });\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    restoreOwnWorkspaces() {\r\n        let main = this.main;\r\n\r\n        // main.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\", \"text\"));\r\n        main.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        main.workspaceList = this.ownWorkspaces;\r\n        main.currentWorkspace = this.currentOwnWorkspace;\r\n        main.workspacesOwnerId = main.user.id;\r\n        main.projectExplorer.setExplorerColor(null);\r\n\r\n        main.projectExplorer.renderWorkspaces(main.workspaceList);\r\n\r\n        if (main.currentWorkspace == null && main.workspaceList.length > 0) {\r\n            main.currentWorkspace = main.workspaceList[0];\r\n        }\r\n\r\n        if (main.currentWorkspace != null) {\r\n            main.projectExplorer.setWorkspaceActive(main.currentWorkspace);\r\n        }\r\n\r\n        this.studentPanel.select(null, false);\r\n\r\n    }\r\n\r\n    initClassPanel() {\r\n        let that = this;\r\n\r\n        this.classPanel = new AccordionPanel(this.main.projectExplorer.accordion,\r\n            \"Klassen\", \"1\", null, \"\", \"class\", false);\r\n\r\n        this.classPanel.selectCallback = (ea) => {\r\n            that.main.networkManager.sendUpdates(() => {\r\n\r\n                let classData = <ClassData>ea;\r\n                if (classData != null) {\r\n                    this.renderStudents(classData.students);\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    renderStudents(userDataList: UserData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        userDataList.sort((a, b) => {\r\n            if (a.familienname > b.familienname) return 1;\r\n            if (b.familienname > a.familienname) return -1;\r\n            if (a.rufname > b.rufname) return 1;\r\n            if (b.rufname > a.rufname) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let ud of userDataList) {\r\n            let ae: AccordionElement = {\r\n                name: ud.rufname + \" \" + ud.familienname,\r\n                sortName: ud.familienname + \" \" + ud.rufname,\r\n                externalElement: ud\r\n            }\r\n            this.studentPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n    renderClasses(classDataList: ClassData[]) {\r\n        this.studentPanel.clear();\r\n\r\n        classDataList.sort((a, b) => {\r\n            if (a.name > b.name) return 1;\r\n            if (b.name > a.name) return -1;\r\n            return 0;\r\n        })\r\n\r\n        for (let cd of classDataList) {\r\n            let ae: AccordionElement = {\r\n                name: cd.name,\r\n                externalElement: cd\r\n            }\r\n            this.classPanel.addElement(ae);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ajax } from \"../communication/AjaxHelper.js\";\r\nimport { LoginRequest, LoginResponse, LogoutRequest, UserData } from \"../communication/Data.js\";\r\nimport { Main } from \"./Main.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { userInfo } from \"os\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\nimport { UserMenu } from \"./gui/UserMenu.js\";\r\nimport { escapeHtml } from \"../tools/StringTools.js\";\r\n\r\nexport class Login {\r\n\r\n\r\n    constructor(private main: Main) {\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        this.startAnimations();\r\n\r\n        let $loginSpinner = jQuery('#login-spinner>img');\r\n\r\n        jQuery('#login-username').focus();\r\n\r\n        jQuery('#login-username').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-password').focus();\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-password').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-button').focus();\r\n                jQuery('#login-button').addClass('jo_active');\r\n            }\r\n            if (e.key == \"Enter\") {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        jQuery('#login-button').on('keydown', (e) => {\r\n            if (e.key == \"Tab\") {\r\n                e.preventDefault();\r\n                jQuery('#login-username').focus();\r\n                jQuery('#login-button').removeClass('jo_active');\r\n            } else {\r\n                jQuery('#login-button').trigger('click');\r\n            }\r\n        });\r\n\r\n        // Avoid double login when user does doubleclick:\r\n        let loginHappened = false;\r\n        jQuery('#login-button').on('click', () => {\r\n\r\n            SoundTools.init();\r\n\r\n            $loginSpinner.show();\r\n\r\n            if (loginHappened) return;\r\n            loginHappened = true;\r\n\r\n            setTimeout(() => {\r\n                loginHappened = false;\r\n            }, 1000);\r\n\r\n            let loginRequest: LoginRequest = {\r\n                username: <string>jQuery('#login-username').val(),\r\n                password: <string>jQuery('#login-password').val()\r\n            }\r\n\r\n            ajax('login', loginRequest, (response: LoginResponse) => {\r\n\r\n                if (!response.success) {\r\n                    jQuery('#login-message').html('Fehler: Benutzername und/oder Passwort ist falsch.');\r\n                } else {\r\n\r\n                    // We don't do this anymore for security reasons - see AjaxHelper.ts\r\n                    // Alternatively we now set a long expiry interval for cookie.\r\n                    // credentials.username = loginRequest.username;\r\n                    // credentials.password = loginRequest.password;\r\n\r\n                    jQuery('#login').hide();\r\n\r\n                    jQuery('#bitteWartenText').html('Bitte warten ...');\r\n                    jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n                    let user: UserData = response.user;\r\n                    if (user.settings == null || user.settings.helperHistory == null) {\r\n                        user.settings = {\r\n                            helperHistory: {\r\n                                consoleHelperDone: false,\r\n                                newFileHelperDone: false,\r\n                                newWorkspaceHelperDone: false,\r\n                                speedControlHelperDone: false,\r\n                                homeButtonHelperDone: false,\r\n                                stepButtonHelperDone: false,\r\n                                repositoryButtonDone: false\r\n                            },\r\n                            viewModes: null,\r\n                            classDiagram: null\r\n                        }\r\n                    }\r\n\r\n                    this.main.waitForGUICallback = () => {\r\n\r\n                        that.main.mainMenu.initGUI(user);\r\n\r\n                        jQuery('#bitteWarten').hide();\r\n                        $loginSpinner.hide();\r\n                        jQuery('#menupanel-username').html(escapeHtml(user.rufname) + \" \" + escapeHtml(user.familienname));\r\n\r\n                        new UserMenu(that.main).init();\r\n\r\n                        if (user.is_teacher) {\r\n                            that.main.initTeacherExplorer(response.classdata);\r\n                        }\r\n\r\n                        that.main.user = user;\r\n\r\n                        that.main.restoreWorkspaces(response.workspaces);\r\n                        that.main.workspacesOwnerId = user.id;\r\n\r\n                        that.main.networkManager.initializeTimer();\r\n\r\n                        that.main.projectExplorer.fileListPanel.setFixed(!user.is_teacher);\r\n                        that.main.projectExplorer.workspaceListPanel.setFixed(!user.is_teacher);\r\n\r\n                        that.main.rightDiv?.classDiagram?.clear();\r\n\r\n                        if (user.settings.classDiagram != null) {\r\n                            that.main.rightDiv?.classDiagram?.deserialize(user.settings.classDiagram);\r\n                        }\r\n\r\n                        that.main.viewModeController.initViewMode();\r\n                        that.main.bottomDiv.hideHomeworkTab();\r\n\r\n                    }\r\n\r\n                    if (this.main.startupComplete == 0) {\r\n                        this.main.waitForGUICallback();\r\n                        this.main.waitForGUICallback = null;\r\n                    }\r\n\r\n                }\r\n\r\n            }, (errorMessage: string) => {\r\n                jQuery('#login-message').html('Login gescheitert: ' + errorMessage);\r\n            }\r\n            );\r\n\r\n        });\r\n\r\n        jQuery('#buttonLogout').on('click', () => {\r\n\r\n            jQuery('#bitteWartenText').html('Bitte warten, der letzte Bearbeitungsstand wird noch gespeichert ...');\r\n            jQuery('#bitteWarten').css('display', 'flex');\r\n\r\n            if (this.main.workspacesOwnerId != this.main.user.id) {\r\n                this.main.projectExplorer.onHomeButtonClicked();\r\n            }\r\n\r\n            this.main.networkManager.sendUpdates(() => {\r\n\r\n                this.main.rightDiv.classDiagram.clearAfterLogout();\r\n\r\n                let logoutRequest: LogoutRequest = {\r\n                    currentWorkspaceId: this.main.currentWorkspace?.id\r\n                }\r\n\r\n                ajax('logout', logoutRequest, () => {\r\n                    // window.location.href = 'index.html';\r\n\r\n                    jQuery('#login').show();\r\n                    jQuery('#bitteWarten').css('display', 'none');\r\n                    jQuery('#login-message').empty();\r\n                    this.main.interpreter.setState(InterpreterState.not_initialized);\r\n                    this.main.getMonacoEditor().setModel(monaco.editor.createModel(\"\", \"myJava\"));\r\n                    this.main.projectExplorer.fileListPanel.clear();\r\n                    this.main.projectExplorer.workspaceListPanel.clear();\r\n                    this.main.bottomDiv?.console?.clear();\r\n                    this.main.interpreter.printManager.clear();\r\n\r\n                    if (this.main.user.is_teacher) {\r\n                        this.main.teacherExplorer.removePanels();\r\n                        this.main.teacherExplorer = null;\r\n                    }\r\n\r\n                    this.main.currentWorkspace = null;\r\n                    this.main.user = null;\r\n\r\n\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n\r\n    }\r\n    startAnimations() {\r\n        let $loginAnimationDiv = $('#jo_login_animations');\r\n        $loginAnimationDiv.empty();\r\n\r\n\r\n        let $gifAnimation = $('<img src=\"assets/startpage/code_1.gif\" class=\"jo_gif_animation\">');\r\n        $loginAnimationDiv.append($gifAnimation);\r\n        \r\n        let left = Math.trunc(Math.random()*(screen.width - 400)) + \"px\";\r\n        let top = Math.trunc(Math.random()*(screen.height - 400)) + \"px\";\r\n\r\n        $gifAnimation.css({\r\n            \"left\": left,\r\n            \"top\": top\r\n        })\r\n    }\r\n\r\n\r\n}","import { ThemeManager } from \"./ThemeManager\";\r\nimport { Main } from \"../Main\";\r\nimport { ViewModes, ViewMode } from \"../../communication/Data\";\r\n\r\nexport class ViewModeController {\r\n\r\n    $buttonEditorFullscreen: JQuery<HTMLElement>;\r\n    $buttonPresentationMode: JQuery<HTMLElement>;\r\n    $buttonMonitorMode: JQuery<HTMLElement>;\r\n\r\n    $buttonMap: { [key: string]: JQuery<HTMLElement> } = {};\r\n\r\n    highContrast: boolean = false;\r\n    editorHasFullWidth: boolean = false;\r\n\r\n    constructor(private $buttonsContainer: JQuery<HTMLElement>, private main: Main) {\r\n\r\n        this.$buttonEditorFullscreen = jQuery('<div title=\"Editor in voller Breite\" class=\"img_whole-window jo_button jo_active\" style=\"padding: 1px; margin-right: 20px\"></div>');\r\n        this.$buttonPresentationMode = jQuery('<div title=\"Präsentation (Beamer)\" class=\"img_presentation-mode jo_button jo_active\" syle=\"padding: 1px\"></div>');\r\n        this.$buttonMonitorMode = jQuery('<div title=\"Monitor\" class=\"img_monitor-mode jo_button jo_active\" style=\"margin-left: 5px; padding: 1px\"></div>');\r\n        $buttonsContainer.append(this.$buttonEditorFullscreen, this.$buttonPresentationMode, this.$buttonMonitorMode);\r\n\r\n        this.$buttonMap = {\r\n            \"presentation\": this.$buttonPresentationMode,\r\n            \"monitor\": this.$buttonMonitorMode\r\n        };\r\n\r\n        let am = this.main.actionManager;\r\n\r\n        am.registerAction(\"editor.fullwidth\", [],\r\n            () => {\r\n                this.toggleEditorFullwidth();\r\n            }, \"Editor auf die volle Breite erweitern\", this.$buttonEditorFullscreen);\r\n\r\n        am.registerAction(\"viewmode.presentation\", [],\r\n            () => {\r\n                this.setMode(\"presentation\");\r\n            }, \"Präsentationsansicht\", this.$buttonPresentationMode);\r\n\r\n        am.registerAction(\"viewmode.monitor\", [],\r\n            () => {\r\n                this.setMode(\"monitor\");\r\n            }, \"Monitoransicht\", this.$buttonMonitorMode);\r\n\r\n    }\r\n\r\n    toggleEditorFullwidth() {\r\n        if(this.editorHasFullWidth){\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in voller Breite');\r\n            jQuery('#rightdiv').show(600);\r\n            jQuery('#leftpanel').show(600);\r\n            jQuery('#controls').show();\r\n        } else {\r\n            this.$buttonEditorFullscreen.removeClass('img_whole-window');\r\n            this.$buttonEditorFullscreen.addClass('img_whole-window-back');\r\n            this.$buttonEditorFullscreen.attr('title', 'Editor in normaler Breite');\r\n            jQuery('#rightdiv').hide(600);\r\n            jQuery('#leftpanel').hide(600);\r\n            jQuery('#controls').hide();\r\n            this.main.getInterpreter().stop();\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.main.getMonacoEditor().layout();\r\n        }, 800);\r\n\r\n        this.editorHasFullWidth = !this.editorHasFullWidth;\r\n    }\r\n\r\n    setMode(mode: \"presentation\" | \"monitor\", saveSettings: boolean = true) {\r\n\r\n        let otherMode = mode == \"presentation\" ? \"monitor\" : \"presentation\";\r\n\r\n        this.$buttonMap[mode].addClass(\"jo_pressed\");\r\n        this.$buttonMap[otherMode].removeClass(\"jo_pressed\");\r\n\r\n        let settings = this.main.user.settings;\r\n        let viewModes = settings.viewModes;\r\n\r\n        let viewMode = viewModes[mode];\r\n        viewModes.viewModeChosen = mode;\r\n\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n\r\n        this.main.editor.setFontSize(viewMode.fontSize);\r\n\r\n        if (this.highContrast != viewMode.highContrast) {\r\n            let editor = this.main.getMonacoEditor();\r\n            editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n            this.highContrast = !this.highContrast;\r\n        }\r\n\r\n        if (saveSettings) this.saveSettings();\r\n\r\n    }\r\n\r\n    saveFontSize(fontSizePx: number) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.fontSize = fontSizePx;\r\n        this.saveSettings();\r\n    }\r\n\r\n    setTheme(theme: string) {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.theme = theme;\r\n        this.main.themeManager.switchTheme(viewMode.theme);\r\n        this.saveSettings();\r\n    }\r\n\r\n    toggleHighContrast() {\r\n        let viewMode = this.getChosenViewMode();\r\n        viewMode.highContrast = !viewMode.highContrast;\r\n        let editor = this.main.getMonacoEditor();\r\n        editor.getAction(\"editor.action.toggleHighContrast\").run();\r\n        this.saveSettings();\r\n    }\r\n\r\n    getChosenViewMode(): ViewMode {\r\n        let viewModes = this.main.user.settings.viewModes;\r\n        return viewModes[viewModes.viewModeChosen];\r\n    }\r\n\r\n    saveSettings() {\r\n        this.main.userDataDirty = true;\r\n    }\r\n\r\n    initViewMode() {\r\n        let settings = this.main.user.settings;\r\n\r\n        if (settings[\"viewModes\"] == null) {\r\n            settings[\"viewModes\"] = {\r\n                monitor: null,\r\n                presentation: null,\r\n                viewModeChosen: \"monitor\"\r\n            }\r\n        }\r\n\r\n        if (settings.viewModes.monitor == null) {\r\n            settings.viewModes.monitor = {\r\n                fontSize: 14,\r\n                highContrast: false,\r\n                theme: \"dark\"\r\n            };\r\n\r\n            settings.viewModes.presentation = {\r\n                fontSize: 18,\r\n                highContrast: false,\r\n                theme: \"light\"\r\n            }\r\n            this.saveSettings();\r\n        }\r\n        this.setMode(settings.viewModes.viewModeChosen, false);\r\n    }\r\n\r\n\r\n}","import { TextPosition } from \"../lexer/Token\";\r\nimport { Module } from \"./Module\";\r\nimport { MainBase } from \"../../main/MainBase\";\r\n\r\ntype SemicolonPosition = {\r\n    position: TextPosition;\r\n    module: Module;\r\n    firstSeenMs: number;\r\n    isThereAgain: boolean;\r\n}\r\n\r\nexport class SemicolonAngel {\r\n    \r\n    semicolonPositions: SemicolonPosition[] = [];\r\n    time: number;\r\n\r\n    constructor(private main: MainBase){\r\n\r\n    }\r\n\r\n    startRegistering(){\r\n        this.semicolonPositions.forEach(p => p.isThereAgain = false);\r\n        this.time = new Date().getTime();\r\n    }\r\n\r\n    register(position: TextPosition, module: Module){\r\n        let oldEvidence = this.semicolonPositions.find(p => p.position.line == position.line && p.position.column == position.column);\r\n        if(oldEvidence){\r\n            oldEvidence.isThereAgain = true;\r\n        } else {\r\n            this.semicolonPositions.push({position: position, firstSeenMs: this.time, isThereAgain: true, module: module});\r\n        }\r\n    }\r\n\r\n    healSemicolons(){\r\n        let time = new Date().getTime();\r\n        this.semicolonPositions = this.semicolonPositions.filter(p => p.isThereAgain);\r\n\r\n        let currentlyEditedModule = this.main.getCurrentlyEditedModule();\r\n        let cursorLine = this.main.getMonacoEditor().getPosition().lineNumber;\r\n\r\n        this.semicolonPositions.filter(p => time - p.firstSeenMs > 2000).forEach(p => {\r\n\r\n            let isCurrentModule = p.module.file.id != null && p.module.file.id == currentlyEditedModule.file.id;\r\n\r\n            let editOperations: monaco.editor.IIdentifiedSingleEditOperation[] = [\r\n                {\r\n                    range: new monaco.Range(p.position.line, p.position.column, p.position.line, p.position.column),\r\n                    text: \";\",\r\n                    forceMoveMarkers: true\r\n                }\r\n            ]\r\n\r\n            if(isCurrentModule){\r\n                if(Math.abs(cursorLine - p.position.line) > 1){\r\n                    let editor = this.main.getMonacoEditor();\r\n                    const selection = editor.getSelection();\r\n                    editor.executeEdits('Semicolon-Angel', editOperations);\r\n                    editor.setSelection(selection);\r\n                    this.semicolonPositions.splice(this.semicolonPositions.indexOf(p), 1);\r\n                }\r\n            } \r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n}","import { Main } from \"../Main.js\";\r\n\r\nexport type WindowBackButtonListener = (event: PopStateEvent) => void;\r\n\r\nexport class WindowStateManager {\r\n\r\n    backButtonListener: WindowBackButtonListener;\r\n    oneTimeBackButtonListener: () => void;\r\n\r\n    constructor(private main: Main){\r\n        let that = this;\r\n        history.pushState(\"PreventLeavingSite\", \"\");\r\n        window.addEventListener('popstate', (event: PopStateEvent) => {\r\n            if(event.state == \"PreventLeavingSite\"){\r\n                history.pushState(\"PreventLeavingSite\", \"\");\r\n                that.main.editor.pushHistoryState(false, that.main.editor.getPositionForHistory());\r\n            } else if(this.oneTimeBackButtonListener == null){\r\n                this.backButtonListener(event);\r\n            }\r\n            if(this.oneTimeBackButtonListener != null){\r\n                this.oneTimeBackButtonListener();\r\n                this.oneTimeBackButtonListener = null;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    registerBackButtonListener(listener: WindowBackButtonListener){\r\n        this.backButtonListener = listener;\r\n    }\r\n\r\n    registerOneTimeBackButtonListener(oneTimeBackButtonListener: () => void){\r\n        this.oneTimeBackButtonListener = oneTimeBackButtonListener;\r\n        history.pushState({}, \"\");\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n}","import { ClassData, UserData, Workspaces } from \"../communication/Data.js\";\r\nimport { NetworkManager } from \"../communication/NetworkManager.js\";\r\nimport { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, DoubleType, CharacterType, BooleanType, FloatType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { ActionManager } from \"./gui/ActionManager.js\";\r\nimport { BottomDiv } from \"./gui/BottomDiv.js\";\r\nimport { Editor } from \"./gui/Editor.js\";\r\nimport { Formatter } from \"./gui/Formatter.js\";\r\nimport { Helper } from \"./gui/Helper.js\";\r\nimport { MainMenu } from \"./gui/MainMenu.js\";\r\nimport { ProgramControlButtons } from \"./gui/ProgramControlButtons.js\";\r\nimport { ProjectExplorer } from \"./gui/ProjectExplorer.js\";\r\nimport { RightDiv } from \"./gui/RightDiv.js\";\r\nimport { Sliders } from \"./gui/Sliders.js\";\r\nimport { TeacherExplorer } from \"./gui/TeacherExplorer.js\";\r\nimport { ThemeManager } from \"./gui/ThemeManager.js\";\r\nimport { Login } from \"./Login.js\";\r\nimport { MainBase } from \"./MainBase.js\"\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { ViewModeController } from \"./gui/ViewModeController.js\";\r\nimport { ErrorManager } from \"./gui/ErrorManager.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { SynchronizationManager } from \"../repository/synchronize/RepositorySynchronizationManager.js\";\r\nimport { RepositoryCreateManager } from \"../repository/update/RepositoryCreateManager.js\";\r\nimport { RepositorySettingsManager } from \"../repository/update/RepositorySettingsManager.js\";\r\nimport { RepositoryCheckoutManager } from \"../repository/update/RepositoryCheckoutManager.js\";\r\nimport { WindowStateManager } from \"./gui/WindowStateManager.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\nexport class Main implements MainBase {\r\n\r\n    repositoryOn: boolean = true;\r\n\r\n    isEmbedded(): boolean { return false; }\r\n\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    // VORSICHT: ggf. Module -> any\r\n    getCurrentlyEditedModule(): Module {\r\n        return this.projectExplorer.getCurrentlyEditedModule();\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n        this.projectExplorer.showProgramPointerPosition(file, position);\r\n    }\r\n    hideProgramPointerPosition() {\r\n        this.projectExplorer.hideProgramPointerPosition();\r\n    }\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n        this.projectExplorer.setModuleActive(module);\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel {\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule) {\r\n        this.projectExplorer.setModuleActive(module);\r\n        this.editor.editor.revealLineInCenter(declaration.position.line);\r\n        this.editor.editor.setPosition({column: declaration.position.column, lineNumber: declaration.position.line});\r\n    }\r\n\r\n\r\n    workspaceList: Workspace[] = [];\r\n    workspacesOwnerId: number;\r\n\r\n    // monaco_editor: monaco.editor.IStandaloneCodeEditor;\r\n    editor: Editor;\r\n    currentWorkspace: Workspace;\r\n    projectExplorer: ProjectExplorer;\r\n    teacherExplorer: TeacherExplorer;\r\n    networkManager: NetworkManager;\r\n    actionManager: ActionManager;\r\n    mainMenu: MainMenu;\r\n\r\n    synchronizationManager: SynchronizationManager;\r\n    repositoryCreateManager: RepositoryCreateManager;\r\n    repositoryUpdateManager: RepositorySettingsManager;\r\n    repositoryCheckoutManager: RepositoryCheckoutManager;\r\n\r\n    windowStateManager: WindowStateManager = new WindowStateManager(this);\r\n\r\n    login: Login;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n\r\n    debugger: Debugger;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    bottomDiv: BottomDiv;\r\n\r\n    startupComplete = 2;\r\n    waitForGUICallback: () => void;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    user: UserData;\r\n    userDataDirty: boolean = false;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    rightDiv: RightDiv;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    viewModeController: ViewModeController;\r\n\r\n    initGUI() {\r\n\r\n        this.login = new Login(this);\r\n        this.login.initGUI();\r\n\r\n        this.actionManager = new ActionManager(null, this);\r\n        this.actionManager.init();\r\n\r\n        this.networkManager = new NetworkManager(this, jQuery('#bottomdiv-outer .jo_updateTimerDiv'));\r\n\r\n        let sliders = new Sliders(this);\r\n        sliders.initSliders();\r\n        this.mainMenu = new MainMenu(this);\r\n        this.projectExplorer = new ProjectExplorer(this, jQuery('#leftpanel>.jo_projectexplorer'));\r\n        this.projectExplorer.initGUI();\r\n\r\n        this.bottomDiv = new BottomDiv(this, jQuery('#bottomdiv-outer>.jo_bottomdiv-inner'), jQuery('body'));\r\n\r\n        this.rightDiv = new RightDiv(this, jQuery('#rightdiv-inner'));\r\n        this.rightDiv.initGUI();\r\n\r\n        this.debugger = new Debugger(this, jQuery('#leftpanel>.jo_debugger'), jQuery('#leftpanel>.jo_projectexplorer'));\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons(jQuery('#controls'), jQuery('#editor')),\r\n            jQuery('#rightdiv-inner .jo_run'));\r\n        this.interpreter.initGUI();\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n\r\n        this.viewModeController = new ViewModeController(jQuery(\"#view-mode\"), this);\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                // get the matrix values of the displayobject based on its transform properties..\r\n                // lt.a = this._cx * this.scale.x;\r\n                // lt.b = this._sx * this.scale.x;\r\n                // lt.c = this._cy * this.scale.y;\r\n                // lt.d = this._sy * this.scale.y;\r\n                // lt.tx = this.position.x - ((this.pivot.x * lt.a) + (this.pivot.y * lt.c));\r\n                // lt.ty = this.position.y - ((this.pivot.x * lt.b) + (this.pivot.y * lt.d));\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        this.editor = new Editor(this, true, false);\r\n        new Formatter().init();\r\n        // this.monaco_editor = \r\n        this.editor.initGUI(jQuery('#editor'));\r\n\r\n        let that = this;\r\n        jQuery(window).on('resize', (event) => {\r\n            jQuery('#bottomdiv-outer').css('height', '150px');\r\n            jQuery('#editor').css('height', (window.innerHeight - 150 - 30 - 2) + \"px\");\r\n            that.editor.editor.layout();\r\n            jQuery('#editor').css('height', \"\");\r\n\r\n        });\r\n\r\n        jQuery(window).trigger('resize');\r\n\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    initTeacherExplorer(classdata: ClassData[]) {\r\n        this.teacherExplorer = new TeacherExplorer(this, classdata);\r\n        this.teacherExplorer.initGUI();\r\n    }\r\n\r\n\r\n    // loadWorkspace() {\r\n    //     this.workspaceList.push(getMockupWorkspace(this));\r\n    //     this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n    //     this.projectExplorer.setWorkspaceActive(this.workspaceList[0]);\r\n    //     this.checkStartupComplete();\r\n\r\n    // }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n\r\n    }\r\n\r\n    start() {\r\n\r\n        if (this.waitForGUICallback != null) {\r\n            this.waitForGUICallback();\r\n        }\r\n\r\n        let that = this;\r\n        setTimeout(() => {\r\n            that.getMonacoEditor().layout();\r\n        }, 200);\r\n\r\n        this.compiler = new Compiler(this);\r\n\r\n        this.startTimer();\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n                this.projectExplorer.renderErrorCount(this.currentWorkspace, errors);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                if (this.projectExplorer) {\r\n                    this.version++;\r\n                }\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.projectExplorer.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        clearTimeout(this.debounceDiagramDrawing);\r\n        this.debounceDiagramDrawing = setTimeout(() => {\r\n            this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n    removeWorkspace(w: Workspace) {\r\n        this.workspaceList.splice(this.workspaceList.indexOf(w), 1);\r\n    }\r\n\r\n    restoreWorkspaces(workspaces: Workspaces) {\r\n\r\n        this.workspaceList = [];\r\n        this.currentWorkspace = null;\r\n        // this.monaco.setModel(monaco.editor.createModel(\"Keine Datei vorhanden.\" , \"text\"));\r\n        this.getMonacoEditor().updateOptions({ readOnly: true });\r\n\r\n        for (let ws of workspaces.workspaces) {\r\n\r\n            let workspace: Workspace = Workspace.restoreFromData(ws, this);\r\n            this.workspaceList.push(workspace);\r\n            if (ws.id == this.user.currentWorkspace_id) {\r\n                this.currentWorkspace = workspace;\r\n            }\r\n        }\r\n\r\n        this.projectExplorer.renderWorkspaces(this.workspaceList);\r\n\r\n        if (this.currentWorkspace == null && this.workspaceList.length > 0) {\r\n            this.currentWorkspace = this.workspaceList[0];\r\n        }\r\n\r\n        if (this.currentWorkspace != null) {\r\n            this.projectExplorer.setWorkspaceActive(this.currentWorkspace);\r\n        }\r\n\r\n        if (this.workspaceList.length == 0) {\r\n\r\n            Helper.showHelper(\"newWorkspaceHelper\", this, this.projectExplorer.workspaceListPanel.$captionElement);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    createNewWorkspace(name: string, owner_id: number): Workspace {\r\n        return new Workspace(name, this, owner_id);\r\n    }\r\n\r\n\r\n}\r\n\r\n","import { Main } from \"../Main.js\";\r\nimport { MainBase } from \"../MainBase.js\";\r\n\r\nexport type HelperDirection = \"top\" | \"bottom\" | \"left\" | \"right\";\r\n\r\nexport class Helper {\r\n\r\n    public static openHelper(text: string, targetElement: JQuery<HTMLElement>, direction: HelperDirection) {\r\n\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.removeClass(['jo_arrow_box_left', 'jo_arrow_box_right', 'jo_arrow_box_top', 'jo_arrow_box_bottom']);\r\n\r\n        $helper.addClass('jo_arrow_box_' + direction);\r\n\r\n        $helper.css({ left: '', right: '', top: '', bottom: '' });\r\n\r\n        let to = targetElement.offset();\r\n        let b = jQuery('body');\r\n\r\n        let delta: number = 34;\r\n\r\n        switch (direction) {\r\n            case \"bottom\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                bottom: b.height() - to.top + delta\r\n            });\r\n                break;\r\n            case \"top\": $helper.css({\r\n                left: to.left + targetElement.width() / 2 - delta,\r\n                top: to.top + targetElement.height() + 26\r\n            });\r\n                break;\r\n            case \"left\": $helper.css({\r\n                left: to.left + targetElement.width() + delta,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n            case \"right\": $helper.css({\r\n                right: b.width() - to.left,\r\n                top: to.top + targetElement.height() / 2 - delta\r\n            });\r\n                break;\r\n        }\r\n\r\n        $helper.find('span').html(text);\r\n\r\n        let $button = $helper.find('.jo_button');\r\n        $button.on('click', (e) => {\r\n            e.stopPropagation();\r\n            $button.off('click');\r\n            Helper.close();\r\n        });\r\n\r\n        $helper.fadeIn(800);\r\n\r\n    }\r\n\r\n    static close() {\r\n        let $helper = jQuery('.jo_arrow_box');\r\n        $helper.fadeOut(800);\r\n    }\r\n\r\n\r\n    static showHelper(id: string, mainBase: MainBase, $element?: JQuery<HTMLElement>) {\r\n\r\n        let main: Main;\r\n        if(mainBase instanceof Main){\r\n            main = mainBase;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let helperHistory = main.user.settings!.helperHistory;\r\n\r\n        if (id == \"speedControlHelper\" && helperHistory[\"speedControlHelperDone\"]) {\r\n            id = \"stepButtonHelper\";\r\n        }\r\n\r\n        let flag = id + \"Done\";\r\n\r\n        if (helperHistory != null && (helperHistory[flag] == null || !helperHistory[flag])) {\r\n            helperHistory[flag] = true;\r\n            main.networkManager.sendUpdateUserSettings(() => { });\r\n\r\n            let text: string = \"\";\r\n            let direction: HelperDirection = \"left\";\r\n\r\n            switch (id) {\r\n                case \"repositoryButton\":\r\n                    text = `Wenn der aktuelle Workspace mit einem Repository verknüft ist, erscheint hier der \"Synchronisieren-Button\". Ein Klick darauf öffnet einen Dialog, in dem die Dateien des Workspace mit denen des Repositorys abgeglichen werden können.`;\r\n                    direction = \"top\";\r\n                    break;\r\n                case \"speedControlHelper\":\r\n                    text = `Mit dem Geschwindigkeitsregler können  \r\n                            Sie einstellen, wie schnell das Programm abläuft. \r\n                            Bei Geschwindigkeiten bis 10 Steps/s wird \r\n                            während des Programmablaufs der Programzeiger gezeigt\r\n                            und die Anzeige der Variablen auf der linken \r\n                            Seite stets aktualisiert.`;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.speedControl.$grip;\r\n                    break;\r\n                case \"newFileHelper\":\r\n                    text = `Es gibt noch keine Programmdatei im Workspace. <br> Nutzen Sie den Button \r\n                        <span class='img_add-file-dark jo_inline-image'></span> um eine Programmdatei anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"newWorkspaceHelper\":\r\n                    text = `Es gibt noch keinen Workspace. <br> Nutzen Sie den Button\r\n                        <span class='img_add-workspace-dark jo_inline-image'></span> um einen Workspace anzulegen.\r\n                        `;\r\n                    direction = \"left\";\r\n                    break;\r\n                case \"homeButtonHelper\":\r\n                    text = \"Mit dem Home-Button <span class='img_home-dark jo_inline-image'></span> können Sie wieder zu Ihren eigenen Workspaces wechseln.\";\r\n                    direction = \"top\";\r\n                    $element = jQuery('.img_home-dark');\r\n                    break;\r\n                case \"stepButtonHelper\":\r\n                    text = `Mit den Buttons \"Step over\"\r\n                        (<span class='img_step-over-dark jo_inline-image'></span>, Taste F8), \r\n                        \"Step into\" \r\n                        (<span class='img_step-into-dark jo_inline-image'></span>, Taste F7) und \r\n                        \"Step out\" \r\n                        (<span class='img_step-out-dark jo_inline-image'></span>, Taste F9)  \r\n                        können Sie das Programm schrittweise ausführen und sich nach jedem Schritt die Belegung der Variablen ansehen. <br>\r\n                        <ul><li><span class='img_step-over-dark jo_inline-image'></span> Step over führt den nächsten Schritt aus, insbesondere werden Methodenaufrufe in einem Schritt durchgeführt.</li>\r\n                        <li><span class='img_step-into-dark jo_inline-image'></span> Step into führt auch den nächsten Schritt aus, geht bei Methodenaufrufen aber in die Methode hinein und führt auch die Anweisungen innerhalb der Methode schrittweise aus.</li>\r\n                        <li><span class='img_step-out-dark jo_inline-image'></span> Befindet sich die Programmausführung innerhalb einer Methode, so bewirkt ein Klick auf Step out, dass der Rest der Methode ausgeführt wird und die Programmausführung erst nach der Aufrufstelle der Methode anhält.</li>\r\n                        </ul>\r\n                        `;\r\n                    direction = \"top\";\r\n                    $element = main.interpreter.controlButtons.$buttonStepOver;\r\n                    break;\r\n                case \"consoleHelper\": \r\n                    text=`\r\n                        Hier können Sie Anweisungen oder Terme eingeben, die nach Bestätigung mit der Enter-Taste ausgeführt/ausgewertet werden. Das Ergebnis sehen Sie im Bereich über der Eingabezeile. <br>\r\n                        Falls das Programm gerade pausiert (z.B. bei Ausführung in Einzelschritten) können Sie auch auf die Variablen des aktuellen Sichtbarkeitsbereiches zugreifen.\r\n                    `;\r\n                    direction = \"bottom\";\r\n                    $element = main.bottomDiv.console.$consoleTab.find('.jo_monaco-editor');\r\n            }\r\n\r\n            if (text != \"\" && $element != null && $element.length > 0) {\r\n                Helper.openHelper(text, $element, direction);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\n\r\nexport class KeyboardTool {\r\n    \r\n    element: JQuery<any>;\r\n\r\n    pressedKeys: {[key: string]: boolean} = {};\r\n\r\n    keyPressedCallbacks: ((key: string) => void)[] = [];\r\n    keyUpCallbacks: ((key: string) => void)[] = [];\r\n    keyDownCallbacks: ((key: string) => void)[] = [];\r\n\r\n    constructor(element: JQuery<any>, private main: MainBase){\r\n        this.registerListeners(element);\r\n    }\r\n\r\n    unregisterListeners(){\r\n        this.element.off(\"keydown\");\r\n        this.element.off(\"keyup\");\r\n        this.element.off(\"keypressed\");\r\n    }\r\n\r\n    private registerListeners(element: JQuery<any>){\r\n        this.element = element;\r\n        let that = this;\r\n        element.on(\"keydown\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = true;\r\n\r\n            for(let kpc of that.keyDownCallbacks){\r\n                kpc(key);\r\n            }\r\n\r\n            // prevent <html>-Element from scrolling in embedded mode\r\n            if(this.main.isEmbedded() && this.main.getInterpreter().state == InterpreterState.running && !this.main.getMonacoEditor().hasTextFocus()){\r\n                if([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.key) >= 0)\r\n                e.preventDefault();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        element.on(\"keyup\", (e) => {\r\n            let key = e.key;\r\n            if(key == null) return true;\r\n            if(typeof key == \"undefined\") return;\r\n\r\n            if(e.shiftKey) key = \"shift+\" + key;\r\n            if(e.ctrlKey) key = \"ctrl\" + key;\r\n            if(e.altKey) key = \"alt\" + key;\r\n            that.pressedKeys[key.toLowerCase()] = false;\r\n\r\n            for(let kpc of that.keyUpCallbacks){\r\n                kpc(key);\r\n            }\r\n            return true;\r\n        });\r\n        element.on(\"keypress\", (e) => {\r\n            let k = e.key;\r\n            if(e.shiftKey && k.length > 1){\r\n                k = \"[shift]+\" + k;\r\n            }\r\n            if(e.ctrlKey && k.length > 1){\r\n                k = \"[ctrl]+\" + k;\r\n            }\r\n            if(e.altKey && k.length > 1){\r\n                k = \"[alt]+\" + k;\r\n            }\r\n            for(let kpc of that.keyPressedCallbacks){\r\n                kpc(k);\r\n            }\r\n            return true;\r\n        });\r\n\r\n    }\r\n\r\n    isPressed(key: string){\r\n        if(key == null) return null;\r\n        return this.pressedKeys[key.toLowerCase()] == true;\r\n    }\r\n\r\n    unsubscribeAllListeners() {\r\n        this.keyPressedCallbacks = [];\r\n    }\r\n\r\n\r\n}","import { TextPosition, TokenType } from \"../compiler/lexer/Token.js\";\r\nimport { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { Program, Statement, ReturnStatement } from \"../compiler/parser/Program.js\";\r\nimport { ArrayType } from \"../compiler/types/Array.js\";\r\nimport { Klass, Interface } from \"../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { PrimitiveType, Type, Value, Heap, Method } from \"../compiler/types/Types.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { Main } from \"../main/Main.js\";\r\nimport { Debugger } from \"./Debugger.js\";\r\nimport { RuntimeObject } from \"./RuntimeObject.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { InputManager } from \"./InputManager.js\";\r\nimport { WorldHelper } from \"../runtimelibrary/graphics/World.js\";\r\nimport { Helper } from \"../main/gui/Helper.js\";\r\nimport { TimerClass } from \"../runtimelibrary/Timer.js\";\r\nimport { KeyboardTool } from \"../tools/KeyboardTool.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { ListHelper } from \"../runtimelibrary/collections/ArrayList.js\";\r\nimport { GroupHelper } from \"../runtimelibrary/graphics/Group.js\";\r\nimport { WebSocketRequestKeepAlive } from \"../communication/Data.js\";\r\nimport { MainEmbedded } from \"../embedded/MainEmbedded.js\";\r\nimport { ProcessingHelper } from \"../runtimelibrary/graphics/Processing.js\";\r\n\r\nexport enum InterpreterState {\r\n    not_initialized, running, paused, error, done, waitingForInput, waitingForTimersToEnd\r\n}\r\n\r\nexport type ProgramStackElement = {\r\n    program: Program,\r\n    programPosition: number,  // next position to execute after return\r\n    textPosition: TextPosition, // textposition of method call\r\n    method: Method | string,\r\n    callbackAfterReturn: (interpreter: Interpreter) => void,\r\n    isCalledFromOutside: string,\r\n    stackElementsToPushBeforeFirstExecuting?: Value[]\r\n};\r\n\r\nexport class Interpreter {\r\n\r\n    debugger: Debugger;\r\n\r\n    mainModule: Module;\r\n    moduleStore: ModuleStore;\r\n    moduleStoreVersion: number = -100;\r\n\r\n    printManager: PrintManager;\r\n    inputManager: InputManager;\r\n\r\n    stepsPerSecond = 2;\r\n    maxStepsPerSecond = 1000000;\r\n    timerDelayMs = 10;\r\n\r\n    timerId: any;\r\n    state: InterpreterState;\r\n\r\n    currentProgram: Program;\r\n    currentProgramPosition: number;\r\n    currentMethod: Method | string;\r\n    currentCallbackAfterReturn: (interpreter: Interpreter) => void;\r\n    currentIsCalledFromOutside: string\r\n\r\n    programStack: ProgramStackElement[] = [];\r\n\r\n    stack: Value[] = [];\r\n    stackframes: number[] = [];\r\n    currentStackframe: number;\r\n\r\n    heap: Heap = {};\r\n\r\n    timerStopped: boolean = true;\r\n    timerExtern: boolean = false;\r\n\r\n    steps: number = 0;\r\n    timeNetto: number = 0;\r\n    timeWhenProgramStarted: number = 0;\r\n\r\n    stepOverNestingLevel: number = 0;\r\n    leaveLine: number = -1;\r\n    additionalStepFinishedFlag: boolean = false;\r\n\r\n    isFirstStatement: boolean = true;\r\n\r\n    showProgrampointerUptoStepsPerSecond = 15;\r\n\r\n    worldHelper: WorldHelper;\r\n    processingHelper: ProcessingHelper;\r\n\r\n    keyboardTool: KeyboardTool;\r\n\r\n    webSocketsToCloseAfterProgramHalt: WebSocket[] = [];\r\n\r\n\r\n    actions: string[] = [\"start\", \"pause\", \"stop\", \"stepOver\",\r\n        \"stepInto\", \"stepOut\", \"restart\"];\r\n\r\n    // buttonActiveMatrix[button][i] tells if button is active at \r\n    // InterpreterState i\r\n    buttonActiveMatrix: { [buttonName: string]: boolean[] } = {\r\n        \"start\": [false, false, true, true, true, false],\r\n        \"pause\": [false, true, false, false, false, false],\r\n        \"stop\": [false, true, true, false, false, true],\r\n        \"stepOver\": [false, false, true, true, true, false],\r\n        \"stepInto\": [false, false, true, true, true, false],\r\n        \"stepOut\": [false, false, true, false, false, false],\r\n        \"restart\": [false, true, true, true, true, true]\r\n    }\r\n\r\n    callbackAfterExecution: () => void;\r\n\r\n    constructor(public main: MainBase, public debugger_: Debugger, public controlButtons: ProgramControlButtons,\r\n        $runDiv: JQuery<HTMLElement>) {\r\n        this.printManager = new PrintManager($runDiv, this.main);\r\n        this.inputManager = new InputManager($runDiv, this.main);\r\n        if (main.isEmbedded()) {\r\n            this.keyboardTool = new KeyboardTool(jQuery('html'), main);\r\n        } else {\r\n            this.keyboardTool = new KeyboardTool(jQuery(window), main);\r\n        }\r\n\r\n        this.debugger = debugger_;\r\n\r\n        controlButtons.setInterpreter(this);\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.steps = 0;\r\n        this.timeNetto = 0;\r\n        this.timerEvents = 0;\r\n\r\n        this.timerDelayMs = 7;\r\n\r\n        let that = this;\r\n\r\n        let periodicFunction = () => {\r\n\r\n            if (!that.timerExtern) {\r\n                that.timerFunction(that.timerDelayMs, false, 0.7);\r\n            }\r\n\r\n        }\r\n\r\n        this.timerId = setInterval(periodicFunction, this.timerDelayMs);\r\n        let keepAliveRequest: WebSocketRequestKeepAlive = { command: 5 };\r\n        let req = JSON.stringify(keepAliveRequest);\r\n        setInterval(() => {\r\n            that.webSocketsToCloseAfterProgramHalt.forEach(ws => ws.send(req));\r\n        }, 30000);\r\n\r\n    }\r\n\r\n    initGUI() {\r\n\r\n        let that = this;\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        let startFunction = () => {\r\n            that.stepOverNestingLevel = 1000000;\r\n            that.start();\r\n        };\r\n\r\n        let pauseFunction = () => {\r\n            that.pause();\r\n        };\r\n\r\n        am.registerAction(\"interpreter.start\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Programm starten\", this.controlButtons.$buttonStart);\r\n\r\n        am.registerAction(\"interpreter.pause\", ['F4'],\r\n            () => {\r\n                if (am.isActive(\"interpreter.start\")) {\r\n                    startFunction();\r\n                } else {\r\n                    pauseFunction();\r\n                }\r\n\r\n            }, \"Pause\", this.controlButtons.$buttonPause);\r\n\r\n        am.registerAction(\"interpreter.stop\", [],\r\n            () => {\r\n                that.stop(false);\r\n                that.steps = 0;\r\n            }, \"Programm anhalten\", this.controlButtons.$buttonStop);\r\n\r\n        // this.controlButtons.$buttonEdit.on('click', (e) => {\r\n        //     e.stopPropagation();\r\n        //     am.trigger('interpreter.stop');\r\n        // });\r\n\r\n        am.registerAction(\"interpreter.stepOver\", ['F6'],\r\n            () => {\r\n                this.oneStep(false);\r\n            }, \"Einzelschritt (Step over)\", this.controlButtons.$buttonStepOver);\r\n\r\n        am.registerAction(\"interpreter.stepInto\", ['F7'],\r\n            () => {\r\n                this.oneStep(true);\r\n            }, \"Einzelschritt (Step into)\", this.controlButtons.$buttonStepInto);\r\n\r\n        am.registerAction(\"interpreter.stepOut\", [],\r\n            () => {\r\n                this.stepOut();\r\n            }, \"Step out\", this.controlButtons.$buttonStepOut);\r\n\r\n        am.registerAction(\"interpreter.restart\", [],\r\n            () => {\r\n                that.stop(true);\r\n            }, \"Neu starten\", this.controlButtons.$buttonRestart);\r\n\r\n        this.setState(InterpreterState.not_initialized);\r\n\r\n    }\r\n\r\n    getStartableModule(moduleStore: ModuleStore): Module {\r\n\r\n        let cem: Module;\r\n        cem = this.main.getCurrentlyEditedModule();\r\n\r\n        let currentlyEditedModuleIsClassOnly = false;\r\n\r\n        // decide which module to start\r\n\r\n        // first attempt: is currently edited Module startable?\r\n        if (cem != null) {\r\n            let currentlyEditedModule = moduleStore.findModuleByFile(cem.file);\r\n            if (currentlyEditedModule != null) {\r\n                currentlyEditedModuleIsClassOnly = !cem.hasErrors()\r\n                    && !currentlyEditedModule.isStartable;\r\n                if (currentlyEditedModule.isStartable) {\r\n                    return currentlyEditedModule;\r\n                }\r\n            }\r\n        }\r\n\r\n        // second attempt: which module has been started last time?\r\n        if (this.mainModule != null && currentlyEditedModuleIsClassOnly) {\r\n            let lastMainModule = moduleStore.findModuleByFile(this.mainModule.file);\r\n            if (lastMainModule != null && lastMainModule.isStartable) {\r\n                return lastMainModule;\r\n            }\r\n        }\r\n\r\n        // third attempt: pick first startable module of current workspace\r\n        if (currentlyEditedModuleIsClassOnly) {\r\n            for (let m of moduleStore.getModules(false)) {\r\n                if (m.isStartable) {\r\n                    return m;\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n        After user clicks start button (or stepover/stepInto-Button when no program is running) this\r\n        method ist called.\r\n    */\r\n    init() {\r\n\r\n        this.timerStopped = true;\r\n\r\n        let cem = this.main.getCurrentlyEditedModule();\r\n\r\n        cem.getBreakpointPositionsFromEditor();\r\n\r\n        this.main.getBottomDiv()?.console?.clearExceptions();\r\n\r\n        /*\r\n            As long as there is no startable new Version of current workspace we keep current compiled modules so\r\n            that variables and objects defined/instantiated via console can be kept, too. \r\n        */\r\n        if (this.moduleStoreVersion != this.main.version && this.main.getCompiler().atLeastOneModuleIsStartable) {\r\n            this.main.copyExecutableModuleStoreToInterpreter();\r\n            this.heap = {}; // clear variables/objects defined via console\r\n            this.main.getBottomDiv()?.console?.detachValues();  // detach values from console entries\r\n        }\r\n\r\n        let newMainModule = this.getStartableModule(this.moduleStore);\r\n\r\n        if (newMainModule == null) {\r\n            this.setState(InterpreterState.not_initialized);\r\n            return;\r\n        }\r\n\r\n        this.mainModule = newMainModule;\r\n\r\n        this.currentProgramPosition = 0;\r\n\r\n        this.programStack = [];\r\n        this.stack = [];\r\n        this.stackframes = [];\r\n        this.currentStackframe = 0;\r\n\r\n        this.setState(InterpreterState.done);\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        this.stepOverNestingLevel = 1000000;\r\n\r\n\r\n        // Instantiate enum value-objects; initialize static attributes; call static constructors\r\n\r\n        this.programStack.push({\r\n            program: this.mainModule.mainProgram,\r\n            programPosition: 0,\r\n            textPosition: { line: 1, column: 1, length: 0 },\r\n            method: \"Hauptprogramm\",\r\n            callbackAfterReturn: null,\r\n            isCalledFromOutside: \"Hauptprogramm\"\r\n\r\n        })\r\n\r\n        for (let m of this.moduleStore.getModules(false)) {\r\n            this.initializeEnums(m);\r\n            this.initializeClasses(m);\r\n        }\r\n\r\n        this.popProgram();\r\n\r\n    }\r\n\r\n    popProgram() {\r\n        let p = this.programStack.pop();\r\n        this.currentProgram = p.program;\r\n        this.currentProgramPosition = p.programPosition;\r\n        this.currentMethod = p.method;\r\n        this.currentCallbackAfterReturn = p.callbackAfterReturn;\r\n        this.currentIsCalledFromOutside = p.isCalledFromOutside;\r\n        if (p.stackElementsToPushBeforeFirstExecuting != null) {\r\n\r\n            this.stackframes.push(this.currentStackframe == null ? 0 : this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n\r\n            for (let se of p.stackElementsToPushBeforeFirstExecuting) this.stack.push(se);\r\n            p.stackElementsToPushBeforeFirstExecuting = null;\r\n        }\r\n    }\r\n\r\n    initializeClasses(m: Module) {\r\n\r\n        for (let klass of m.typeStore.typeList) {\r\n            if (klass instanceof Klass) {\r\n                klass.staticClass.classObject = new RuntimeObject(klass.staticClass);\r\n                klass.staticClass.classObject.initializeAttributeValues();\r\n                klass.pushStaticInitializationPrograms(this.programStack);\r\n            }\r\n\r\n            if (klass instanceof Enum) {\r\n                let staticValueMap = klass.staticClass.classObject.attributeValues.get(klass.identifier);\r\n                for (let enumInfo of klass.enumInfoList) {\r\n                    staticValueMap.get(enumInfo.identifier).value = enumInfo.object;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    initializeEnums(m: Module) {\r\n\r\n        for (let enumClass of m.typeStore.typeList) {\r\n            if (enumClass instanceof Enum) {\r\n\r\n                enumClass.pushStaticInitializationPrograms(this.programStack);\r\n\r\n                let valueList: Value[] = [];\r\n\r\n                let valueInitializationProgram: Program = {\r\n                    module: enumClass.module,\r\n                    labelManager: null,\r\n                    statements: []\r\n                };\r\n\r\n                let hasAttributeInitializationProgram = enumClass.attributeInitializationProgram.statements.length > 0;\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    this.programStack.push({\r\n                        program: valueInitializationProgram,\r\n                        programPosition: 0,\r\n                        textPosition: { line: 1, column: 1, length: 0 },\r\n                        method: \"Attribut-Initialisierung der Klasse \" + enumClass.identifier,\r\n                        callbackAfterReturn: null,\r\n                        isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                    });\r\n\r\n                }\r\n\r\n\r\n                for (let enumInfo of enumClass.enumInfoList) {\r\n                    enumInfo.object = new EnumRuntimeObject(enumClass, enumInfo);\r\n\r\n                    valueList.push({\r\n                        type: enumClass,\r\n                        value: enumInfo.object\r\n                    });\r\n\r\n                    if (enumInfo.constructorCallProgram != null) {\r\n                        this.programStack.push({\r\n                            program: enumInfo.constructorCallProgram,\r\n                            programPosition: 0,\r\n                            textPosition: { line: 1, column: 1, length: 0 },\r\n                            method: \"Konstruktor von \" + enumClass.identifier,\r\n                            callbackAfterReturn: null,\r\n                            isCalledFromOutside: \"Initialisierung eines Enums\"\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (hasAttributeInitializationProgram) {\r\n                        valueInitializationProgram.statements.push({\r\n                            type: TokenType.initializeEnumValue,\r\n                            position: enumInfo.position,\r\n                            enumClass: enumClass,\r\n                            valueIdentifier: enumInfo.identifier\r\n                        })\r\n                    }\r\n\r\n                }\r\n\r\n                if (hasAttributeInitializationProgram) {\r\n                    valueInitializationProgram.statements.push({\r\n                        type: TokenType.programEnd,\r\n                        position: { line: 0, column: 0, length: 1 }\r\n                    })\r\n                }\r\n\r\n                enumClass.valueList = {\r\n                    type: new ArrayType(enumClass),\r\n                    value: valueList\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    timerEvents: number = 0;\r\n    start(callback?: () => void) {\r\n\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n\r\n        this.callbackAfterExecution = callback;\r\n\r\n        this.isFirstStatement = true;\r\n\r\n        if (this.state == InterpreterState.error || this.state == InterpreterState.done) {\r\n            this.init();\r\n            this.resetRuntime();\r\n        }\r\n\r\n        this.setState(InterpreterState.running);\r\n\r\n        this.hideProgrampointerPosition();\r\n\r\n        this.timeWhenProgramStarted = performance.now();\r\n        this.timerStopped = false;\r\n\r\n    }\r\n\r\n\r\n    lastStepTime: number = 0;\r\n    lastTimeBetweenEvents: number = 0;\r\n\r\n    timerFunction(timerDelayMs: number, forceRun: boolean, maxWorkloadFactor: number) {\r\n\r\n        let t0 = performance.now();\r\n\r\n        if (!forceRun) {\r\n            let timeBetweenSteps = 1000 / this.stepsPerSecond;\r\n            if (this.timerStopped || t0 - this.lastStepTime < timeBetweenSteps) return;\r\n            this.lastStepTime = t0;\r\n        }\r\n\r\n        this.lastTimeBetweenEvents = t0 - this.lastStepTime;\r\n\r\n        let n_stepsPerTimerGoal = forceRun ? Number.MAX_SAFE_INTEGER : this.stepsPerSecond * this.timerDelayMs / 1000;\r\n\r\n        this.timerEvents++;\r\n\r\n        let exception: string;\r\n        let i = 0;\r\n\r\n        while (i < n_stepsPerTimerGoal && !this.timerStopped && exception == null &&\r\n            (performance.now() - t0) / timerDelayMs < maxWorkloadFactor\r\n        ) {\r\n            exception = this.nextStep();\r\n            if (exception != null) {\r\n                break;\r\n            }\r\n\r\n            if (this.stepsPerSecond <= this.showProgrampointerUptoStepsPerSecond && !forceRun) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n\r\n            if (this.state == InterpreterState.error ||\r\n                this.state == InterpreterState.done) {\r\n                this.timerStopped = true;\r\n            }\r\n\r\n\r\n            if (this.stepOverNestingLevel < 0 && !this.timerStopped) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n                let position = node.position;\r\n                if (position == null || position.line != this.leaveLine) {\r\n                    this.timerStopped = true;\r\n                    this.setState(InterpreterState.paused);\r\n\r\n                    if (this.comesStatement(TokenType.closeStackframe)) {\r\n                        exception = this.nextStep();\r\n                        if (exception == null && this.comesStatement(TokenType.programEnd)) {\r\n                            exception = this.nextStep();\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            i++;\r\n        }\r\n\r\n        if (exception != null) {\r\n            this.throwException(exception);\r\n        }\r\n\r\n        if (this.timerStopped) {\r\n            if (this.state == InterpreterState.paused) {\r\n                this.showProgramPointerAndVariables();\r\n            }\r\n            if (this.callbackAfterExecution != null) {\r\n                this.callbackAfterExecution();\r\n                this.callbackAfterExecution = null;\r\n            }\r\n        }\r\n\r\n        let dt = performance.now() - t0;\r\n        this.timeNetto += dt;\r\n\r\n        // if (\r\n        //     this.timerEvents % 300 == 0) {\r\n        //     console.log(\"Last time between Events: \" + this.lastTimeBetweenEvents);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    throwException(exception: string) {\r\n        this.timerStopped = true;\r\n        this.setState(InterpreterState.error);\r\n\r\n        let $errorDiv = jQuery('<div class=\"jo_exception\"></div>');\r\n\r\n        let consolePresent: boolean = true;\r\n        if (this.main.isEmbedded()) {\r\n            let mainEmbedded: MainEmbedded = <MainEmbedded>this.main;\r\n            let config = mainEmbedded.config;\r\n            if (config.withBottomPanel != true && config.withConsole != true) {\r\n                consolePresent = false;\r\n                let positionString = \"\";\r\n                let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n                if (currentStatement != null) {\r\n                    let textPosition = currentStatement?.position;\r\n                    positionString = \" in Zeile \" + textPosition.line + \", Spalte \" + textPosition.column;\r\n\r\n                    this.main.getBottomDiv()?.console?.showError(this.currentProgram.module, textPosition);\r\n                }\r\n\r\n                alert(\"Fehler\" + positionString + \": \" + exception);\r\n\r\n            }\r\n        }\r\n\r\n        if (consolePresent) {\r\n            $errorDiv.append(jQuery(\"<span class='jo_error-caption'>Fehler:</span>&nbsp;\" + exception + \"<br>\"));\r\n            this.pushCurrentProgram();\r\n\r\n            let first = true;\r\n            for (let i = this.programStack.length - 1; i >= 0; i--) {\r\n\r\n                let p = this.programStack[i];\r\n                let m = (p.method instanceof Method) ? p.method.identifier : p.method;\r\n                let s: string = \"<span class='jo_error-caption'>\" + (first ? \"Ort\" : \"aufgerufen von\") + \": </span>\" + m;\r\n                if (p.textPosition != null) s += \" <span class='jo_runtimeErrorPosition'>(Z \" + p.textPosition.line + \", S \" + p.textPosition.column + \")</span>\";\r\n                s += \"<br>\";\r\n                let errorLine = jQuery(s);\r\n                if (p.textPosition != null) {\r\n                    let that = this;\r\n                    jQuery(errorLine[2]).on('mousedown', () => {\r\n                        that.main.getBottomDiv()?.console?.showError(p.program.module, p.textPosition);\r\n                    });\r\n                }\r\n                $errorDiv.append(errorLine);\r\n\r\n                first = false;\r\n                if (p.isCalledFromOutside != null) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let console = this.main.getBottomDiv()?.console;\r\n\r\n            if (console != null) {\r\n                console.writeConsoleEntry($errorDiv, null, 'rgba(255, 0, 0, 0.4');\r\n                console.showTab();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    hideProgrampointerPosition() {\r\n\r\n        if (this.state == InterpreterState.running) {\r\n\r\n            if (this.stepsPerSecond > this.showProgrampointerUptoStepsPerSecond) {\r\n                this.main.hideProgramPointerPosition();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comesStatement(statement: TokenType) {\r\n        if (this.currentProgram == null) return false;\r\n        if (this.currentProgramPosition > this.currentProgram.statements.length - 1) return false;\r\n        return this.currentProgram.statements[this.currentProgramPosition].type == statement;\r\n    }\r\n\r\n    resetRuntime() {\r\n        this.printManager.clear();\r\n        this.worldHelper?.destroyWorld();\r\n        this.processingHelper?.destroyWorld();\r\n    }\r\n\r\n    stop(restart: boolean = false) {\r\n        this.inputManager.hide();\r\n        this.pause();\r\n\r\n        if (this.worldHelper != null) {\r\n            this.worldHelper.spriteAnimations = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState(InterpreterState.done);\r\n            this.main.hideProgramPointerPosition();\r\n            if (restart) {\r\n                this.start();\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    pause() {\r\n        this.setState(InterpreterState.paused);\r\n        this.timerStopped = true;\r\n    }\r\n\r\n    lastPrintedModule: Module = null;\r\n    showProgramPointerAndVariables() {\r\n        if (this.currentProgram == null) return;\r\n        let node = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (node == null) return;\r\n        let position = node.position;\r\n        if (position != null) {\r\n            this.main.showProgramPointerPosition(this.currentProgram.module.file, position);\r\n            this.debugger.showData(this.currentProgram, position, this.stack, this.currentStackframe, this.heap);\r\n            let bottomDiv = this.main.getBottomDiv();\r\n            if (bottomDiv.programPrinter != null) {\r\n                if (this.currentProgram.module != this.lastPrintedModule) {\r\n                    this.main.getBottomDiv().printModuleToBottomDiv(null, this.currentProgram.module);\r\n                    this.lastPrintedModule = this.currentProgram.module;\r\n                }\r\n                this.main.getBottomDiv().programPrinter.showNode(node);\r\n            }\r\n        }\r\n    }\r\n\r\n    stepOut() {\r\n        this.stepOverNestingLevel = 0;\r\n        this.start();\r\n    }\r\n\r\n    oneStep(stepInto: boolean) {\r\n        this.main.getBottomDiv()?.console?.clearErrors();\r\n        this.isFirstStatement = true;\r\n        if (this.state != InterpreterState.paused) {\r\n            this.init();\r\n            if (this.state == InterpreterState.not_initialized) {\r\n                return;\r\n            }\r\n            this.resetRuntime();\r\n            this.showProgramPointerAndVariables();\r\n            this.setState(InterpreterState.paused);\r\n        } else {\r\n            this.stepOverNestingLevel = 10000;\r\n            let oldStepOverNestingLevel = this.stepOverNestingLevel;\r\n            let node = this.currentProgram.statements[this.currentProgramPosition];\r\n            let position = node.position;\r\n            let exception = this.nextStep();\r\n            if (exception != null) {\r\n                this.throwException(exception);\r\n                return;\r\n            }\r\n\r\n            if (!stepInto && this.stepOverNestingLevel > oldStepOverNestingLevel) {\r\n                this.stepOverNestingLevel = 0;\r\n                if (position != null) {\r\n                    this.leaveLine = position.line;\r\n                } else {\r\n                    this.leaveLine = -1;\r\n                }\r\n                this.start();\r\n            } else\r\n                //@ts-ignore\r\n                if (this.state == InterpreterState.done) {\r\n                    this.main.hideProgramPointerPosition();\r\n                } else {\r\n                    this.showProgramPointerAndVariables();\r\n                    //@ts-ignore\r\n                    if (this.state != InterpreterState.waitingForInput) {\r\n                        this.setState(InterpreterState.paused);\r\n                    }\r\n                }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    nextStep(): string {\r\n\r\n        let stepFinished: boolean = false;\r\n\r\n        let node: Statement;\r\n\r\n        let exception: string;\r\n\r\n        while (!stepFinished && !this.additionalStepFinishedFlag && exception == null) {\r\n\r\n\r\n            if (this.currentProgramPosition > this.currentProgram.statements.length - 1) {\r\n                this.setState(InterpreterState.done);\r\n                break;\r\n            }\r\n\r\n            node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n            if (node.stepFinished != null) {\r\n                stepFinished = node.stepFinished;\r\n            }\r\n\r\n            exception = this.executeNode(node);\r\n\r\n        }\r\n\r\n        this.additionalStepFinishedFlag = false;\r\n\r\n        this.steps++;\r\n\r\n        return exception;\r\n    }\r\n\r\n    executeNode(node: Statement): string {\r\n\r\n        if (node.breakpoint != null && !this.isFirstStatement) {\r\n            this.additionalStepFinishedFlag = true;\r\n            this.pause();\r\n            return;\r\n        }\r\n\r\n        this.isFirstStatement = false;\r\n        let stackTop = this.stack.length - 1;\r\n        let stackframeBegin = this.currentStackframe;\r\n        let stack = this.stack;\r\n        let value: Value;\r\n\r\n        switch (node.type) {\r\n            case TokenType.castValue:\r\n                let relPos = node.stackPosRelative == null ? 0 : node.stackPosRelative;\r\n                value = stack[stackTop + relPos];\r\n                stack[stackTop + relPos] = value.type.castTo(value, node.newType);\r\n                break;\r\n            case TokenType.checkCast:\r\n                value = stack[stackTop];\r\n                if (value.value == null) break;\r\n                let rto = <RuntimeObject>value.value;\r\n                if (node.newType instanceof Klass) {\r\n                    if (typeof rto == \"object\") {\r\n                        if (!rto.class.hasAncestorOrIs(node.newType)) {\r\n                            return (\"Das Objekt der Klasse \" + rto.class.identifier + \" kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    } else {\r\n                        if (typeof rto == \"number\" && [\"Integer\", \"Double\", \"Float\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zahl kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"string\" && [\"String\", \"Character\"].indexOf(node.newType.identifier) < 0) {\r\n                            return (\"Eine Zeichenkette kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        } else if (typeof rto == \"boolean\" && node.newType.identifier != \"Boolean\") {\r\n                            return (\"Ein boolescher Wert kann nicht nach \" + node.newType.identifier + \" gecastet werden.\");\r\n                        }\r\n                    }\r\n                } else if (node.newType instanceof Interface) {\r\n                    if (!(<Klass>rto.class).implementsInterface(node.newType)) {\r\n                        return (\"Das Objekt der Klasse \" + rto.class.identifier + \" implementiert nicht das Interface \" + node.newType.identifier + \".\");\r\n                    }\r\n                }\r\n                break;\r\n            case TokenType.localVariableDeclaration:\r\n                let variable = node.variable;\r\n                let type = variable.type;\r\n                value = {\r\n                    type: type,\r\n                    value: null\r\n                };\r\n                if (type instanceof PrimitiveType) {\r\n                    value.value = type.initialValue;\r\n                }\r\n                stack[variable.stackPos + stackframeBegin] = value;\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    stack.push(value);\r\n                }\r\n                break;\r\n            case TokenType.pushLocalVariableToStack:\r\n                stack.push(stack[node.stackposOfVariable + stackframeBegin]);\r\n                break;\r\n            case TokenType.popAndStoreIntoVariable:\r\n                stack[node.stackposOfVariable + stackframeBegin] = stack.pop();\r\n                break;\r\n            case TokenType.pushAttribute:\r\n                let object1 = node.useThisObject ? stack[stackframeBegin].value : stack.pop().value;\r\n                if (object1 == null) return \"Zugriff auf ein Attribut (\" + node.attributeIdentifier + \") des null-Objekts\";\r\n                let value1 = (<RuntimeObject>object1).getValue(node.attributeIdentifier);\r\n                if (value1?.updateValue != null) {\r\n                    value1.updateValue(value1);\r\n                }\r\n                stack.push(value1);\r\n                break;\r\n            case TokenType.pushArrayLength:\r\n                let a = stack.pop().value;\r\n                if (a == null) return \"Zugriff auf das length-Attribut des null-Objekts\";\r\n                stack.push({ type: intPrimitiveType, value: (<any[]>a).length });\r\n                break;\r\n            case TokenType.assignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value = value.value;\r\n                if (!node.leaveValueOnStack) {\r\n                    stack.pop();\r\n                }\r\n                break;\r\n            case TokenType.plusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value += value.value;\r\n                break;\r\n            case TokenType.minusAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value -= value.value;\r\n                break;\r\n            case TokenType.multiplicationAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value *= value.value;\r\n                break;\r\n            case TokenType.divisionAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value /= value.value;\r\n                break;\r\n            case TokenType.moduloAssignment:\r\n                value = stack.pop();\r\n                stack[stackTop - 1].value %= value.value;\r\n                break;\r\n            case TokenType.binaryOp:\r\n                let secondOperand = stack.pop();\r\n                let resultValue =\r\n                    node.leftType.compute(node.operator, stack[stackTop - 1], secondOperand);\r\n                let resultType = node.leftType.getResultType(node.operator, secondOperand.type);\r\n                stack[stackTop - 1] = {\r\n                    type: resultType,\r\n                    value: resultValue\r\n                };\r\n                break;\r\n            case TokenType.unaryOp:\r\n                let oldValue = stack.pop();\r\n                if (node.operator == TokenType.minus) {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: -oldValue.value\r\n                    })\r\n                } else {\r\n                    stack.push({\r\n                        type: oldValue.type,\r\n                        value: !oldValue.value\r\n                    })\r\n                }\r\n                break;\r\n            case TokenType.pushConstant:\r\n                stack.push({\r\n                    value: node.value,\r\n                    type: node.dataType\r\n                });\r\n                break;\r\n            case TokenType.pushStaticClassObject:\r\n                if (node.klass instanceof Klass) {\r\n                    stack.push({\r\n                        type: node.klass.staticClass,\r\n                        value: node.klass.staticClass.classObject\r\n                    });\r\n                } else {\r\n                    // This is to enable instanceof operator with interfaces\r\n                    stack.push({\r\n                        type: node.klass,\r\n                        value: node.klass\r\n                    });\r\n                }\r\n                break;\r\n            case TokenType.pushStaticAttribute:\r\n                value = node.klass.classObject.getValue(node.attributeIdentifier);\r\n                if (value.updateValue != null) {\r\n                    value.updateValue(value);\r\n                }\r\n                stack.push(value);\r\n                break;\r\n            // case TokenType.pushStaticAttributeIntrinsic:\r\n            //     value = node.\r\n            //     stack.push({ type: node.attribute.type, value: node.attribute.updateValue(null) });\r\n            //     break;\r\n            case TokenType.selectArrayElement:\r\n                let index = stack.pop();\r\n                let array = stack.pop();\r\n\r\n                if (array.value == null) return \"Zugriff auf ein Element eines null-Feldes\";\r\n\r\n                if (index.value >= array.value.length || index.value < 0) {\r\n                    return \"Zugriff auf das Element mit Index \" + index.value + \" eines Feldes der Länge \" + array.value.length;\r\n                }\r\n                stack.push(array.value[index.value]);\r\n                break;\r\n\r\n            case TokenType.callMainMethod:\r\n                this.stack.push({ value: node.staticClass.classObject, type: node.staticClass });\r\n\r\n                let parameter: Value = {\r\n                    value: [{ value: \"Test\", type: stringPrimitiveType }],\r\n                    type: new ArrayType(stringPrimitiveType)\r\n                };\r\n                let parameterBegin2 = stackTop + 2; // 1 parameter\r\n\r\n                this.stack.push(parameter);\r\n\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.programStack.push({\r\n                    program: this.currentProgram,\r\n                    programPosition: this.currentProgramPosition + 1,\r\n                    textPosition: node.position,\r\n                    method: this.currentMethod,\r\n                    callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                    isCalledFromOutside: null\r\n                });\r\n\r\n                this.currentCallbackAfterReturn = null;\r\n                this.currentStackframe = parameterBegin2;\r\n\r\n                this.currentProgram = node.method.program;\r\n                this.currentMethod = node.method;\r\n                this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                for (let i = 0; i < node.method.reserveStackForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n\r\n                // this.stepOverNestingLevel++;\r\n\r\n                break;\r\n            case TokenType.makeEllipsisArray:\r\n                let ellipsisArray: Value[] = stack.splice(stack.length - node.parameterCount, node.parameterCount);\r\n\r\n                stack.push({\r\n                    value: ellipsisArray,\r\n                    type: node.arrayType\r\n                })\r\n\r\n                break;\r\n            case TokenType.callMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method = node.method;\r\n\r\n                let parameterBegin = stackTop + 1 + node.stackframeBegin;\r\n                let parameters1 = method.parameterlist.parameters;\r\n                for (let i = parameterBegin + 1; i <= stackTop; i++) {\r\n                    if (this.stack[i] != null && this.stack[i].type instanceof PrimitiveType) {\r\n                        stack[i] = {\r\n                            type: parameters1[i - parameterBegin - 1].type,  // cast to parameter type...\r\n                            value: stack[i].value\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (stack[parameterBegin].value == null && !method.isStatic) {\r\n                    return \"Aufruf der Methode \" + method.identifier + \" des null-Objekts\";\r\n                }\r\n\r\n                if (method.isAbstract || method.isVirtual && !node.isSuperCall) {\r\n                    let object = stack[parameterBegin];\r\n                    method = (<Klass>(<RuntimeObject>object.value).class).getMethodBySignature(method.signature);\r\n                }\r\n\r\n                if (method == null) {\r\n                    // TODO: raise runtime error\r\n                    break;\r\n                }\r\n\r\n                if (method.invoke != null) {\r\n                    let rt = method.getReturnType();\r\n                    let parameters = stack.splice(parameterBegin);\r\n                    let returnValue = method.invoke(parameters);\r\n                    if (rt != null) {\r\n                        stack.push({\r\n                            value: returnValue,\r\n                            type: rt\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.stackframes.push(this.currentStackframe);\r\n                    this.programStack.push({\r\n                        program: this.currentProgram,\r\n                        programPosition: this.currentProgramPosition + 1,\r\n                        textPosition: node.position,\r\n                        method: this.currentMethod,\r\n                        callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                        isCalledFromOutside: null\r\n                    });\r\n\r\n                    this.currentCallbackAfterReturn = null;\r\n                    this.currentStackframe = parameterBegin;\r\n\r\n                    this.currentProgram = method.program;\r\n                    this.currentMethod = method;\r\n                    this.currentProgramPosition = -1; // gets increased after switch statement...\r\n\r\n                    for (let i = 0; i < method.reserveStackForLocalVariables; i++) {\r\n                        stack.push(null);\r\n                    }\r\n\r\n                    this.stepOverNestingLevel++;\r\n                    this.additionalStepFinishedFlag = true;\r\n                }\r\n                break;\r\n            case TokenType.callInputMethod:\r\n\r\n                // node.stackframebegin = -(parameters.parameterTypes.length + 1)\r\n                let method1 = node.method;\r\n\r\n                let parameterBegin1 = stackTop + 1 + node.stackframeBegin;\r\n\r\n                let parameters = stack.splice(parameterBegin1);\r\n\r\n                this.timerStopped = true;\r\n                let oldState = this.state;\r\n                this.setState(InterpreterState.waitingForInput);\r\n                // this.main.showProgramPointerPosition(this.currentProgram.module.file, node.position);\r\n                this.showProgramPointerAndVariables();\r\n\r\n                let that = this;\r\n                this.inputManager.readInput(method1, parameters, (value: Value) => {\r\n                    stack.push(value);\r\n                    this.main.hideProgramPointerPosition();\r\n                    that.setState(InterpreterState.paused);\r\n                    if (oldState == InterpreterState.running) {\r\n                        that.start();\r\n                    } else {\r\n                        that.showProgramPointerAndVariables();\r\n                        // that.oneStep(false);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case TokenType.return:\r\n                this.return(node, stack);\r\n                break;\r\n            case TokenType.decreaseStackpointer:\r\n                stack.splice(stackTop + 1 - node.popCount);\r\n                break;\r\n            case TokenType.initStackframe:\r\n                this.stackframes.push(this.currentStackframe);\r\n                this.currentStackframe = stackTop + 1;\r\n                for (let i = 0; i < node.reserveForLocalVariables; i++) {\r\n                    stack.push(null);\r\n                }\r\n                break;\r\n            case TokenType.closeStackframe:\r\n                stack.splice(stackframeBegin);\r\n                this.currentStackframe = this.stackframes.pop();\r\n                break;\r\n            case TokenType.newObject:\r\n                let object = new RuntimeObject(node.class);\r\n                object.initializeAttributeValues();\r\n\r\n                value = {\r\n                    value: object,\r\n                    type: node.class\r\n                };\r\n\r\n                stack.push(value);\r\n                if (node.subsequentConstructorCall) {\r\n                    stack.push(value);\r\n                    stackTop++;\r\n                }\r\n\r\n                let klass: Klass = node.class;\r\n\r\n                while (klass != null) {\r\n                    let aip = klass.attributeInitializationProgram;\r\n                    if (aip.statements.length > 0) {\r\n\r\n                        this.stackframes.push(this.currentStackframe);\r\n                        this.programStack.push({\r\n                            program: this.currentProgram,\r\n                            programPosition: this.currentProgramPosition + 1,\r\n                            textPosition: node.position,\r\n                            method: this.currentMethod,\r\n                            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n                            isCalledFromOutside: null\r\n                        });\r\n\r\n                        this.currentCallbackAfterReturn = null;\r\n                        this.currentStackframe = stackTop + 1;\r\n\r\n                        this.currentProgram = aip;\r\n                        this.currentProgramPosition = -1;\r\n                        this.currentMethod = \"Konstruktor von \" + klass.identifier;\r\n                        this.stepOverNestingLevel++;\r\n\r\n                        this.additionalStepFinishedFlag = true;\r\n\r\n                    }\r\n                    klass = klass.baseClass;\r\n                }\r\n\r\n                // N.B.: constructor call is next statement\r\n\r\n                break;\r\n            case TokenType.processPostConstructorCallbacks:\r\n                value = stack[stackTop];\r\n                let classType = <Klass>value.type;\r\n                for (let pcc of classType.getPostConstructorCallbacks()) {\r\n                    pcc(value.value);\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopInit:\r\n                stack[node.stackPosOfCounter + stackframeBegin] = {\r\n                    type: intPrimitiveType,\r\n                    value: 0\r\n                }\r\n                break;\r\n            case TokenType.extendedForLoopCheckCounterAndGetElement:\r\n                let counter: number = stack[node.stackPosOfCounter + stackframeBegin].value++;\r\n                let collection = stack[node.stackPosOfCollection + stackframeBegin].value;\r\n\r\n                switch (node.kind) {\r\n                    case \"array\":\r\n                        if (counter < (<any[]>collection).length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = (<any[]>collection)[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = (<any[]>collection)[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"internalList\":\r\n                        let list: any[] = (<ListHelper>(<RuntimeObject>collection).intrinsicData[\"ListHelper\"]).valueArray;\r\n                        if (counter < list.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list[counter].value;\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list[counter].type;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        let list1: any[] = (<GroupHelper>(<RuntimeObject>collection).intrinsicData[\"Actor\"]).shapes;\r\n                        if (counter < list1.length) {\r\n                            stack[node.stackPosOfElement + stackframeBegin].value = list1[counter];\r\n                            stack[node.stackPosOfElement + stackframeBegin].type = list1[counter].klass;\r\n                        } else {\r\n                            this.currentProgramPosition = node.destination - 1;\r\n                        }\r\n                        break;\r\n                }\r\n                break;\r\n            case TokenType.incrementDecrementBefore:\r\n                value = stack[stackTop];\r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.incrementDecrementAfter:\r\n                value = stack[stackTop];\r\n                // replace value by copy:\r\n                stack[stackTop] = {\r\n                    value: value.value,\r\n                    type: value.type\r\n                };\r\n                // increment value which is not involved in subsequent \r\n                value.value += node.incrementDecrementBy;\r\n                break;\r\n            case TokenType.jumpAlways:\r\n                this.currentProgramPosition = node.destination - 1;\r\n                break;\r\n            case TokenType.jumpIfTrue:\r\n                value = stack.pop();\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalse:\r\n                value = stack.pop();\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfTrueAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (<boolean>value.value) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.jumpIfFalseAndLeaveOnStack:\r\n                value = stack[stackTop];\r\n                if (!(<boolean>value.value)) {\r\n                    this.currentProgramPosition = node.destination - 1;\r\n                }\r\n                break;\r\n            case TokenType.noOp:\r\n                break;\r\n            case TokenType.programEnd:\r\n\r\n                if (this.programStack.length > 0) {\r\n                    this.popProgram();\r\n                    this.currentProgramPosition--; // gets increased later on after switch ends\r\n                    this.additionalStepFinishedFlag = true;\r\n                    this.leaveLine = -1;\r\n\r\n                    if (node.pauseAfterProgramEnd) {\r\n                        this.stepOverNestingLevel = -1;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if ((this.worldHelper != null && this.worldHelper.actActors.length > 0) || this.processingHelper != null) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                let baseModule = this.main.getCurrentWorkspace().moduleStore.getModule(\"Base Module\");\r\n                let timerClass: TimerClass = <TimerClass>baseModule.typeStore.getType(\"Timer\");\r\n                if (timerClass.timerEntries.length > 0) {\r\n                    this.currentProgramPosition--;\r\n                    break\r\n                }\r\n\r\n                this.setState(InterpreterState.done);\r\n                this.currentProgram = null;\r\n                this.currentProgramPosition = -1;\r\n                this.additionalStepFinishedFlag = true;\r\n\r\n                Helper.showHelper(\"speedControlHelper\", this.main);\r\n\r\n                this.printManager.showProgramEnd();\r\n\r\n                if (this.worldHelper != null) {\r\n                    this.worldHelper.spriteAnimations = [];\r\n                }\r\n\r\n                this.main.hideProgramPointerPosition();\r\n\r\n                if (this.steps > 0) {\r\n                    let dt = performance.now() - this.timeWhenProgramStarted;\r\n                    let message = 'Executed ' + this.steps + ' steps in ' + this.round(dt)\r\n                        + ' ms (' + this.round(this.steps / dt * 1000) + ' steps/s)';\r\n                    this.main.getBottomDiv()?.console?.writeConsoleEntry(message, null);\r\n                    // console.log(this.timerEvents + \" TimeEvents in \" + dt + \" ms ergibt ein Event alle \" + dt/this.timerEvents + \" ms.\");\r\n                    // console.log(\"Vorgegebene Timerfrequenz: Alle \" + this.timerDelayMs + \" ms\");\r\n                    this.steps = -1;\r\n                }\r\n                this.currentProgramPosition--;\r\n                break;\r\n            case TokenType.print:\r\n            case TokenType.println:\r\n                let text = null;\r\n                let color = null;\r\n                if (node.withColor) color = <string | number>stack.pop().value;\r\n                if (!node.empty) text = <string>stack.pop().value;\r\n                if (node.type == TokenType.println) {\r\n                    this.printManager.println(text, color);\r\n                } else {\r\n                    this.printManager.print(text, color);\r\n                }\r\n                break;\r\n            case TokenType.pushEmptyArray:\r\n                let counts: number[] = [];\r\n                for (let i = 0; i < node.dimension; i++) {\r\n                    counts.push(<number>stack.pop().value);\r\n                }\r\n                stack.push(this.makeEmptyArray(counts, node.arrayType));\r\n                break;\r\n            case TokenType.beginArray:\r\n                stack.push({\r\n                    type: node.arrayType,\r\n                    value: []\r\n                });\r\n                break;\r\n            case TokenType.addToArray:\r\n                stackTop -= node.numberOfElementsToAdd;\r\n                // let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd);\r\n                let values: Value[] = stack.splice(stackTop + 1, node.numberOfElementsToAdd).map(tvo => ({type: tvo.type, value: tvo.value}));                \r\n                stack[stackTop].value = (<any[]>stack[stackTop].value).concat(values);\r\n                break;\r\n            case TokenType.pushEnumValue:\r\n                let enumInfo = node.enumClass.identifierToInfoMap[node.valueIdentifier];\r\n                stack.push(node.enumClass.valueList.value[enumInfo.ordinal]);\r\n                break;\r\n            case TokenType.keywordSwitch:\r\n                let switchValue = stack.pop().value;\r\n                let destination = node.destinationMap[switchValue];\r\n                if (destination != null) {\r\n                    this.currentProgramPosition = destination - 1; // it will be increased after this switch-statement!\r\n                } else {\r\n                    if (node.defaultDestination != null) {\r\n                        this.currentProgramPosition = node.defaultDestination - 1;\r\n                    }\r\n                    // there's a jumpnode after this node which jumps right after last switch case,\r\n                    // so there's nothing more to do here.\r\n                }\r\n                break;\r\n            case TokenType.heapVariableDeclaration:\r\n\r\n                let v = node.variable;\r\n                this.heap[v.identifier] = v;\r\n                v.value = {\r\n                    type: v.type,\r\n                    value: (v.type instanceof PrimitiveType) ? v.type.initialValue : null\r\n                }\r\n                if (node.pushOnTopOfStackForInitialization) {\r\n                    this.stack.push(v.value);\r\n                }\r\n\r\n                break;\r\n            case TokenType.pushFromHeapToStack:\r\n                let v1 = this.heap[node.identifier];\r\n                if (v1 != null) {\r\n                    this.stack.push(v1.value);\r\n                } else {\r\n                    return \"Die Variable \" + node.identifier + \" ist nicht bekannt.\";\r\n                }\r\n                break;\r\n            case TokenType.returnIfDestroyed:\r\n                let shapeRuntimeObject: RuntimeObject = this.stack[stackframeBegin].value;\r\n                if (shapeRuntimeObject != null) {\r\n                    let shape = shapeRuntimeObject.intrinsicData[\"Actor\"];\r\n                    if (shape[\"isDestroyed\"] == true) {\r\n                        this.return(null, stack);\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n\r\n        this.currentProgramPosition++;\r\n\r\n    }\r\n    return(node: ReturnStatement | null, stack: Value[]) {\r\n\r\n        let currentCallbackAfterReturn = this.currentCallbackAfterReturn;\r\n\r\n        if (node != null && node.copyReturnValueToStackframePos0) {\r\n            let returnValue: Value = stack.pop();\r\n            stack[this.currentStackframe] = returnValue;\r\n            stack.splice(this.currentStackframe + 1);\r\n        } else {\r\n            stack.splice(this.currentStackframe + ((node != null && node.leaveThisObjectOnStack) ? 1 : 0));\r\n        }\r\n\r\n        this.currentStackframe = this.stackframes.pop();\r\n\r\n        this.popProgram();\r\n        if (node != null && node.methodWasInjected == true) this.currentProgramPosition++;\r\n        this.currentProgramPosition--;  // position gets increased by one at the end of this switch-statement, so ... - 1\r\n        this.stepOverNestingLevel--;\r\n\r\n        if (currentCallbackAfterReturn != null) {\r\n            currentCallbackAfterReturn(this);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    makeEmptyArray(counts: number[], type: Type): Value {\r\n        let type1 = (<ArrayType>type).arrayOfType;\r\n        if (counts.length == 1) {\r\n            let array: Value[] = [];\r\n            for (let i = 0; i < counts[0]; i++) {\r\n                let v = {\r\n                    type: type1,\r\n                    value: null\r\n                };\r\n\r\n                if (type1 instanceof PrimitiveType) {\r\n                    v.value = type1.initialValue;\r\n                }\r\n\r\n                array.push(v);\r\n\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        } else {\r\n            let array: Value[] = [];\r\n            let n = counts.pop();\r\n            for (let i = 0; i < n; i++) {\r\n                array.push(this.makeEmptyArray(counts, type1));\r\n            }\r\n            return {\r\n                type: type,\r\n                value: array\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    round(n: number): string {\r\n        return \"\" + Math.round(n * 10000) / 10000;\r\n    }\r\n\r\n    runningStates: InterpreterState[] = [InterpreterState.paused, InterpreterState.running, InterpreterState.waitingForInput];\r\n\r\n    setState(state: InterpreterState) {\r\n\r\n        // console.log(\"Set state \" + InterpreterState[state]);\r\n\r\n        let oldState = this.state;\r\n        this.state = state;\r\n\r\n        if (state == InterpreterState.error || state == InterpreterState.done) {\r\n            this.webSocketsToCloseAfterProgramHalt.forEach(socket => socket.close());\r\n            this.webSocketsToCloseAfterProgramHalt = [];\r\n        }\r\n\r\n        let am = this.main.getActionManager();\r\n\r\n        for (let actionId of this.actions) {\r\n            am.setActive(\"interpreter.\" + actionId, this.buttonActiveMatrix[actionId][state]);\r\n        }\r\n\r\n        let buttonStartActive = this.buttonActiveMatrix['start'][state];\r\n\r\n        if (buttonStartActive) {\r\n            this.controlButtons.$buttonStart.show();\r\n            this.controlButtons.$buttonPause.hide();\r\n        } else {\r\n            this.controlButtons.$buttonStart.hide();\r\n            this.controlButtons.$buttonPause.show();\r\n        }\r\n\r\n        let buttonStopActive = this.buttonActiveMatrix['stop'][state];\r\n        if (buttonStopActive) {\r\n            // this.controlButtons.$buttonEdit.show();\r\n        } else {\r\n            // this.controlButtons.$buttonEdit.hide();\r\n            if (this.worldHelper != null) {\r\n                this.worldHelper.clearActorLists();\r\n            }\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) >= 0 && this.runningStates.indexOf(state) < 0) {\r\n            this.debugger.disable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: false });\r\n            this.keyboardTool.unsubscribeAllListeners();\r\n        }\r\n\r\n        if (this.runningStates.indexOf(oldState) < 0 && this.runningStates.indexOf(state) >= 0) {\r\n            this.debugger.enable();\r\n            // this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n        }\r\n\r\n    }\r\n\r\n    pushCurrentProgram() {\r\n\r\n        if (this.currentProgram == null) return;\r\n\r\n        let textPosition: TextPosition;\r\n        let currentStatement = this.currentProgram.statements[this.currentProgramPosition];\r\n        if (currentStatement != null) {\r\n            textPosition = currentStatement.position;\r\n        }\r\n\r\n        this.programStack.push({\r\n            program: this.currentProgram,\r\n            programPosition: this.currentProgramPosition,\r\n            textPosition: textPosition,\r\n            method: this.currentMethod,\r\n            callbackAfterReturn: this.currentCallbackAfterReturn,\r\n            isCalledFromOutside: this.currentIsCalledFromOutside\r\n        })\r\n\r\n        this.currentCallbackAfterReturn = null;\r\n        this.currentIsCalledFromOutside = null;\r\n\r\n    }\r\n\r\n    // runTimer(method: Method, stackElements: Value[],\r\n    //     callbackAfterReturn: (interpreter: Interpreter) => void) {\r\n\r\n    //     if(this.state != InterpreterState.running){\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.pushCurrentProgram();\r\n\r\n    //     this.currentProgram = method.program;\r\n    //     this.currentMethod = method;\r\n    //     this.currentProgramPosition = 0;\r\n    //     this.currentCallbackAfterReturn = callbackAfterReturn;\r\n    //     this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n    //     this.stackframes.push(this.currentStackframe);\r\n    //     this.currentStackframe = this.stack.length;\r\n    //     for (let se of stackElements) this.stack.push(se);\r\n    //     let statements = method.program.statements;\r\n\r\n    //     // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n    //     // beforehand to compensate this effect.\r\n    //     if(statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n    // }\r\n\r\n    runTimer(method: Method, stackElements: Value[],\r\n        callbackAfterReturn: (interpreter: Interpreter) => void, isActor: boolean) {\r\n\r\n        if (this.state != InterpreterState.running) {\r\n            return;\r\n        }\r\n\r\n        let statements = method.program.statements;\r\n\r\n        if (isActor || this.programStack.length == 0) {\r\n            // Main Program is running => Timer has higher precedence\r\n            this.pushCurrentProgram();\r\n\r\n            this.currentProgram = method.program;\r\n            this.currentMethod = method;\r\n            this.currentProgramPosition = 0;\r\n            this.currentCallbackAfterReturn = callbackAfterReturn;\r\n            this.currentIsCalledFromOutside = \"Timer\";\r\n\r\n            this.stackframes.push(this.currentStackframe);\r\n            this.currentStackframe = this.stack.length;\r\n            this.stack = this.stack.concat(stackElements);\r\n            // for (let se of stackElements) this.stack.push(se);\r\n\r\n            // if program ends with return then this return-statement decreases stepOverNestingLevel. So we increase it\r\n            // beforehand to compensate this effect.\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n        } else {\r\n            // another Timer is running => queue up\r\n            // position 0 in program stack is main program\r\n            // => insert timer in position 1\r\n\r\n            this.programStack.splice(1, 0, {\r\n                program: method.program,\r\n                programPosition: 0,\r\n                textPosition: { line: 0, column: 0, length: 0 },\r\n                method: method,\r\n                callbackAfterReturn: callbackAfterReturn,\r\n                isCalledFromOutside: \"Timer\",\r\n                stackElementsToPushBeforeFirstExecuting: stackElements\r\n            });\r\n\r\n            if (statements[statements.length - 1].type == TokenType.return) this.stepOverNestingLevel++;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    evaluate(program: Program): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let stacksizeBefore = this.stack.length;\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n        let oldStackframe = this.currentStackframe;\r\n\r\n        let error: string;\r\n        let stepCount = 0;\r\n\r\n        try {\r\n            while (error == null &&\r\n                (this.currentProgram != program || this.currentProgramPosition <\r\n                    this.currentProgram.statements.length)\r\n                && stepCount < 100000\r\n                // && this.currentProgram == program\r\n            ) {\r\n                error = this.nextStep();\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (this.currentProgram == program && this.programStack.length > 0) {\r\n            this.popProgram();\r\n        }\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    executeImmediatelyInNewStackframe(program: Program, valuesToPushBeforeExecuting: Value[]): { error: string, value: Value } {\r\n\r\n        this.pushCurrentProgram();\r\n\r\n        this.currentProgram = program;\r\n        let oldProgramPosition = this.currentProgramPosition;\r\n        this.currentProgramPosition = 0;\r\n\r\n        let numberOfStackframesBefore = this.stackframes.length;\r\n        this.stackframes.push(this.currentStackframe);\r\n        let stacksizeBefore = this.stack.length;\r\n        this.currentStackframe = stacksizeBefore;\r\n\r\n        for (let v of valuesToPushBeforeExecuting) this.stack.push(v);\r\n\r\n        let oldInterpreterState = this.state;\r\n        let stepOverNestingLevel = this.stepOverNestingLevel;\r\n        let additionalStepFinishedFlag = this.additionalStepFinishedFlag;\r\n\r\n\r\n        let stepCount = 0;\r\n        let error = null;\r\n\r\n        try {\r\n            while (this.stackframes.length > numberOfStackframesBefore\r\n                && stepCount < 100000 && error == null\r\n            ) {\r\n                let node = this.currentProgram.statements[this.currentProgramPosition];\r\n\r\n                error = this.executeNode(node);\r\n                stepCount++;\r\n            }\r\n        } catch (e) {\r\n            error = \"Fehler bei der Auswertung\";\r\n        }\r\n\r\n        if (stepCount == 100000) this.throwException(\"Die Ausführung des Konstruktors dauerte zu lange.\");\r\n\r\n        let stackTop: Value;\r\n        if (this.stack.length > stacksizeBefore) {\r\n            stackTop = this.stack.pop();\r\n\r\n            while (this.stack.length > stacksizeBefore) {\r\n                this.stack.pop();\r\n            }\r\n\r\n        }\r\n\r\n        this.stepOverNestingLevel = stepOverNestingLevel;\r\n        this.additionalStepFinishedFlag = additionalStepFinishedFlag;\r\n        // this.currentProgramPosition++;\r\n\r\n        this.currentProgramPosition = oldProgramPosition;\r\n        this.setState(oldInterpreterState);\r\n\r\n        return {\r\n            error: error,\r\n            value: stackTop\r\n        }\r\n\r\n    }\r\n\r\n    instantiateObjectImmediately(klass: Klass): RuntimeObject {\r\n        let object = new RuntimeObject(klass);\r\n        object.initializeAttributeValues();\r\n\r\n        let value = {\r\n            value: object,\r\n            type: klass\r\n        };\r\n\r\n        let klass1 = klass;\r\n\r\n        while (klass1 != null) {\r\n            let aip = klass1.attributeInitializationProgram;\r\n            if (aip.statements.length > 0) {\r\n\r\n                this.executeImmediatelyInNewStackframe(aip, [value]);\r\n\r\n            }\r\n            klass1 = klass1.baseClass;\r\n        }\r\n\r\n        let constructor = klass.getMethodBySignature(klass.identifier + \"()\");\r\n        if (constructor != null && constructor.program != null) {\r\n            // let programWithoutReturnStatement: Program = {\r\n            //     labelManager: null,\r\n            //     module: constructor.program.module,\r\n            //     statements: constructor.program.statements.slice(0, constructor.program.statements.length - 1)\r\n            // };\r\n            this.executeImmediatelyInNewStackframe(constructor.program, [value]);\r\n        }\r\n\r\n        return object;\r\n\r\n    }\r\n\r\n}","export class ColorHelper {\r\n\r\n    static predefinedColors = {\r\n        \"aliceblue\": 0xF0F8FF,\r\n        \"antiquewhite\": 0xFAEBD7,\r\n        \"aqua\": 0x00FFFF,\r\n        \"aquamarine\": 0x7FFFD4,\r\n        \"azure\": 0xF0FFFF,\r\n        \"beige\": 0xF5F5DC,\r\n        \"bisque\": 0xFFE4C4,\r\n        \"black\": 0x000000,\r\n        \"blanchedAlmond\": 0xFFEBCD,\r\n        \"blue\": 0x0000FF,\r\n        \"blueviolet\": 0x8A2BE2,\r\n        \"brown\": 0xA52A2A,\r\n        \"burlywood\": 0xDEB887,\r\n        \"cadetblue\": 0x5F9EA0,\r\n        \"chartreuse\": 0x7FFF00,\r\n        \"chocolate\": 0xD2691E,\r\n        \"coral\": 0xFF7F50,\r\n        \"cornflowerblue\": 0x6495ED,\r\n        \"cornsilk\": 0xFFF8DC,\r\n        \"crimson\": 0xDC143C,\r\n        \"cyan\": 0x00FFFF,\r\n        \"darkblue\": 0x00008B,\r\n        \"darkcyan\": 0x008B8B,\r\n        \"darkgoldenrod\": 0xB8860B,\r\n        \"darkgray\": 0xA9A9A9,\r\n        \"darkgrey\": 0xA9A9A9,\r\n        \"darkgreen\": 0x006400,\r\n        \"darkkhaki\": 0xBDB76B,\r\n        \"darkmagenta\": 0x8B008B,\r\n        \"darkolivegreen\": 0x556B2F,\r\n        \"darkorange\": 0xFF8C00,\r\n        \"darkorchid\": 0x9932CC,\r\n        \"darkred\": 0x8B0000,\r\n        \"darksalmon\": 0xE9967A,\r\n        \"darkseagreen\": 0x8FBC8F,\r\n        \"darkslateblue\": 0x483D8B,\r\n        \"darkslategray\": 0x2F4F4F,\r\n        \"darkslategrey\": 0x2F4F4F,\r\n        \"darkturquoise\": 0x00CED1,\r\n        \"darkviolet\": 0x9400D3,\r\n        \"deeppink\": 0xFF1493,\r\n        \"deepskyblue\": 0x00BFFF,\r\n        \"dimgray\": 0x696969,\r\n        \"dimgrey\": 0x696969,\r\n        \"dodgerblue\": 0x1E90FF,\r\n        \"firebrick\": 0xB22222,\r\n        \"floralwhite\": 0xFFFAF0,\r\n        \"forestgreen\": 0x228B22,\r\n        \"fuchsia\": 0xFF00FF,\r\n        \"gainsboro\": 0xDCDCDC,\r\n        \"ghostwhite\": 0xF8F8FF,\r\n        \"gold\": 0xFFD700,\r\n        \"goldenrod\": 0xDAA520,\r\n        \"gray\": 0x808080,\r\n        \"grau\": 0x808080,\r\n        \"green\": 0x008000,\r\n        \"greenyellow\": 0xADFF2F,\r\n        \"honeydew\": 0xF0FFF0,\r\n        \"hotpink\": 0xFF69B4,\r\n        \"indianred \": 0xCD5C5C,\r\n        \"indigo \": 0x4B0082,\r\n        \"ivory\": 0xFFFFF0,\r\n        \"khaki\": 0xF0E68C,\r\n        \"lavender\": 0xE6E6FA,\r\n        \"lavenderblush\": 0xFFF0F5,\r\n        \"lawngreen\": 0x7CFC00,\r\n        \"lemonchiffon\": 0xFFFACD,\r\n        \"lightblue\": 0xADD8E6,\r\n        \"lightcoral\": 0xF08080,\r\n        \"lightcyan\": 0xE0FFFF,\r\n        \"lightgoldenrodyellow\": 0xFAFAD2,\r\n        \"lightgray\": 0xD3D3D3,\r\n        \"lightgrey\": 0xD3D3D3,\r\n        \"lightgreen\": 0x90EE90,\r\n        \"lightpink\": 0xFFB6C1,\r\n        \"lightsalmon\": 0xFFA07A,\r\n        \"lightseagreen\": 0x20B2AA,\r\n        \"lightskyblue\": 0x87CEFA,\r\n        \"lightslategray\": 0x778899,\r\n        \"lightslategrey\": 0x778899,\r\n        \"lightsteelblue\": 0xB0C4DE,\r\n        \"lightyellow\": 0xFFFFE0,\r\n        \"lime\": 0x00FF00,\r\n        \"limegreen\": 0x32CD32,\r\n        \"linen\": 0xFAF0E6,\r\n        \"magenta\": 0xFF00FF,\r\n        \"maroon\": 0x800000,\r\n        \"mediumaquamarine\": 0x66CDAA,\r\n        \"mediumblue\": 0x0000CD,\r\n        \"mediumorchid\": 0xBA55D3,\r\n        \"mediumpurple\": 0x9370DB,\r\n        \"mediumseagreen\": 0x3CB371,\r\n        \"mediumslateblue\": 0x7B68EE,\r\n        \"mediumspringgreen\": 0x00FA9A,\r\n        \"mediumturquoise\": 0x48D1CC,\r\n        \"mediumvioletred\": 0xC71585,\r\n        \"midnightblue\": 0x191970,\r\n        \"mintcream\": 0xF5FFFA,\r\n        \"mistyrose\": 0xFFE4E1,\r\n        \"moccasin\": 0xFFE4B5,\r\n        \"navajowhite\": 0xFFDEAD,\r\n        \"navy\": 0x000080,\r\n        \"oldLace\": 0xFDF5E6,\r\n        \"olive\": 0x808000,\r\n        \"olivedrab\": 0x6B8E23,\r\n        \"orange\": 0xFFA500,\r\n        \"orangered\": 0xFF4500,\r\n        \"orchid\": 0xDA70D6,\r\n        \"palegoldenrod\": 0xEEE8AA,\r\n        \"palegreen\": 0x98FB98,\r\n        \"paleturquoise\": 0xAFEEEE,\r\n        \"palevioletred\": 0xDB7093,\r\n        \"papayawhip\": 0xFFEFD5,\r\n        \"peachpuff\": 0xFFDAB9,\r\n        \"peru\": 0xCD853F,\r\n        \"pink\": 0xFFC0CB,\r\n        \"plum\": 0xDDA0DD,\r\n        \"powderblue\": 0xB0E0E6,\r\n        \"purple\": 0x800080,\r\n        \"rebeccapurple\": 0x663399,\r\n        \"red\": 0xFF0000,\r\n        \"rosybrown\": 0xBC8F8F,\r\n        \"royalblue\": 0x4169E1,\r\n        \"saddlebrown\": 0x8B4513,\r\n        \"salmon\": 0xFA8072,\r\n        \"sandybrown\": 0xF4A460,\r\n        \"sand\": 0xF4A460,\r\n        \"seagreen\": 0x2E8B57,\r\n        \"seashell\": 0xFFF5EE,\r\n        \"sienna\": 0xA0522D,\r\n        \"silver\": 0xC0C0C0,\r\n        \"skyblue\": 0x87CEEB,\r\n        \"slateblue\": 0x6A5ACD,\r\n        \"slategray\": 0x708090,\r\n        \"slategrey\": 0x708090,\r\n        \"snow\": 0xFFFAFA,\r\n        \"springgreen\": 0x00FF7F,\r\n        \"steelblue\": 0x4682B4,\r\n        \"tan\": 0xD2B48C,\r\n        \"teal\": 0x008080,\r\n        \"thistle\": 0xD8BFD8,\r\n        \"tomato\": 0xFF6347,\r\n        \"turquoise\": 0x40E0D0,\r\n        \"violet\": 0xEE82EE,\r\n        \"wheat\": 0xF5DEB3,\r\n        \"white\": 0xFFFFFF,\r\n        \"whitesmoke\": 0xF5F5F5,\r\n        \"yellow\": 0xFFFF00,\r\n        \"yellowgreen\": 0x9ACD32,\r\n    };\r\n\r\n    static intColorToHexRGB(color: number) {\r\n        if(color == null){\r\n            return \"---\";\r\n        } else {\r\n            let s: string = color.toString(16);\r\n            while (s.length < 6) s = \"0\" + s;\r\n            return \"#\" + s;\r\n        }\r\n    }\r\n\r\n    static intColorToRGB(color: number) {\r\n        if(color == null) {return \"---\";} else\r\n        {return \"rgb(\" + ((color & 0xff0000) >> 16) + \", \" + ((color & 0xff00) >> 8) + \", \" + (color & 0xff) + \")\";}\r\n    }\r\n\r\n    static parseColorToOpenGL(color: string): { color: number, alpha: number } {\r\n\r\n        if(color == null){\r\n            return {\r\n                color: null,\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        let c = this.predefinedColors[color];\r\n        if (c != null) return { color: c, alpha: 1 };\r\n\r\n        // see https://stackoverflow.com/questions/11068240/what-is-the-most-efficient-way-to-parse-a-css-color-in-javascript\r\n\r\n        let m2 = color.match(/^#([0-9a-f]{6})$/i);\r\n        if (m2 && m2.length > 1) {\r\n            let m = m2[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: 1\r\n                };\r\n            }\r\n        }\r\n\r\n        let m3 = color.match(/^#([0-9a-f]{8})$/i);\r\n        if (m3 && m3.length > 1){\r\n            let m = m3[1];\r\n            if (m) {\r\n                return {\r\n                    color: 0x10000 * parseInt(m.substr(0, 2), 16) + 0x100 * parseInt(m.substr(2, 2), 16) + parseInt(m.substr(4, 2), 16),\r\n                    alpha: parseInt(m.substr(6, 2), 16) / 0xff\r\n                };\r\n            }\r\n        }\r\n\r\n        let m1 = color.match(/^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: 1\r\n            };\r\n        }\r\n\r\n        m1 = color.match(/^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+\\.?\\d+)\\s*\\)$/i);\r\n        if (m1) {\r\n            return {\r\n                color: parseInt(m1[1]) * 0x10000 + parseInt(m1[2]) * 0x100 + parseInt(m1[3]),\r\n                alpha: parseFloat(m1[4]) \r\n            };\r\n        }\r\n\r\n        return { color: 0xff0000, alpha: 1 };\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { InterpreterState, Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { KeyboardTool } from \"../../tools/KeyboardTool.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Point } from \"pixi.js\";\r\nimport { Punkt } from \"../../tools/MatheTools.js\";\r\nimport { GroupClass, GroupHelper } from \"./Group.js\";\r\nimport { MouseListenerInterface } from \"./MouseListener.js\";\r\n\r\nexport class WorldClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"World\", module, \"Grafische Zeichenfläche mit Koordinatensystem\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let groupType = <GroupClass>module.typeStore.getType(\"Group\");\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n            { identifier: \"breite\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"höhe\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let breite: number = parameters[1].value;\r\n                let höhe: number = parameters[2].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o, breite, höhe);  //new WorldHelper(breite, höhe, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an\", true));\r\n\r\n        this.addMethod(new Method(\"World\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let gh: WorldHelper = this.getWorldHelper(o); // new WorldHelper(800, 600, this.module, o);\r\n                o.intrinsicData[\"World\"] = gh;\r\n\r\n            }, false, false, \"Legt einen neuen Grafikbereich (='Welt') an. Das Koordinatensystem geht von 0 bis 800 in x-Richtung und von 0 - 600 in y-Richtung.\", true));\r\n\r\n        this.addMethod(new Method(\"setBackgroundColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.setBackgroundColor(color);\r\n\r\n            }, false, false, 'Setzt die Hintergrundfarbe. Die Farbe ist entweder eine vordefinierte Farbe (\"schwarz\", \"rot\", ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(x,y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(x,y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Verschiebt alle Objekte der Welt um x nach rechts und y nach unten.', false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.rotate(-angle / 180 * Math.PI);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Rotiert die Welt um den angegebenen Winkel im Urzeigersinn. Drehpunkt ist der Punkt (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let x: number = parameters[2].value;\r\n                let y: number = parameters[3].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n\r\n                let matrix = new PIXI.Matrix().copyFrom(wh.stage.localTransform);\r\n                wh.stage.localTransform.identity();\r\n                wh.stage.localTransform.translate(-x, -y);\r\n                wh.stage.localTransform.scale(factor, factor);\r\n                wh.stage.localTransform.translate(x, y);\r\n                wh.stage.localTransform.prepend(matrix);\r\n                \r\n                \r\n                // wh.stage.localTransform.translate(-x, -y);\r\n                // wh.stage.localTransform.scale(factor, factor);\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n        this.addMethod(new Method(\"setCoordinateSystem\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.stage.localTransform.identity();     // coordinate system (0/0) to (initialWidth/initialHeight)\r\n                wh.stage.localTransform.translate(-left, -top);\r\n                wh.stage.localTransform.scale(wh.initialWidth/width, wh.initialHeight/height);\r\n\r\n                // wh.stage.localTransform.translate(x, y);\r\n                wh.stage.transform.onChange();\r\n\r\n            }, false, false, 'Streckt die Welt um den angegebenen Faktor. Zentrum der Streckung ist (x/y).', false));\r\n\r\n\r\n        this.addMethod(new Method(\"setDefaultGroup\", new Parameterlist([\r\n            { identifier: \"group\", type: groupType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.defaultGroup = group == null ? null : group.intrinsicData[\"Actor\"];\r\n\r\n            }, false, false, 'Legt eine Gruppe fest, zu der ab jetzt alle neuen Objekte automatisch hinzugefügt werden. Falls null angegeben wird, werden neue Objekte zu keiner Gruppe automatisch hinzugefügt.', false));\r\n\r\n        this.addMethod(new Method(\"addMouseListener\", new Parameterlist([\r\n            { identifier: \"listener\", type: mouseListenerType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let listener: RuntimeObject = parameters[1].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                wh.addMouseListener(listener);\r\n\r\n            }, false, false, 'Fügt einen neuen MouseListener hinzu, dessen Methoden bei Mausereignissen aufgerufen werden.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.width);\r\n\r\n            }, false, false, 'Gibt die \"Breite\" des Grafikbereichs zurück, genauer: die x-Koordinate am rechten Rand.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n\r\n                return Math.round(wh.height);\r\n\r\n            }, false, false, 'Gibt die \"Höhe\" des Grafikbereichs zurück, genauer: die y-Koordinate am unteren Rand.', false));\r\n\r\n        this.addMethod(new Method(\"setCursor\", new Parameterlist([\r\n            { identifier: \"cursor\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WorldHelper = o.intrinsicData[\"World\"];\r\n                let cursor: string = parameters[1].value;\r\n\r\n                wh.setCursor(cursor);\r\n\r\n            }, false, false, 'Ändert die Form des Mauscursors im gesamten Grafikbereich. Mögiche Werte: siehe https://developer.mozilla.org/de/docs/Web/CSS/cursor.', false));\r\n\r\n\r\n    }\r\n\r\n    getWorldHelper(worldObject: RuntimeObject, breite: number = 800, höhe: number = 600): WorldHelper {\r\n\r\n        let wh = this.module?.main?.getInterpreter()?.worldHelper;\r\n\r\n\r\n        if (wh != null) {\r\n\r\n            if (wh.width != breite || wh.height != höhe) {\r\n\r\n                let ratio: number = Math.round(höhe / breite * 100);\r\n                wh.$containerOuter.css('padding-bottom', ratio + \"%\");\r\n\r\n                wh.stage.localTransform.scale(wh.width / breite, wh.height / höhe);\r\n                wh.width = breite;\r\n                wh.height = höhe;\r\n                // this.stage.localTransform.rotate(45/180*Math.PI);\r\n                // this.stage.localTransform.translate(400,300);\r\n                wh.stage.transform.onChange();\r\n\r\n                this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n            }\r\n\r\n            return wh;\r\n\r\n        } else {\r\n            return new WorldHelper(breite, höhe, this.module, worldObject);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type MouseListenerShapeData = {\r\n    shapeHelper: ShapeHelper,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type MouseListenerData = {\r\n    listener: RuntimeObject,\r\n    types: { [type: string]: boolean },\r\n    methods: { [type: string]: Method }\r\n}\r\n\r\nexport type ActorData = {\r\n    actorHelper: ActorHelper,\r\n    method: Method\r\n}\r\n\r\nexport class WorldHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n    app: PIXI.Application;\r\n    stage: PIXI.Container;\r\n\r\n    actActors: ActorData[] = [];\r\n    keyPressedActors: ActorData[] = [];\r\n    keyUpActors: ActorData[] = [];\r\n    keyDownActors: ActorData[] = [];\r\n    actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n    mouseListenerShapes: MouseListenerShapeData[] = [];\r\n    mouseListeners: MouseListenerData[] = [];\r\n\r\n    interpreter: Interpreter;\r\n    actorsFinished: boolean = true;\r\n    summedDelta: number = 0;\r\n\r\n    defaultGroup: GroupHelper;\r\n\r\n    initialWidth: number;\r\n    initialHeight: number;\r\n\r\n    $coordinateDiv: JQuery<HTMLElement>;\r\n\r\n    public scaledTextures: { [name: string]: PIXI.Texture } = {};\r\n\r\n    tickerFunction: (t: number) => void;\r\n\r\n    clearActorLists() {\r\n        this.actActors = [];\r\n        this.keyPressedActors = [];\r\n        this.keyUpActors = [];\r\n        this.keyDownActors = [];\r\n    }\r\n\r\n    constructor(public width: number, public height: number, private module: Module, public world: RuntimeObject) {\r\n\r\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n\r\n        this.initialHeight = height;\r\n        this.initialWidth = width;\r\n\r\n        this.interpreter = this.module?.main?.getInterpreter();\r\n\r\n        if (this.interpreter.processingHelper != null) {\r\n            this.interpreter.throwException(\"Die herkömmliche Grafikausgabe kann nicht zusammen mit Processing genutzt werden.\");\r\n        }\r\n\r\n        if (this.interpreter.worldHelper != null) {\r\n            this.interpreter.throwException(\"Es darf nur ein World-Objekt instanziert werden.\");\r\n        }\r\n\r\n        this.interpreter.worldHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n        this.$coordinateDiv = this.module.main.getRightDiv().$rightDiv.find(\".jo_coordinates\");\r\n\r\n\r\n        let f = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (height / width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': width / height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': height / width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', f);\r\n\r\n        f();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        PIXI.settings.TARGET_FPMS = 30.0 / 1000.0;\r\n\r\n        this.app = new PIXI.Application({\r\n            antialias: true,\r\n            width: width, height: height,\r\n            //resizeTo: $containerInner[0]\r\n        });\r\n\r\n\r\n        let that = this;\r\n        // let i = 0;\r\n\r\n        this.tickerFunction = (delta) => {\r\n            // if (i++ % 2 == 0) \r\n            that.tick(PIXI.Ticker.shared.elapsedMS);\r\n        };\r\n\r\n        this.app.ticker.add(this.tickerFunction);\r\n        this.app.ticker.maxFPS = 30;\r\n\r\n        this.interpreter.timerExtern = true;\r\n\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.app.stage.addChild(this.stage);\r\n\r\n        this.$containerInner.append(this.app.view);\r\n\r\n\r\n        // this.stage.localTransform.translate(-400, -300);\r\n        // this.stage.localTransform.rotate(-45/180*Math.PI);\r\n        // this.stage.localTransform.translate(400,300);\r\n        // this.stage.transform.onChange();\r\n\r\n        this.interpreter.keyboardTool.keyPressedCallbacks.push((key) => {\r\n            for (let kpa of that.keyPressedActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyUpCallbacks.push((key) => {\r\n            for (let kpa of that.keyUpActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n        this.interpreter.keyboardTool.keyDownCallbacks.push((key) => {\r\n            for (let kpa of that.keyDownActors) {\r\n\r\n                that.runActorWhenKeyEvent(kpa, key);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.on(listenerType, (e) => {\r\n                let x = width * e.offsetX / this.$containerInner.width();\r\n                let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n                let p = new PIXI.Point(x, y);\r\n                this.stage.localTransform.applyInverse(p, p);\r\n                x = p.x;\r\n                y = p.y;\r\n\r\n                that.onMouseEvent(listenerType, x, y, e.button);\r\n\r\n                for (let listener of this.mouseListeners) {\r\n                    if (listener.types[listenerType] != null) {\r\n                        this.invokeMouseListener(listener, listenerType, x, y, e.button);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        let $coordinateDiv = this.$coordinateDiv;\r\n\r\n        this.$containerInner.on(\"mousemove\", (e) => {\r\n            let x = width * e.offsetX / this.$containerInner.width();\r\n            let y = height * e.offsetY / this.$containerInner.height();\r\n\r\n            let p = new PIXI.Point(x, y);\r\n            this.stage.localTransform.applyInverse(p, p);\r\n            x = Math.round(p.x);\r\n            y = Math.round(p.y);\r\n            $coordinateDiv.text(`(${x}/${y})`);\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseenter\", (e) => {\r\n            $coordinateDiv.show();\r\n        });\r\n\r\n        this.$containerInner.on(\"mouseleave\", (e) => {\r\n            $coordinateDiv.hide();\r\n        });\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    setCursor(cursor: string) {\r\n        this.$containerInner.css('cursor', cursor);\r\n    }\r\n\r\n\r\n    actorsNotFinished: number = 0;\r\n    ticks: number = 0;\r\n    deltaSum: number = 0;\r\n\r\n    spriteAnimations: SpriteHelper[] = [];\r\n\r\n    tick(delta: any) {\r\n\r\n        this.summedDelta += delta;\r\n\r\n        for (let spriteHelper of this.spriteAnimations) {\r\n            spriteHelper.tick(delta);\r\n        }\r\n\r\n        if (this.interpreter != null) {\r\n            switch (this.interpreter.state) {\r\n                case InterpreterState.running:\r\n\r\n                    if (!this.actorsFinished) {\r\n                        this.actorsNotFinished++;\r\n                        break;\r\n                    }\r\n\r\n                    let first: boolean = true;\r\n\r\n                    for (let actorData of this.actActors) {\r\n\r\n                        let actorHelper = actorData.actorHelper;\r\n                        if (actorHelper.timerPaused || actorHelper.isDestroyed) continue;\r\n\r\n                        let program = actorData.method?.program;\r\n                        this.runActor(first, actorData, this.summedDelta);\r\n                        if (program != null && !actorData.actorHelper.isDestroyed) {\r\n                            first = false;\r\n                            this.actorsFinished = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case InterpreterState.done:\r\n                case InterpreterState.error:\r\n                case InterpreterState.not_initialized:\r\n                    this.clearActorLists();\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n        this.summedDelta = 0;\r\n\r\n        if (this.interpreter.state == InterpreterState.running) {\r\n            if (this.actActors.length > 0) {\r\n                this.interpreter.timerFunction(33.33, true, 0.5);\r\n                this.interpreter.timerStopped = false;\r\n                this.interpreter.timerFunction(33.33, false, 0.08);\r\n            } else {\r\n                this.interpreter.timerFunction(33.33, false, 0.7);\r\n            }\r\n        }\r\n\r\n        while (this.actorHelpersToDestroy.length > 0) {\r\n\r\n            let actorHelper = this.actorHelpersToDestroy.pop();\r\n\r\n            // actActors: ActorData[] = [];\r\n            // keyPressedActors: ActorData[] = [];\r\n            // actorHelpersToDestroy: ActorHelper[] = [];\r\n\r\n            for (let actorList of [this.keyPressedActors, this.keyUpActors, this.keyDownActors]) {\r\n                for (let i = 0; i < actorList.length; i++) {\r\n                    if (actorList[i].actorHelper === actorHelper) {\r\n                        actorList.splice(i, 1);\r\n                        i--;\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            for (let i = 0; i < this.mouseListenerShapes.length; i++) {\r\n                if (this.mouseListenerShapes[i].shapeHelper === actorHelper) {\r\n                    this.mouseListenerShapes.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < this.actActors.length; i++) {\r\n                if (this.actActors[i].actorHelper === actorHelper) {\r\n                    this.actActors.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            let displayObject = (<ShapeHelper>actorHelper).displayObject;\r\n            if (displayObject != null) {\r\n                displayObject.destroy();\r\n                (<ShapeHelper>actorHelper).displayObject = null;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        this.app.renderer.backgroundColor = c.color;\r\n    }\r\n\r\n\r\n    runActorWhenKeyEvent(actorData: ActorData, key: string) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: stringPrimitiveType,\r\n                value: key\r\n            }\r\n        ];\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, null, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    runActor(first: boolean, actorData: ActorData, delta: number) {\r\n\r\n        let program = actorData.method?.program;\r\n        let invoke = actorData.method?.invoke;\r\n\r\n        let rto = actorData.actorHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n        ];\r\n\r\n        if (actorData.method.getParameterCount() > 0) {\r\n            stackElements.push(\r\n                {\r\n                    type: doublePrimitiveType,\r\n                    value: delta\r\n                }\r\n\r\n            );\r\n        }\r\n\r\n        let that = this;\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(actorData.method, stackElements, first ? (interpreter) => {\r\n                that.actorsFinished = true;\r\n                interpreter.timerStopped = true;\r\n            } : null, true);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        for (let listenerType of [\"mouseup\", \"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\"]) {\r\n            this.$containerInner.off(listenerType);\r\n        }\r\n        this.spriteAnimations = [];\r\n        this.app.ticker.remove(this.tickerFunction);\r\n        this.app.destroy();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.worldHelper = null;\r\n        this.$coordinateDiv.hide();\r\n    }\r\n\r\n    onMouseEvent(listenerType: string, x: number, y: number, button: number) {\r\n\r\n        switch (listenerType) {\r\n            case \"mousedown\":\r\n            case \"mouseup\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && (shapeHelper.containsPoint(x, y) || shapeHelper.trackMouseMove)) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button);\r\n                    }\r\n\r\n                }\r\n\r\n                break;\r\n            case \"mouseenter\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.containsPoint(x, y) && !shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = true;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mouseleave\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[listenerType] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                        this.invokeShapeMouseListener(listener, listenerType, x, y, button, () => {\r\n                            shapeHelper.mouseLastSeenInsideObject = false;\r\n                        });\r\n                    }\r\n\r\n                }\r\n                break;\r\n            case \"mousemove\":\r\n                for (let listener of this.mouseListenerShapes) {\r\n                    let shapeHelper: ShapeHelper = listener.shapeHelper;\r\n\r\n                    if (listener.types[\"mousemove\"] != null ||\r\n                        (listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) ||\r\n                        (listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject)\r\n                    ) {\r\n                        let containsPoint = shapeHelper.containsPoint(x, y);\r\n                        if ((shapeHelper.trackMouseMove || containsPoint) && listener.types[\"mousemove\"] != null) {\r\n                            this.invokeShapeMouseListener(listener, \"mousemove\", x, y, button);\r\n                        }\r\n                        if (containsPoint && listener.types[\"mouseenter\"] != null && !shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseenter\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = true;\r\n                            });\r\n                        }\r\n                        if (!containsPoint && listener.types[\"mouseleave\"] != null && shapeHelper.mouseLastSeenInsideObject) {\r\n                            this.invokeShapeMouseListener(listener, \"mouseleave\", x, y, button, () => {\r\n                                shapeHelper.mouseLastSeenInsideObject = false;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    invokeShapeMouseListener(listener: MouseListenerShapeData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        if (!listener.shapeHelper.reactToMouseEventsWhenInvisible &&\r\n            !listener.shapeHelper.displayObject.visible) return;\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.shapeHelper.runtimeObject;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n    addMouseListener(listener: RuntimeObject) {\r\n\r\n        /*\r\n            If a shape is registered as MouseListener of the world-object, it gets all mouse-events twice. \r\n            => Deregister shape as mouseListenerShape and register it as mouse listener for the world object.\r\n        */\r\n        let index: number = this.mouseListenerShapes.findIndex((mls) => {return mls.shapeHelper.runtimeObject == listener});\r\n        if(index >= 0){\r\n            this.mouseListenerShapes.splice(index, 1);\r\n        }\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>listener.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null && method.program.statements.length > 2 || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        listener: listener,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.mouseListeners.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    invokeMouseListener(listener: MouseListenerData, listenerType: string,\r\n        x: number, y: number, button: number, callback?: () => void) {\r\n\r\n        let method = listener.methods[listenerType];\r\n        let program = method.program;\r\n        let invoke = method.invoke;\r\n\r\n        let rto = listener.listener;\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: rto.class,\r\n                value: rto\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: x\r\n            },\r\n            {\r\n                type: doublePrimitiveType,\r\n                value: y\r\n            }\r\n        ];\r\n\r\n        if (listenerType != \"mousemove\" && listenerType != \"mouseenter\" && listenerType != \"mouseleave\") {\r\n            stackElements.push(\r\n                {\r\n                    type: intPrimitiveType,\r\n                    value: button\r\n                });\r\n        }\r\n\r\n        if (program != null) {\r\n            this.interpreter.runTimer(method, stackElements, callback, false);\r\n        } else if (invoke != null) {\r\n            invoke([]);\r\n        }\r\n\r\n    }\r\n\r\n}","import { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType, doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class Actor extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Actor\", module, \"Abstrakte Klasse mit überschreibbaren Methoden act (zur Implemntierung eines Timers) und onKeyTyped, onKeyUp usw. zur entgegennahme von Tastaturereignissen\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.isAbstract = true;\r\n\r\n        let methodSignatures: { signature: string, actorListIdentifier: string }[] = [\r\n            { signature: \"onKeyTyped(String)\", actorListIdentifier: \"keyPressedActors\" },\r\n            { signature: \"onKeyUp(String)\", actorListIdentifier: \"keyUpActors\" },\r\n            { signature: \"onKeyDown(String)\", actorListIdentifier: \"keyDownActors\" },\r\n            { signature: \"act()\", actorListIdentifier: \"actActors\" },\r\n            { signature: \"act(double)\", actorListIdentifier: \"actActors\" },\r\n        ];\r\n\r\n        this.postConstructorCallbacks = [\r\n            (r: RuntimeObject) => {\r\n\r\n                for (let ms of methodSignatures) {\r\n                    let method: Method = (<Klass>r.class).getMethodBySignature(ms.signature);\r\n\r\n                    if (method?.program != null || method?.invoke != null) {\r\n                        let ah: ActorHelper = <ActorHelper>r.intrinsicData['Actor'];\r\n                        ah.worldHelper[ms.actorListIdentifier].push({\r\n                            actorHelper: ah,\r\n                            method: method\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        ];\r\n\r\n        this.addMethod(new Method(\"Actor\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), this,\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let actorHelper = new ActorHelper(module.main.getInterpreter(), o);\r\n\r\n                o.intrinsicData[\"Actor\"] = actorHelper;\r\n\r\n                // return o;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Der Konstruktor registriert den Actor beim Grafikfenster\", true));\r\n\r\n        this.addMethod(new Method(\"destroy\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n                sh.destroy();\r\n\r\n            }, false, false, \"Vernichtet das Grafikobjekt. Falls es in einem Group-Objekt enthalten ist, wird es vor dem Vernichten automatisch aus diesem entfernt.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade NICHT drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: string = parameters[1].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isKeyDown(key);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn der Benutzer die gegebenen Taste gerade drückt. Als Taste kann auch bsw. [shift]+m angegeben werden. Die Angabe von Sondertasten (Enter, ArrowUp, ArrowLeft, ...) ist auch möglich.\", false));\r\n\r\n        this.addMethod(new Method(\"isDestroyed\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.isDestroyed;\r\n\r\n            }, false, false, \"Gibt true zurück, falls das Objekt bereits durch die Methode destroy() zerstört wurde.\", false));\r\n\r\n\r\n        this.addMethod(new Method(\"getWorld\", new Parameterlist([\r\n        ]), module.typeStore.getType(\"World\"),\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.worldHelper.world;\r\n\r\n            }, false, false, \"Gibt das Welt-Objekt zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"stopActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // ah.timerPaused = true;\r\n                ah.setTimerPaused(true);\r\n\r\n                return;\r\n\r\n            }, false, false, \"Stoppt den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt.\", false));\r\n\r\n            this.addMethod(new Method(\"restartActing\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                // sh.timerPaused = false;\r\n                sh.setTimerPaused(false);\r\n\r\n            }, false, false, \"Startet den 30-mal pro Sekunde erfolgenden Aufruf der Methode act für dieses Objekt erneut.\", false));\r\n\r\n            this.addMethod(new Method(\"isActing\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ActorHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return !sh.timerPaused;\r\n\r\n            }, false, false, \"Gibt true zurück, wenn der periodische Aufruf der Methode act weiterhin erfolgt.\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n            { identifier: \"deltaTime\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"act\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird ca. 30-mal pro Sekunde aufgerufen\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt und wieder losgelassen hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyDown\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste gedrückt hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onKeyUp\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem der Benutzer eine Taste losgelassen hat.\", false));\r\n\r\n\r\n    }\r\n\r\n    registerWorldType() {\r\n        this.methods.filter(m => m.identifier == \"getWorld\")[0].returnType = this.module.typeStore.getType(\"World\");\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ActorHelper {\r\n\r\n    worldHelper: WorldHelper;\r\n    isDestroyed: boolean = false;\r\n\r\n    timerPaused: boolean = false;\r\n\r\n    constructor(interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n        let worldHelper = interpreter.worldHelper;\r\n        if (worldHelper == null) {\r\n            let w: RuntimeObject = new RuntimeObject(<Klass>interpreter.moduleStore.getType(\"World\").type);\r\n            worldHelper = new WorldHelper(800, 600, interpreter.moduleStore.getModule(\"Base Module\"), w);\r\n            // worldHelper = new WorldHelper(800, 600, interpreter.main.currentWorkspace.moduleStore.getModule(\"Base Module\"), w);\r\n            w.intrinsicData[\"World\"] = worldHelper;\r\n        }\r\n        this.worldHelper = worldHelper;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n    }\r\n\r\n\r\n    isKeyDown(key: string): boolean {\r\n        return this.worldHelper.interpreter.keyboardTool.isPressed(key);\r\n    }\r\n\r\n    destroy() {\r\n        this.isDestroyed = true;\r\n        this.worldHelper.actorHelpersToDestroy.push(this);\r\n    }\r\n\r\n}\r\n\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class AlignmentClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"Alignment\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"left\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"center\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"right\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"top\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"bottom\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Mögliche Ausrichtungen\"\r\n    }\r\n\r\n}","\r\nexport type Punkt = {\r\n    x: number,\r\n    y: number\r\n}\r\n\r\nexport function gleich(a: number, b: number) {\r\n\r\n    return Math.abs(a - b) < 0.000000001;\r\n\r\n}\r\n\r\nexport function drehenUm(drehpunkt: Punkt, punkt: Punkt, winkelInGrad: number): Punkt {\r\n\r\n    let w = winkelInGrad / 180 * Math.PI;\r\n    let s = Math.sin(w);\r\n    let c = Math.cos(w);\r\n\r\n    let dx = punkt.x - drehpunkt.x;\r\n    let dy = punkt.y - drehpunkt.y;\r\n\r\n    let dxNeu = dx * c - dy * s;\r\n    let dyNeu = dx * s + dy * c;\r\n\r\n    return { x: drehpunkt.x + dxNeu, y: drehpunkt.y + dyNeu };\r\n\r\n}\r\n\r\n/**\r\n * Gibt true zurück, wenn die Strecke von (x0, y0) nach (x1, y1) die Strecke von\r\n * (x2, y2) nach (x3, y3) berührt.\r\n *\r\n * @param x0\r\n * @param y0\r\n * @param x1\r\n * @param y1\r\n * @param x2\r\n * @param y2\r\n * @param x3\r\n * @param y3\r\n * @return\r\n */\r\nexport function streckeSchneidetStrecke(p0: Punkt, p1: Punkt, p2: Punkt, p3: Punkt, schnittpunkt?:Punkt) {\r\n\r\n    let a1 = p1.x - p0.x;\r\n    let a2 = p1.y - p0.y;\r\n    let b1 = p2.x - p3.x;\r\n    let b2 = p2.y - p3.y;\r\n    let c1 = p2.x - p0.x;\r\n    let c2 = p2.y - p0.y;\r\n\r\n    let det = a1 * b2 - a2 * b1;\r\n\r\n    if (det * det < 0.000001) {\r\n        return false; // die Strecken sind so gut wie parallel\r\n    }\r\n\r\n    let det1 = c1 * b2 - c2 * b1;\r\n    let det2 = a1 * c2 - a2 * c1;\r\n\r\n    let s = det1 / det;\r\n    let t = det2 / det;\r\n\r\n    // liegt der Schnittpunkt innerhalb von beiden Strecken?\r\n    let schneidet = s >= 0 && s <= 1 && t >= 0 && t <= 1;\r\n\r\n    if(schneidet && schnittpunkt != null){\r\n        schnittpunkt.x = p0.x + s*(p1.x - p0.x);\r\n        schnittpunkt.y = p0.y + s*(p1.y - p0.y)\r\n        }\r\n\r\n    return schneidet;\r\n\r\n}\r\n\r\nexport function abstand(p1: Punkt, p2: Punkt) {\r\n\r\n    let dx = p2.x - p1.x;\r\n    let dy = p2.y - p1.y;\r\n\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n\r\n}\r\n\r\nexport function winkelGradZwischenPunkten(p1: Punkt, p2: Punkt): number {\r\n    let d = {\r\n        x: p2.x - p1.x,\r\n        y: p2.y - p1.y\r\n    }\r\n\r\n    return Math.atan2(d.y, d.x)/Math.PI*180;\r\n}\r\n\r\nexport function polygonEnthältPunkt(punkte: Punkt[], punkt: Punkt) {\r\n\r\n    let inside = false;\r\n    let vertexCount = punkte.length;\r\n\r\n    for (let index = 0; index <= vertexCount - 1; index++) {\r\n\r\n        let i = index % vertexCount;\r\n        let j = (index - 1) % vertexCount;\r\n        if (j < 0) {\r\n            j += vertexCount;\r\n        }\r\n\r\n        if (((punkte[i].y > punkt.y) != (punkte[j].y > punkt.y)) &&\r\n            (punkt.x < (punkte[j].x - punkte[i].x) * (punkt.y - punkte[i].y) / (punkte[j].y - punkte[i].y) + punkte[i].x))\r\n            inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n\r\n}\r\n\r\nexport function kreisSchneidetStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt): boolean {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return false; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function schnittpunkteKreisStrecke(m: Punkt, r: number, p1: Punkt, p2: Punkt, schnittpunkte: Punkt[]): void {\r\n    /*\r\n * Gerade: (x, y) = (x1, x2) + t*(x2-x1, y2-y1)\r\n * Kreis: (x-mx)^2 + (y-my)^2 = r^2\r\n *\r\n * Schneiden der beiden liefert eine quadratische Gleichung in t, die wir lösen...\r\n \r\n */\r\n\r\n    let x1 = p1.x;\r\n    let y1 = p1.y;\r\n    let x2 = p2.x;\r\n    let y2 = p2.y;\r\n\r\n\r\n    let a = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    let b = 2 * (x1 - m.x) * (x2 - x1) + 2 * (y1 - m.y) * (y2 - y1);\r\n    let c = (x1 - m.x) * (x1 - m.x) + (y1 - m.y) * (y1 - m.y) - r * r;\r\n\r\n    let determiante = b * b - 4 * a * c;\r\n\r\n    if (determiante < 0) {\r\n        return; // Kreis schneidet die Gerade nicht\r\n    }\r\n\r\n    // Kreis schneidet die Gerade -> innerhalb der Strecke?\r\n\r\n    let sqrt = Math.sqrt(determiante);\r\n    let t1 = (-b + sqrt) / (2 * a);\r\n    let t2 = (-b - sqrt) / (2 * a);\r\n\r\n    if (t1 >= 0 && t1 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t1 * (x2 - x1), y: y1 + t1 * (y2 - y1) });\r\n    }\r\n    if (t2 >= 0 && t2 <= 1) {\r\n        schnittpunkte.push({ x: x1 + t2 * (x2 - x1), y: y1 + t2 * (y2 - y1) });\r\n    }\r\n\r\n    return;\r\n\r\n}\r\n\r\nexport function KreisBerührtPolygon(m: Punkt, r: number, punkte: Punkt[]) {\r\n\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        if (abstand(punkte[i], m) <= r) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    // Der Kreis enthält keinen Punkt des Vielecks. Enthält es den Mittelpunkt des Kreises?\r\n    if (polygonEnthältPunkt(punkte, m)) {\r\n        return true;\r\n    }\r\n\r\n    // schneidet die Kreislinie eine der Vielecksstrecken?\r\n    for (let i = 0; i < punkte.length; i++) {\r\n\r\n        let p2 = punkte[(i + 1) % punkte.length];\r\n        if (kreisSchneidetStrecke(m, r, punkte[i], p2)) {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygon(punkte1: Punkt[], punkte2: Punkt[]) {\r\n\r\n    // Nicht-exakte Lösung: prüfe, ob eines der Vielecke einen Eckpunkt des anderen enthält.\r\n    // Jede Kollision beginnt damit, dass ein Eckpunkt eines Polygons eine Seite des anderen schneidet.\r\n    // Falls oft genug geprüft wird, bleiben Kollisionen also nicht unerkannt.\r\n    for (let i = 0; i < punkte1.length; i++) {\r\n        if (polygonEnthältPunkt(punkte2, punkte1[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < punkte2.length; i++) {\r\n        if (polygonEnthältPunkt(punkte1, punkte2[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\n\r\nexport function abstandPunktZuStrecke(a: Punkt, b: Punkt, p: Punkt){\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let q = dx*dx+dy*dy;\r\n\r\n    let lambda = ((-a.x+p.x)*dx + (-a.y+p.y)*dy)/q;\r\n\r\n    if(lambda < 0){\r\n        return abstand(a, p);\r\n    }\r\n\r\n    if(lambda > 1){\r\n        return abstand(b, p);\r\n    }\r\n\r\n    let fx = a.x + lambda * (b.x - a.x);\r\n    let fy = a.y + lambda * (b.y - a.y);\r\n\r\n    let s1 = p.x - fx;\r\n    let s2 = p.y - fy;\r\n\r\n    return Math.sqrt(s1*s1 + s2*s2);\r\n    \r\n}\r\n\r\nexport function abstandPunktZuGerade(a: Punkt, b: Punkt, p: Punkt) {\r\n\r\n    let dx = b.x - a.x;\r\n    let dy = b.y - a.y;\r\n\r\n    let l = Math.sqrt(dy * dy + dx * dx);\r\n\r\n    if (l < 0.000000001) {\r\n        return abstand(a, p);\r\n    }\r\n\r\n    return Math.abs(dy * p.x - dx * p.y + b.x * a.y - b.y * a.x) / l;\r\n\r\n}\r\n\r\nexport function polygonBerührtPolygonExakt(punkte1: Punkt[], punkte2: Punkt[], istGeschlossen1: boolean = false,\r\n    istGeschlossen2: boolean = false, normaleDerBerührtenGerade1: Punkt = null) {\r\n\r\n    let endIndex1 = punkte1.length + (istGeschlossen1 ? 0 : -1);\r\n    let endIndex2 = punkte2.length + (istGeschlossen2 ? 0 : -1);\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte1, punkte2[0])) {\r\n\r\n        if (normaleDerBerührtenGerade1 != null) {\r\n\r\n            let minAbstand = 100000;\r\n            let minIndex = 0;\r\n\r\n            for (let i = 0; i < punkte1.length - 1; i++) {\r\n                let j = (i + 1) % punkte1.length;\r\n\r\n                let d = abstandPunktZuStrecke(punkte1[i], punkte1[j], punkte2[0]);\r\n                if (d < minAbstand) {\r\n                    minAbstand = d;\r\n                    minIndex = 0;\r\n                }\r\n\r\n            }\r\n            let i2 = (minIndex + 1) % punkte1.length;\r\n            normaleDerBerührtenGerade1.y = punkte1[i2].x - punkte1[minIndex].x;\r\n            normaleDerBerührtenGerade1.x = -(punkte1[i2].y - punkte1[minIndex].y);\r\n\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    if (istGeschlossen1 && polygonEnthältPunkt(punkte2, punkte1[0])) {\r\n        return true;\r\n    }\r\n\r\n    for (let i = 0; i < endIndex1; i++) {\r\n        let p1a = punkte1[i];\r\n        let p1b = punkte1[(i + 1) % punkte1.length];\r\n        for (let j = 0; j < endIndex2; j++) {\r\n            let p2a = punkte2[j];\r\n            let p2b = punkte2[(j + 1) % punkte2.length];\r\n\r\n            if (streckeSchneidetStrecke(p1a, p1b, p2a, p2b)) {\r\n                return true;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n}\r\n\r\nexport function länge(vektor: Punkt): number {\r\n    return Math.sqrt(vektor.x * vektor.x + vektor.y * vektor.y);\r\n}\r\n\r\nexport function einheitsVektor(vektor: Punkt): Punkt {\r\n    let l = länge(vektor);\r\n    return { x: vektor.x / l, y: vektor.y / l };\r\n}\r\n\r\n// export function normalenvektorBeiImpactEinesKreises(punkte: Punkt[], isMove: boolean[], k: Kreis): Punkt {\r\n\r\n//     let minAbstand = 100000;\r\n//     let minIndex = 0;\r\n//     let m = k.getMitte();\r\n\r\n//     for (let i = 0; i < punkte.length - 1; i++) {\r\n//         if (isMove != null && !isMove[i]) {\r\n//             let j = (i + 1) % punkte.length;\r\n\r\n//             let d = abstandPunktZuStrecke(punkte[i], punkte[j], m);\r\n//             if (d < minAbstand) {\r\n//                 minAbstand = d;\r\n//                 minIndex = i;\r\n//             }\r\n\r\n//             // console.log(\"\" + i + \": (\" + punkte[i].x + \",\" + punkte[i].y + \")->(\" + punkte[j].x + \",\" + punkte[j].y + \"): \" + d);\r\n//         }\r\n//     }\r\n//     let i2 = (minIndex + 1) % punkte.length;\r\n\r\n//     // let v = {x: punkte[i2].x - punkte[minIndex].x, y: punkte[i2].y - punkte[minIndex].y};\r\n//     let am = { x: m.x - punkte[minIndex].x, y: m.y - punkte[minIndex].y };\r\n\r\n//     let n = {\r\n//         y: punkte[i2].x - punkte[minIndex].x,\r\n//         x: -(punkte[i2].y - punkte[minIndex].y)\r\n//     };\r\n\r\n//     let sp = skalarprodukt(n, am);\r\n//     if (sp > 0) {\r\n//         return n;\r\n//     } else {\r\n//         return { x: -n.x, y: -n.y };\r\n//     }\r\n\r\n// }\r\n\r\n// export function normalenvektorBeiImpactAufKreis(punkte: Punkt[], k: Kreis): Punkt {\r\n\r\n//     let schnittpunkte = [];\r\n//     let m = k.getMitte();\r\n//     let r = k.getRadius();\r\n\r\n//     for (let i = 0; i < punkte.length; i++) {\r\n//         let j = (i + 1) % punkte.length;\r\n//         schnittpunkteKreisStrecke(m, r, punkte[i], punkte[j], schnittpunkte);\r\n//     }\r\n\r\n//     if (schnittpunkte.length == 0) {\r\n//         return {\r\n//             x: punkte[0].x - m.x, y: punkte[0].y - m.y\r\n//         }\r\n//     }\r\n\r\n//     let schwerpunkt = { x: 0, y: 0 };\r\n//     for (let p of schnittpunkte) {\r\n//         schwerpunkt.x += p.x;\r\n//         schwerpunkt.y += p.y;\r\n//     }\r\n//     schwerpunkt.x /= punkte.length;\r\n//     schwerpunkt.y /= punkte.length;\r\n\r\n//     return {\r\n//         x: schwerpunkt.x - m.x,\r\n//         y: schwerpunkt.y - m.y\r\n//     }\r\n\r\n// }\r\n\r\nexport function skalarprodukt(v1: Punkt, v2: Punkt) {\r\n    return v1.x * v2.x + v1.y * v2.y;\r\n}\r\n\r\n\r\nexport function zufall(von: number, bis: number){\r\n    return Math.random()*(bis - von) + von;\r\n}\r\n\r\nexport function intZufall(von: number, bis: number){\r\n    return Math.trunc(Math.random()*(bis - von + 1 - 0.00000001) + von);\r\n}\r\n\r\nexport function vektorVonPolarkoordinaten(winkelGrad: number, länge: number){\r\n    let winkel = winkelGrad/180*Math.PI;\r\n    return {\r\n        x: länge * Math.cos(winkel),\r\n        y: länge * Math.sin(winkel)\r\n    }\r\n}\r\n\r\nexport function farbeAusRGB(rot: number, grün: number, blau: number):number{\r\n    return blau + 256 * (rot + 256 * grün);\r\n}","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute, Value, Type } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, booleanPrimitiveType, DoublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { ActorHelper } from \"./Actor.js\";\r\nimport { WorldHelper, MouseListenerShapeData } from \"./World.js\";\r\nimport { Punkt, polygonEnthältPunkt, polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { GroupHelper, GroupClass } from \"./Group.js\";\r\nimport { CircleHelper } from \"./Circle.js\";\r\nimport { TurtleHelper } from \"./Turtle.js\";\r\n\r\nexport class ShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Shape\", module, \"Basisklasse für alle graphischen Objekte die verschoben, skaliert und gedreht werden können\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Actor\"));\r\n        this.isAbstract = true;\r\n\r\n        // let matrixType = new ArrayType(doublePrimitiveType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addAttribute(new Attribute(\"angle\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.angle;\r\n\r\n            }, false, Visibility.protected, true, \"Richtung\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerX\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterX();\r\n\r\n            }, false, Visibility.protected, true, \"X-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n        this.addAttribute(new Attribute(\"centerY\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null || helper.isDestroyed || helper.displayObject == null) {\r\n                    value.value = 0;\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.getCenterY();\r\n\r\n            }, false, Visibility.protected, true, \"Y-Koordinate des Diagonalenschnittpunkts der BoundingBox des Objekts\"));\r\n\r\n\r\n        // this.addAttribute(new Attribute(\"transformation\", matrixType,\r\n        //     (value) => {\r\n\r\n        //         let rto: RuntimeObject = value.object;\r\n        //         let helper: ShapeHelper = rto.intrinsicData[\"Actor\"];\r\n        //         if (helper == null || helper.isDestroyed || helper.displayObject.transform == null) {\r\n        //             value.value = null;\r\n        //             return;\r\n        //         }\r\n\r\n        //         let matrix = helper.displayObject.localTransform.toArray(false);\r\n\r\n        //         if (value.value == null) {\r\n        //             value.value = [];\r\n\r\n        //             for (let n of matrix) {\r\n        //                 value.value.push({\r\n        //                     type: doublePrimitiveType,\r\n        //                     value: n\r\n        //                 });\r\n        //             }\r\n        //         } else {\r\n        //             let i: number = 0;\r\n        //             for (let n of matrix) {\r\n        //                 value.value[i++].value = n;\r\n        //             }\r\n        //         }\r\n\r\n        //     }, false, Visibility.protected, true, \"Transformationsmatrix\"));\r\n\r\n        this.addMethod(new Method(\"move\", new Parameterlist([\r\n            { identifier: \"dx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dy\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let dx: number = parameters[1].value;\r\n                let dy: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"move\")) return;\r\n\r\n                sh.move(dx, dy);\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt um dx Pixel nach rechts und um dy Pixel nach unten.\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg, centerX, centerY);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist (centerX, centerY).\", false));\r\n\r\n        this.addMethod(new Method(\"rotate\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"rotate\")) return;\r\n\r\n                sh.rotate(angleInDeg);\r\n\r\n            }, false, false, \"Dreht das Grafikobjekt um den angegebenen Winkel. Drehpunkt ist der 'Mittelpunkt' des Objekts\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerX\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"centerY\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let factor: number = parameters[1].value;\r\n                let centerX: number = parameters[2].value;\r\n                let centerY: number = parameters[3].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(factor, centerX, centerY);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der Punkt (centerX, centerY)\", false));\r\n\r\n        this.addMethod(new Method(\"scale\", new Parameterlist([\r\n            { identifier: \"factor\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angleInDeg: number = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"scale\")) return;\r\n\r\n                sh.scale(angleInDeg);\r\n\r\n            }, false, false, \"Streckt das Grafikobjekt um den angegebenen Faktor. Das Zentrum der Streckung ist der 'Mittelpunkt' des Objekts.\", false));\r\n\r\n        this.addMethod(new Method(\"isOutsideView\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"isOutsideView\")) return;\r\n\r\n                return sh.isOutsideView();\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn sich die Bounding Box des Objekts außerhalb des sichtbaren Bereichs befindet. \", false));\r\n\r\n        this.addMethod(new Method(\"getCenterX\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterX\")) return;\r\n\r\n                return sh.getCenterX();\r\n\r\n            }, false, false, \"Gibt die x-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getCenterY\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCenterY\")) return;\r\n\r\n                return sh.getCenterY();\r\n\r\n            }, false, false, \"Gibt die y-Koordinate des 'Mittelpunkts' zurück. Der 'Mittelpunkt' des Grafikobjekts ist der Diagonalenschnittpunkt seiner achsenparallelen Bounding-Box.\", false));\r\n\r\n        this.addMethod(new Method(\"getAngle\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAngle\")) return;\r\n\r\n                return sh.angle;\r\n\r\n            }, false, false, \"Gibt den Winkel des Grafikobjekts in Grad zurück. Winkel == 0 bedeutet: dieselbe Richtung wie zum Zeipunkt der Instanzierung des Objekts. Positive Winkelzunahme bedeutet Rechtsdrehung.\", false));\r\n\r\n        this.addMethod(new Method(\"containsPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"containsPoint\")) return;\r\n\r\n                return sh.containsPoint(x, y);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt den Punkt (x, y) enthält.\", false));\r\n\r\n        this.addMethod(new Method(\"collidesWith\", new Parameterlist([\r\n            { identifier: \"object\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n\r\n                if (shape == null) {\r\n                    module.main.getInterpreter().throwException(\"Der zweite Parameter der Methode collidesWith darf nicht null sein.\");\r\n                }\r\n\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let sh1: ShapeHelper = shape.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"collidesWith\")) return;\r\n\r\n                if(sh1.isDestroyed){\r\n                    sh.worldHelper.interpreter.throwException(\"Die der Methode collidesWith als Parameter übergebene Figur ist bereits zerstört.\");\r\n                    return;\r\n                }\r\n\r\n                return sh.collidesWith(sh1);\r\n\r\n            }, false, false, \"Gibt genau dann true zurück, wenn das Grafikobjekt und das andere Grafikobjekt kollidieren.\", false));\r\n\r\n        this.addMethod(new Method(\"setCenter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                if (sh.testdestroyed(\"setCenter\")) return;\r\n\r\n                sh.move(x - sh.getCenterX(), y - sh.getCenterY());\r\n\r\n            }, false, false, \"Verschiebt das Grafikobjekt so, dass sich sein 'Mittelpunkt' an den angegebenen Koordinaten befindet.\", false));\r\n\r\n        this.addMethod(new Method(\"setAngle\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let angleDeg: number = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setAngle\")) return;\r\n\r\n                sh.rotate(angleDeg - sh.angle);\r\n\r\n            }, false, false, \"Dreht das Objekt zur angegebenen Richtung.\", false));\r\n\r\n        this.addMethod(new Method(\"setVisible\", new Parameterlist([\r\n            { identifier: \"visible\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n                let visible: boolean = parameters[1].value;\r\n\r\n                if (sh.testdestroyed(\"setVisible\")) return;\r\n\r\n                sh.setVisible(visible);\r\n\r\n            }, false, false, \"Macht das Grafikobjekt sichtbar (visible == true) bzw. unsichtbar (visible == false).\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil in das Objekt hineinbewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste nach unten drückt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"key\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und der Benutzer eine Maustaste loslässt.\", false));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn sich der Mauspfeil über dem Objekt befindet und bewegt.\", false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"startTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = true;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt JEDE Bewegung des Mauszeigers (auch wenn sich dieser außerhalb des Objekts befindet) ein MouseMove-Ereignis für dieses Objekt auslöst. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"stopTrackingEveryMouseMovement\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.trackMouseMove = false;\r\n\r\n            }, false, false, 'Sorgt dafür, dass ab jetzt nur noch dann Bewegungen des Mauszeigers ein MouseMove-Ereignis für dieses Objekt auslösen, wenn sich der Mauszeiger über dem Objekt befindet. -> Praktisch zur Umsetzung des \"Ziehens\" von Objekten mit der Maus!', false));\r\n\r\n        this.addMethod(new Method(\"reactToMouseEventsWhenInvisible\", new Parameterlist([\r\n            { identifier: \"react\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let react: boolean = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.reactToMouseEventsWhenInvisible = react;\r\n\r\n            }, false, false, 'Legt fest, ob das Objekt auf Mausevents (buttondown, mouse move, ...) reagiert, wenn es unsichtbar ist.', false));\r\n\r\n        this.addMethod(new Method(\"tint\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"tint\")) return;\r\n\r\n                sh.tint(color);\r\n\r\n            }, false, false, 'Überzieht das Grafikobjekt mit einer halbdurchsichtigen Farbschicht.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Grafikobjekts und git sie zurück.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"bringToFront\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"bringToFront\")) return;\r\n\r\n                return sh.bringToFront();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt vor alle anderen.', false));\r\n\r\n        this.addMethod(new Method(\"sendToBack\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"sendToBack\")) return;\r\n\r\n                return sh.sendToBack();\r\n\r\n            }, false, false, 'Setzt das Grafikobjekt hinter alle anderen.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class ShapeHelper extends ActorHelper {\r\n\r\n    displayObject: PIXI.DisplayObject;\r\n\r\n    belongsToGroup: GroupHelper;\r\n\r\n    centerXInitial: number;\r\n    centerYInitial: number;\r\n\r\n    angle: number = 0;\r\n\r\n    hitPolygonInitial: Punkt[] = null;\r\n    hitPolygonTransformed: Punkt[] = null;\r\n    hitPolygonDirty = true;\r\n\r\n    reactToMouseEventsWhenInvisible: boolean = false;\r\n\r\n    mouseLastSeenInsideObject: boolean = false;\r\n\r\n    trackMouseMove: boolean = false;\r\n\r\n    copyFrom(shapeHelper: ShapeHelper) {\r\n\r\n        this.centerXInitial = shapeHelper.centerXInitial;\r\n        this.centerYInitial = shapeHelper.centerYInitial;\r\n\r\n        if (shapeHelper.hitPolygonInitial != null) {\r\n            this.hitPolygonInitial = [];\r\n            for (let p of shapeHelper.hitPolygonInitial) this.hitPolygonInitial.push(Object.assign({}, p));\r\n        }\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.hitPolygonDirty = shapeHelper.hitPolygonDirty;\r\n        this.reactToMouseEventsWhenInvisible = shapeHelper.reactToMouseEventsWhenInvisible;\r\n        this.mouseLastSeenInsideObject = shapeHelper.mouseLastSeenInsideObject;\r\n\r\n        this.displayObject.localTransform.copyFrom(shapeHelper.displayObject.transform.localTransform);\r\n        this.displayObject.updateTransform();\r\n\r\n    }\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n\r\n        super(interpreter, runtimeObject);\r\n\r\n        let listenerTypes = [\r\n            { identifier: \"MouseUp\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseDown\", signature: \"(double, double, int)\" },\r\n            { identifier: \"MouseMove\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseEnter\", signature: \"(double, double)\" },\r\n            { identifier: \"MouseLeave\", signature: \"(double, double)\" },\r\n        ];\r\n\r\n        let sd: MouseListenerShapeData = null;\r\n\r\n        for (let lt of listenerTypes) {\r\n            let method: Method = (<Klass>runtimeObject.class).getMethodBySignature(\"on\" + lt.identifier + lt.signature);\r\n\r\n            if (method?.program != null || method?.invoke != null) {\r\n\r\n                if (sd == null) {\r\n                    sd = {\r\n                        shapeHelper: this,\r\n                        types: {},\r\n                        methods: {}\r\n                    };\r\n                    this.worldHelper.mouseListenerShapes.push(sd);\r\n                }\r\n\r\n                sd.types[lt.identifier.toLowerCase()] = true;\r\n                sd.methods[lt.identifier.toLowerCase()] = method;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        this.hitPolygonDirty = dirty;\r\n    }\r\n\r\n    bringToFront() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        let highestIndex = container.children.length - 1;\r\n        container.setChildIndex(this.displayObject, highestIndex);\r\n    }\r\n\r\n    sendToBack() {\r\n        let container: PIXI.Container = this.displayObject.parent;\r\n        container.setChildIndex(this.displayObject, 0);\r\n    }\r\n\r\n    addToDefaultGroup() {\r\n        if (this.worldHelper.defaultGroup != null) {\r\n            this.runtimeObject.intrinsicData[\"Actor\"] = this;\r\n            let groupHelper = <GroupHelper>this.worldHelper.defaultGroup;\r\n            groupHelper.add(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    testdestroyed(method: string) {\r\n        if (this.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Es wurde die Methode \" + method + \" eines bereits mit destroy() zerstörten Grafikobjekts aufgerufen.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    tint(color: string) {\r\n        let c = ColorHelper.parseColorToOpenGL(color);\r\n        //@ts-ignore\r\n        if (this.displayObject.tint) {\r\n            //@ts-ignore\r\n            this.displayObject.tint = c.color;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    setVisible(visible: boolean) {\r\n\r\n        this.displayObject.visible = visible;\r\n    }\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n\r\n        // if(!(this instanceof TurtleHelper) && (shapeHelper instanceof TurtleHelper)){\r\n        if(!(this[\"lineElements\"] != null) && (shapeHelper[\"lineElements\"] != null)){\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        this.displayObject.updateTransform();\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        if (this.hitPolygonInitial == null) return true;\r\n\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        return polygonEnthältPunkt(this.hitPolygonTransformed, { x: x, y: y });\r\n    }\r\n\r\n    transformHitPolygon() {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n\r\n        this.hitPolygonTransformed = [];\r\n        let m = this.displayObject.transform.worldTransform;\r\n        for (let p of this.hitPolygonInitial) {\r\n            this.hitPolygonTransformed.push({\r\n                x: (m.a * p.x) + (m.c * p.y) + m.tx,\r\n                y: (m.b * p.x) + (m.d * p.y) + m.ty\r\n            });\r\n        }\r\n        this.setHitPolygonDirty(false);\r\n\r\n    }\r\n\r\n    isOutsideView() {\r\n        let bounds = this.displayObject.getBounds(true);\r\n        let screen = this.worldHelper.app.screen;\r\n        return bounds.right < screen.left || bounds.left > screen.right\r\n            || bounds.bottom < screen.top || bounds.top > screen.bottom;\r\n    }\r\n\r\n    move(dx: number, dy: number) {\r\n        this.displayObject.localTransform.translate(dx, dy);\r\n        this.displayObject.transform.onChange();\r\n        this.displayObject.updateTransform();\r\n        this.setHitPolygonDirty(true);\r\n    }\r\n\r\n    rotate(angleInDeg: number, cX?: number, cY?: number) {\r\n        \r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.rotate(-angleInDeg / 180 * Math.PI);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n        this.setHitPolygonDirty(true);\r\n\r\n        this.angle += angleInDeg;\r\n    }\r\n\r\n    scale(factor: number, cX?: number, cY?: number) {\r\n\r\n        this.displayObject.updateTransform();\r\n        if (cX == null) {\r\n            let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        } else {\r\n            let p = new PIXI.Point(cX, cY);\r\n            this.worldHelper.stage.localTransform.apply(p, p);\r\n            this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n            this.displayObject.localTransform.apply(p, p);\r\n            cX = p.x;\r\n            cY = p.y;\r\n        }\r\n\r\n        this.displayObject.localTransform.translate(-cX, -cY);\r\n        this.displayObject.localTransform.scale(factor, factor);\r\n        this.displayObject.localTransform.translate(cX, cY);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.setHitPolygonDirty(true);\r\n\r\n    }\r\n\r\n    public getCenterX(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        // this.displayObject.localTransform.apply(p, p);\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.x;\r\n    }\r\n    \r\n    public getCenterY(): number {\r\n        let p = new PIXI.Point(this.centerXInitial, this.centerYInitial);\r\n        this.displayObject.updateTransform();\r\n        this.displayObject.transform.worldTransform.apply(p, p);\r\n        this.worldHelper.stage.localTransform.applyInverse(p, p);\r\n        return p.y;\r\n    }\r\n\r\n    public abstract render(): void;\r\n\r\n    public destroy(): void {\r\n        super.destroy();\r\n        if (this.belongsToGroup != null) {\r\n            this.belongsToGroup.remove(this.runtimeObject);\r\n        }\r\n    }\r\n\r\n    getCollidingShapes(groupHelper: GroupHelper, shapeType: Type): any {\r\n        let collidingShapes: Value[] = [];\r\n        for (let shape of groupHelper.shapes) {\r\n            let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (shapeHelper.collidesWith(this)) {\r\n                collidingShapes.push({\r\n                    type: shapeType,\r\n                    value: shape\r\n                });\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n    }\r\n\r\n    abstract getCopy(klass: Klass): RuntimeObject;\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class BitmapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Bitmap\", module, \"Rechteckige Bitmap mit beliebiger Auflösung und Positionierung in der Grafikausgabe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"Bitmap\", new Parameterlist([\r\n            { identifier: \"pointsX\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"pointsY\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let pointsX: number = parameters[1].value;\r\n                let pointsY: number = parameters[2].value;\r\n                let left: number = parameters[3].value;\r\n                let top: number = parameters[4].value;\r\n                let width: number = parameters[5].value;\r\n                let height: number = parameters[6].value;\r\n\r\n                let rh = new BitmapHelper(pointsX, pointsY, left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Bitmap. pointsX bzw. pointsY bezeichnet Anzahl der Bildpunkte in x bzw. y-Richtung, (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(x, y, colorType);\r\n\r\n            }, false, false, 'Gibt die Farbe des Punkts (x, y) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau.', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let alpha: number = parameters[4].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setzeFarbe(x, y, color, alpha);\r\n\r\n            }, false, false, 'Setzt die Farbe des Pixels bei (x, y). Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\". 0.0 <= alpha <= 1.0.', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: string = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"isColor\", new Parameterlist([\r\n            { identifier: \"x\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let color: number = parameters[3].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.istFarbe(x, y, color, 1);\r\n\r\n            }, false, false, 'Gibt genau dann true zurück, wenn das Pixel bei (x, y) die angegebene Farbe besitzt. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color, alpha);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"fillAll\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.fillAll(color);\r\n\r\n            }, false, false, 'Füllt die ganze Bitmap mit einer Farbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: BitmapHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Bitmap-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class BitmapHelper extends ShapeHelper {\r\n\r\n    private colorArray: Float32Array;\r\n    private colorBuffer: PIXI.Buffer;\r\n\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let bh: BitmapHelper = new BitmapHelper(this.anzahlX, this.anzahlY, this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n\r\n        for (let i = 0; i < this.colorArray.length; i++) bh.colorArray[i] = this.colorArray[i];\r\n        bh.colorBuffer.update();\r\n\r\n        ro.intrinsicData[\"Actor\"] = bh;\r\n\r\n        bh.copyFrom(this);\r\n        bh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    constructor(public anzahlX, public anzahlY, public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: left, y: top }, { x: left, y: top + height }, { x: left + width, y: top + height }, { x: left + width, y: top }\r\n        ];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    render(): void {\r\n\r\n        if (this.displayObject == null) {\r\n            this.initGraphics();\r\n            this.worldHelper.stage.addChild(this.displayObject);\r\n        }\r\n\r\n    };\r\n\r\n    protected initGraphics() {\r\n\r\n        let vertexArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 2);\r\n        this.colorArray = new Float32Array(this.anzahlX * this.anzahlY * 4 * 4);\r\n        let vertexIndexArray = new Int32Array(this.anzahlX * this.anzahlY * 6); // Anzahl der Dreieckseckpunkte\r\n\r\n        let xStep = this.width / this.anzahlX;\r\n        let yStep = this.height / this.anzahlY;\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let left = x * xStep + this.left;\r\n                let top = y * yStep + this.top;\r\n                let index = (x + y * (this.anzahlX)) * 8;\r\n                vertexArray[index] = left;\r\n                vertexArray[index + 1] = top;\r\n                vertexArray[index + 2] = left + xStep;\r\n                vertexArray[index + 3] = top;\r\n                vertexArray[index + 4] = left;\r\n                vertexArray[index + 5] = top + yStep;\r\n                vertexArray[index + 6] = left + xStep;\r\n                vertexArray[index + 7] = top + yStep;\r\n\r\n                let color = (x + y) % 2;\r\n                index = (x + y * (this.anzahlX)) * 16;\r\n                for (let i = 0; i < 16; i++) {\r\n                    this.colorArray[index + i] = color;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        let i: number = 0; // index des Dreieckspunktes\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n\r\n                let index = (x + y * this.anzahlX) * 4;\r\n                i = (x + y * this.anzahlX) * 6;\r\n                vertexIndexArray[i] = index;\r\n                vertexIndexArray[i + 1] = index + 1;\r\n                vertexIndexArray[i + 2] = index + 2;\r\n                vertexIndexArray[i + 3] = index + 1;\r\n                vertexIndexArray[i + 4] = index + 3;\r\n                vertexIndexArray[i + 5] = index + 2;\r\n\r\n            }\r\n        }\r\n\r\n\r\n        let vertexBuffer = new PIXI.Buffer(vertexArray, true);\r\n        this.colorBuffer = new PIXI.Buffer(this.colorArray, false);\r\n        let VertexIndexBuffer = new PIXI.Buffer(vertexIndexArray, true, true);\r\n\r\n\r\n\r\n        const geometry = new PIXI.Geometry()\r\n            .addAttribute('aVertexPosition', // the attribute name\r\n                vertexBuffer, // x, y\r\n                2).addIndex(VertexIndexBuffer) // the size of the attribute\r\n\r\n            .addAttribute('aColor', // the attribute name\r\n                this.colorBuffer,\r\n                4); // the size of the attribute\r\n\r\n        const shader = PIXI.Shader.from(`\r\n    \r\n        precision mediump float;\r\n        attribute vec2 aVertexPosition;\r\n        attribute vec4 aColor;\r\n    \r\n        uniform mat3 translationMatrix;\r\n        uniform mat3 projectionMatrix;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n    \r\n            vColor = aColor;\r\n            gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    \r\n        }`,\r\n\r\n            `precision mediump float;\r\n    \r\n        varying vec4 vColor;\r\n    \r\n        void main() {\r\n            gl_FragColor = vColor;\r\n        }\r\n    \r\n    `);\r\n\r\n        this.displayObject = new PIXI.Mesh(geometry, shader, null, PIXI.DRAW_MODES.TRIANGLES);\r\n\r\n        this.displayObject.position.set(this.left, this.top);\r\n\r\n    }\r\n\r\n    public getFarbeAsObject(x: number, y: number, colorType: Klass): RuntimeObject {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        let r = this.colorArray[i];\r\n        let g = this.colorArray[i + 1];\r\n        let b = this.colorArray[i + 2];\r\n        let a = this.colorArray[i + 3];\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: Math.round(r * 255),\r\n            green: Math.round(g * 255),\r\n            blue: Math.round(b * 255),\r\n            hex: ColorHelper.intColorToHexRGB(Math.round(r * 255) * 0x10000 + Math.round(g * 255) * 0x100 + Math.round(b * 255))\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n    public istFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        let r1 = this.colorArray[i];\r\n        let g1 = this.colorArray[i + 1];\r\n        let b1 = this.colorArray[i + 2];\r\n\r\n        return Math.abs(r - r1) < 0.5 && Math.abs(g - g1) < 0.5 && Math.abs(b - b1) < 0.5;\r\n\r\n    }\r\n\r\n    public setzeFarbe(x: number, y: number, color: string | number, alpha?: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            if (alpha == null) alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n            if (alpha == null) alpha = 1.0;\r\n        }\r\n\r\n        let r = ((c & 0xff0000) >> 16) / 255;\r\n        let g = ((c & 0xff00) >> 8) / 255;\r\n        let b = ((c & 0xff)) / 255;\r\n\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public fillAll(color: string | number, alpha?: number) {\r\n        let c: number;\r\n\r\n        if (typeof color == \"string\") {\r\n            let ch = ColorHelper.parseColorToOpenGL(color);\r\n            c = ch.color;\r\n            alpha = ch.alpha;\r\n        } else {\r\n            c = color;\r\n        }\r\n\r\n        for (let y = 0; y < this.anzahlY; y++) {\r\n            for (let x = 0; x < this.anzahlX; x++) {\r\n                let i = (x + y * (this.anzahlX)) * 16;\r\n\r\n                let r = ((c & 0xff0000) >> 16) / 255;\r\n                let g = ((c & 0xff00) >> 8) / 255;\r\n                let b = ((c & 0xff)) / 255;\r\n\r\n                this.colorArray[i] = r;\r\n                this.colorArray[i + 1] = g;\r\n                this.colorArray[i + 2] = b;\r\n                this.colorArray[i + 3] = alpha;\r\n                this.colorArray[i + 4] = r;\r\n                this.colorArray[i + 5] = g;\r\n                this.colorArray[i + 6] = b;\r\n                this.colorArray[i + 7] = alpha;\r\n                this.colorArray[i + 8] = r;\r\n                this.colorArray[i + 9] = g;\r\n                this.colorArray[i + 10] = b;\r\n                this.colorArray[i + 11] = alpha;\r\n                this.colorArray[i + 12] = r;\r\n                this.colorArray[i + 13] = g;\r\n                this.colorArray[i + 14] = b;\r\n                this.colorArray[i + 15] = alpha;\r\n            }\r\n        }\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public setzeFarbeRGBA(x: number, y: number, r: number, g: number, b: number, alpha: number) {\r\n        let i = (x + y * (this.anzahlX)) * 16;\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        this.colorArray[i] = r;\r\n        this.colorArray[i + 1] = g;\r\n        this.colorArray[i + 2] = b;\r\n        this.colorArray[i + 3] = alpha;\r\n        this.colorArray[i + 4] = r;\r\n        this.colorArray[i + 5] = g;\r\n        this.colorArray[i + 6] = b;\r\n        this.colorArray[i + 7] = alpha;\r\n        this.colorArray[i + 8] = r;\r\n        this.colorArray[i + 9] = g;\r\n        this.colorArray[i + 10] = b;\r\n        this.colorArray[i + 11] = alpha;\r\n        this.colorArray[i + 12] = r;\r\n        this.colorArray[i + 13] = g;\r\n        this.colorArray[i + 14] = b;\r\n        this.colorArray[i + 15] = alpha;\r\n        this.colorBuffer.update();\r\n    }\r\n\r\n    public getFarbe(x: number, y: number): number {\r\n        let i = (x + y * this.anzahlX) * 16;\r\n        return Math.trunc(this.colorArray[i] * 255) * 0x10000 +\r\n            Math.trunc(this.colorArray[i + 1] * 255) * 0x100 +\r\n            Math.trunc(this.colorArray[i + 2] * 255);\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType, voidPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ColorClassIntrinsicData } from \"./Color.js\";\r\n\r\nexport class FilledShapeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"FilledShape\", module, \"Basisklasse für grafische Objekte mit Füllfarbe und Randfarbe, beide wahlweise auch transparent\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n        this.isAbstract = true;\r\n\r\n        let that = this;\r\n\r\n        let colorType: Klass = <Klass>this.module.typeStore.getType(\"Color\");\r\n\r\n        this.addMethod(new Method(\"getFillColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.fillColor, sh.fillColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Füllfarbe des Objekts zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getBorderColor\", new Parameterlist([\r\n        ]), colorType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getFarbeAsObject(sh.borderColor, sh.borderColor, colorType);\r\n\r\n            }, false, false, 'Gibt die Randfarbe des Objekts zurück.', false));\r\n\r\n        this.addAttribute(new Attribute(\"borderWidth\", doublePrimitiveType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                let helper: FilledShapeHelper = rto.intrinsicData[\"Actor\"];\r\n                if (helper == null) {\r\n                    value.value = '---';\r\n                    return;\r\n                }\r\n\r\n                value.value = helper.borderWidth;\r\n\r\n            }, false, Visibility.protected, true, \"Randbreite in Pixeln\"));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"getAlpha\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getAlpha\")) return;\r\n\r\n                return sh.fillAlpha;\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit von Füllung und Rand. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setFillColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setFillColor\")) return;\r\n\r\n                sh.setFillColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Füllfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: number = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe wird als int-Wert gegeben, wobei farbe == 255*255*rot + 255*grün + blau und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"color\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let alpha: number = parameters[2].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color, alpha);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" oder \"rgb(172, 22, 18)\" und 0.0 <= alpha <= 1.0\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderColor\", new Parameterlist([\r\n            { identifier: \"colorAsRGBAString\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let color: string = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderColor\")) return;\r\n\r\n                sh.setBorderColor(color);\r\n\r\n            }, false, false, 'Setzt die Randfarbe. Die Farbe ist entweder eine vordefinierte Farbe (Color.black, Color.red, ...) oder eine css-Farbe der Art \"#ffa7b3\" (ohne alpha), \"#ffa7b380\" (mit alpha), \"rgb(172, 22, 18)\" oder \"rgba(123, 22,18, 0.3)\"', false));\r\n\r\n        this.addMethod(new Method(\"setBorderWidth\", new Parameterlist([\r\n            { identifier: \"widthInPixel\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let width: number = parameters[1].value;\r\n                let sh: FilledShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setBorderWidth\")) return;\r\n\r\n                sh.setBorderWidth(width);\r\n\r\n            }, false, false, 'Setzt die Linienbreite des Randes (Einheit: Pixel)\"', false));\r\n\r\n    }\r\n\r\n    rgbaToHex(rgb: number, alpha: number): string {\r\n        let s = rgb == null ? \"---\" : rgb.toString(16);\r\n        while (s.length < 6) s = \"0\" + s;\r\n\r\n        let a = Math.round(alpha * 255).toString(16);\r\n        if (a.length < 2) a = \"0\" + a;\r\n\r\n        return \"#\" + s + a;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport abstract class FilledShapeHelper extends ShapeHelper {\r\n\r\n    fillColor: number = 0x8080ff;\r\n    fillAlpha: number = 1.0;\r\n\r\n    borderColor: number = null;\r\n    borderAlpha: number = 1.0;\r\n    borderWidth: number = 10;\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n    }\r\n\r\n    copyFrom(fsh: FilledShapeHelper) {\r\n        super.copyFrom(fsh);\r\n        this.fillColor = fsh.fillColor;\r\n        this.fillAlpha = fsh.fillAlpha;\r\n\r\n        this.borderColor = fsh.borderColor;\r\n        this.borderAlpha = fsh.borderAlpha;\r\n        this.borderWidth = fsh.borderWidth;\r\n    }\r\n\r\n    setAlpha(alpha: number) {\r\n\r\n        this.fillAlpha = alpha;\r\n        this.borderAlpha = alpha;\r\n        this.render();\r\n    }\r\n\r\n    setBorderColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.borderColor = c.color;\r\n            this.borderAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.borderColor = color;\r\n            this.borderAlpha = alpha;\r\n        }\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setFillColor(color: string | number, alpha?: number) {\r\n\r\n        if (typeof color == \"string\") {\r\n            let c = ColorHelper.parseColorToOpenGL(color);\r\n            this.fillColor = c.color;\r\n            this.fillAlpha = alpha == null ? c.alpha : alpha;\r\n        } else {\r\n            this.fillColor = color;\r\n            this.fillAlpha = alpha;\r\n        }\r\n\r\n\r\n        this.render();\r\n\r\n    }\r\n\r\n    setBorderWidth(width: number) {\r\n        this.borderWidth = width;\r\n        this.render();\r\n    }\r\n\r\n    public getFarbeAsObject(color: number, alpha: number, colorType: Klass): RuntimeObject {\r\n\r\n        if (color == null) return null;\r\n\r\n        let r = (color & 0xff0000) >> 16;\r\n        let g = (color & 0xff00) >> 8;\r\n        let b = color & 0xff;\r\n\r\n        let rto: RuntimeObject = new RuntimeObject(colorType);\r\n\r\n        let id: ColorClassIntrinsicData = {\r\n            red: r,\r\n            green: g,\r\n            blue: b,\r\n            hex: ColorHelper.intColorToHexRGB(color)\r\n        }\r\n\r\n        rto.intrinsicData = id;\r\n\r\n        return rto;\r\n\r\n    }\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class CircleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Circle\", module, \"Kreis\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Circle\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let r: number = parameters[3].value;\r\n\r\n                let rh = new CircleHelper(mx, my, r, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert einen neuen Kreis. (mx, my) ist der Mittelpunt, r sein Radius.', true));\r\n\r\n        this.addMethod(new Method(\"setRadius\", new Parameterlist([\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setRadius\")) return;\r\n\r\n                sh.setRadius(r);\r\n\r\n            }, false, false, 'Setzt den Radius des Kreises.\"', false));\r\n\r\n        this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getRadius\")) return;\r\n\r\n                return sh.r * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt den Radius zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: CircleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Circle-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class CircleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public r: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: CircleHelper = new CircleHelper(this.mx, this.my, this.r, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI / 8;\r\n        for (let i = 0; i < 16; i++) {\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.r * Math.cos(alpha),\r\n                y: this.my + this.r * Math.sin(alpha)\r\n            });\r\n        }\r\n        this.hitPolygonDirty = true;\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawCircle(this.mx, this.my, this.r);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n    };\r\n\r\n    setRadius(r: number) {\r\n        this.r = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx * dx + dy * dy <= this.r * this.r;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { intPrimitiveType, doublePrimitiveType, voidPrimitiveType, stringPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { ColorHelper } from \"./ColorHelper.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper, WorldClass } from \"./World.js\";\r\n\r\nexport type ColorClassIntrinsicData = {\r\n    red: number,\r\n    green: number,\r\n    blue: number,\r\n    hex: string\r\n}\r\n\r\nexport class ColorClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Color\", module, \"Farbe\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for (let colorName in ColorHelper.predefinedColors) {\r\n\r\n            let intColor = ColorHelper.predefinedColors[colorName];\r\n\r\n            let r: RuntimeObject = new RuntimeObject(this);\r\n\r\n            let red = (intColor & 0xff0000) >> 16;\r\n            let green = (intColor & 0xff00) >> 8;\r\n            let blue = (intColor & 0xff);\r\n\r\n            let id: ColorClassIntrinsicData = {\r\n                red: red,\r\n                green: green,\r\n                blue: blue,\r\n                hex: ColorHelper.intColorToHexRGB(intColor)\r\n            }\r\n\r\n            r.intrinsicData = id;\r\n\r\n            this.addAttribute(new Attribute(colorName, this,\r\n                (value) => { value.value = r }, true, Visibility.public, true,\r\n                \"Die Farbe \" + colorName + \" (\" + ColorHelper.intColorToHexRGB(intColor) + \" oder \" + ColorHelper.intColorToRGB(intColor)));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"Color\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let red: number = Math.trunc(parameters[1].value);\r\n                let green: number = Math.trunc(parameters[2].value);\r\n                let blue: number = Math.trunc(parameters[3].value);\r\n\r\n\r\n                let intrinsicData: ColorClassIntrinsicData = {\r\n                    red: red,\r\n                    green: green,\r\n                    blue: blue,\r\n                    hex: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n            }, false, false, 'Instanziert eine neue Farbe. Red, green und blue sind die Farbanteile, jeweils als integer-Zahlen im Bereich von 0 bis 255.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return Math.floor(Math.random() * 0xffffff);\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n\r\n                let r: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let g: number = Math.floor(Math.random() * (256 - min)) + min;\r\n                let b: number = Math.floor(Math.random() * (256 - min)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"randomColor\", new Parameterlist([\r\n            { identifier: \"minimumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maximumRGBValue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let min: number = parameters[1].value;\r\n                let max: number = parameters[1].value;\r\n                if (min < 0) min = 0;\r\n                if (min > 255) min = 255;\r\n                if (max < 0) max = 0;\r\n                if (max > 255) max = 255;\r\n\r\n                if(max < min){\r\n                    let z = max;\r\n                    max = min;\r\n                    min = z;\r\n                }\r\n\r\n                let r: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let g: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n                let b: number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n                return 0x10000 * r + 0x100 * g + b;\r\n\r\n            }, false, true, 'Gibt eine zufällige Farbe (ohne Transparenz) zurück. Min ist der Mindestwert für den Rot-, Grün- und Blauanteil, max der Höchstwert, wobei jeder der Anteile und daher auch min zwischen 0 und 255 (jeweils einschließlich) liegen muss.'\r\n            , true));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).hex;\r\n\r\n            }, false, false, 'Verwandelt die Farbe in einen String.', false));\r\n\r\n        this.addMethod(new Method(\"equals\", new Parameterlist([\r\n            { identifier: \"otherColor\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let d = <ColorClassIntrinsicData>(o.intrinsicData);\r\n                let d1 = <ColorClassIntrinsicData>(o1.intrinsicData);\r\n\r\n                return (d.red == d1.red && d.green == d1.green && d.blue == d1.blue);\r\n\r\n            }, false, false, 'Vergleicht zwei Farben', false));\r\n\r\n        this.addMethod(new Method(\"getRed\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).red;\r\n\r\n            }, false, false, 'Gibt den Rotanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getGreen\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).green;\r\n\r\n            }, false, false, 'Gibt den Grünanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"getBlue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<ColorClassIntrinsicData>(o.intrinsicData)).blue;\r\n\r\n            }, false, false, 'Gibt den Blauanteil der Farbe zurück (0 - 255).', false));\r\n\r\n        this.addMethod(new Method(\"fromRGB\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                return (r * 0x10000 + g * 0x100 + b);\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) die Farbe.', false));\r\n\r\n        this.addMethod(new Method(\"fromRGBA\", new Parameterlist([\r\n            { identifier: \"red\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"green\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"blue\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"alpha\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let r: number = parameters[1].value;\r\n                let g: number = parameters[2].value;\r\n                let b: number = parameters[3].value;\r\n                let a: number = parameters[4].value;\r\n                let color: string = (r * 0x1000000 + g * 0x10000 + b * 0x100 + Math.floor(a * 255)).toString(16);\r\n                while (color.length < 8) color = \"0\" + color;\r\n\r\n                return \"#\" + color;\r\n\r\n            }, false, true, 'Berechnet aus Rot-, Grün- und Blauwert (alle zwischen 0 und 255) sowie Alpha-Wert (zwischen 0 und 1) die Farbe.', false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\n\r\nexport class EllipseClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Ellipse\", module, \"Ellipse\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Ellipse\", new Parameterlist([\r\n            { identifier: \"mx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"my\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let mx: number = parameters[1].value;\r\n                let my: number = parameters[2].value;\r\n                let rx: number = parameters[3].value;\r\n                let ry: number = parameters[4].value;\r\n\r\n                let rh = new EllipseHelper(mx, my, rx, ry, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Ellipse. (mx, my) ist der Mittelpunt, rx und ry sind ihre Radien.', true));\r\n\r\n            this.addMethod(new Method(\"setRadiusX\", new Parameterlist([\r\n                { identifier: \"rx\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusX(r);\r\n    \r\n                }, false, false, 'Setzt den x-Radius der Ellipse\"', false));\r\n\r\n            this.addMethod(new Method(\"setRadiusY\", new Parameterlist([\r\n                { identifier: \"ry\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), null,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let r: number = parameters[1].value;\r\n                    let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    sh.setRadiusY(r);\r\n    \r\n                }, false, false, 'Setzt den y-Radius der Ellipse\"', false));\r\n    \r\n                this.addMethod(new Method(\"copy\", new Parameterlist([\r\n                ]), this,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let sh: EllipseHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"copy\")) return;\r\n        \r\n                        return sh.getCopy(<Klass>o.class);\r\n        \r\n                    }, false, false, 'Erstellt eine Kopie des Ellipse-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class EllipseHelper extends FilledShapeHelper {\r\n\r\n    constructor(public mx: number, public my: number, public rx: number, public ry: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = mx;\r\n        this.centerYInitial = my;\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: EllipseHelper = new EllipseHelper(this.mx, this.my, this.rx, this.ry, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    \r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let deltaAlpha = Math.PI/8;\r\n        for(let i = 0; i < 16; i++){\r\n            let alpha = deltaAlpha * i;\r\n            this.hitPolygonInitial.push({\r\n                x: this.mx + this.rx*Math.cos(alpha),\r\n                y: this.my + this.ry*Math.sin(alpha)\r\n            });\r\n        }\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawEllipse(this.mx, this.my, this.rx, this.ry);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    setRadiusX(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    setRadiusY(r: number){\r\n        this.rx = r;\r\n        this.render();\r\n    }\r\n\r\n    isOutsideView() {\r\n\r\n        return super.isOutsideView();\r\n\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n\r\n        if (!this.displayObject.getBounds().contains(x, y)) return false;\r\n\r\n        let p: PIXI.Point = new PIXI.Point(x, y);\r\n        let m = this.displayObject.transform.worldTransform;\r\n\r\n        m.applyInverse(p, p);\r\n\r\n        let dx = p.x - this.mx;\r\n        let dy = p.y - this.my;\r\n        return dx*dx/(this.rx*this.rx) + dy*dy/(this.ry*this.ry) <= 1;\r\n    \r\n    }\r\n    \r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value, Attribute, Type } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper, ShapeClass } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Point, PRECISION, TilingSprite } from \"pixi.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\n\r\nexport class CollisionPairClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"CollisionPair\", module, \"Speichert die Referenzen auf zwei Figuren, die gerade kollidiert sind. Diese Klasse von den Kollisionsmethden der Klasse Group benutzt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n        this.addAttribute(new Attribute(\"shapeA\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeA\"];\r\n\r\n            }, false, Visibility.public, true, \"Erstes an der Kollision beteiligtes Shape\"));\r\n\r\n        this.addAttribute(new Attribute(\"shapeB\", shapeType,\r\n            (value) => {\r\n\r\n                let rto: RuntimeObject = value.object;\r\n                value.value = rto.intrinsicData[\"ShapeB\"];\r\n\r\n            }, false, Visibility.public, true, \"Zweites an der Kollision beteiligtes Shape\"));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class GroupClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Group\", module, \"Klasse zum Gruppieren grafischer Elemente. Die gruppierten Elemente können miteinander verschoben, gedreht, gestreckt sowie ein- und ausgeblendet werden. Zudem besitzt die Klasse Methoden zur schnellen Erkennung von Kollision mit Elementen außerhalb der Gruppe.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let collisionPairType = module.typeStore.getType(\"CollisionPair\");\r\n        let collisionPairArrayType = new ArrayType(collisionPairType);\r\n        let shapeType = module.typeStore.getType(\"Shape\");\r\n\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe. Ihr können mit der Methode add Elemente hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"Group\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(module.typeStore.getType(\"Shape\")), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n\r\n                let rh = new GroupHelper(module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n                for (let s of shapes) {\r\n                    rh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Instanziert eine neue Gruppe und fügt die übergebenen Grafikobjekte der Gruppe hinzu. Der Gruppe können mit der Methode add weitere Grafikobjekte hinzugefügt werden, die dann mit der Gruppe verschoben, gedreht, ... werden.', true));\r\n\r\n        this.addMethod(new Method(\"add\", new Parameterlist([\r\n            { identifier: \"shapes\", type: new ArrayType(shapeType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shapes: Value[] = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                for (let s of shapes) {\r\n                    sh.add(s.value);\r\n                }\r\n\r\n            }, false, false, 'Fügt die Grafikobjekte der Gruppe hinzu.', false));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                return sh.getElement(index);\r\n\r\n            }, false, false, 'Gibt das Grafikelement der Gruppe mit dem entsprechenden Index zurück. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.removeElementAt(index);\r\n\r\n            }, false, false, 'Entfernt das Grafikelement aus der Gruppe mit dem entsprechenden Index, zerstört es jedoch nicht. VORSICHT: Das erste Element hat Index 0!', false));\r\n\r\n        this.addMethod(new Method(\"remove\", new Parameterlist([\r\n            { identifier: \"shape\", type: shapeType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                sh.remove(shape);\r\n\r\n            }, false, false, 'Entfernt das übergebene Grafikelement aus der Gruppe, zerstört es jedoch nicht.', false));\r\n\r\n\r\n        let shapeArrayType = new ArrayType(shapeType);\r\n\r\n        this.addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"shape\", type: module.typeStore.getType(\"Shape\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let shape: RuntimeObject = parameters[1].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\") || shape == null) return [];\r\n\r\n                let shapes: RuntimeObject[] = sh.getCollidingObjects(shape);\r\n\r\n                let values: Value[] = [];\r\n                for (let sh of shapes) {\r\n                    values.push({\r\n                        type: shapeType,\r\n                        value: sh\r\n                    })\r\n\r\n                }\r\n\r\n                return values;\r\n\r\n            }, false, false, 'Gibt die Objekte der Gruppe zurück, die mit dem übergebenen Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"getCollisionPairs\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"maxOneCollisionPerShape\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), collisionPairArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group2: RuntimeObject = parameters[1].value;\r\n                let maxOneCollisionPerShape: boolean = parameters[2].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n                let groupHelper2: GroupHelper = <GroupHelper>group2.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingObjects2(groupHelper2, collisionPairType, maxOneCollisionPerShape);\r\n\r\n            }, false, false, 'Überprüft, welche Objekte der Gruppe mit welchen der anderen kollidieren.' +\r\n            ' Gibt für jede Kollision ein Collisionpair-Objekt zurück, das die beiden kollidierenden Objekte enthält.' +\r\n        ' Falls maxOneCollisionPerShape == true ist jedes Objekt dabei aber nur in max. einem Collisionpair-Objekt enthalten.', false));\r\n\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"size\")) return;\r\n\r\n                return sh.shapes.length;\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Elemente in der Gruppe enthalten sind.', false));\r\n\r\n        this.addMethod(new Method(\"empty\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.removeAllChidren();\r\n\r\n            }, false, false, 'Entfernt alle Elemente aus der Gruppe, löscht die Elemente aber nicht.', false));\r\n\r\n        this.addMethod(new Method(\"destroyAllChildren\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = <GroupHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"empty\")) return;\r\n\r\n                sh.destroyChildren();\r\n\r\n            }, false, false, 'Löscht alle Elemente der Gruppe, nicht aber die Gruppe selbst.', false));\r\n\r\n\r\n        (<Klass>shapeType).addMethod(new Method(\"getCollidingShapes\", new Parameterlist([\r\n            { identifier: \"group\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), shapeArrayType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let group: RuntimeObject = parameters[1].value;\r\n                let groupHelper: GroupHelper = group.intrinsicData[\"Actor\"];\r\n                let sh: ShapeHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getCollidingShapes\")) return;\r\n\r\n                return sh.getCollidingShapes(groupHelper, shapeType);\r\n\r\n            }, false, false, 'Gibt alle Shapes der Gruppe group zurück, die mit dem Shape kollidieren.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: GroupHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Group-Objekts (und aller seiner enthaltenen Grafikobjekte!) und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class GroupHelper extends ShapeHelper {\r\n\r\n    shapes: RuntimeObject[] = [];\r\n\r\n    constructor(interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.displayObject = new PIXI.Container();\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    removeElementAt(index: number) {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n\r\n        let shape = this.shapes[index];\r\n        this.remove(shape);\r\n    }\r\n\r\n    getElement(index: number): RuntimeObject {\r\n        if (index < 0 || index >= this.shapes.length) {\r\n            this.worldHelper.interpreter.throwException(\"In der Gruppe gibt es kein Element mit Index \" + index + \".\");\r\n            return;\r\n        }\r\n        return this.shapes[index];\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let groupHelperCopy: GroupHelper = new GroupHelper(this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = groupHelperCopy;\r\n\r\n        for (let ro of this.shapes) {\r\n            let shapeHelper: ShapeHelper = ro.intrinsicData[\"Actor\"];\r\n\r\n            let roCopy: RuntimeObject = shapeHelper.getCopy(<Klass>ro.class)\r\n            let shapeHelperCopy: ShapeHelper = roCopy.intrinsicData[\"Actor\"];\r\n\r\n            groupHelperCopy.shapes.push(roCopy);\r\n\r\n            shapeHelperCopy.belongsToGroup = groupHelperCopy;\r\n\r\n            (<PIXI.Container>groupHelperCopy.displayObject).addChild(shapeHelperCopy.displayObject);\r\n\r\n        }\r\n\r\n        groupHelperCopy.copyFrom(this);\r\n        groupHelperCopy.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    setTimerPaused(tp: boolean) {\r\n        this.timerPaused = tp;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.timerPaused = tp;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    add(shape: RuntimeObject) {\r\n\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        if (shapeHelper.isDestroyed) {\r\n            this.worldHelper.interpreter.throwException(\"Ein schon zerstörtes Objekt kann keiner Gruppe hinzugefügt werden.\");\r\n            return;\r\n        }\r\n\r\n        if (this.hasCircularReference(shape)) {\r\n            return;\r\n        }\r\n\r\n        this.shapes.push(shape);\r\n\r\n        if (shapeHelper.belongsToGroup != null) {\r\n            shapeHelper.belongsToGroup.remove(shape);\r\n        }\r\n\r\n        shapeHelper.belongsToGroup = this;\r\n\r\n        let inverse = new PIXI.Matrix().copyFrom(this.displayObject.transform.worldTransform);\r\n        inverse.invert();\r\n        shapeHelper.displayObject.localTransform.prepend(inverse.prepend(this.worldHelper.stage.localTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n\r\n        (<PIXI.Container>this.displayObject).addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n\r\n        let xSum: number = 0;\r\n        let ySum: number = 0;\r\n\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            xSum += sh.getCenterX();\r\n            ySum += sh.getCenterY();\r\n        }\r\n\r\n        let x = xSum / this.shapes.length;\r\n        let y = ySum / this.shapes.length;\r\n\r\n        this.displayObject.updateTransform();\r\n        let p1: PIXI.Point = this.displayObject.worldTransform.applyInverse(new PIXI.Point(x, y));\r\n\r\n        this.centerXInitial = p1.x;\r\n        this.centerYInitial = p1.y;\r\n    }\r\n\r\n    public removeAllChidren() {\r\n        let index: number = 0;\r\n        for (let shape of this.shapes) {\r\n            this.deregister(shape, index++);\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n    public remove(shape: RuntimeObject) {\r\n        let index = this.shapes.indexOf(shape);\r\n        if (index >= 0) {\r\n            this.shapes.splice(index, 1);\r\n\r\n            this.deregister(shape, index);\r\n        }\r\n    }\r\n\r\n    private deregister(shape: RuntimeObject, index: number) {\r\n        let shapeHelper: ShapeHelper = shape.intrinsicData['Actor'];\r\n\r\n        let transform = new PIXI.Matrix().copyFrom(shapeHelper.displayObject.transform.worldTransform);\r\n\r\n        (<PIXI.Container>this.displayObject).removeChildAt(index);\r\n\r\n        let inverseStageTransform = new PIXI.Matrix().copyFrom(this.worldHelper.stage.localTransform);\r\n        inverseStageTransform.invert();\r\n        shapeHelper.displayObject.localTransform.identity();\r\n        shapeHelper.displayObject.localTransform.append(transform.prepend(inverseStageTransform));\r\n        shapeHelper.displayObject.transform.onChange();\r\n        this.worldHelper.stage.addChild(shapeHelper.displayObject);\r\n        shapeHelper.displayObject.updateTransform();\r\n        shapeHelper.belongsToGroup = null;\r\n\r\n    }\r\n\r\n\r\n    public render(): void {\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.destroyChildren();\r\n        super.destroy();\r\n    }\r\n\r\n    public destroyChildren(): void {\r\n        for (let shape of this.shapes.slice(0)) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.destroy();\r\n        }\r\n        this.shapes = [];\r\n    }\r\n\r\n\r\n    collidesWith(shapeHelper: ShapeHelper) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    setHitPolygonDirty(dirty: boolean) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            sh.setHitPolygonDirty(dirty);\r\n        }\r\n    }\r\n\r\n    containsPoint(x: number, y: number) {\r\n        for (let shape of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n            if (sh.containsPoint(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCollidingObjects(shape: RuntimeObject): RuntimeObject[] {\r\n\r\n        let collidingShapes: RuntimeObject[] = [];\r\n        let shapeHelper: ShapeHelper = <ShapeHelper>shape.intrinsicData[\"Actor\"];\r\n\r\n        for (let s of this.shapes) {\r\n            let sh: ShapeHelper = <ShapeHelper>s.intrinsicData[\"Actor\"];\r\n            if (sh.collidesWith(shapeHelper)) {\r\n                collidingShapes.push(s);\r\n            }\r\n        }\r\n\r\n        return collidingShapes;\r\n\r\n    }\r\n\r\n    getCollidingObjects2(groupHelper2: GroupHelper, collisionPairType: Type,\r\n        maxOneCollisionPerShape: boolean): Value[] {\r\n\r\n        let collisionPairs: Value[] = [];\r\n\r\n        let alreadyCollidedHelpers2: Map<ShapeHelper, boolean> = new Map();\r\n\r\n        for (let shape1 of this.shapes) {\r\n            let shapeHelper1: ShapeHelper = <ShapeHelper>shape1.intrinsicData[\"Actor\"];\r\n            for (let shape2 of groupHelper2.shapes) {\r\n                let shapeHelper2: ShapeHelper = <ShapeHelper>shape2.intrinsicData[\"Actor\"];\r\n                if (shapeHelper1.collidesWith(shapeHelper2)) {\r\n\r\n                    if (!maxOneCollisionPerShape || alreadyCollidedHelpers2.get(shapeHelper2) == null) {\r\n                        alreadyCollidedHelpers2.set(shapeHelper2, true);\r\n                        let rto: RuntimeObject = new RuntimeObject(<Klass>collisionPairType);\r\n                        rto.initializeAttributeValues();\r\n\r\n                        rto.intrinsicData[\"ShapeA\"] = shapeHelper1.runtimeObject;\r\n                        rto.intrinsicData[\"ShapeB\"] = shapeHelper2.runtimeObject;\r\n                        collisionPairs.push({\r\n                            type: collisionPairType,\r\n                            value: rto\r\n                        });\r\n                    }\r\n\r\n                    if (maxOneCollisionPerShape) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisionPairs;\r\n\r\n    }\r\n\r\n    hasCircularReference(shapeToAdd: RuntimeObject) {\r\n        let gh = shapeToAdd.intrinsicData[\"Actor\"];\r\n        if (gh instanceof GroupHelper) {\r\n            if (gh == this) {\r\n                this.worldHelper.interpreter.throwException(\"Eine Group darf sich nicht selbst enthalten!\");\r\n                return true;\r\n            } else {\r\n                for (let shape of gh.shapes) {\r\n                    if (this.hasCircularReference(shape)) {\r\n                        return true;\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport class KeyClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Key\", module, \"Aufzählung von Sondertasten zur Benutzung in den Methoden Actor.onKeyUp, Actor.onKeyTyped und Actor.onKeyDown\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"ArrowUp\", stringPrimitiveType, (value) => { value.value = \"ArrowUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowDown\", stringPrimitiveType, (value) => { value.value = \"ArrowDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowLeft\", stringPrimitiveType, (value) => { value.value = \"ArrowLeft\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"ArrowRight\", stringPrimitiveType, (value) => { value.value = \"ArrowRight\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Enter\", stringPrimitiveType, (value) => { value.value = \"Enter\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Space\", stringPrimitiveType, (value) => { value.value = \" \" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Shift\", stringPrimitiveType, (value) => { value.value = \"Shift\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Alt\", stringPrimitiveType, (value) => { value.value = \"Alt\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Strg\", stringPrimitiveType, (value) => { value.value = \"Control\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageUp\", stringPrimitiveType, (value) => { value.value = \"PageUp\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"PageDown\", stringPrimitiveType, (value) => { value.value = \"PageDown\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Backspace\", stringPrimitiveType, (value) => { value.value = \"Backspace\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Escape\", stringPrimitiveType, (value) => { value.value = \"Escape\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Entf\", stringPrimitiveType, (value) => { value.value = \"Delete\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Einf\", stringPrimitiveType, (value) => { value.value = \"Insert\" }, true, Visibility.public, true, \"\"));\r\n        this.addAttribute(new Attribute(\"Ende\", stringPrimitiveType, (value) => { value.value = \"End\" }, true, Visibility.public, true, \"\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class PolygonClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Polygon\", module, \"Wahlweise geschlossenes Polygon (mit Füllung und Rand) oder offener Streckenzug\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als Array von double-Werten der Form {x1, y1, x2, y2, ...} übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true, isEllipsis: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let points: Value[] = parameters[2].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                points.forEach(v => pointsNumber.push(v.value));\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon. Die Punkte werden als double-Werte der Form x1, y1, x2, y2, ... übergeben.', true));\r\n\r\n        this.addMethod(new Method(\"Polygon\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, closeAndFill, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Polygon ohne Punkte.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"addPoint\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoint\")) return;\r\n\r\n                sh.addPoint(x, y);\r\n\r\n            }, false, false, 'Fügt dem Polygon einen Punkt hinzu.\"', false));\r\n\r\n        this.addMethod(new Method(\"addPoints\", new Parameterlist([\r\n            { identifier: \"points\", type: new ArrayType(doublePrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let points: Value[] = parameters[1].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"addPoints\")) return;\r\n\r\n                let p: {x: number, y: number}[];\r\n\r\n                for(let i = 0; i < points.length - 1; i += 2){\r\n                        sh.addPoint(points[i].value, points[i+1].value, i >= points.length -2);\r\n                }\r\n\r\n            }, false, false, 'Fügt dem Polygon mehrere Punkte hinzu. Diese werden in einem double[] übergeben, das abwechselnd die x- und y-Koordinaten enthält.\"', false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Polygon-Objekts und git sie zurück.', false));\r\n\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport class PolygonHelper extends FilledShapeHelper {\r\n\r\n    constructor(points: number[], private closeAndFill: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        let xSum = 0; let ySum = 0;\r\n        this.hitPolygonInitial = [];\r\n\r\n        for (let i = 0; i < points.length;) {\r\n            let x = points[i++];\r\n            let y = points[i++];\r\n            xSum += x;\r\n            ySum += y;\r\n            this.hitPolygonInitial.push({ x: x, y: y });\r\n        }\r\n\r\n        if (points.length > 1) {\r\n            this.centerXInitial = xSum / this.hitPolygonInitial.length;\r\n            this.centerYInitial = ySum / this.hitPolygonInitial.length;\r\n        }\r\n\r\n        if(!closeAndFill){\r\n            this.borderColor = 0x0000ff;\r\n        }\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: PolygonHelper = new PolygonHelper([], this.closeAndFill, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        if(this.hitPolygonInitial.length > 0){\r\n            g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n            for (let i = 1; i < this.hitPolygonInitial.length; i++) {\r\n                g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n            }\r\n        }\r\n\r\n        if (this.closeAndFill) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.closeAndFill) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    addPoint(x: number, y: number, render: boolean = true) {\r\n        let p = new PIXI.Point(x, y);\r\n        this.displayObject.transform.worldTransform.applyInverse(p, p);\r\n        this.hitPolygonInitial.push({ x: p.x, y: p.y });\r\n        this.hitPolygonDirty = true;\r\n        if (render) this.render();\r\n    }\r\n    \r\n    setPoint(x: number, y: number, index: number) {\r\n        if(index == 0 || index == 1){\r\n            this.hitPolygonInitial[index] = {x: x, y: y};\r\n            this.hitPolygonDirty = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    setPoints(x1: number, y1: number, x2: number, y2: number) {\r\n        this.hitPolygonInitial = [{x: x1,y: y1}, {x: x2,y: y2}];\r\n        this.hitPolygonDirty = true;\r\n        this.render();\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Rectangle\", module, \"Rechteck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Rectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                \r\n                let rh = new RectangleHelper(left, top, width, height, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n                \r\n            }, false, false, 'Instanziert ein neues, achsenparalleles Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n            \r\n            this.addMethod(new Method(\"setWidth\", new Parameterlist([\r\n                { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let width: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setWidth\")) return;\r\n\r\n                sh.width = width / sh.displayObject.scale.x;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Breite des Rechtecks.\", false));\r\n\r\n            this.addMethod(new Method(\"setHeight\", new Parameterlist([\r\n                { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), null,\r\n            (parameters) => {\r\n                \r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n                let height: number = parameters[1].value;\r\n                \r\n                if (sh.testdestroyed(\"setHeight\")) return;\r\n\r\n                sh.height = height / sh.displayObject.scale.y;\r\n                sh.render();\r\n\r\n            }, false, false, \"Setzt die Höhe des Rechtecks.\", false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des Rectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.render();\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RectangleHelper = new RectangleHelper(this.left, this.top, this.width, this.height, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    render(): void {\r\n\r\n        this.hitPolygonInitial = [\r\n            { x: this.left, y: this.top }, { x: this.left, y: this.top + this.height },\r\n             { x: this.left + this.width, y: this.top + this.height }, { x: this.left + this.width, y: this.top }\r\n        ];\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.moveTo(this.left, this.top);\r\n        g.lineTo(this.left + this.width, this.top);\r\n        g.lineTo(this.left + this.width, this.top + this.height);\r\n        g.lineTo(this.left, this.top + this.height);\r\n        g.closePath();\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class RepeatTypeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"RepeatType\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null, \r\n                identifier: \"once\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"loop\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"backAndForth\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Gibt an, auf welche Art eine Sprite-Animation abgespielt werden soll.\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class RoundedRectangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"RoundedRectangle\", module, \"Rechteck mit abgerundeten Ecken\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"RoundedRectangle\", new Parameterlist([\r\n            { identifier: \"left\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"top\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"width\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"radius\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let left: number = parameters[1].value;\r\n                let top: number = parameters[2].value;\r\n                let width: number = parameters[3].value;\r\n                let height: number = parameters[4].value;\r\n                let radius: number = parameters[5].value;\r\n\r\n                let rh = new RoundedRectangleHelper(left, top, width, height, radius, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues, achsenparalleles abgerundetes Rechteck-Objekt. (left, top) sind die Koordinaten der linken oberen Ecke.', true));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.width * sh.displayObject.scale.x;\r\n\r\n            }, false, false, \"Gibt die Breite zurück.\", false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.height * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt die Höhe zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"getRadius\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.radius * sh.displayObject.scale.y;\r\n\r\n            }, false, false, \"Gibt den Eckradius zurück.\", false));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: RoundedRectangleHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie des RoundedRectangle-Objekts und git sie zurück.', false));\r\n    \r\n\r\n    }\r\n\r\n}\r\n\r\nexport class RoundedRectangleHelper extends FilledShapeHelper {\r\n\r\n    constructor(public left: number, public top: number, public width: number, public height: number, public radius: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = left + width / 2;\r\n        this.centerYInitial = top + height / 2;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.addCenterCircle(left + radius, top + radius, Math.PI/2);\r\n        this.addCenterCircle(left + radius, top + height - radius, Math.PI);\r\n        this.addCenterCircle(left + width - radius, top + height - radius, 3*Math.PI/2);\r\n        this.addCenterCircle(left + width - radius, top + radius, 0);\r\n        this.hitPolygonInitial.push({x: left + radius, y: top});\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: RoundedRectangleHelper = new RoundedRectangleHelper(this.left, this.top, this.width, this.height, this.radius, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    addCenterCircle(midx: number, midy: number, angleStart: number){\r\n        let n = 8;\r\n        let dw = Math.PI/2/n;\r\n\r\n        for(let i = 0; i <= n; i++){\r\n            this.hitPolygonInitial.push({x: midx + this.radius*Math.cos(angleStart + dw*i), y: midy - this.radius*Math.sin(angleStart + dw*i)})\r\n        }\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n        if (this.borderColor != null) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n        }\r\n\r\n        g.drawRoundedRect(this.left,this.top, this.width, this.height, this.radius);\r\n\r\n        if (this.fillColor != null) {\r\n            g.endFill();\r\n        }\r\n\r\n        // g.lineStyle(1, 0xff0000, 1);\r\n\r\n        // g.moveTo(this.hitPolygonInitial[0].x, this.hitPolygonInitial[0].y);\r\n        // for(let i = 1; i < this.hitPolygonInitial.length; i++){\r\n        //     g.lineTo(this.hitPolygonInitial[i].x, this.hitPolygonInitial[i].y);\r\n        // }\r\n        \r\n    };\r\n\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\nexport class ScaleModeClass extends Enum {\r\n\r\n    constructor(module: Module){\r\n        super(\"ScaleMode\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"linear\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"nearest_neighbour\"\r\n            }\r\n        ]);\r\n\r\n        this.documentation = \"Art der Interpolation der Pixelfarben beim Skalieren von grafischen Objekten\"\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { SoundTools } from \"../../tools/SoundTools.js\";\r\n\r\nexport class SoundKlass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Sound\", module, \"Aufzählung aller Geräusche\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        for(let sound of SoundTools.sounds){\r\n            this.addAttribute(new Attribute(sound.name, stringPrimitiveType, (value) => { value.value = sound.name }, true, Visibility.public, true, sound.description));\r\n        }\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n            { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let sound: string = parameters[1].value;\r\n            SoundTools.play(sound);\r\n        }    \r\n        , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Punkt, abstandPunktZuGerade, abstand } from \"../../tools/MatheTools.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { SpriteHelper } from \"./Sprite.js\";\r\n\r\nexport class HitPolygonStore {\r\n\r\n    private static polygonStore: { [path: string]: Punkt[] } = {};\r\n\r\n    public static getPolygonForTexture(name: string, index: number, spriteHelper: SpriteHelper, sprite: PIXI.Sprite): Punkt[] {\r\n\r\n        if (index == null) {\r\n            index = 0;\r\n        }\r\n        name += \"#\" + index;\r\n\r\n        let polygon = HitPolygonStore.polygonStore[name];\r\n\r\n        if (polygon == null) {\r\n            // polygon = HitPolygonStore.getPolygon(<PIXI.Sprite>spriteHelper.displayObject, spriteHelper.worldHelper);\r\n            polygon = HitPolygonStore.getPolygon(sprite, spriteHelper.worldHelper);\r\n\r\n            HitPolygonStore.polygonStore[name] = polygon;\r\n        }\r\n\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static getPolygon(sprite: PIXI.Sprite, worldHelper: WorldHelper): Punkt[] {\r\n\r\n        let pixels = worldHelper.app.renderer.plugins.extract.pixels(sprite);\r\n        let w = sprite.width;\r\n        let h = sprite.height;\r\n\r\n        if (pixels.length !== 4 * w * h) {\r\n            return [{ x: 0, y: 0 }, { x: w, y: 0 }, { x: w, y: h }, { x: 0, y: h }];\r\n        }\r\n\r\n        let polygon: Punkt[] = [];\r\n        let additionalPointsPerHalfBorder = 3;\r\n        let pointsPerBorder = additionalPointsPerHalfBorder*2 + 3;\r\n\r\n        let probes: Punkt[] = [];\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: 0}, {x: w-1, y: 0}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: 0}, {x: w-1, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: w-1, y: h-1}, {x: 0, y: h-1}, \r\n            pointsPerBorder, probes);\r\n        HitPolygonStore.addPointsOnLine({x: 0, y: h-1}, {x: 0, y: 0}, \r\n            pointsPerBorder, probes);\r\n\r\n        let mid = {x: w/2, y: h/2};    \r\n        for(let probe of probes){\r\n            HitPolygonStore.probe(polygon, probe, mid,w, h, pixels);\r\n        }\r\n\r\n        let done: boolean = false;\r\n        while(!done){\r\n            done = true;\r\n            for(let i = 0; i < polygon.length - 1; i++){\r\n                let d = abstandPunktZuGerade(polygon[i], polygon[(i+2)%polygon.length], polygon[i+1]);\r\n                if(d < 2){\r\n                    polygon.splice(i+1, 1);\r\n                    done = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(polygon);\r\n\r\n        return polygon;\r\n\r\n    }\r\n\r\n    private static addPointsOnLine(start: Punkt, end: Punkt, n: number, points: Punkt[]){\r\n    \r\n        let fx = (end.x - start.x)/(n-1);\r\n        let fy = (end.y - start.y)/(n-1);\r\n\r\n        for(let i = 1; i <= n - 1 + 0.1; i++ ){\r\n            points.push({\r\n                x: start.x + fx*i,\r\n                y: start.y + fy*i\r\n            });\r\n        }    \r\n\r\n\r\n    }\r\n\r\n    private static probe(polygon: Punkt[], start: Punkt, end: Punkt, \r\n        width: number, height: number, pixels: Uint8Array) {\r\n\r\n        let length = abstand(start, end);\r\n        let fx = (end.x - start.x) / length;\r\n        let fy = (end.y - start.y) / length;\r\n\r\n        let x: number, y: number;\r\n\r\n        for (let i = 0; i <= length - 2; i++) {\r\n\r\n            x = start.x + i * fx;\r\n            y = start.y + i * fy;\r\n\r\n            if (!HitPolygonStore.isTransparent(x, y, width, height, pixels)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        polygon.push({ x: x, y: y });\r\n\r\n    }\r\n\r\n\r\n    private static isTransparent(x: number, y: number, width: number, height: number, pixels: Uint8Array) {\r\n\r\n        if (x < 0 || y < 0 || x > width || y > height) {\r\n            return true;\r\n        }\r\n\r\n        let p = pixels[4 * Math.round(x) + 4 * width * Math.round(y) + 3];\r\n        // console.log(\"x: \" + x + \", y: \" + y + \", width: \" + width + \" = \" + p);\r\n        // console.log(\"index: \" + (4 * x + 4 * width * y + 3) + \", length: \" + pixels.length);\r\n\r\n        return p == 0;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { ShapeHelper } from \"./Shape.js\";\r\nimport { HitPolygonStore } from \"./PolygonStore.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { SpriteLibraryPage } from \"../../help/SpriteLibraryPage.js\";\r\n\r\nexport class SpriteClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Sprite\", module, \"Ein Sprite ist eine kleine Pixelgrafik, die verschoben, gedreht und skaliert werden kann. Zudem besitzt es Methoden zum Erkennen von Kollisionen mit anderen grafischen Objekten.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Shape\"));\r\n\r\n        let scaleModeClass = <Klass>module.typeStore.getType(\"ScaleMode\")\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"scalemode\", type: scaleModeClass, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n                let scaleMode: EnumRuntimeObject = parameters[5].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o, scaleMode.enumValue.identifier);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. Falls scale ungleich 1 ist wird die Bitmap des Sprites VOR dem Rendern um den Faktor scale gestreckt. Dabei wird die nearest neighbour-Interpolation verwendet damit aus Einzelpixeln schöne Quadrate werden. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n                let index: number = parameters[4].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, index, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"Sprite\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[3].value;\r\n\r\n                let rh = new SpriteHelper(x, y, spriteLibraryEntry.enumValue.identifier, null, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = rh;\r\n\r\n            }, false, false, 'Instanziert ein neues Sprite und stellt es an der Position (x, y) dar. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', true));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImage\", new Parameterlist([\r\n            { identifier: \"spriteLibraryEntry\", type: module.typeStore.getType(\"SpriteLibrary\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let spriteLibraryEntry: EnumRuntimeObject = parameters[1].value;\r\n                let index: number = parameters[2].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(spriteLibraryEntry.enumValue.identifier, index);\r\n\r\n            }, false, false, 'Ändert das Bild des Sprites. SpriteLibraryEntry ist ein Auzählungstyp (enum). Gib einfach SpriteLibraryEntry gefolgt von einem Punkt ein, dann erhältst Du ein Auswahl von Bildern. Einen Überblick über die Bilder bekommst Du auch über den Menüpunkt Hilfe->Sprite-Bilderübersicht.', false));\r\n\r\n        this.addMethod(new Method(\"setImageIndex\", new Parameterlist([\r\n            { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let index: number = parameters[1].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setImage\")) return;\r\n\r\n                sh.setTexture(sh.textureName, index);\r\n\r\n            }, false, false, 'Ändert den Bildindex des Sprites.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"indexArray\", type: new ArrayType(intPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let indexArray: Value[] = parameters[1].value;\r\n                let repeatType: EnumRuntimeObject = parameters[2].value;\r\n                let imagesPerSecond: number = parameters[3].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                let indices: number[] = [];\r\n                for (let v of indexArray) {\r\n                    indices.push(v.value);\r\n                }\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"playAnimation\", new Parameterlist([\r\n            { identifier: \"fromIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"toIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"repeatType\", type: module.typeStore.getType(\"RepeatType\"), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"imagesPerSecond\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fromIndex: number = parameters[1].value;\r\n                let toIndex: number = parameters[2].value;\r\n                let repeatType: EnumRuntimeObject = parameters[3].value;\r\n                let imagesPerSecond: number = parameters[4].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"playAnimation\")) return;\r\n\r\n                let indices: number[] = [];\r\n\r\n                if (fromIndex < toIndex && toIndex - fromIndex < 10000) {\r\n                    for (let i = fromIndex; i < toIndex; i++) indices.push(i);\r\n                }\r\n\r\n                sh.playAnimation(indices, repeatType.enumValue.identifier, imagesPerSecond);\r\n\r\n            }, false, false, 'Spielt eine Animation ab.', false));\r\n\r\n        this.addMethod(new Method(\"stopAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"stopAnimation\")) return;\r\n\r\n                sh.stopAnimation(true);\r\n\r\n            }, false, false, 'Stoppt die gerade laufende Animation und macht das Sprite unsichtbar.', false));\r\n\r\n        this.addMethod(new Method(\"pauseAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"pauseAnimation\")) return;\r\n\r\n                sh.pauseAnimation();\r\n\r\n            }, false, false, 'Pausiert die laufende Animation.', false));\r\n\r\n        this.addMethod(new Method(\"resumeAnimation\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = <SpriteHelper>o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"resumeAnimation\")) return;\r\n\r\n                sh.resumeAnimation();\r\n\r\n            }, false, false, 'Fährt mit einer pausierten Animation wieder fort.', false));\r\n\r\n        this.addMethod(new Method(\"setAlpha\", new Parameterlist([\r\n            { identifier: \"alphaValue\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alpha: number = parameters[1].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"setAlpha\")) return;\r\n\r\n                sh.setAlpha(alpha);\r\n\r\n            }, false, false, 'Setzt die Durchsichtigkeit. 0.0 bedeutet vollkommen durchsichtig, 1.0 bedeutet vollkommen undurchsichtig.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: SpriteHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Sprite-Objekts und git sie zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class SpriteHelper extends ShapeHelper {\r\n\r\n    animationIndices: number[] = [];\r\n    animationRuns: boolean = false;\r\n    imagesPerMillisecond: number = 1;\r\n    animationTime: number = 0;\r\n    animationPaused: boolean = false;\r\n\r\n    repeatType = \"once\";\r\n    textureName: string = \"\";\r\n\r\n    constructor(public x: number, public y: number, public name: string, public index: number,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject,\r\n        public scaleMode: string = \"linear\") {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.setTexture(null, index);\r\n\r\n        let sprite = <PIXI.Sprite>this.displayObject;\r\n\r\n        this.displayObject.localTransform.translate(this.x - sprite.width / 2, this.y - sprite.height / 2);\r\n        this.displayObject.transform.onChange();\r\n\r\n        this.worldHelper.stage.addChild(sprite);\r\n\r\n\r\n        this.centerXInitial = sprite.width / 2;\r\n        this.centerYInitial = sprite.height / 2;\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: SpriteHelper = new SpriteHelper(this.x, this.y, this.name, this.index, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    setAlpha(alpha: number) {\r\n        this.displayObject.alpha = alpha;\r\n    }\r\n\r\n    setTexture(name?: string, index?: number) {\r\n\r\n        if (name == this.name && index == this.index) return;\r\n\r\n        if (name == null) name = this.name;\r\n        if (index == null) index = 0;\r\n        this.index = index;\r\n\r\n        this.textureName = name;\r\n\r\n        let prefix = \"\";\r\n        //@ts-ignore\r\n        if (window.javaOnlineDir != null) {\r\n            //@ts-ignore\r\n            prefix = window.javaOnlineDir;\r\n        }\r\n\r\n        let sheet = PIXI.Loader.shared.resources[prefix + \"assets/graphics/spritesheet.json\"];\r\n        let nameWithIndex = name + \"#\" + index;\r\n        let texture = sheet.textures[nameWithIndex];\r\n\r\n        if (texture != null) {\r\n\r\n            if (this.scaleMode == \"nearest_neighbour\") {\r\n\r\n                let t = this.worldHelper.scaledTextures[nameWithIndex];\r\n\r\n                if (t == null) {\r\n                    let sprite = new PIXI.Sprite(texture);\r\n\r\n                    let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                        width: sprite.width,\r\n                        height: sprite.height,\r\n                        scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                    });\r\n\r\n                    this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n                    this.worldHelper.scaledTextures[nameWithIndex] = dynamicTexture1;\r\n                    t = dynamicTexture1;\r\n                }\r\n\r\n                texture = t;\r\n                if (texture == null) texture = sheet.textures[nameWithIndex];\r\n\r\n                // let t = this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration];\r\n                // if( t != null){\r\n                //     texture = t;\r\n                // } else {\r\n                //     let sprite = new PIXI.Sprite(texture);\r\n\r\n                //     let dynamicTexture1 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width,\r\n                //         height: sprite.height,\r\n                //         scaleMode: PIXI.SCALE_MODES.NEAREST\r\n                //     });\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture1, true);\r\n\r\n                //     sprite = new PIXI.Sprite(dynamicTexture1);\r\n\r\n                //     let dynamicTexture2 = PIXI.RenderTexture.create({\r\n                //         width: sprite.width * this.scaleOnTextureGeneration,\r\n                //         height: sprite.height * this.scaleOnTextureGeneration,\r\n                //         scaleMode: PIXI.SCALE_MODES.LINEAR\r\n                //     });\r\n\r\n                //     let m = new PIXI.Matrix();\r\n                //     m.scale(this.scaleOnTextureGeneration, this.scaleOnTextureGeneration);\r\n\r\n                //     this.worldHelper.app.renderer.render(sprite, dynamicTexture2, true,\r\n                //         m);\r\n\r\n                //     texture = dynamicTexture2;\r\n\r\n                //     this.worldHelper.scaledTextures[nameWithIndex][this.scaleOnTextureGeneration] = texture;\r\n            }\r\n\r\n            let sprite: PIXI.Sprite = <PIXI.Sprite>this.displayObject;\r\n            if (sprite == null) {\r\n                sprite = new PIXI.Sprite(texture);\r\n                this.displayObject = sprite;\r\n            } else {\r\n                sprite.texture = texture; // sheet.textures[nameWithIndex];\r\n            }\r\n\r\n            this.hitPolygonInitial = HitPolygonStore.getPolygonForTexture(name, index, this, new PIXI.Sprite(sheet.textures[nameWithIndex]));\r\n            this.hitPolygonDirty = true;\r\n\r\n        } else {\r\n            if (this.displayObject == null) {\r\n                this.displayObject = new PIXI.Sprite();\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(): void {\r\n\r\n    };\r\n\r\n    playAnimation(indexArray: number[], repeatType: string, imagesPerSecond: number) {\r\n        this.stopAnimation(false);\r\n        this.animationIndices = indexArray;\r\n        this.repeatType = repeatType;\r\n        this.imagesPerMillisecond = imagesPerSecond / 1000;\r\n        this.animationTime = 0;\r\n        this.animationRuns = true;\r\n        this.worldHelper.spriteAnimations.push(this);\r\n    }\r\n\r\n    stopAnimation(setInvisible: boolean) {\r\n        if (this.animationRuns) {\r\n            let spriteHelperList = this.worldHelper.spriteAnimations;\r\n            let i = spriteHelperList.indexOf(this);\r\n            spriteHelperList.splice(i, 1);\r\n        }\r\n        this.animationRuns = false;\r\n        if (setInvisible) this.setVisible(false);\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.animationPaused = true;\r\n    }\r\n\r\n    resumeAnimation() {\r\n        this.animationPaused = false;\r\n    }\r\n\r\n    tick(deltaTime: number) {\r\n\r\n        if (this.animationPaused) return;\r\n\r\n        let image: number;\r\n\r\n        if (this.repeatType == \"backAndForth\") {\r\n            let period2 = this.animationIndices.length * 2 / this.imagesPerMillisecond;\r\n            let numberOfPeriodsDone = Math.trunc(this.animationTime / period2);\r\n            let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period2;\r\n            image = this.imagesPerMillisecond * timeIntoPeriod;\r\n            if (image >= this.animationIndices.length) {\r\n                image = 2 * this.animationIndices.length - image;\r\n            }\r\n            image = Math.trunc(image);\r\n        } else\r\n            if (this.repeatType == \"loop\") {\r\n                let period = this.animationIndices.length / this.imagesPerMillisecond;\r\n                let numberOfPeriodsDone = Math.trunc(this.animationTime / period);\r\n                let timeIntoPeriod = this.animationTime - numberOfPeriodsDone * period;\r\n                image = this.imagesPerMillisecond * timeIntoPeriod;\r\n                image = Math.trunc(image);\r\n            } else {\r\n                image = Math.trunc(this.imagesPerMillisecond * this.animationTime);\r\n                if (image >= this.animationIndices.length) {\r\n                    this.stopAnimation(true);\r\n                    return;\r\n                }\r\n            }\r\n\r\n        this.animationTime += deltaTime;\r\n\r\n        this.setTexture(null, this.animationIndices[image]);\r\n    }\r\n\r\n}\r\n","import { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\n\r\ntype SpriteLibraryEntry = {\r\n    filename: string,\r\n    name: string,\r\n    index?: number\r\n}\r\n\r\ndeclare var SpriteLibrary: SpriteLibraryEntry[];\r\n\r\nexport class SpriteLibraryClass extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SpriteLibrary\", module,\r\n\r\n            SpriteLibrary.filter(\r\n                (sle) => {\r\n                    return sle.index == null || sle.index == 0\r\n                }\r\n            ).map((sle: SpriteLibraryEntry) => {\r\n                return {\r\n                    type: TokenType.pushEnumValue,\r\n                    position: null,\r\n                    identifier: sle.name\r\n                };\r\n\r\n            })\r\n\r\n        );\r\n        this.documentation = \"Aufzählung der Sprite-Grafiken\"\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { WorldHelper } from \"./World.js\";\r\nimport { EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\n\r\nexport class TextClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Text\", module, \"Text, der innerhalb der Grafikausgabe dargestellt werden kann\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        // this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (object) => { return Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n\r\n        this.addMethod(new Method(\"Text\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let fontsize: number = parameters[3].value;\r\n                let text: string = parameters[4].value;\r\n\r\n                let sh = new TextHelper(x, y, fontsize, text, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = sh;\r\n\r\n            }, false, false, 'Instanziert ein neues Textobjekt. (x, y) sind die Koordinaten des Textankers (default: links oben), fontsize die Höhe des Textes in Pixeln.', true));\r\n\r\n        this.addMethod(new Method(\"setFontsize\", new Parameterlist([\r\n            { identifier: \"fontsize\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let fontsize: number = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setFontsize(fontsize);\r\n\r\n            }, false, false, 'Setzt die Schriftgröße des Textes (Einheit: Pixel).', false));\r\n\r\n        this.addMethod(new Method(\"setAlignment\", new Parameterlist([\r\n            { identifier: \"alignment\", type: module.typeStore.getType(\"Alignment\"), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let alignment: EnumRuntimeObject = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setAlignment(alignment.enumValue.identifier);\r\n\r\n            }, false, false, 'Setzt die Ausrichtung in X-Richtung. Zulässige Werte sind \"Alignment.left\", \"Alignment.right\" und \"Alignment.center\".', false));\r\n\r\n        this.addMethod(new Method(\"setText\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let text: string = parameters[1].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                sh.setText(text);\r\n\r\n            }, false, false, 'Setzt den Text.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Text-Objekts und git sie zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getWidth\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getWidth\")) return;\r\n\r\n                return sh.getWidth();\r\n\r\n            }, false, false, 'Gibt die Breite des Textes zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getHeight\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TextHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"getHeight\")) return;\r\n\r\n                return sh.getHeight();\r\n\r\n            }, false, false, 'Gibt die Höhe des Textes zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class TextHelper extends FilledShapeHelper {\r\n\r\n    alignment: string = \"left\";\r\n\r\n    textStyle: PIXI.TextStyle =\r\n        new PIXI.TextStyle({\r\n            fontFamily: 'Arial',\r\n            fontSize: this.fontsize,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal',\r\n            fill: [this.fillColor], // gradient possible...\r\n            stroke: this.borderColor,\r\n            strokeThickness: this.borderWidth,\r\n            dropShadow: false,\r\n            wordWrap: false,\r\n            align: \"left\"\r\n        });\r\n\r\n    constructor(public x: number, public y: number, public fontsize: number,\r\n        public text,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n        this.centerXInitial = x;\r\n        this.centerYInitial = y;\r\n\r\n        this.borderColor = null;\r\n        this.textStyle.stroke = null;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        this.render();\r\n        this.addToDefaultGroup();\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TextHelper = new TextHelper(this.x, this.y, this.fontsize, this.text, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.alignment = this.alignment;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Text(this.text, this.textStyle);\r\n            this.displayObject = g;\r\n            this.displayObject.localTransform.translate(this.x, this.y);\r\n            this.displayObject.transform.onChange();\r\n            this.worldHelper.stage.addChild(g);\r\n        } else {\r\n            g.text = this.text;\r\n            this.textStyle.fill = this.fillColor;\r\n            this.textStyle.stroke = this.borderColor;\r\n            this.textStyle.strokeThickness = this.borderWidth;\r\n            g.alpha = this.fillAlpha;\r\n            this.textStyle.fontSize = this.fontsize;\r\n            switch (this.alignment) {\r\n                case \"left\": g.anchor.x = 0; break;\r\n                case \"center\": g.anchor.x = 0.5; break;\r\n                case \"right\": g.anchor.x = 1.0; break;\r\n            }\r\n            g.style = this.textStyle;\r\n        }\r\n\r\n        this.centerXInitial = 0;\r\n        this.centerYInitial = 0;\r\n        if(this.text != null){\r\n            let tm = PIXI.TextMetrics.measureText(this.text, this.textStyle);\r\n    \r\n            this.centerXInitial = tm.width / 2;\r\n            this.centerYInitial = tm.height / 2;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    setFontsize(fontsize: number) {\r\n        this.fontsize = fontsize;\r\n        this.render();\r\n    }\r\n\r\n    setText(text: string) {\r\n        this.text = text;\r\n        this.render();\r\n    }\r\n\r\n    setAlignment(alignment: string) {\r\n        this.alignment = alignment;\r\n        this.render();\r\n    }\r\n\r\n    getWidth(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.width;\r\n    }\r\n\r\n    getHeight(): number {\r\n        let g: PIXI.Text = <any>this.displayObject;\r\n        return g.height;\r\n    }\r\n\r\n}\r\n","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class MathClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Math\", module, \"Klasse mit statischen Methoden zur Berechnung mathematischer Funktionen (sin, cos, abs, ...) und zur Ermittlung von Zufallszahlen.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"PI\", doublePrimitiveType, (value) => { value.value = Math.PI }, true, Visibility.public, true, \"Die Kreiszahl Pi (3.1415...)\"));\r\n        this.addAttribute(new Attribute(\"E\", doublePrimitiveType, (value) => { value.value = Math.E }, true, Visibility.public, true, \"Die Eulersche Zahl e\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"round\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.round(<number>parameters[1].value);\r\n            }, false, true, \"**Rundet** den Wert\"));\r\n\r\n        this.addMethod(new Method(\"floor\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.floor(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert ab, sucht also die **nächstkleinere** ganze Zahl\"));\r\n\r\n        this.addMethod(new Method(\"ceil\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.ceil(<number>parameters[1].value);\r\n            }, false, true, \"Rundet den Wert auf, sucht also die **nächstgrößere** Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"signum\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.sign(<number>parameters[1].value);\r\n            }, false, true, \"Gibt das Vorzeichen der Zahl zurück, d.h. \\n  - -1, falls die Zahl **negativ** ist,\\n  - 0, falls die Zahl **0** ist und\\n  - +1, falls die Zahl **positiv** ist.\"));\r\n\r\n        this.addMethod(new Method(\"sqrt\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sqrt(<number>parameters[1].value);\r\n            }, false, true, \"Gibt die **Quadratwurzel** der Zahl zurück. Für andere Wurzeln benutze Math.pow(a, b), z.B. Math.pow(10, 1.0/3.0) für die Kubikwurzel aus 10.\"));\r\n\r\n        this.addMethod(new Method(\"random\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.random();\r\n            }, false, true, \"Gibt eine Zufallszahl aus dem Intervall [0;1[ zurück.\"));\r\n\r\n        this.addMethod(new Method(\"pow\", new Parameterlist([\r\n            { identifier: \"Basis\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"Exponent\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.pow(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, 'Math.pow(a, b) gibt \"a hoch b\" zurück.'));\r\n\r\n        this.addMethod(new Method(\"toDegrees\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / Math.PI * 180;\r\n            }, false, true, \"Wandelt einen Winkel von Rad in Grad um, d.h. berechnet Winkel/Pi*180.\"));\r\n\r\n        this.addMethod(new Method(\"toRadians\", new Parameterlist([\r\n            { identifier: \"WinkelInGrad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return (<number>parameters[1].value) / 180 * Math.PI;\r\n            }, false, true, \"Wandelt einen Winkel von Grad in Rad um, d.h. berechnet Winkel/180*Pi.\"));\r\n\r\n        this.addMethod(new Method(\"exp\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.exp(<number>parameters[1].value);\r\n            }, false, true, 'Berechnet \"e hoch die Zahl\".'));\r\n\r\n        this.addMethod(new Method(\"log\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den natürlichen Logarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"log10\", new Parameterlist([\r\n            { identifier: \"Zahl\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.log10(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Zehnerlogarithmus der Zahl.\"));\r\n\r\n        this.addMethod(new Method(\"sin\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.sin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Sinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"cos\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.cos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Cosinus des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"tan\", new Parameterlist([\r\n            { identifier: \"WinkelInRad\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.tan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Tangens des Winkels.\"));\r\n\r\n        this.addMethod(new Method(\"asin\", new Parameterlist([\r\n            { identifier: \"WertDesSinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.asin(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Sinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"acos\", new Parameterlist([\r\n            { identifier: \"WertDesCosinus\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.acos(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Cosinus des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan\", new Parameterlist([\r\n            { identifier: \"WertDesTangens\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Arcus-Tangens des Wertes in Rad.\"));\r\n\r\n        this.addMethod(new Method(\"atan2\", new Parameterlist([\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.atan2(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Sind (x, y) die kartesischen Koordinaten eines Punktes, so ist Math.atan2(x, y) der Winkel alpha der Polarkoordinaten (alpha, r) des Punktes. \\n**Bem.: **Alpha wird in Rad berechnet.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"abs\", new Parameterlist([\r\n            { identifier: \"Wert\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.abs(<number>parameters[1].value);\r\n            }, false, true, \"Berechnet den Betrag des Wertes.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"max\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.max(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die größere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), floatPrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n        this.addMethod(new Method(\"min\", new Parameterlist([\r\n            { identifier: \"a\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"b\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n                return Math.min(<number>parameters[1].value, <number>parameters[2].value);\r\n            }, false, true, \"Gibt die kleinere der beiden Zahlen zurück.\"));\r\n\r\n    }\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemClass extends Klass {\r\n\r\n    printStream: RuntimeObject;\r\n\r\n    deltaTimeMillis: number = 0; // when using WebSocket then the Server sends time synchronization\r\n\r\n    constructor(module: Module) {\r\n        super(\"System\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Sound, Löschen der Ausgabe usw.\");\r\n\r\n        this.printStream = new RuntimeObject(<Klass>module.typeStore.getType(\"PrintStream\"));\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addAttribute(new Attribute(\"out\", module.typeStore.getType(\"PrintStream\"),\r\n            (value) => { value.value = this.printStream }, true, Visibility.public, true, \"PrintStream-Objekt, mit dem Text ausgegeben werden kann.\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        // this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        // ]), null,\r\n        //     (parameters) => {\r\n        //         module.main.getInterpreter().printManager.clear();\r\n        //     }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        // this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n        //     { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let r: RuntimeObject = parameters[1].value;\r\n        //     let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n        //     if (method != null) {\r\n\r\n        //         module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n        //             let program = method?.program;\r\n        //             let invoke = method?.invoke;\r\n\r\n        //             let stackElements: Value[] = [\r\n        //                 {\r\n        //                     type: r.class,\r\n        //                     value: r\r\n        //                 },\r\n        //                 {\r\n        //                     type: stringPrimitiveType,\r\n        //                     value: key\r\n        //                 }\r\n        //             ];\r\n\r\n        //             if (program != null) {\r\n        //                 module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n        //             } else if (invoke != null) {\r\n        //                 invoke([]);\r\n        //             }\r\n\r\n\r\n        //         });\r\n        //     }\r\n        // }    \r\n        // , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n\r\n        this.addMethod(new Method(\"currentTimeMillis\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n        (parameters) => {\r\n            return Date.now() + this.deltaTimeMillis;\r\n        }    \r\n        , false, true, \"Gibt die Anzahl der Millisekunden, die seit dem 01.01.1970 00:00:00 UTC vergangen sind, zurück.\"));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { EnumRuntimeObject } from \"../compiler/types/Enum.js\";\r\nimport { SoundTools } from \"../tools/SoundTools.js\";\r\n\r\nexport class SystemToolsClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"SystemTools\", module, \"Klasse mit statischen Methoden für Systemfunktionen, z.B. Löschen der Ausgabe, Registrieren eines Tastaturlisteners usw.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"clearScreen\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.clear();\r\n            }, false, true, \"Löscht den Bildschirm\"));\r\n\r\n        this.addMethod(new Method(\"addKeyListener\", new Parameterlist([\r\n            { identifier: \"keyListener\", type: module.typeStore.getType(\"KeyListener\"), declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n        (parameters) => {\r\n            let r: RuntimeObject = parameters[1].value;\r\n            let method = (<Klass>r.class).getMethodBySignature(\"onKeyTyped(String)\");\r\n\r\n            if (method != null) {\r\n\r\n                module.main.getInterpreter().keyboardTool.keyPressedCallbacks.push((key) => {\r\n\r\n                    let program = method?.program;\r\n                    let invoke = method?.invoke;\r\n\r\n                    let stackElements: Value[] = [\r\n                        {\r\n                            type: r.class,\r\n                            value: r\r\n                        },\r\n                        {\r\n                            type: stringPrimitiveType,\r\n                            value: key\r\n                        }\r\n                    ];\r\n\r\n                    if (program != null) {\r\n                        module.main.getInterpreter().runTimer(method, stackElements, null, false);\r\n                    } else if (invoke != null) {\r\n                        invoke([]);\r\n                    }\r\n\r\n\r\n                });\r\n            }\r\n        }    \r\n        , false, true, \"Fügt einen KeyListener hinzu, dessen Methode keyTyped immer dann aufgerufen wird, wenn eine Taste gedrückt und anschließend losgelassen wird.\"));\r\n\r\n        // this.addMethod(new Method(\"playSound\", new Parameterlist([\r\n        //     { identifier: \"sound\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        // ]), null,\r\n        // (parameters) => {\r\n        //     let sound: string = parameters[1].value;\r\n        //     SoundTools.play(sound);\r\n        // }    \r\n        // , false, true, \"Spielt einen Sound ab. Die Möglichen Sounds sind als statische Variablen der Klasse Sound hinterlegt. Tippe als Parameter also Sound gefolgt von einem Punkt ein, um eine Auswahl zu sehen!\"));\r\n    }\r\n}\r\n\r\nexport class KeyListener extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"KeyListener\", module, \"Interface mit Methode onKeyTyped. Eine Klasse, die dieses Interface implementiert, kann auf Tastatureingaben reagieren. Ein Objekt dieser Klasse muss zuvor aber mit System.addKeyListener() registriert werden.\");\r\n\r\n        this.addMethod(new Method(\"onKeyTyped\", new Parameterlist([\r\n            { identifier: \"key\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, nachdem eine Taste gedrückt wurde.\"));\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class PrintStreamClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"PrintStream\", module, \"Interne Hilfsklasse, um System.out.println zu ermöglichen. Das Objekt System.out ist von der Klasse PrintStream.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"print\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.print(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus.\"));\r\n\r\n        this.addMethod(new Method(\"println\", new Parameterlist([\r\n            { identifier: \"text\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            (parameters) => {\r\n                module.main.getInterpreter().printManager.println(parameters[1].value);\r\n            }, false, true, \"Gibt den Text aus, gefolgt von einem Zeilensprung.\"));\r\n\r\n\r\n    }\r\n\r\n}","import { Type, Method, Parameterlist, Value, Attribute } from \"../compiler/types/Types.js\";\r\nimport { Klass, Visibility, Interface } from \"../compiler/types/Class.js\";\r\nimport { stringPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Module } from \"../compiler/parser/Module.js\";\r\nimport { PrintManager } from \"../main/gui/PrintManager.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\nimport { Enum } from \"../compiler/types/Enum.js\";\r\nimport { InterpreterState, Interpreter } from \"../interpreter/Interpreter.js\";\r\nimport { Program } from \"../compiler/parser/Program.js\";\r\n\r\n\r\nexport class Runnable extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Runnable\", module);\r\n\r\n        this.addMethod(new Method(\"run\", new Parameterlist([\r\n            // { identifier: \"deltaTimeInMs\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird vom Timer immer wieder aufgerufen\"));\r\n    }\r\n\r\n}\r\n\r\ntype TimerEntry = {\r\n    timerListener: RuntimeObject,\r\n    dt: number,\r\n    running: boolean,\r\n    lastTimeFired: number,\r\n    method: Method\r\n}\r\n\r\nexport class TimerClass extends Klass {\r\n\r\n    timerEntries: TimerEntry[] = [];\r\n    timerRunning: boolean = false;\r\n\r\n    constructor(module: Module) {\r\n        super(\"Timer\", module, \"Timer Klasse zur periodischen Ausführung von Methoden\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"repeat\", new Parameterlist([\r\n            {\r\n                identifier: \"runnable\", type: module.typeStore.getType(\"Runnable\"),\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n            {\r\n                identifier: \"deltaTimeInMs\", type: intPrimitiveType,\r\n                declaration: null, usagePositions: null, isFinal: true\r\n            },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let tl: RuntimeObject = <RuntimeObject>parameters[1].value;\r\n                let dt: number = <number>parameters[2].value;\r\n\r\n                let timerEntry: TimerEntry = {\r\n                    timerListener: tl,\r\n                    dt: dt,\r\n                    lastTimeFired: 0,\r\n                    running: true,\r\n                    method: tl.class.getMethod(\"run\", new Parameterlist([\r\n                        // {\r\n                        //     identifier: \"deltaTimeInMs\",\r\n                        //     type: intPrimitiveType,\r\n                        //     declaration: null,\r\n                        //     isFinal: true,\r\n                        //     usagePositions: null\r\n                        // }\r\n                    ]))\r\n                }\r\n\r\n                this.timerEntries.push(timerEntry);\r\n\r\n                console.log(\"TimerListener added with dt = \" + dt + \" ms.\");\r\n\r\n            }, false, true, \"Fügt ein neues TimerListener-Objekt hinzu und ruft dessen tick-Methode immer wieder auf.\"));\r\n\r\n\r\n        this.processTimerEntries();\r\n\r\n    }\r\n\r\n    processTimerEntries() {\r\n\r\n        if (this.timerEntries.length > 0) {\r\n            let interpreter = this.module?.main?.getInterpreter();\r\n\r\n            if (interpreter != null) {\r\n                if (!this.timerRunning && interpreter.state == InterpreterState.running) {\r\n                    let t: number = performance.now();\r\n                    for (let timerentry of this.timerEntries) {\r\n                        let dt = t - timerentry.lastTimeFired;\r\n                        if (dt >= timerentry.dt) {\r\n                            this.runEntry(timerentry, interpreter, Math.round(dt));\r\n                            timerentry.lastTimeFired = t;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                switch (interpreter.state) {\r\n                    case InterpreterState.done:\r\n                    case InterpreterState.error:\r\n                    case InterpreterState.not_initialized:\r\n                        this.timerEntries = [];\r\n                        this.timerRunning = false;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        let that = this;\r\n\r\n        setTimeout(() => {\r\n            that.processTimerEntries();\r\n        }, 10);\r\n\r\n    }\r\n\r\n    runEntry(timerentry: TimerEntry, interpreter: Interpreter, dt: number) {\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: timerentry.timerListener.class,\r\n                value: timerentry.timerListener\r\n            },\r\n            // {\r\n            //     type: intPrimitiveType,\r\n            //     value: dt\r\n            // }\r\n        ];\r\n\r\n        this.timerRunning = true;\r\n        let that = this;\r\n\r\n        interpreter.runTimer(timerentry.method, stackElements, (interpreter) => {\r\n            that.timerRunning = false;\r\n        }, false);\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { Interface, TypeVariable, Klass } from \"../../compiler/types/Class.js\";\r\nimport { voidPrimitiveType, booleanPrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\n\r\nexport class MapClass extends Interface {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Map\", module, \"Interface mit Methoden einer Map (Schlüssel-Wert-Speicher)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt die Anzahl der Elemente der Map zurück.\"));\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Testet, ob die Map leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            null,  // no implementation!\r\n            true, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            null,  // no implementation!\r\n            true, false, \"Entfernt alle Element aus dieser Map.\"));\r\n\r\n    }\r\n\r\n}\r\n","import { TextPosition, TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Program, Statement } from \"../../compiler/parser/Program.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum } from \"../../compiler/types/Enum.js\";\r\nimport { booleanPrimitiveType, stringPrimitiveType, StringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, PrimitiveType, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { ListHelper } from \"./ArrayList.js\";\r\n\r\n\r\nexport class MapHelper {\r\n\r\n    keyArray: Value[] = [];\r\n    valueArray: Value[] = [];\r\n\r\n    map: Map<any, Value> = new Map(); // Maps key objects to value-Values\r\n\r\n    constructor(private runtimeObject: RuntimeObject, public interpreter: Interpreter, private module: Module) {\r\n    }\r\n\r\n    get(key: Value){\r\n        return this.map.get(key.value);\r\n    }\r\n\r\n    set(key: Value, value: Value): Value {\r\n\r\n        let old = this.map.get(key.value);\r\n\r\n        if(old == null){\r\n            this.keyArray.push(key);\r\n        } else {\r\n            this.valueArray.splice(this.valueArray.indexOf(old), 1);\r\n        }\r\n\r\n        this.valueArray.push(value);\r\n        \r\n        this.map.set(key.value, value);\r\n\r\n        return old;\r\n\r\n    }\r\n\r\n    allElementsPrimitive(): boolean {\r\n        for (let v of this.keyArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (let v of this.valueArray) {\r\n            if (!(v.type instanceof PrimitiveType || [\"String\", \"_Double\", \"Integer\", \"Boolean\" ,\"Character\"].indexOf(v.type.identifier) >= 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    to_String(): any {\r\n\r\n        if (this.allElementsPrimitive()) {\r\n            let s = \"[\";\r\n            for (let i = 0; i < this.keyArray.length; i++) {\r\n                s += \"\" + this.keyArray[i].value + \" => \" + this.valueArray[i].value;\r\n                if (i < this.keyArray.length - 1) s += \", \";\r\n            }\r\n\r\n            return s + \"]\";\r\n        }\r\n\r\n        let position: TextPosition = {\r\n            line: 1,\r\n            column: 1,\r\n            length: 1\r\n        }\r\n\r\n        let statements: Statement[] = [\r\n            {\r\n                type: TokenType.noOp,\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n            {\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \"[\",\r\n                position: position,\r\n                stepFinished: false\r\n            },\r\n        ];\r\n\r\n        let toStringParameters = new Parameterlist([]);\r\n\r\n        for (let i = 0; i < this.valueArray.length; i++) {\r\n\r\n            let key = this.keyArray[i];\r\n            if (key.type instanceof PrimitiveType || key.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: key.type.castTo(key, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: key.type,\r\n                    value: key.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>key.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            statements.push({\r\n                type: TokenType.pushConstant,\r\n                dataType: stringPrimitiveType,\r\n                value: \" => \",\r\n                position: position,\r\n                stepFinished: false\r\n            });\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n\r\n            let value = this.valueArray[i];\r\n            if (value.value == null || value.type instanceof PrimitiveType || value.type instanceof StringPrimitiveType) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: value.value == null ? \"null\" : value.type.castTo(value, stringPrimitiveType).value,\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n            } else {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: value.type,\r\n                    value: value.value,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n                statements.push({\r\n                    type: TokenType.callMethod,\r\n                    method: (<Klass | Interface | Enum>value.type).getMethod(\"toString\", toStringParameters),\r\n                    isSuperCall: false,\r\n                    stackframeBegin: -1,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n            statements.push({\r\n                type: TokenType.binaryOp,\r\n                operator: TokenType.plus,\r\n                leftType: stringPrimitiveType,\r\n                stepFinished: false,\r\n                position: position\r\n            });\r\n\r\n            if (i < this.valueArray.length - 1) {\r\n                statements.push({\r\n                    type: TokenType.pushConstant,\r\n                    dataType: stringPrimitiveType,\r\n                    value: \", \",\r\n                    position: position,\r\n                    stepFinished: false\r\n                });\r\n                statements.push({\r\n                    type: TokenType.binaryOp,\r\n                    leftType: stringPrimitiveType,\r\n                    operator: TokenType.plus,\r\n                    stepFinished: false,\r\n                    position: position\r\n                });\r\n\r\n            }\r\n\r\n        }\r\n\r\n        statements.push({\r\n            type: TokenType.pushConstant,\r\n            dataType: stringPrimitiveType,\r\n            value: \"]\",\r\n            position: position,\r\n            stepFinished: false\r\n        });\r\n\r\n        statements.push({\r\n            type: TokenType.binaryOp,\r\n            operator: TokenType.plus,\r\n            leftType: stringPrimitiveType,\r\n            stepFinished: false,\r\n            position: position\r\n        });\r\n\r\n        // statements.push({\r\n        //     type: TokenType.binaryOp,\r\n        //     operator: TokenType.plus,\r\n        //     leftType: stringPrimitiveType,\r\n        //     stepFinished: false,\r\n        //     position: position\r\n        // });\r\n\r\n        statements.push({\r\n            type: TokenType.return,\r\n            copyReturnValueToStackframePos0: true,\r\n            leaveThisObjectOnStack: false,\r\n            stepFinished: false,\r\n            position: position,\r\n            methodWasInjected: true\r\n        });\r\n\r\n        let program: Program = {\r\n            module: this.module,\r\n            statements: statements,\r\n            labelManager: null\r\n        }\r\n\r\n        let method: Method = new Method(\"toString\", new Parameterlist([]), stringPrimitiveType, program, false, false);\r\n        this.interpreter.runTimer(method, [], () => console.log(\"List.toString fertig!\"), true)\r\n\r\n        return \"\";\r\n    }\r\n\r\n    size(): number {\r\n        return this.valueArray.length;\r\n    }\r\n\r\n    isEmpty(): boolean {\r\n        return this.valueArray.length == 0;\r\n    }\r\n\r\n    containsKey(key: Value): any {\r\n        return this.map.get(key.value) != null;\r\n    }\r\n\r\n    containsValue(value: Value): any {\r\n        for(let v of this.valueArray){\r\n            if(v.value == value.value) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.valueArray = [];\r\n        this.keyArray = [];\r\n        this.map.clear();\r\n    }\r\n\r\n}\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass, TypeVariable } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { MapHelper } from \"./MapHelper.js\";\r\n\r\nexport class HashMapClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"HashMap\", module, \"Map-Klasse mit Zugriffszeit proportional zu log(Anzahl der Elemente)\");\r\n\r\n        let objectType = module.typeStore.getType(\"Object\");\r\n\r\n        this.setBaseClass(<Klass>objectType);\r\n\r\n        let typeK: Klass = (<Klass>objectType).clone();\r\n        typeK.identifier = \"K\";\r\n        typeK.isTypeVariable = true;\r\n\r\n        let tvK: TypeVariable = {\r\n            identifier: \"K\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeK\r\n        };\r\n        this.typeVariables.push(tvK);\r\n\r\n        let typeV: Klass = (<Klass>objectType).clone();\r\n        typeV.identifier = \"V\";\r\n        typeV.isTypeVariable = true;\r\n\r\n        let tvV: TypeVariable = {\r\n            identifier: \"V\",\r\n            scopeFrom: { line: 1, column: 1, length: 1 },\r\n            scopeTo: { line: 1, column: 1, length: 1 },\r\n            type: typeV\r\n        };\r\n        this.typeVariables.push(tvV);\r\n\r\n\r\n\r\n        let setInterface = (<Interface>module.typeStore.getType(\"Map\")).clone();\r\n        setInterface.typeVariables = [tvK, tvV];\r\n\r\n        this.implements.push(setInterface);\r\n\r\n        this.addMethod(new Method(\"HashMap\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let mh = new MapHelper(o, module.main.getInterpreter(), module);\r\n                o.intrinsicData[\"MapHelper\"] = mh;\r\n\r\n            }, false, false, 'Instanziert eine neue HashMap', true));\r\n\r\n\r\n        this.addMethod(new Method(\"put\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let value: Value = parameters[2];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.set(key, value);\r\n\r\n            }, false, false, \"Speichert das key-value pair in der Map. Falls zum key vorher schon ein Value gespeichert war, wird dieser zurückgegeben. In der Map wird er dann durch den neuen Value überschrieben. Falls es zum key noch keinen value in der Map gab, wird null zurückgegeben.\"));\r\n\r\n        this.addMethod(new Method(\"clear\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.clear();\r\n\r\n            },\r\n            false, false, \"Entfernt alle Key-Value-Pairs aus dieser HashMap.\"));\r\n\r\n        this.addMethod(new Method(\"containsKey\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsKey(key);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map zum Schlüssel key einen Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"containsValue\", new Parameterlist([\r\n            { identifier: \"value\", type: typeV, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let value: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.containsValue(value);\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt genau dann true zurück, wenn die Map den Wert enthält.\"));\r\n\r\n        this.addMethod(new Method(\"get\", new Parameterlist([\r\n            { identifier: \"key\", type: typeK, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), typeV,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let key: Value = parameters[1];\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                let v: Value = ah.get(key);\r\n                return v == null ? null : v.value;\r\n\r\n            },  // no implementation!\r\n            false, false, \"Gibt den Wert zum Schlüssel key zurück. Gibt null zurück, falls die Map zum Schlüssel key keinen Wert enthält.\"));\r\n\r\n\r\n        this.addMethod(new Method(\"isEmpty\", new Parameterlist([\r\n        ]), booleanPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.isEmpty();\r\n\r\n            },\r\n            false, false, \"Testet, ob die HashMap leer ist.\"));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.size();\r\n\r\n            },\r\n            false, false, \"Gibt die Anzahl der key-value-pairs der HashMap zurück.\"));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ah: MapHelper = o.intrinsicData[\"MapHelper\"];\r\n\r\n                return ah.to_String();\r\n\r\n            }, false, false));\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { booleanPrimitiveType, doublePrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class TriangleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Triangle\", module, \"Dreieck\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Triangle\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y3\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let pointsNumber: number[] = [];\r\n                for(let i = 1; i <= 6; i++){\r\n                    pointsNumber.push(parameters[i].value);\r\n                }\r\n\r\n                let ph = new PolygonHelper(pointsNumber, true, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Dreieck.', true));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Triangle-Objekts und git sie zurück.', false));\r\n\r\n        }\r\n\r\n}\r\n","import { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { Enum, EnumRuntimeObject } from \"../../compiler/types/Enum.js\";\r\nimport { intPrimitiveType, stringPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\nexport type LocalDateTimeIntrinsicData = {\r\n    date: Date\r\n}\r\n\r\nexport class LocalDateTimeClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"LocalDateTime\", module, \"Ein LocalDate-Objekt speichert einen Zeitpunkt (Datum und Uhrzeit).\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let dayOfWeekType = <Enum>module.typeStore.getType(\"DayOfWeek\");\r\n        let MonthType = <Enum>module.typeStore.getType(\"Month\");\r\n\r\n        // this.staticClass.classObject = new RuntimeObject(this.staticClass);\r\n        // this.staticClass.classObject.initializeAttributeValues();\r\n\r\n        this.addMethod(new Method(\"now\", new Parameterlist([]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n\r\n                var today = new Date();\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: today\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Holt den aktuellen Zeitpunkt von der Systemuhr des Rechners und gibt ihn als LocalDateTime-Objekt zurück.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: number = Math.trunc(parameters[2].value);\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month - 1, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"of\", new Parameterlist([\r\n            { identifier: \"year\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"month\", type: MonthType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"dayOfMonth\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"hour\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"minute\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"second\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let year: number = Math.trunc(parameters[1].value);\r\n                let month: EnumRuntimeObject = parameters[2].value;\r\n                let dayOfMonth: number = Math.trunc(parameters[3].value);\r\n                let hour: number = Math.trunc(parameters[4].value);\r\n                let minute: number = Math.trunc(parameters[5].value);\r\n                let second: number = Math.trunc(parameters[6].value);\r\n\r\n                var date = new Date(year, month.enumValue.ordinal, dayOfMonth, hour, minute, second);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: date\r\n                };\r\n\r\n                o.intrinsicData = intrinsicData;\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt ein LocalDateTime-Objekt zurück, das den durch year, month (1 - 12), dayOfMonth, hour, minute, second beschriebenen Zeitpunkt repräsentiert.'\r\n            , false));\r\n\r\n        this.addMethod(new Method(\"plusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() + days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen später liegt.', false));\r\n\r\n        this.addMethod(new Method(\"minusDays\", new Parameterlist([\r\n            { identifier: \"days\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), this,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let days: number = Math.trunc(parameters[1].value);\r\n\r\n                let oldDate: Date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n                let newDate: Date = new Date(oldDate.getTime() - days*24*3600*1000);\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n\r\n                let intrinsicData: LocalDateTimeIntrinsicData = {\r\n                    date: newDate\r\n                };\r\n\r\n                o1.intrinsicData = intrinsicData;\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt ein neues LocalDateTime-Objekt zurück, das einen Zeitpunkt repräsentiert, der um die übergebene Anzahl von Tagen früher liegt.', false));\r\n\r\n        this.addMethod(new Method(\"compareTo\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return Math.sign(oldMs - newMs);\r\n\r\n            }, false, false, 'Gibt 1 zurück, falls das Datum größer ist als das übergebene, 0, falls sie gleich sind und -1, falls das Datum kleiner ist als das übergebene.', false));\r\n\r\n        this.addMethod(new Method(\"until\", new Parameterlist([\r\n            { identifier: \"date\", type: this, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let o1: RuntimeObject = parameters[1].value;\r\n\r\n                let oldMs: number = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getTime();\r\n                let newMs: number = (<LocalDateTimeIntrinsicData>(o1.intrinsicData)).date.getTime();\r\n\r\n                return (oldMs - newMs)/(24*3600);\r\n\r\n            }, false, false, 'Gibt zurück, wie viele Tage (gerundet) zwischen den beiden Zeitpunkten liegen.', false));\r\n\r\n        this.addMethod(new Method(\"getYear\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getFullYear();\r\n\r\n            }, false, false, 'Gibt das Jahr zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMonthValue\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth() + 1;\r\n\r\n            }, false, false, 'Gibt den Monat als Zahl zurück (Januar == 1, Februar == 2, ..., Dezember == 12).', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfMonth\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDate();\r\n\r\n            }, false, false, 'Gibt den Tag innerhalb des Monats zurück (Zahl von 1 bis 31).', false));\r\n\r\n        this.addMethod(new Method(\"getHour\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getHours();\r\n\r\n            }, false, false, 'Gibt die Stunde innerhalb des Tages zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getMinute\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMinutes();\r\n\r\n            }, false, false, 'Gibt die Minute zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getSecond\", new Parameterlist([\r\n        ]), intPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                return (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getSeconds();\r\n\r\n            }, false, false, 'Gibt die Sekunde zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let date = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date;\r\n\r\n                let td = (value: number) => {\r\n                    if(value < 10) return \"0\" + value;\r\n                    return \"\" + value;\r\n                }\r\n\r\n                return `${td(date.getDate())}.${td(date.getMonth() + 1)}.${td(date.getFullYear())} ${td(date.getHours())}:${td(date.getMinutes())}:${td(date.getSeconds())}`;\r\n\r\n            }, false, false, 'Gibt den Wert in der Form 12.03.2007 10:15:30 zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getDayOfWeek\", new Parameterlist([\r\n        ]), dayOfWeekType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let dow = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getDay();\r\n                return dayOfWeekType.enumInfoList[dow - 1].object;\r\n\r\n            }, false, false, 'Gibt die den Wochentag zurück. Falls Du ihn als Zahl (0 == Montag, ...) benötigst, nutze getDayOfWeek().toOrdinal(). ', false));\r\n\r\n        this.addMethod(new Method(\"getMonth\", new Parameterlist([\r\n        ]), MonthType,\r\n            (parameters) => {\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let monthIndex = (<LocalDateTimeIntrinsicData>(o.intrinsicData)).date.getMonth();\r\n                return MonthType.enumInfoList[monthIndex].object;\r\n\r\n            }, false, false, 'Gibt die den Monat zurück. Falls Du ihn als Zahl (1 == Januar, ...) benötigst, nutze getMonthValue()', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class DayOfWeekEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"DayOfWeek\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Montag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dienstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mittwoch\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Donnerstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Freitag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Samstag\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Sonntag\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Wochentag\"\r\n    }\r\n}\r\n\r\nexport class MonthEnum extends Enum {\r\n\r\n    constructor(module: Module) {\r\n        super(\"Month\", module, [\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Januar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Februar\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"März\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"April\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Mai\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juni\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Juli\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"August\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Septemter\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Oktober\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"November\"\r\n            },\r\n            {\r\n                type: TokenType.pushEnumValue,\r\n                position: null,\r\n                identifier: \"Dezember\"\r\n            },\r\n        ]);\r\n\r\n        this.documentation = \"Monat\"\r\n    }\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { PolygonHelper } from \"./Polygon.js\";\r\n\r\nexport class LineClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Line\", module, \"Strecke (gerade Linie zwischen zwei Punkten)\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Line\", new Parameterlist([\r\n            { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x1: number = parameters[1].value;\r\n                let y1: number = parameters[2].value;\r\n                let x2: number = parameters[3].value;\r\n                let y2: number = parameters[4].value;\r\n\r\n                let pointsNumber: number[] = [x1, y1, x2, y2];\r\n\r\n                let ph = new PolygonHelper(pointsNumber, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert eine Strecke mit Anfangspunkt (x1/y1) und Endpunkt (x2/y2).', true));\r\n\r\n            this.addMethod(new Method(\"copy\", new Parameterlist([\r\n            ]), this,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n    \r\n                    if (sh.testdestroyed(\"copy\")) return;\r\n    \r\n                    return sh.getCopy(<Klass>o.class);\r\n    \r\n                }, false, false, 'Erstellt eine Kopie der Strecke und git sie zurück.', false));\r\n\r\n                this.addMethod(new Method(\"setPoint\", new Parameterlist([\r\n                    { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"index\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x: number = parameters[1].value;\r\n                        let y: number = parameters[2].value;\r\n                        let index: number = parameters[3].value;\r\n                        let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoint\")) return;\r\n        \r\n                        sh.setPoint(x, y, index - 1);\r\n        \r\n                    }, false, false, 'Ändert einen Punkt des Polygons. index == 1 bedeutet: Anfangspunkt; index == 2 bedeutet: Endpunkt', false));\r\n        \r\n                this.addMethod(new Method(\"setPoints\", new Parameterlist([\r\n                    { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                    { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                ]), null,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let x1: number = parameters[1].value;\r\n                        let y1: number = parameters[2].value;\r\n                        let x2: number = parameters[3].value;\r\n                        let y2: number = parameters[4].value;\r\n                                let sh: PolygonHelper = o.intrinsicData[\"Actor\"];\r\n        \r\n                        if (sh.testdestroyed(\"setPoints\")) return;\r\n        \r\n                        sh.setPoints(x1, y1, x2, y2);\r\n        \r\n                    }, false, false, 'Ändert die Punkte der Strecke. (x1/y1) ist der neue Anfangspunkt, (x2/y2) ist der neue Endpunkt.', false));\r\n        \r\n     \r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, stringPrimitiveType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../interpreter/RuntimeObject.js\";\r\n\r\nexport class Vector2Class extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Vector2\", module, \"Repräsentiert einen zweidimensionalen Vektor\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n\r\n        this.addMethod(new Method(\"Vector2\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n            }, false, false, 'Instanziert einen neuen zweidimensionalen Vektor mit den Komponenten x und y.', true));\r\n\r\n        this.addMethod(new Method(\"fromPolarCoordinates\", new Parameterlist([\r\n            { identifier: \"r\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"alphaDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = new RuntimeObject(this);\r\n                let r: number = parameters[1].value;\r\n                let alphaDeg: number = parameters[2].value;\r\n\r\n                alphaDeg *= Math.PI/180.0;\r\n\r\n                let valueMap: Map<string, Value> = new Map();\r\n                valueMap.set(\"x\", {type: doublePrimitiveType, value: Math.cos(alphaDeg) * r});\r\n                valueMap.set(\"y\", {type: doublePrimitiveType, value: Math.sin(alphaDeg) * r});\r\n                o.attributeValues.set(\"Vector2\", valueMap);\r\n\r\n                return o;\r\n\r\n            }, false, true, 'Gibt einen neuen zweidimensionalen Vektor zurück, der mit den Polarkoordinaten (r/alphaDeg) gebildet wird. Datei ist r (Abstand zum Ursprung des Koordinatensystems) und alphaDeg (Winkel zur positiven x-Achse in Grad).', false));\r\n\r\n        this.addMethod(new Method(\"toString\", new Parameterlist([\r\n        ]), stringPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return `(${x}/${y})`;\r\n\r\n            }, false, false, 'Gibt den Vektor als Zeichenkette in der Form \"(x/y)\" zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleDeg\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x)/Math.PI*180;\r\n\r\n                return angle >= 0 ? angle : 360 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse in Grad zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getAngleRad\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle = Math.atan2(y, x);\r\n\r\n                return angle >= 0 ? angle : Math.PI * 2 + angle;\r\n\r\n            }, false, false, 'Gibt den zur positiven x-Achse im Bogenmaß zurück.', false));\r\n\r\n        this.addMethod(new Method(\"getLength\", new Parameterlist([\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                return Math.sqrt(x*x+y*y);\r\n\r\n            }, false, false, 'Gibt die Länge des Vectors zurück.', false));\r\n\r\n        this.addMethod(new Method(\"toUnitVector\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = new RuntimeObject(this);\r\n                let length: number = Math.sqrt(x*x + y*y);\r\n\r\n                if(Math.abs(length) > 0.00000000001){\r\n                    x /= length;\r\n                    y /= length;\r\n                } else {\r\n                    x = 0;\r\n                    y = 0;\r\n                }\r\n\r\n                let valueMap1: Map<string, Value> = new Map();\r\n                valueMap1.set(\"x\", {type: doublePrimitiveType, value: x});\r\n                valueMap1.set(\"y\", {type: doublePrimitiveType, value: y});\r\n                o1.attributeValues.set(\"Vector2\", valueMap1);\r\n\r\n                return o1;\r\n\r\n            }, false, false, 'Gibt den zum Vektor zugehörigen Einheitsvektor (d.h. den Vektor mit derselben Richtung, aber der Länge 1) zurück.', false));\r\n\r\n        this.addMethod(new Method(\"setLength\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let length: number = parameters[1].value;\r\n\r\n                let l = Math.sqrt(x*x + y*y);\r\n                if(l > 0){\r\n\r\n                    valueMap.get(\"x\").value = x/l*length;\r\n                    valueMap.get(\"y\").value = y/l*length;\r\n\r\n                }\r\n\r\n            }, false, false, 'Ändert den Vektor so, dass er seine Richtung beibehält, aber auf die angegebene Länge gestreckt/gestaucht wird.', false));\r\n\r\n        this.addMethod(new Method(\"plus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x + x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y + y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Summe zurück, die sich aus Addition dieses Vektor mit dem übergebenen Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"minus\", new Parameterlist([\r\n            { identifier: \"vector\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[1].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x - x1});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y - y1});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt die Differenz zurück, die sich aus Subtraktion des übergebenen Vektors von diesem Vektor ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"scalarProduct\", new Parameterlist([\r\n            { identifier: \"vector1\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n            { identifier: \"vector2\", type: this, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), doublePrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[1].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let o1: RuntimeObject = parameters[2].value;\r\n                let valueMap1: Map<string, Value> = o1.attributeValues.get(\"Vector2\");\r\n                let x1: number = valueMap1.get(\"x\").value;\r\n                let y1: number = valueMap1.get(\"y\").value;\r\n\r\n                return x*x1 + y*y1;\r\n\r\n            }, false, true, 'Gibt das Skalarprodukt der beiden Vektoren zurück.', false));\r\n\r\n        \r\n        this.addMethod(new Method(\"scaledBy\", new Parameterlist([\r\n            { identifier: \"scalar\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let s: number = parameters[1].value;\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*s});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: y*s});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt das Produkt zurück, das sich aus Multiplikation dieses Vektor mit dem übergebenen Skalar ergibt. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n        this.addMethod(new Method(\"rotatedBy\", new Parameterlist([\r\n            { identifier: \"angleDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true, isEllipsis: false },\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let valueMap: Map<string, Value> = o.attributeValues.get(\"Vector2\");\r\n                let x: number = valueMap.get(\"x\").value;\r\n                let y: number = valueMap.get(\"y\").value;\r\n\r\n                let angle: number = -parameters[1].value*Math.PI/180;\r\n                let sin: number = Math.sin(angle);\r\n                let cos: number = Math.cos(angle);\r\n\r\n                let oRet: RuntimeObject = new RuntimeObject(this);\r\n                let valueMapRet: Map<string, Value> = new Map();\r\n                valueMapRet.set(\"x\", {type: doublePrimitiveType, value: x*cos - y*sin});\r\n                valueMapRet.set(\"y\", {type: doublePrimitiveType, value: x*sin + y*cos});\r\n                oRet.attributeValues.set(\"Vector2\", valueMapRet);\r\n\r\n                return oRet;\r\n\r\n            }, false, false, 'Gibt den um den übergebenen Winkel (in Grad) rotierten Vektor zurück. Positiver Winkel => Rotation GEGEN DEN Uhrzeigersinn. WICHTIG: Diese Methode ändert das Objekt nicht, für das sie aufgerufen wurde!', false));\r\n\r\n                    \r\n            this.addMethod(new Method(\"distance\", new Parameterlist([\r\n                { identifier: \"x1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y1\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"x2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"y2\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n            ]), doublePrimitiveType,\r\n                (parameters) => {\r\n                    let x1: number = <number>parameters[1].value;\r\n                    let y1: number = <number>parameters[2].value;\r\n                    let x2: number = <number>parameters[3].value;\r\n                    let y2: number = <number>parameters[4].value;\r\n                    let dx = x2 - x1;\r\n                    let dy = y2 - y1;\r\n                    return Math.sqrt(dx*dx+dy*dy);\r\n                }, false, true, \"Berechnet den Abstand der Punkte (x1/y1) und (x2/y2).\"));\r\n\r\n\r\n\r\n        this.addAttribute(new Attribute(\"x\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"x-Komponente des Vektors\"));\r\n\r\n        this.addAttribute(new Attribute(\"y\", doublePrimitiveType,\r\n            null, false, Visibility.public, false, \"y-Komponente des Vektors\"));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Interface, Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist } from \"../../compiler/types/Types.js\";\r\n\r\nexport class MouseListenerInterface extends Interface {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseListener\", module, \"Interface mit Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class MouseAdapterClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"MouseAdapter\", module, \"Klasse mit leeren Methoden, die aufgerufen werden, wenn Maus-Ereignisse eintreten. Ein Objekt einer Kindklasse dieser Klasse muss zuvor aber mit world.addMouseListener() registriert werden, wobei world das aktuelle World-Objekt ist.\");\r\n\r\n        let mouseListenerType = <MouseListenerInterface>module.typeStore.getType(\"MouseListener\");\r\n\r\n        this.implements.push(mouseListenerType);\r\n\r\n        this.addMethod(new Method(\"onMouseUp\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich losgelassen wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseDown\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"button\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn eine Maustaste über dem Grafikbereich gedrückt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseMove\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger über dem Grafikbereich bewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseEnter\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger in den Grafikbereich hineinbewegt wird.\"));\r\n\r\n        this.addMethod(new Method(\"onMouseLeave\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            null,  // no implementation!\r\n            false, false, \"Wird aufgerufen, wenn der Mauszeiger aus dem Grafikbereich herausbewegt wird.\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse } from \"../../communication/Data.js\";\r\nimport { WebSocketHelper } from \"./WebSocket.js\";\r\n\r\nexport class WebSocketClientClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocketClient\", module, \"Ein Objekt der Klasse WebSocketClient repräsentiert einen anderen Rechner, mit dem dieser Rechner über den WebSocket in Kontakt steht.\");\r\n\r\n        let objectType = <Klass>module.typeStore.getType(\"Object\");\r\n        this.setBaseClass(objectType);\r\n\r\n        this.addMethod(new Method(\"send\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.send(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an diesen Client. Den messageType kannst Du frei wählen. Die client bekommt ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n            this.addMethod(new Method(\"setUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n                { identifier: \"wert\", type: objectType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), voidPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n                    let value: RuntimeObject = parameters[2].value;\r\n    \r\n                    wh.setUserData(key, value);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du beliebige Objektreferenzen in diesem WebSocketClient-Objekt speichern. Den Schlüssel kannst Du dabei frei wählen und später nutzen, um den Wert durch die Methode getUserData wieder zu holen.', false));\r\n    \r\n            this.addMethod(new Method(\"getUserData\", new Parameterlist([\r\n                { identifier: \"schlüssel\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            ]), objectType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n                    let key: string = parameters[1].value;\r\n    \r\n                    return wh.getUserData(key);\r\n    \r\n                }, false, false, 'Mit dieser Methode kannst Du eine Objektreferenz erhalten, die Du zuvor mit der Methode setUserData gespeichert hast. Bemerkung1: Diese Methode entfernt die Objekreferenz nicht aus dem WebSocketClient-Objekt. Bemerkung2: Damit Du alle Methoden des erhaltenen Objekts aufrufen kannst, musst Du dem Computer mitteilen, von welcher Klasse es ist (\"casten\"). Das geht für die Klasse MeineNutzerDaten bspw. so: MeineNutzerDaten mnd = (MeineNutzerDaten)client.getUserData(\"schlüssel\");', false));\r\n\r\n            let getterList: { att: string, getter: string, help: string}[] = [{att: \"rufname\", getter: \"getFirstName\", help: \"Rufnamen\"},\r\n             {att: \"familienname\", getter: \"getLastName\", help: \"Familiennamen\"}, \r\n            {att: \"username\", getter: \"getUsername\", help: \"Benutzernamen\"}, {att: \"nickname\", getter: \"getNickname\", help: \"Spielernamen\"}  ];\r\n\r\n            for( let getter of getterList){\r\n                this.addMethod(new Method(getter.getter, new Parameterlist([\r\n                ]), stringPrimitiveType,\r\n                    (parameters) => {\r\n        \r\n                        let o: RuntimeObject = parameters[0].value;\r\n                        let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n        \r\n                        return wh[getter.att];\r\n        \r\n                    }, false, false, 'Gibt den ' + getter.help + \" des Clients zurück.\", false));\r\n\r\n            }\r\n\r\n            this.addMethod(new Method(\"getIndex\", new Parameterlist([\r\n            ]), intPrimitiveType,\r\n                (parameters) => {\r\n    \r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let wh: WebSocketClientHelper = o.intrinsicData[\"Helper\"];\r\n    \r\n                    return wh.index;\r\n    \r\n                }, false, false, 'Gehört ein Client zu einer mit findClient bzw. findClients gefundenen Gruppe, so erhältst Du mit dieser Methode die \"Rangfolge\" dieses Clients in dieser Gruppe. Allen Clients wird dieselbe Rangfolgeordnung vom Server mitgeteilt. So lässt sich bspw. einfach festlegen, welcher Client eine besondere Rolle (Server) in der Gruppe erhalten soll (z.B. Client mit Index 1). Bemerkung: Der Index ist eine Zahl zwischen 1 und der Anzahl der Clients in der Gruppe.', false));\r\n\r\n    \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketClientHelper {\r\n\r\n    keyValueStore: {[key: string]: RuntimeObject} = {};\r\n    index: number = 0;\r\n\r\n    public connected: boolean = true;\r\n\r\n    constructor(public runtimeObject: RuntimeObject, private webSocketHelper: WebSocketHelper, \r\n        private id: number, public rufname: string, public familienname: string, public username: string, public nickname: string) {\r\n\r\n    }\r\n\r\n    send(message: string, messageType: string){\r\n        this.webSocketHelper.sendToClient(this.id, message, messageType);       \r\n    }\r\n\r\n    getUserData(key: string): any {\r\n        return this.keyValueStore[key];\r\n    }\r\n\r\n    setUserData(key: string, value: RuntimeObject) {\r\n        this.keyValueStore[key] = value;\r\n    }\r\n\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { WebSocketRequestConnect, WebSocketRequestDisconnect, WebSocketRequestSendToAll, WebSocketRequestSendToClient, WebSocketResponseOtherClientDisconnected, WebSocketResponseMessage, WebSocketResponseNewClient, WebSocketResponse, GetWebSocketTokenResponse, WebSocketResponsePairingFound, WebSocketRequestFindPairing } from \"../../communication/Data.js\";\r\nimport { WebSocketClientHelper } from \"./WebSocketClient.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { ajax } from \"../../communication/AjaxHelper.js\";\r\nimport { SystemClass } from \"../System.js\";\r\nimport { ArrayType } from \"../../compiler/types/Array.js\";\r\n\r\nexport class WebSocketClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n        super(\"WebSocket\", module, \"Ein Objekt der Klasse WebSocket kann Daten über das Internet senden und empfangen. Um die Klasse benutzen zu können, musst Du eine eigene Klasse schreiben, die die Klasse WebSocket erweitert und die Methoden onConnect, onMessage, onOtherClientConnected und onOtherClientDisconnected überschreibt.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        let webSocketClientType = <Klass>module.typeStore.getType(\"WebSocketClient\");\r\n        let systemClassType = <SystemClass>module.typeStore.getType(\"System\");\r\n\r\n        this.addMethod(new Method(\"WebSocket\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n\r\n                let interpreter = this.module?.main?.getInterpreter();\r\n\r\n                let wh = new WebSocketHelper(o, interpreter, webSocketClientType, systemClassType);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Instanziert ein neues WebSocket-Objekt.', true));\r\n\r\n        this.addMethod(new Method(\"open\", new Parameterlist([\r\n            { identifier: \"sessionCode\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"nickName\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sessionCode: string = parameters[1].value;\r\n                let nickName: string = parameters[2].value;\r\n\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                wh.connect(sessionCode, nickName);\r\n\r\n                o.intrinsicData[\"Helper\"] = wh;\r\n\r\n            }, false, false, 'Startet die Verbindung mit dem Server. Den SessionCode kannst Du frei wählen. Mit allen anderen Clients, die eine Verbindung mit demselben SessionCode aufbauen, kannst Du anschließend Daten austauschen. Auch der Nickname ist frei wählbar. Er ist für alle anderen Clients sichtbar.',\r\n            false));\r\n\r\n        this.addMethod(new Method(\"sendToAll\", new Parameterlist([\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let message: string = parameters[1].value;\r\n                let messageType: string = parameters[2].value;\r\n\r\n                wh.sendToAll(message, messageType);\r\n\r\n            }, false, false, 'Sendet Daten (message) an alle anderen Clients. Den messageType kannst Du frei wählen. Die empfangenden Clients bekommen ihn zusammen mit den Daten übermittelt. Tipp: Du kannst auch Objekte senden, musst sie dazu aber vorher serialisieren, d.h. mithilfe der Methode toJson in eine Zeichenkette verwandeln.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"count\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let count: number = parameters[1].value;\r\n\r\n                wh.findClientsFromCount(count);\r\n\r\n            }, false, false, 'Sucht die übergebene Anzahl von \"kontaktbereiten\" Clients, d.h. solchen Clients, die exakt dieselbe Suchanfrage abgegeben haben. Findet der Server die Clients, so ruft er bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClients\", new Parameterlist([\r\n            { identifier: \"nicknames\", type: new ArrayType(stringPrimitiveType), declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickNamesValues: Value[] = parameters[1].value;\r\n\r\n                let nicknames: string[] = nickNamesValues.map((nnv) => nnv.value);\r\n\r\n                wh.findClientsFromNicknames(nicknames);\r\n\r\n            }, false, false, 'Sucht die Clients mit den angegebenen Nicknames. Haben sie eine entsprechende Suchanfrage (d.h. dieselben Nicknames) abgegeben, so so ruft der Server bei allen beteiligten Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"findClient\", new Parameterlist([\r\n            { identifier: \"nickname\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n                let nickName: string = parameters[1].value;\r\n\r\n                wh.findClientsFromNicknames([nickName]);\r\n\r\n            }, false, false, 'Sucht den Client mit dem angegebenen Nickname. Hat er eine entsprechende Suchanfrage (d.h. mit dem Nickname DIESES clients) abgegeben, so so ruft der Server bei beiden Clients onClientsFound auf.', false));\r\n\r\n        this.addMethod(new Method(\"close\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let wh: WebSocketHelper = o.intrinsicData[\"Helper\"];\r\n\r\n                wh.disconnect();\r\n\r\n            }, false, false, 'Beendet die Verbindung. Bei allen anderen Clients, die sich mit derselben sessionId verbunden haben, wird daraufhin die Methode onOtherClientDisconnected aufgerufen.', false));\r\n\r\n        this.addMethod(new Method(\"onOpen\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, sobald die Verbindung mit dem Server zustandegekommen ist.\", false));\r\n\r\n        this.addMethod(new Method(\"onClose\", new Parameterlist([\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, nachdem die Verbindung geschlossen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onMessage\", new Parameterlist([\r\n            { identifier: \"sender\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"message\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"messageType\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn eine Nachricht eines anderen Clients empfangen wurde.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn sich ein anderer Client unter Nutzung desselben sessionCodes mit dem Server verbunden hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onOtherClientDisConnected\", new Parameterlist([\r\n            { identifier: \"otherClient\", type: webSocketClientType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird immer dann aufgerufen, wenn ein anderer Client unter Nutzung desselben sessionCodes die Verbindung mit dem Server beendet hat.\", false));\r\n\r\n        this.addMethod(new Method(\"onClientsFound\", new Parameterlist([\r\n            { identifier: \"clients\", type: new ArrayType(webSocketClientType), declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"ownIndex\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true }\r\n        ]), null,\r\n            null, // no statements!\r\n            false, false, \"Wird aufgerufen, wenn die durch die Methoden findClient bzw. findClients zuvor gesuchten Clients gefunden wurden.\", false));\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class WebSocketHelper {\r\n\r\n    onOpenMethod: Method;\r\n    onCloseMethod: Method;\r\n    onMessageMethod: Method;\r\n    onClientConnectedMethod: Method;\r\n    onClientDisconnectedMethod: Method;\r\n    onClientsFoundMethod: Method;\r\n\r\n    clientList: WebSocketClientHelper[] = [];\r\n    idToClientMap: { [id: number]: WebSocketClientHelper } = {};\r\n\r\n    connection: WebSocket;\r\n    client_id: number; // own client-id\r\n    isOpen: boolean = false;\r\n\r\n    constructor(private runtimeObject: RuntimeObject, private interpreter: Interpreter,\r\n        private webSocketClientType: Klass, private systemClassType: SystemClass) {\r\n\r\n        let klass: Klass = <Klass>runtimeObject.class;\r\n\r\n        // [[Entries]]:Array(4)\r\n        // 0:{\"Test3()\" => Method}\r\n        // 1:{\"onConnect()\" => Method}\r\n        // 2:{\"onMessage(WebSocketClient, String, String)\" => Method}\r\n        // 3:{\"toJson()\" => Method}\r\n\r\n        this.onOpenMethod = klass.methods.find(m => m.signature == \"onOpen()\");\r\n        this.onCloseMethod = klass.methods.find(m => m.signature == \"onClose()\");\r\n        this.onMessageMethod = klass.methods.find(m => m.signature == \"onMessage(WebSocketClient, String, String)\");\r\n        this.onClientConnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientConnected(WebSocketClient)\");\r\n        this.onClientDisconnectedMethod = klass.methods.find(m => m.signature == \"onOtherClientDisconnected(WebSocketClient)\");\r\n        this.onClientsFoundMethod = klass.methods.find(m => m.signature == \"onClientsFound(WebSocketClient[], int)\");\r\n\r\n    }\r\n\r\n    connect(sessionCode: string, nickName: string) {\r\n\r\n        if(this.interpreter.main.isEmbedded()){\r\n            this.interpreter.throwException(\"Die Netzwerkfunktionalitäten stehen nur eingeloggten Nutzern in der Entwicklungsumgebung zur Verfügung und können daher leider hier nicht ausprobiert werden.\");\r\n            return;\r\n        }\r\n\r\n\r\n        ajax('getWebSocketToken', {}, (response: GetWebSocketTokenResponse) => {\r\n\r\n            let url: string = (window.location.protocol.startsWith(\"https\") ? \"wss://\" : \"ws://\") + window.location.host + \"/websocket\";\r\n            this.connection = new WebSocket(url);\r\n\r\n            this.connection.onerror = (error: Event) => { this.onError(error); }\r\n            this.connection.onclose = (event: CloseEvent) => { this.onClose(event); }\r\n            this.connection.onmessage = (event: MessageEvent) => { this.onMessage(event); }\r\n\r\n            this.connection.onopen = (event: Event) => {\r\n                let request: WebSocketRequestConnect = {\r\n                    command: 1,\r\n                    token: response.token,\r\n                    nickname: nickName,\r\n                    sessionCode: sessionCode\r\n                }\r\n\r\n                this.interpreter.webSocketsToCloseAfterProgramHalt.push(this.connection);\r\n                this.isOpen = true;\r\n                this.sendIntern(JSON.stringify(request));\r\n                this.onOpen();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    unsentMessages: string[] = [];\r\n    sendIntern(message: string) {\r\n\r\n        if (!this.isOpen) {\r\n            this.unsentMessages.push(message);\r\n        } else {\r\n            try {\r\n                this.connection.send(message);\r\n            } catch (exception) {\r\n                console.log(exception);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose(event: CloseEvent) {\r\n        this.isOpen = false;\r\n        this.runMethod(this.onCloseMethod, []);\r\n    }\r\n\r\n    sendToClient(clientId: number, data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToClient = {\r\n            command: 3,\r\n            data: data,\r\n            dataType: dataType,\r\n            recipient_id: clientId\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    sendToAll(data: string, dataType: string) {\r\n        let message: WebSocketRequestSendToAll = {\r\n            command: 2,\r\n            data: data,\r\n            dataType: dataType\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    disconnect() {\r\n        let message: WebSocketRequestDisconnect = {\r\n            command: 4\r\n        };\r\n        this.sendIntern(JSON.stringify(message));\r\n        this.connection.close();\r\n        let wtr = this.interpreter.webSocketsToCloseAfterProgramHalt;\r\n        wtr.splice(wtr.indexOf(this.connection), 1);\r\n    }\r\n\r\n    onMessage(event: MessageEvent) {\r\n\r\n        let response: WebSocketResponse = JSON.parse(event.data);\r\n        if (response.command == undefined) return;\r\n\r\n        switch (response.command) {\r\n            case 1: // new Client\r\n                let clientRuntimeObject = new RuntimeObject(this.webSocketClientType);\r\n                clientRuntimeObject.initializeAttributeValues();\r\n                let wch: WebSocketClientHelper = new WebSocketClientHelper(clientRuntimeObject, this, response.user_id,\r\n                    response.rufname, response.familienname, response.username, response.nickname);\r\n                clientRuntimeObject.intrinsicData[\"Helper\"] = wch;\r\n                this.clientList.push(wch);\r\n                this.idToClientMap[response.user_id] = wch;\r\n                this.runMethod(this.onClientConnectedMethod, [{ type: this.webSocketClientType, value: clientRuntimeObject }]);\r\n                break;\r\n            case 2: // message\r\n                let clientHelper = this.idToClientMap[response.from_client_id];\r\n                if (clientHelper == null) return;\r\n                this.runMethod(this.onMessageMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper.runtimeObject },\r\n                    { type: stringPrimitiveType, value: response.data },\r\n                    { type: stringPrimitiveType, value: response.dataType }\r\n                ]);\r\n                break;\r\n            case 3: // other client disconnected\r\n                let clientHelper1 = this.idToClientMap[response.disconnecting_client_id];\r\n                if (clientHelper1 == null) return;\r\n                this.clientList.splice(this.clientList.indexOf(clientHelper1), 1);\r\n                this.idToClientMap[response.disconnecting_client_id] = undefined;\r\n                this.runMethod(this.onClientDisconnectedMethod, [\r\n                    { type: this.webSocketClientType, value: clientHelper1.runtimeObject }\r\n                ]);\r\n                break;\r\n            case 4: // time synchronization\r\n                this.systemClassType.deltaTimeMillis = response.currentTimeMills - Date.now();\r\n                this.client_id = response.client_id\r\n                break;\r\n            case 5: // keep alive\r\n                break;\r\n            case 6: // Clients found\r\n                this.onClientsFound(response);\r\n                break;\r\n        }\r\n    }\r\n\r\n    onClientsFound(response: WebSocketResponsePairingFound) {\r\n        let own_index: number = 0;\r\n        let otherClients: Value[] = [];\r\n\r\n        for (let client of response.clients) {\r\n            if (client.id == this.client_id) {\r\n                own_index = client.index;\r\n            } else {\r\n                let otherClient = this.idToClientMap[client.id];\r\n                if (otherClient != null) {\r\n                    otherClient.index = client.index;\r\n                    otherClients.push({\r\n                        type: this.webSocketClientType,\r\n                        value: otherClient.runtimeObject\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        let arrayValue: Value = {\r\n            type: new ArrayType(this.webSocketClientType),\r\n            value: otherClients\r\n        }\r\n\r\n        this.runMethod(this.onClientsFoundMethod, [arrayValue, { type: intPrimitiveType, value: own_index }]);\r\n\r\n    }\r\n\r\n    onError(error: Event) {\r\n        this.interpreter.throwException(\"Kommunikationsfehler beim WebSocket\");\r\n    }\r\n\r\n    onOpen() {\r\n        this.isOpen = true;\r\n        if(this.unsentMessages.length > 0){\r\n            this.unsentMessages.forEach(m => this.sendIntern(m));\r\n            this.unsentMessages = [];\r\n        }\r\n        this.runMethod(this.onOpenMethod, []);\r\n    }\r\n\r\n    runMethod(method: Method, stackElements: Value[]) {\r\n        if (method == null) return;\r\n        stackElements.splice(0, 0, {\r\n            type: this.runtimeObject.class,\r\n            value: this.runtimeObject\r\n        });\r\n\r\n        if (this.interpreter.state == InterpreterState.waitingForInput) {\r\n            this.interpreter.executeImmediatelyInNewStackframe(method.program, stackElements);\r\n        } else {\r\n            this.interpreter.runTimer(method, stackElements, () => { }, false);\r\n        }\r\n    }\r\n\r\n    findClientsFromCount(count: number) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: count,\r\n            nicknames: []\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n    findClientsFromNicknames(nicknames: string[]) {\r\n        let message: WebSocketRequestFindPairing = {\r\n            command: 6,\r\n            count: nicknames.length,\r\n            nicknames: nicknames\r\n        }\r\n\r\n        this.sendIntern(JSON.stringify(message));\r\n    }\r\n\r\n\r\n}","import { TilingSprite } from \"pixi.js\";\r\nimport { TokenType } from \"../../compiler/lexer/Token.js\";\r\nimport { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass, Visibility } from \"../../compiler/types/Class.js\";\r\nimport { charPrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Type, Value, Variable, Attribute } from \"../../compiler/types/Types.js\";\r\nimport { Interpreter, InterpreterState } from \"../../interpreter/Interpreter.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\n\r\n// import * as p5 from \"p5\";\r\ntype p5 = any;\r\n\r\nexport class ProcessingClass extends Klass {\r\n\r\n    constructor(public module: Module) {\r\n\r\n        super(\"PApplet\", module, \"Processing-Applet\")\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"Object\"));\r\n        this.documentation = \"Wenn Du Deine Klasse von PApplet ableitest (class Test extends PApplet{...}), kannst Du auf diese Weise ein Processing-Applet erstellen (siehe https://processing.org), indem Du ihre Methoden draw(), mousePressed(), usw. überschreibst und mit Inhalt füllst. Du startest das Applet, indem Du ein Objekt Deiner Klasse instanzierst und davon die main-Methode aufrufst: new Test().main();\"\r\n\r\n        // this.addAttribute(new Attribute(\"mouseX\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseX) },\r\n        //     false, Visibility.public, true, \"aktuelle x-Koordinate des Mauszeigers\"));\r\n\r\n        // this.addAttribute(new Attribute(\"mouseY\", intPrimitiveType, (object) => { object.value = Math.round(module.main.getInterpreter().processingHelper.p5o.mouseY) },\r\n        //     false, Visibility.public, true, \"aktuelle y-Koordinate des Mauszeigers\"));\r\n\r\n        let intConstants: string[][] = [[\"mouseX\", \"aktuelle x-Koordinate des Mauszeigers\"], [\"mouseY\", \"aktuelle y-Koordinate des Mauszeigers\"],\r\n        [\"pMouseX\", \"x-Koordinate des Mauszeigers im vorhergehenden Frame\"], [\"pMouseY\", \"y-Koordinate des Mauszeigers im vorhergehenden Frame\"],\r\n        [\"LEFT\", \"links\"], [\"CENTER\", \"Mitte\"], [\"RIGHT\", \"rechts\"], [\"TOP\", \"obenbündig\"], [\"BASELINE\", \"bündig auf der Grundlinie\"], [\"BOTTOM\", \"untenbündig\"],\r\n        [\"width\", \"Breite des Zeichenbereichs\"], [\"height\", \"Höhe des Zeichenbereichs\"], [\"keyCode\", \"Zahlencode der zuletzt gedrückten Taste\"],\r\n        [\"mouseButton\", \"zuletzt gedrückte Maustaste, kann die Werte LEFT, RIGHT und CENTER annehmen\"],\r\n        [\"CORNER\", \"Mode zum Zeichnen von Rechtecken\"], [\"CORNERS\", \"Mode zum Zeichnen von Rechtecken\"], [\"RADIUS\", \"Mode zum Zeichnen von Rechtecken\"],\r\n\r\n        [\"POINTS\", \"zeichne nachfolgend Einzelpunkte\"],\r\n        [\"LINES\", \"zeichne nachfolgend einzelne Linien\"],\r\n        [\"TRIANGLES\", \"zeichne nachfolgend einzelne Dreiecke\"],\r\n        [\"TRIANGLE_STRIP\", \"zeichne nachfolgend einen Triangle-Strip\"],\r\n        [\"TRIANGLE_FAN\", \"zeichne nachfolgend einen Triangle-Fan\"],\r\n        [\"QUADS\", \"zeichne nachfolgend Vierecke\"],\r\n        [\"QUAD_STRIP\", \"zeichne nachfolgend einen Quad-Strip\"],\r\n        [\"TESS\", \"zeichne nachfolgend ein TESS - geht nur bei createCanvas(width, height, WEBGL)\"],\r\n        [\"CLOSE\", \"endShape(CLOSE) schließt den Linienzug\"],\r\n\r\n        [\"DEGREES\", \"angleMode(DEGREES) sorgt dafür, dass nachfolgende Winkelangaben in Grad interpretiert werden.\"],\r\n        [\"RADIANS\", \"angleMode(RADIANS) sorgt dafür, dass nachfolgende Winkelangaben im Bogenmaß interpretiert werden.\"],\r\n\r\n        ];\r\n\r\n        intConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], intPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        let stringConstants: string[][] = [[\"WEBGL\", \"WebGL-Renderer zur 3D-Ausgabe\"], [\"P2D\", \"Renderer zur zweidimensionalen Ausgabe\"],\r\n        [\"RGB\", \"Color-Mode RGB (rot, grün, blau)\"], [\"HSL\", \"Color-Mode HSL\"], [\"HSB\", \"Color-Mode HSB\"]\r\n        ];\r\n\r\n        stringConstants.forEach(constant => {\r\n            this.addAttribute(new Attribute(constant[0], stringPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o[constant[0]] },\r\n                false, Visibility.public, true, constant[1]));\r\n        });\r\n\r\n        this.addAttribute(new Attribute(\"key\", charPrimitiveType, (object) => { object.value = module.main.getInterpreter().processingHelper.p5o.key },\r\n            false, Visibility.public, true, \"letzte gedrückte Taste\"));\r\n\r\n\r\n        this.addMethod(new Method(\"Processing\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = this.getProcessingHelper(o);\r\n                o.intrinsicData[\"Processing\"] = ph;\r\n\r\n            }, false, false, \"Legt eine neues Processing-Applet an\", true));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n            { identifier: \"name\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                // ph.main legt das aktuelle Programm (a) des Interpreters auf den programStack\r\n                // und setzt als currentProgram ein neues (b). Nach Ende dieser Methode erhöht\r\n                // der Interpreter currentProgramPosition im Glauben, (a) sei aktiv. Daher ist\r\n                // die gespeicherte ProgramPosition von (a) um eins zu niedrig (und wird daher gleich noch\r\n                // vor ph.main(); erhöht) und die bei (b) wird irrtümlich nach Rückkehr von dieser Methode \r\n                // um eins erhöht. Sie wird daher nach Ausführung von ph.main() um eins erniedrigt, damit\r\n                // der Effekt kompensiert wird. \r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"main\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                let interpreter = module.main.getInterpreter();\r\n                interpreter.currentProgramPosition++;\r\n                ph.main();\r\n                interpreter.currentProgramPosition--;\r\n\r\n            }, false, false, 'Startet das Processing-Applet.', false));\r\n\r\n        this.addMethod(new Method(\"loop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.loop();\r\n\r\n            }, false, false, 'Startet nach noLoop() die Renderer-Loop wieder neu, so dass draw() wieder periodisch aufgerufen wird.', false));\r\n\r\n        this.addMethod(new Method(\"noLoop\", new Parameterlist([\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n\r\n                ph.noLoop();\r\n\r\n            }, false, false, 'Stoppt die Render-Loop, so dass draw() nicht mehr aufgerufen wird. Kann mit loop() wieder gestartet werden.', false));\r\n\r\n        this.addMethod(new Method(\"size\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n\r\n                ph.createCanvas(width, height)\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"createCanvas\", new Parameterlist([\r\n            { identifier: \"width\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"height\", type: intPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"renderer\", type: stringPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), voidPrimitiveType,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                let width: number = parameters[1].value;\r\n                let height: number = parameters[2].value;\r\n                let renderer: string = parameters[3].value;\r\n\r\n                ph.renderer = renderer;\r\n                ph.createCanvas(width, height);\r\n\r\n            }, false, false, 'Definiert die Abmessungen des Processing-Ausgabebereichs in Pixeln.', false));\r\n\r\n        this.addMethod(new Method(\"draw\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die draw-Methode wird 60-mal pro Sekunde aufgerufen (\"Render-Loop\"). Die Render-Loop kann mit der Methode noLoop() gestoppt und mit loop() wieder gestartet werden. redraw() ruft (im gestoppten Zustand) draw genau ein Mal auf.', false));\r\n\r\n        this.addMethod(new Method(\"settings\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die settings-Methode wird aufgerufen, nachdem das Processing-Applet durch Aufruf der Methode main gestartet wurde. Im Unterschied zur Original Java-Version von Processing hat die Methode settings hier keine andere Bewandtnis als die - unmittelbar darauf aufgerufene - Methode setup. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"setup\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die setup-Methode wird beim Programmstart nach der settings-Methode aufgerufen. Im Unterschied zur Original Java-Version von Processing hat die Methode setup hier keine andere Bewandtnis als die - unmittelbar davor aufgerufene - Methode settings. In beiden Methoden kann man bspw. mit createCanvas(width, height) das Koordinatensystem einrichten und Figuren zeichnen.', false));\r\n\r\n        this.addMethod(new Method(\"mousePressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mousePressed-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste heruntergedrückt wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade heruntergedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseReleased-Methode wird immer dann aufgerufen, wenn gerade eine Maustaste losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseClicked\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseClicked-Methode wird immer dann aufgerufen, wenn eine Maustaste auf dem Zeichenbereich gedrückt und anschließend losgelassen wurde. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die gerade losgelassene Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseDragged\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseDragged-Methode wird immer dann aufgerufen, wenn eine Maustaste gerade heruntergedrückt ist und die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseMoved\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseMoved-Methode wird immer dann aufgerufen, wenn die Position des Mauszeigers sich verändert hat. Die aktuellen Koordinaten des Mauszeigers liegen in den Attributen mouseX und mouseY vor, die zuletzt gedrückte Maustaste kann dem Attribut mouseButton entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"mouseEntered\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseEntered-Methode wird immer dann aufgerufen, wenn der Mauszeiger von außen neu in den Zeichenbereich hineinfährt.', false));\r\n\r\n        this.addMethod(new Method(\"mouseExited\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die mouseExited-Methode wird immer dann aufgerufen, wenn der Mauszeiger den Zeichnbereich gerade verlassen hat.', false));\r\n\r\n        this.addMethod(new Method(\"keyPressed\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyPressed-Methode wird immer dann aufgerufen, wenn eine Taste gerade heruntergedrückt wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n        this.addMethod(new Method(\"keyReleased\", new Parameterlist([\r\n        ]), voidPrimitiveType,\r\n            null, false, false, 'Die keyReleased-Methode wird immer dann aufgerufen, wenn eine Taste gerade losgelassen wurde. Informationen zur Taste können den Attributen key (String) und keyCode (int) entnommen werden.', false));\r\n\r\n\r\n\r\n        // this.addMethod(new Method(\"rect\", new Parameterlist([\r\n        //     { identifier: \"left\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"top\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"width\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        //     { identifier: \"height\", type: floatPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        // ]), voidPrimitiveType,\r\n        //     (parameters) => {\r\n\r\n        //         let o: RuntimeObject = parameters[0].value;\r\n        //         let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n        //         let left: number = parameters[1].value;\r\n        //         let top: number = parameters[2].value;\r\n        //         let width: number = parameters[3].value;\r\n        //         let height: number = parameters[4].value;\r\n\r\n        //         ph.addStatement((p5o) => p5o.rect(left, top, width, height));\r\n\r\n\r\n        //     }, false, false, 'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.', false));\r\n\r\n\r\n        /**\r\n         * Setzen von Farben\r\n         */\r\n        this.addProcessingMethod('clear', [], [],\r\n            'Löscht die Zeichenfläche.');\r\n\r\n        this.addProcessingMethod('background', ['rgb'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe.');\r\n\r\n        this.addProcessingMethod('background', ['colorAsString'], stringPrimitiveType,\r\n            \"Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. Übergeben wird eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('background', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Übermalt die komplette Zeichenfläche mit der übergebenen Farbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], intPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['gray'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe.');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('fill', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Füllfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('noFill', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden nicht gefüllt.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], intPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb'], stringPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['rgb', 'alpha'], [intPrimitiveType, floatPrimitiveType],\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['gray'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe.');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('stroke', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Setzt die Linienfarbe. v1, v2 und v3 sind - abhängig vom aktuellen color mode - rot, grün und blauwert oder Farbe, Sättigung und Helligkeit');\r\n\r\n        this.addProcessingMethod('strokeWeight', ['weight'], floatPrimitiveType,\r\n            'Setzt die Linienbreite.');\r\n\r\n        this.addProcessingMethod('noStroke', [], [],\r\n            'Die nachfolgend gezeichneten Figuren werden ohne Rand gezeichnet.');\r\n\r\n        this.addProcessingMethod('color', ['gray'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['colorAsString'], stringPrimitiveType,\r\n            \"Gibt die Farbe zurück. Übergeben kann eine Zeichenkette der Form 'rgb(0,0,255)' oder 'rgb(0%, 0%, 100%)' oder 'rgba(0, 0, 255, 1)' oder 'rgba(0%, 0%, 100%, 1)' und all diese Kombinationen statt rgb auch mit hsl und hsb.\", stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['gray', 'alpha'], floatPrimitiveType,\r\n            'Gibt den Grauton als String-kodierte Farbe zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('color', ['v1', 'v2', 'v3', 'alpha'], floatPrimitiveType,\r\n            'Gibt die aus v1, v2, v3 und alpha gebildete Farbe String-kodiert zurück.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerpColor', ['colorA', 'colorB', 't'], [stringPrimitiveType, stringPrimitiveType, floatPrimitiveType],\r\n            'Gibt eine Zwischenfarbe zwischen colorA und colorB zurück. t == 0 bedeutet: colorA, t == 1 bedeutet: colorB, t == 0.5 bedeutet: genau zwischen beiden, usw.', stringPrimitiveType);\r\n\r\n        this.addProcessingMethod('colorMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max'], [stringPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n        this.addProcessingMethod('colorMode', ['mode', 'max1', 'max2', 'max3', 'maxAlpha'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von color(...) interpretiert werden. Möglich sind die Werte RGB, HSL und HSB für Mode. Max ist der Maximalwert jeder Farbkomponente.');\r\n\r\n\r\n\r\n        /**\r\n         * Zeichnen geometrischer Figuren\r\n         */\r\n        this.addProcessingMethod('rectMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von rect(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('square', ['left', 'top', 'width', 'radius1', 'radius2', 'radius3', 'radius4'], floatPrimitiveType,\r\n            'Zeichnet ein Quadrat mit abgerundeten Ecken. (left, top) ist die linke obere Ecke, width Seitenlänge des Quadrats. Radius ist der Eckenradius.');\r\n\r\n        this.addProcessingMethod('rect', ['left', 'top', 'width', 'height', 'radius'], floatPrimitiveType,\r\n            'Zeichnet ein Rechteck. (left, top) ist die linke obere Ecke, width die Breite und height die Höhe des Rechtecks. Radius ist der Eckenradius');\r\n\r\n        this.addProcessingMethod('ellipse', ['left', 'top', 'width', 'height'], floatPrimitiveType,\r\n            'Zeichnet eine Ellipse. (left, top) ist die linke obere Ecke der Boundingbox der Ellipse, width ihre Breite und height ihre Höhe. Das lässt sich aber mit ellipseMode(...) ändern!');\r\n\r\n        this.addProcessingMethod('circle', ['x', 'y', 'extent'], floatPrimitiveType,\r\n            'Zeichnet einen Kreis. (x, y) ist der Mittelpunkt des Kreises, extent der doppelte Radius.');\r\n\r\n        this.addProcessingMethod('ellipseMode', ['mode'], stringPrimitiveType,\r\n            'Setzt den Modus, in dem nachfolgende Aufrufe von ellipse(...) interpretiert werden. Möglich sind die Werte CORNER, CORNERS, RADIUS und CENTER.');\r\n\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1) nach (x2, y2).');\r\n\r\n        this.addProcessingMethod('line', ['x1', 'y1', 'z1', 'x2', 'y2', 'z2'], floatPrimitiveType,\r\n            'Zeichnet eine Strecke von (x1, y1, z1) nach (x2, y2, z2).');\r\n\r\n        this.addProcessingMethod('triangle', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3'], floatPrimitiveType,\r\n            'Zeichnet eine Dreieck mit den Eckpunkten (x1, y1), (x2, y2) und (x3, y3).');\r\n\r\n        this.addProcessingMethod('quad', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Viereck mit den Eckpunkten (x1, y1), (x2, y2), (x3, y3) und (x4, y4).');\r\n\r\n        this.addProcessingMethod('bezier', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine kubische Bezierkurve mit den Ankerpunkten (x1, y1), (x4, y4) und den Kontrollpunkten (x2, y2), (x3, y3).');\r\n\r\n        this.addProcessingMethod('curve', ['x1', 'y1', 'x2', 'y2', 'x3', 'y3', 'x4', 'y4'], floatPrimitiveType,\r\n            'Zeichnet eine Catmull-Rom-Kurve vom Punkt (x2, y2) nach (x3, y3) so, als würde sie von (x1, x2) kommen und es am Ende zu (x4, y4) weitergehen.');\r\n\r\n        this.addProcessingMethod('curvePoint', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('curveTangent', ['a', 'b', 'c', 'd', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Curve erhalten (Beginn b, Ende c, als würde sie von a kommen und nach d gehen), so verwendet man sowohl für die x- als auch für die y-Koordinate diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierPoint', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischenpunkte einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('bezierTangent', ['x1', 'x2', 'x3', 'x4', 't'], floatPrimitiveType,\r\n            'Will man die Zwischentangenten einer Bezierkurve erhalten (Ankerkoordinaten x1, x4 und Stützkoordinaten x2, x3), so nutzt man - einzeln sowohl für die x- also auch für die y-Koordinate - diese Funktion. t gibt an, welchen Punkt der Kurve man haben möchte. t hat Werte zwischen 0 (Startpunkt) und 1 (Endpunkt).', floatPrimitiveType);\r\n\r\n\r\n        this.addProcessingMethod('beginShape', [], [],\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt.');\r\n\r\n        this.addProcessingMethod('endShape', [], [],\r\n            'Endet das Zeichnen eines Polygons.');\r\n\r\n        this.addProcessingMethod('beginShape', ['kind'], stringPrimitiveType,\r\n            'Beginnt mit dem Zeichnen eines Polygons. Die einzelnen Punkte werden mit der Methode vertex(x, y) gesetzt. Mögliche Werte für kind sind: POINTS, LINES, TRIANGLES, TRIANGLE_STRIP, TRIANGLE_FAN, QUADS, QUAD_STRIP');\r\n\r\n        this.addProcessingMethod('endShape', ['kind'], stringPrimitiveType,\r\n            'endShape(CLOSE) schließt den Linienzug.');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('set', ['x', 'y', 'color'], [floatPrimitiveType, floatPrimitiveType, stringPrimitiveType],\r\n            'Setzt die Farbe des Pixels bei (x, y).');\r\n\r\n        this.addProcessingMethod('vertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt.');\r\n\r\n        this.addProcessingMethod('point', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Zeichnet einen Punkt.');\r\n\r\n        this.addProcessingMethod('curveVertex', ['x', 'y'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('curvevertex', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Setzt zwischen beginShape() und endShape() einen Punkt. Processing zeichnet damit eine Kurve nach dem Catmull-Rom-Algorithmus.');\r\n\r\n        this.addProcessingMethod('box', ['size'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit der Seitenlänge size.');\r\n\r\n        this.addProcessingMethod('box', ['sizeX', 'sizeY', 'sizeZ'], floatPrimitiveType,\r\n            'Zeichnet einen 3D-Würfel mit den angegebenen Seitenlängen.');\r\n\r\n        /**\r\n         * Transformationen\r\n         */\r\n        this.addProcessingMethod('resetMatrix', [], [],\r\n            'Setzt alle erfolgten Transformationen zurück.');\r\n\r\n        this.addProcessingMethod('push', [], [],\r\n            'Sichert den aktuellen Zeichenzustand, d.h. die Farben und Transformationen, auf einen Stack.');\r\n\r\n        this.addProcessingMethod('pop', [], [],\r\n            'Holt den obersten Zeichenzustand, d.h. die Farben und Transformationen, vom Stack.');\r\n\r\n        this.addProcessingMethod('scale', ['factor'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('scale', ['factorX', 'factorY', 'factorZ'], floatPrimitiveType,\r\n            'Streckt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('translate', ['x', 'y', 'z'], floatPrimitiveType,\r\n            'Verschiebt die nachfolgend gezeichneten Figuren.');\r\n\r\n        this.addProcessingMethod('rotate', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateX', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die X-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateY', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearX', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung derX-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('shearY', ['angle'], floatPrimitiveType,\r\n            'Schert die nachfolgend gezeichneten Figuren in Richtung der Y-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('rotateZ', ['angle'], floatPrimitiveType,\r\n            'Rotiert die nachfolgend gezeichneten Figuren um die Z-Achse. Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie angle interpretiert wird. Default ist RADIANS.');\r\n\r\n        this.addProcessingMethod('angleMode', ['mode'], stringPrimitiveType,\r\n            'Mit angleMode(RADIANS) bzw. angleMode(DEGREES) kann beeinflusst werden, wie winkel bei Rotationen interpretiert werden. Default ist RADIANS.');\r\n\r\n        /**\r\n         * Text\r\n         */\r\n        this.addProcessingMethod('textSize', ['size'], floatPrimitiveType,\r\n            'Setzt die Schriftgröße in Pixel.');\r\n\r\n        // this.addProcessingMethod('loadFont', ['fontname'], stringPrimitiveType,\r\n        //     'Lädt eine Schriftart. Diese Methode muss in der Methode preload aufgerufen werden.');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes in x-Richtung. Mögliche Werte sind CENTER, LEFT, RIGHT');\r\n\r\n        this.addProcessingMethod('textAlign', ['alignX', 'alignY'], intPrimitiveType,\r\n            'Setzt die Ausrichtung des nächsten ausgegebenen Textes. Mögliche Werte für alignX sind CENTER, LEFT, RIGHT, mögliche Werte für alignY sind TOP, CENTER, BASELINE, BOTTOM');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus.');\r\n\r\n        this.addProcessingMethod('text', ['text', 'x', 'y', 'x2', 'y2'], [stringPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType, floatPrimitiveType],\r\n            'Gibt Text aus. x2 und y2 sind die Breite und Höhe des Textausgabebereichs. Hat der Text horizontal nicht Platz, so wird er entsprechend umgebrochen.');\r\n\r\n        /**\r\n         * Mathematische Funktionen\r\n         */\r\n        this.addProcessingMethod('random', ['low', 'high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen low und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('random', ['high'], floatPrimitiveType,\r\n            'Gibt eine Zufallszahl zwischen 0 und high zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['n'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel von n zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('pow', ['basis', 'exponent'], floatPrimitiveType,\r\n            'Gibt die den Wert der Potenz (\"basis hoch exponent\") zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('max', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den größeren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('min', ['a', 'b'], floatPrimitiveType,\r\n            'Gibt den kleineren der beiden Werte zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], floatPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sin', ['n'], floatPrimitiveType,\r\n            'Gibt den Sinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('cos', ['n'], floatPrimitiveType,\r\n            'Gibt den Cosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('tan', ['n'], floatPrimitiveType,\r\n            'Gibt den Tangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('asin', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('acos', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussosinus des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('radians', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Gradmaß ins Bogenmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('degrees', ['angle'], floatPrimitiveType,\r\n            'Wandelt einen Winkel vom Bogenmaß ins Gradmaß um.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan', ['n'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('atan2', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt den Arcussangens des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sqrt', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt die Quadratwurzel des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('sq', ['x', 'y'], floatPrimitiveType,\r\n            'Gibt das Quadrat des Wertes zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('abs', ['n'], intPrimitiveType,\r\n            'Gibt den Betrag des Wertes zurück.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('round', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl.', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('ceil', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Aufrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('floor', ['n'], floatPrimitiveType,\r\n            'Rundet den Wert auf eine ganze Zahl (Abfrunden!).', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('dist', ['x1', 'y1', 'x2', 'y2'], floatPrimitiveType,\r\n            'Berechnet den Abstand der Punkte (x1, y1) und (x2, y2).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('lerp', ['a', 'b', 't'], floatPrimitiveType,\r\n            'Berechnet den a + (b - a)*t. Wählt man t zwischen 0 und 1, so kann man damit die Zwischenwerte zwischen a und b errechnen.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('constrain', ['value', 'min', 'max'], floatPrimitiveType,\r\n            'Beschränkt value auf den Bereich [min, max], genauer: Ist value < min, so wird min zurückgegeben. Ist value > max, so wird max zurückgegeben. Ansonsten wird value zurückgegeben.', floatPrimitiveType);\r\n\r\n        /**\r\n         * Sonstiges\r\n         */\r\n\r\n        this.addProcessingMethod('year', [], [],\r\n            'Aktuelle Jahreszahl', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('month', [], [],\r\n            'Monat: 1 == Januar, 12 == Dezember', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('day', [], [],\r\n            'Tag (innerhalb des Monats) des aktuellen Datums', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('hour', [], [],\r\n            'Stundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('minute', [], [],\r\n            'Minutenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('second', [], [],\r\n            'Sekundenzahl der aktuellen Uhrzeit', intPrimitiveType);\r\n\r\n        this.addProcessingMethod('frameRate', ['n'], intPrimitiveType,\r\n            'Setzt die Framerate (Anzahl der Aufrufe von draw() pro Sekunde)');\r\n\r\n        this.addProcessingMethod('textWidth', ['text'], stringPrimitiveType,\r\n            'Gibt die Breite des Texts zurück.', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textAscent', ['text'], stringPrimitiveType,\r\n            'Gibt den Ascent Textes zurück ( = Höhe des größten Zeichens über der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textDescent', ['text'], stringPrimitiveType,\r\n            'Gibt den Descent Textes zurück ( = Tiefe des tiefsten Zeichens unter der Grundlinie).', floatPrimitiveType);\r\n\r\n        this.addProcessingMethod('textLeading', ['leading'], floatPrimitiveType,\r\n            'Setzt den Abstand zweier aufeinanderfolgender Textzeilen.');\r\n\r\n        this.addProcessingMethod('cursor', ['type'], stringPrimitiveType,\r\n            'Ändert das Aussehen des Mauscursors. Type ist einer der Werte \"arrow\", \"cross\", \"text\", \"move\", \"hand\", \"wait\", \"progress\".');\r\n\r\n        this.addProcessingMethod('noCursor', ['type'], stringPrimitiveType,\r\n            'Hat zur Folge, dass der Mauscursor über dem Zeichenbereich unsichtbar ist.');\r\n\r\n        this.addProcessingMethod('copy', ['sx', 'sy', 'sw', 'sh', 'dx', 'dy', 'dw', 'dh'], floatPrimitiveType,\r\n            'Kopiert den rechteckigen Bereich mit der linken oberen Ecke (sx, sy) sowie der Breite sw und der Höhe sh in den Bereich mit der linken oberen Ecke (dx, dy), der Breite dw und der Höhe dh.');\r\n\r\n        this.addProcessingMethod('millis', [], [],\r\n            'Gibt die Millisekunden zurück, die vergangen sind, seit setup() aufgerufen wurde.');\r\n\r\n        this.addProcessingMethod('redraw', [], [],\r\n            'Führt draw() genau ein Mal aus. Macht ggf. Sinn, wenn die Render-Loop zuvor mit noLoop() gestoppt wurde.');\r\n\r\n    }\r\n\r\n    addProcessingMethod(identifier: string, parameterNames: string[], parameterTypes: Type[] | Type, comment: string, returnType?: Type) {\r\n\r\n        let parameters: Variable[] = [];\r\n        if (Array.isArray(parameterTypes)) {\r\n            for (let i = 0; i < parameterNames.length; i++) {\r\n                parameters.push({ identifier: parameterNames[i], type: parameterTypes[i], declaration: null, usagePositions: null, isFinal: true });\r\n            }\r\n        } else {\r\n            parameters = parameterNames.map((name) => { return { identifier: name, type: parameterTypes, declaration: null, usagePositions: null, isFinal: true } })\r\n        }\r\n\r\n        if (returnType == null) {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), null,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n        } else {\r\n            this.addMethod(new Method(identifier, new Parameterlist(parameters), returnType,\r\n                (parameters) => {\r\n                    let o: RuntimeObject = parameters[0].value;\r\n                    let ph: ProcessingHelper = o.intrinsicData[\"Processing\"];\r\n                    let pList = parameters.slice(1).map(p => p.value);\r\n\r\n                    return ph.p5o[identifier](...pList);\r\n\r\n                }, false, false, comment, false));\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getProcessingHelper(processingObject: RuntimeObject, breite: number = 800, höhe: number = 600): ProcessingHelper {\r\n\r\n        let interpreter = this.module?.main?.getInterpreter();\r\n\r\n\r\n        if (interpreter.processingHelper != null) {\r\n\r\n            interpreter.throwException(\"Es kann nur ein einziges Processing-Applet instanziert werden.\");\r\n            return;\r\n        }\r\n\r\n        if (interpreter.worldHelper != null) {\r\n\r\n            interpreter.throwException(\"Processing kann nicht gleichzeitig mit der herkömmlichen Grafikausgabe genutzt werden.\");\r\n            return;\r\n        }\r\n\r\n        return new ProcessingHelper(this.module, interpreter, processingObject);\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class ProcessingHelper {\r\n\r\n    $containerOuter: JQuery<HTMLElement>;\r\n    $containerInner: JQuery<HTMLElement>;\r\n\r\n    $div: JQuery<HTMLElement>;\r\n\r\n    width: number = 800;\r\n    height: number = 600;\r\n\r\n    p5o: p5;\r\n\r\n    renderer: string;\r\n    loopStopped: boolean = false;\r\n\r\n    onSizeChanged: () => void;\r\n\r\n\r\n    constructor(private module: Module, private interpreter: Interpreter, public runtimeObject: RuntimeObject) {\r\n\r\n        this.interpreter.processingHelper = this;\r\n\r\n        this.$containerOuter = jQuery('<div></div>');\r\n        let $graphicsDiv = this.module.main.getInterpreter().printManager.getGraphicsDiv();\r\n\r\n        this.onSizeChanged = () => {\r\n            let $jo_tabs = $graphicsDiv.parents(\".jo_tabs\");\r\n            let maxWidth: number = $jo_tabs.width();\r\n            let maxHeight: number = $jo_tabs.height();\r\n            // let maxWidth: number = $graphicsDiv.parent().width();\r\n            // let maxHeight: number = $graphicsDiv.parent().height();\r\n\r\n            if (this.height / this.width > maxHeight / maxWidth) {\r\n                $graphicsDiv.css({\r\n                    'width': this.width / this.height * maxHeight + \"px\",\r\n                    'height': maxHeight + \"px\",\r\n                })\r\n            } else {\r\n                $graphicsDiv.css({\r\n                    'height': this.height / this.width * maxWidth + \"px\",\r\n                    'width': maxWidth + \"px\",\r\n                })\r\n            }\r\n        };\r\n\r\n        $graphicsDiv.off('sizeChanged');\r\n        $graphicsDiv.on('sizeChanged', this.onSizeChanged);\r\n\r\n        this.onSizeChanged();\r\n\r\n        this.$containerInner = jQuery('<div></div>');\r\n        this.$containerOuter.append(this.$containerInner);\r\n\r\n        $graphicsDiv.append(this.$containerOuter);\r\n        $graphicsDiv.show();\r\n\r\n        $graphicsDiv[0].oncontextmenu = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        this.module.main.getRightDiv()?.adjustWidthToWorld();\r\n\r\n    }\r\n\r\n    createCanvas(width: number, height: number) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.onSizeChanged();\r\n        this.p5o.createCanvas(this.width, this.height, this.renderer);\r\n        this.$div.find('canvas').css({\r\n            'width': '',\r\n            'height': ''\r\n\r\n        });\r\n    }\r\n\r\n    main() {\r\n            this.interpreter.timerExtern = true;\r\n            this.setupProcessing(this.$containerInner);\r\n        }\r\n\r\n    setupProcessing($div: JQuery<HTMLElement>) {\r\n\r\n            let that = this;\r\n            let drawMethodPending: boolean = true;\r\n            this.$div = $div;\r\n\r\n            let sketch = (p5: p5) => {\r\n\r\n                p5.setup = function () {\r\n                    that.renderer = p5.P2D;\r\n\r\n                    let afterFinishingBoth = () => {\r\n                        // p5.createCanvas(that.width, that.height, that.renderer);\r\n                        drawMethodPending = false\r\n                        // $div.find('canvas').css({\r\n                        //     'width': '',\r\n                        //     'height': ''\r\n                        // })            \r\n                    }\r\n\r\n                    let i = 2;\r\n\r\n                    that.runMethod('setup', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n                    that.runMethod('settings', () => {\r\n                        if (--i == 0) afterFinishingBoth();\r\n                    });\r\n\r\n\r\n                };\r\n\r\n                p5.preload = function () {\r\n                    that.runMethod('preload');\r\n                };\r\n\r\n                p5.draw = function () {\r\n                    if (that.interpreter.state == InterpreterState.running && !that.loopStopped) {\r\n                        if (!drawMethodPending) {\r\n                            drawMethodPending = true;\r\n                            that.runMethod(\"draw\", () => {\r\n                                drawMethodPending = false;\r\n                            });\r\n                        }\r\n                    }\r\n                    that.tick();\r\n                    // p5.background(50);\r\n                    // p5.rect(p5.width / 2, p5.height / 2, 50, 50);\r\n\r\n                };\r\n\r\n                p5.mousePressed = function () {\r\n                    that.runMethod('mousePressed');\r\n                };\r\n\r\n                p5.mouseReleased = function () {\r\n                    that.runMethod('mouseReleased');\r\n                };\r\n\r\n                p5.mouseClicked = function () {\r\n                    that.runMethod('mouseClicked');\r\n                };\r\n\r\n                p5.mouseDragged = function () {\r\n                    that.runMethod('mouseDragged');\r\n                };\r\n\r\n                p5.mouseEntered = function () {\r\n                    that.runMethod('mouseEntered');\r\n                };\r\n\r\n                p5.mouseExited = function () {\r\n                    that.runMethod('mouseExited');\r\n                };\r\n\r\n                p5.mouseMoved = function () {\r\n                    that.runMethod('mouseMoved');\r\n                };\r\n\r\n                p5.keyPressed = function () {\r\n                    that.runMethod('keyPressed');\r\n                };\r\n\r\n                p5.keyReleased = function () {\r\n                    that.runMethod('keyReleased');\r\n                };\r\n\r\n\r\n            }\r\n\r\n        //@ts-ignore\r\n        this.p5o = new p5(sketch, $div[0]);\r\n            $div.find('canvas').css({\r\n                'width': '',\r\n                'height': ''\r\n            })\r\n\r\n        }\r\n\r\n\r\n    tick() {\r\n\r\n            if(this.interpreter.state == InterpreterState.running) {\r\n            this.interpreter.timerFunction(33.33, true, 0.5);\r\n            this.interpreter.timerStopped = false;\r\n            this.interpreter.timerFunction(33.33, false, 0.08);\r\n        }\r\n\r\n    }\r\n\r\n    loop() {\r\n        this.loopStopped = false;\r\n    }\r\n\r\n    noLoop() {\r\n        this.loopStopped = true;\r\n    }\r\n\r\n    runMethod(methodIdentifier: string, callback: () => void = null) {\r\n\r\n        let klass: Klass = <Klass>this.runtimeObject.class;\r\n        let method = klass.getMethodBySignature(methodIdentifier + \"()\");\r\n\r\n        let program = method?.program;\r\n\r\n        if (program == null) {\r\n            if (callback != null) callback();\r\n            return;\r\n        }\r\n\r\n        let stackElements: Value[] = [\r\n            {\r\n                type: klass,\r\n                value: this.runtimeObject\r\n            },\r\n        ];\r\n\r\n        this.interpreter.runTimer(method, stackElements, (interpreter) => {\r\n            if (callback != null) callback();\r\n        }, methodIdentifier == \"draw\");\r\n    }\r\n\r\n\r\n    destroyWorld() {\r\n        if (this.p5o != null) this.p5o.remove();\r\n        this.$containerOuter.remove();\r\n        this.module.main.getInterpreter().printManager.getGraphicsDiv().hide();\r\n        this.interpreter.timerExtern = false;\r\n        this.interpreter.processingHelper = null;\r\n    }\r\n\r\n}","import { Module } from \"../../compiler/parser/Module.js\";\r\nimport { Klass } from \"../../compiler/types/Class.js\";\r\nimport { doublePrimitiveType, intPrimitiveType, booleanPrimitiveType } from \"../../compiler/types/PrimitiveTypes.js\";\r\nimport { Method, Parameterlist, Value } from \"../../compiler/types/Types.js\";\r\nimport { RuntimeObject } from \"../../interpreter/RuntimeObject.js\";\r\nimport { FilledShapeHelper } from \"./FilledShape.js\";\r\nimport { Interpreter } from \"../../interpreter/Interpreter.js\";\r\nimport { polygonBerührtPolygon } from \"../../tools/MatheTools.js\";\r\n\r\nexport class TurtleClass extends Klass {\r\n\r\n    constructor(module: Module) {\r\n\r\n        super(\"Turtle\", module, \"Turtle-Klasse zum Zeichnen von Streckenzügen oder gefüllten Figuren. Wichtig sind vor allem die Methoden forward(double length) und turn(double angleDeg), die die Turtle nach vorne bewegen bzw. ihre Blickrichtung ändern.\");\r\n\r\n        this.setBaseClass(<Klass>module.typeStore.getType(\"FilledShape\"));\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n\r\n                let ph = new TurtleHelper(x, y, false, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Am Ende des Streckenzugs wird eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"Turtle\", new Parameterlist([\r\n            { identifier: \"x\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"y\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let x: number = parameters[1].value;\r\n                let y: number = parameters[2].value;\r\n                let showTurtle: boolean = parameters[3].value;\r\n\r\n                let ph = new TurtleHelper(x, y, showTurtle, module.main.getInterpreter(), o);\r\n                o.intrinsicData[\"Actor\"] = ph;\r\n\r\n            }, false, false, 'Instanziert ein neues Turtle-Objekt ohne Punkte. Die Turtle blickt anfangs nach rechts. Falls showTurtle == true, wird am Ende des Streckenzuges eine \"Schildkröte\" (kleines Dreieck) gezeichnet.', true));\r\n\r\n\r\n        this.addMethod(new Method(\"forward\", new Parameterlist([\r\n            { identifier: \"length\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let length: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"forward\")) return;\r\n\r\n                sh.forward(length);\r\n\r\n            }, false, false, 'Weist die Turtle an, die angegebene Länge vorwärts zu gehen. Ihr zurückgelegter Weg wird als gerade Strecke mit der aktuellen BorderColor gezeichnet. Mit setBorderColor(null) bewirkst Du, dass ein Stück ihres Weges nicht gezeichnet wird.', false));\r\n\r\n        this.addMethod(new Method(\"turn\", new Parameterlist([\r\n            { identifier: \"angleInDeg\", type: doublePrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let angle: number = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"turn\")) return;\r\n\r\n                sh.turn(angle);\r\n\r\n            }, false, false, 'Bewirkt, dass sich die Turtle um den angegebenen Winkel (in Grad!) dreht, d.h. ihre Blickrichtung ändert. Ein positiver Winkel bewirkt eine Drehung gegen den Uhrzeigersinn. Diese Methode wirkt sich NICHT auf die bisher gezeichneten Strecken aus. Willst Du alles bisher Gezeichnete inklusive Turtle drehen, so nutze die Methode rotate.', false));\r\n\r\n        this.addMethod(new Method(\"closeAndFill\", new Parameterlist([\r\n            { identifier: \"closeAndFill\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let closeAndFill: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"closeAndFill\")) return;\r\n\r\n                sh.closeAndFill(closeAndFill);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"showTurtle\", new Parameterlist([\r\n            { identifier: \"showTurtle\", type: booleanPrimitiveType, declaration: null, usagePositions: null, isFinal: true },\r\n        ]), null,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let showTurtle: boolean = parameters[1].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"showTurtle\")) return;\r\n\r\n                sh.setShowTurtle(showTurtle);\r\n\r\n            }, false, false, 'closeAndFill == true bewirkt, dass das von der Turtlezeichnung umschlossene Gebiet gefüllt wird.', false));\r\n\r\n        this.addMethod(new Method(\"copy\", new Parameterlist([\r\n        ]), this,\r\n            (parameters) => {\r\n\r\n                let o: RuntimeObject = parameters[0].value;\r\n                let sh: TurtleHelper = o.intrinsicData[\"Actor\"];\r\n\r\n                if (sh.testdestroyed(\"copy\")) return;\r\n\r\n                return sh.getCopy(<Klass>o.class);\r\n\r\n            }, false, false, 'Erstellt eine Kopie des Turtle-Objekts und gibt es zurück.', false));\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\ntype LineElement = {\r\n    x: number,\r\n    y: number,\r\n    color: number,\r\n    alpha: number,\r\n    lineWidth: number\r\n}\r\n\r\nexport class TurtleHelper extends FilledShapeHelper {\r\n\r\n    lineElements: LineElement[] = [];\r\n    angle: number = 0;\r\n\r\n    isFilled: boolean = false;\r\n\r\n    turtle: PIXI.Graphics;\r\n    lineGraphic: PIXI.Graphics;\r\n\r\n    xSum: number = 0;\r\n    ySum: number = 0;\r\n\r\n    initialHitPolygonDirty: boolean = true;\r\n\r\n    constructor(xStart: number, yStart: number, private showTurtle: boolean,\r\n        interpreter: Interpreter, runtimeObject: RuntimeObject) {\r\n        super(interpreter, runtimeObject);\r\n\r\n        this.lineElements.push({\r\n            x: xStart,\r\n            y: yStart,\r\n            color: 0,\r\n            alpha: 1,\r\n            lineWidth: 1\r\n        });\r\n        this.calculateCenter;\r\n\r\n        this.borderColor = 0xffffff;\r\n\r\n        this.hitPolygonInitial = [];\r\n\r\n        let container = new PIXI.Container();\r\n        this.displayObject = container;\r\n\r\n        this.lineGraphic = new PIXI.Graphics();\r\n        container.addChild(this.lineGraphic);\r\n\r\n        this.turtle = new PIXI.Graphics();\r\n        container.addChild(this.turtle);\r\n        this.turtle.visible = this.showTurtle;\r\n        this.drawTurtle(xStart, yStart, this.angle);\r\n\r\n\r\n        // let g: PIXI.Graphics = <any>this.displayObject;\r\n\r\n        this.worldHelper.stage.addChild(this.displayObject);\r\n\r\n        this.addToDefaultGroup();\r\n\r\n    }\r\n\r\n    calculateCenter(){\r\n        let length = this.lineElements.length;\r\n        let lastLineElement = this.lineElements[length - 1];\r\n        this.xSum += lastLineElement.x;\r\n        this.ySum += lastLineElement.y;\r\n        this.centerXInitial = this.xSum/length;\r\n        this.centerYInitial = this.ySum/length;\r\n    }\r\n\r\n    closeAndFill(closeAndFill: boolean) {\r\n        if (closeAndFill != this.isFilled) {\r\n            this.isFilled = closeAndFill;\r\n            this.render();\r\n            this.initialHitPolygonDirty = true;\r\n        }\r\n    }\r\n\r\n    setShowTurtle(show: boolean){\r\n        this.turtle.visible = show;\r\n    }\r\n\r\n    turn(angle: number) {\r\n        this.angle -= angle / 180 * Math.PI;\r\n    }\r\n\r\n    rotate(angleInDegrees: number, cx?: number, cy?: number) {\r\n        this.turn(this.angle);\r\n        let lastLineElement = this.lineElements[this.lineElements.length - 1];\r\n        this.drawTurtle(lastLineElement.x, lastLineElement.y, this.angle);\r\n        super.rotate(angleInDegrees, cx, cy);\r\n    }\r\n\r\n    getCopy(klass: Klass): RuntimeObject {\r\n\r\n        let ro: RuntimeObject = new RuntimeObject(klass);\r\n        let rh: TurtleHelper = new TurtleHelper(this.lineElements[0].x, this.lineElements[0].y,\r\n            this.showTurtle, this.worldHelper.interpreter, ro);\r\n        ro.intrinsicData[\"Actor\"] = rh;\r\n\r\n        rh.copyFrom(this);\r\n        rh.render();\r\n\r\n        return ro;\r\n    }\r\n\r\n    forward(length: number) {\r\n\r\n        let lastLineElement: LineElement = this.lineElements[this.lineElements.length - 1];\r\n        let newLineElement: LineElement = {\r\n            x: lastLineElement.x + length * Math.cos(this.angle),\r\n            y: lastLineElement.y + length * Math.sin(this.angle),\r\n            color: this.borderColor,\r\n            alpha: this.borderAlpha,\r\n            lineWidth: this.borderWidth\r\n        }\r\n\r\n        this.lineElements.push(newLineElement);\r\n\r\n        if (this.isFilled) {\r\n            this.render();\r\n        } else {\r\n            if (this.borderColor != null) {\r\n                this.lineGraphic.moveTo(lastLineElement.x, lastLineElement.y);\r\n                this.lineGraphic.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5)\r\n                this.lineGraphic.lineTo(newLineElement.x, newLineElement.y);\r\n            }\r\n        }\r\n\r\n        this.hitPolygonDirty = true;\r\n        this.initialHitPolygonDirty = true;\r\n        this.calculateCenter();\r\n        this.drawTurtle(newLineElement.x, newLineElement.y, this.angle);\r\n\r\n    }\r\n\r\n    drawTurtle(x: number, y: number, angle: number): void {\r\n        this.turtle.clear();\r\n        this.turtle.lineStyle(3, 0xff0000, 1, 0.5);\r\n        this.turtle.moveTo(x, y);\r\n\r\n        let vx = Math.cos(angle);\r\n        let vy = Math.sin(angle);\r\n\r\n        let vxp = -Math.sin(angle);\r\n        let vyp = Math.cos(angle);\r\n\r\n        let lengthForward = 20;\r\n        let lengthBackward = 10;\r\n        let lengthBackwardP = 10;\r\n\r\n        this.turtle.moveTo(x + vx * lengthForward, y + vy * lengthForward);\r\n        this.turtle.lineTo(x - vx * lengthBackward + vxp * lengthBackwardP, y - vy * lengthBackward + vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x - vx * lengthBackward - vxp * lengthBackwardP, y - vy * lengthBackward - vyp * lengthBackwardP);\r\n        this.turtle.lineTo(x + vx * lengthForward, y + vy * lengthForward);\r\n    }\r\n\r\n    render(): void {\r\n\r\n        let g: PIXI.Graphics = this.lineGraphic;\r\n\r\n        if (this.displayObject == null) {\r\n            g = new PIXI.Graphics();\r\n            this.displayObject = g;\r\n            this.worldHelper.stage.addChild(g);\r\n\r\n        } else {\r\n            g.clear();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.beginFill(this.fillColor, this.fillAlpha);\r\n        }\r\n\r\n        let firstPoint = this.lineElements[0];\r\n        g.moveTo(firstPoint.x, firstPoint.y);\r\n\r\n        if (this.isFilled) {\r\n            g.lineStyle(this.borderWidth, this.borderColor, this.borderAlpha, 0.5);\r\n        }\r\n        for (let i = 1; i < this.lineElements.length; i++) {\r\n            let le: LineElement = this.lineElements[i];\r\n            if (le.color != null) {\r\n                if (!this.isFilled) {\r\n                    g.lineStyle(le.lineWidth, le.color, le.alpha, 0.5)\r\n                }\r\n                g.lineTo(le.x, le.y);\r\n            } else {\r\n                g.moveTo(le.x, le.y);\r\n            }\r\n        }\r\n\r\n        if (this.isFilled) {\r\n            g.closePath();\r\n        }\r\n\r\n        if (this.fillColor != null && this.isFilled) {\r\n            g.endFill();\r\n        }\r\n    };\r\n\r\n    collidesWith(shapeHelper: any) {\r\n\r\n        if(shapeHelper instanceof TurtleHelper && shapeHelper.initialHitPolygonDirty){\r\n            shapeHelper.setupInitialHitPolygon();\r\n        }\r\n\r\n        if(this.initialHitPolygonDirty){\r\n            this.setupInitialHitPolygon();\r\n        }\r\n\r\n        let bb = this.displayObject.getBounds();\r\n        let bb1 = shapeHelper.displayObject.getBounds();\r\n\r\n        if (bb.left > bb1.right || bb1.left > bb.right) return false;\r\n\r\n        if (bb.top > bb1.bottom || bb1.top > bb.bottom) return false;\r\n\r\n        if (shapeHelper[\"shapes\"]) {\r\n            return shapeHelper.collidesWith(this);\r\n        }\r\n\r\n        if (this.hitPolygonInitial == null || shapeHelper.hitPolygonInitial == null) return true;\r\n\r\n        // boundig boxes collide, so check further:\r\n        if (this.hitPolygonDirty) this.transformHitPolygon();\r\n        if (shapeHelper.hitPolygonDirty) shapeHelper.transformHitPolygon();\r\n\r\n        return polygonBerührtPolygon(this.hitPolygonTransformed, shapeHelper.hitPolygonTransformed);\r\n\r\n    }\r\n\r\n    setupInitialHitPolygon(){\r\n        this.hitPolygonInitial = this.lineElements.map((le) => {return {x: le.x, y: le.y}});\r\n    }\r\n\r\n}\r\n","import { FileData } from \"../../communication/Data.js\";\r\nimport { AccordionElement } from \"../../main/gui/Accordion.js\";\r\nimport { MainBase } from \"../../main/MainBase.js\";\r\nimport { ArrayListClass } from \"../../runtimelibrary/collections/ArrayList.js\";\r\nimport { CollectionClass } from \"../../runtimelibrary/collections/Collection.js\";\r\nimport { IterableClass } from \"../../runtimelibrary/collections/Iterable.js\";\r\nimport { IteratorClass } from \"../../runtimelibrary/collections/Iterator.js\";\r\nimport { ListClass } from \"../../runtimelibrary/collections/List.js\";\r\nimport { ListIteratorImplClass } from \"../../runtimelibrary/collections/ListIteratorImpl.js\";\r\nimport { StackClass } from \"../../runtimelibrary/collections/Stack.js\";\r\nimport { VectorClass } from \"../../runtimelibrary/collections/Vector.js\";\r\nimport { SetClass } from \"../../runtimelibrary/collections/Set.js\";\r\nimport { SetIteratorImplClass } from \"../../runtimelibrary/collections/SetIteratorImpl.js\";\r\nimport { HashSetClass } from \"../../runtimelibrary/collections/HashSet.js\";\r\nimport { LinkedHashSetClass } from \"../../runtimelibrary/collections/LinkedHashSet.js\";\r\nimport { QueueClass } from \"../../runtimelibrary/collections/Queue.js\";\r\nimport { DequeClass } from \"../../runtimelibrary/collections/Deque.js\";\r\nimport { LinkedListClass } from \"../../runtimelibrary/collections/LinkedList.js\";\r\nimport { ConsoleClass } from \"../../runtimelibrary/Console.js\";\r\nimport { Actor as ActorClass } from \"../../runtimelibrary/graphics/Actor.js\";\r\nimport { AlignmentClass } from \"../../runtimelibrary/graphics/Alignment.js\";\r\nimport { BitmapClass } from \"../../runtimelibrary/graphics/Bitmap.js\";\r\nimport { CircleClass as CircleClass } from \"../../runtimelibrary/graphics/Circle.js\";\r\nimport { ColorClass } from \"../../runtimelibrary/graphics/Color.js\";\r\nimport { EllipseClass } from \"../../runtimelibrary/graphics/Ellipse.js\";\r\nimport { FilledShapeClass } from \"../../runtimelibrary/graphics/FilledShape.js\";\r\nimport { CollisionPairClass, GroupClass } from \"../../runtimelibrary/graphics/Group.js\";\r\nimport { KeyClass } from \"../../runtimelibrary/graphics/Key.js\";\r\nimport { PolygonClass } from \"../../runtimelibrary/graphics/Polygon.js\";\r\nimport { RectangleClass } from \"../../runtimelibrary/graphics/Rectangle.js\";\r\nimport { RepeatTypeClass } from \"../../runtimelibrary/graphics/RepeatType.js\";\r\nimport { RoundedRectangleClass } from \"../../runtimelibrary/graphics/RoundedRectangle.js\";\r\nimport { ScaleModeClass } from \"../../runtimelibrary/graphics/ScaleMode.js\";\r\nimport { ShapeClass } from \"../../runtimelibrary/graphics/Shape.js\";\r\nimport { SoundKlass as SoundClass } from \"../../runtimelibrary/graphics/Sound.js\";\r\nimport { SpriteClass } from \"../../runtimelibrary/graphics/Sprite.js\";\r\nimport { SpriteLibraryClass } from \"../../runtimelibrary/graphics/SpriteLibraryEnum.js\";\r\nimport { TextClass } from \"../../runtimelibrary/graphics/Text.js\";\r\nimport { WorldClass } from \"../../runtimelibrary/graphics/World.js\";\r\nimport { InputClass } from \"../../runtimelibrary/Input.js\";\r\nimport { MathClass } from \"../../runtimelibrary/Math.js\";\r\nimport { PrintStreamClass, SystemClass } from \"../../runtimelibrary/System.js\";\r\nimport { KeyListener, SystemToolsClass } from \"../../runtimelibrary/SystemTools.js\";\r\nimport { Runnable, TimerClass } from \"../../runtimelibrary/Timer.js\";\r\nimport { Workspace } from \"../../workspace/Workspace.js\";\r\nimport { Error, ErrorLevel } from \"../lexer/Lexer.js\";\r\nimport { TextPosition, Token, TokenType, TextPositionWithoutLength } from \"../lexer/Token.js\";\r\nimport { Interface, Klass, Visibility } from \"../types/Class.js\";\r\nimport { booleanPrimitiveType, BooleanType, CharacterType, charPrimitiveType, doublePrimitiveType, DoubleType, floatPrimitiveType, FloatType, IntegerType, intPrimitiveType, objectType, stringPrimitiveType, voidPrimitiveType, varType } from \"../types/PrimitiveTypes.js\";\r\nimport { Attribute, Method, PrimitiveType, Type, Variable } from \"../types/Types.js\";\r\nimport { ASTNode, MethodDeclarationNode, TypeNode } from \"./AST.js\";\r\nimport { Breakpoint, Program, Statement } from \"./Program.js\";\r\nimport { SymbolTable } from \"./SymbolTable.js\";\r\nimport { MapClass } from \"../../runtimelibrary/collections/Map.js\";\r\nimport { HashMapClass } from \"../../runtimelibrary/collections/HashMap.js\";\r\nimport { TriangleClass } from \"../../runtimelibrary/graphics/Triangle.js\";\r\nimport { Main } from \"../../main/Main.js\";\r\nimport { LocalDateTimeClass, DayOfWeekEnum, MonthEnum } from \"../../runtimelibrary/graphics/LocalDateTime.js\";\r\nimport { LineClass } from \"../../runtimelibrary/graphics/Line.js\";\r\nimport { Vector2Class } from \"../../runtimelibrary/Vector2.js\";\r\nimport { MouseAdapterClass, MouseListenerInterface } from \"../../runtimelibrary/graphics/MouseListener.js\";\r\nimport { WebSocketClass } from \"../../runtimelibrary/network/WebSocket.js\";\r\nimport { WebSocketClientClass } from \"../../runtimelibrary/network/WebSocketClient.js\";\r\nimport { ProcessingClass } from \"../../runtimelibrary/graphics/Processing.js\";\r\nimport { TurtleClass } from \"../../runtimelibrary/graphics/Turtle.js\";\r\n\r\nexport type File = {\r\n    name: string,\r\n    id?: number,\r\n    text: string,\r\n\r\n    text_before_revision: string,\r\n    submitted_date: string,\r\n    student_edited_after_revision: boolean,\r\n\r\n    is_copy_of_id?: number,\r\n    repository_file_version?: number,\r\n    identical_to_repository_version: boolean,\r\n\r\n    dirty: boolean,\r\n    saved: boolean,\r\n    version: number,\r\n    panelElement?: AccordionElement\r\n}\r\n\r\nexport type IdentifierPosition = {\r\n    position: TextPosition,\r\n    element: Type | Method | Attribute | Variable;\r\n}\r\n\r\nexport type MethodCallPosition = {\r\n    identifierPosition: TextPosition,\r\n    possibleMethods: Method[] | string, // string for print, println, ...\r\n    commaPositions: TextPosition[],\r\n    rightBracketPosition: TextPosition\r\n}\r\n\r\nexport class Module {\r\n    file: File;\r\n    static maxUriNumber: number = 0;\r\n    uri: monaco.Uri;\r\n    model: monaco.editor.ITextModel;\r\n    oldErrorDecorations: string[] = [];\r\n    lastSavedVersionId: number;\r\n    editorState: monaco.editor.ICodeEditorViewState;\r\n\r\n    isSystemModule: boolean = false;\r\n\r\n    breakpoints: Breakpoint[] = [];\r\n    breakpointDecorators: string[] = [];\r\n    decoratorIdToBreakpointMap: { [id: string]: Breakpoint } = {};\r\n\r\n    errors: Error[][] = [[], [], [], []]; // 1st pass, 2nd pass, 3rd pass\r\n\r\n    // 1st pass: Lexer\r\n    tokenList: Token[];\r\n\r\n    // 2nd pass: ASTParser\r\n    mainProgramAst: ASTNode[];\r\n    classDefinitionsAST: ASTNode[];\r\n    typeNodes: TypeNode[];\r\n\r\n    // 3rd pass: TypeResolver fill in resolvedType in typeNodes and populate typeStore\r\n    typeStore: TypeStore;\r\n\r\n    // 4th pass: generate code and symbol tables\r\n\r\n    /*\r\n    The mainProgramAST holds statements to:\r\n    1. call static constructor of each used class\r\n    2. execute main Program\r\n    */\r\n\r\n    mainProgram?: Program;\r\n    mainProgramEnd: TextPosition;\r\n    mainSymbolTable: SymbolTable;\r\n\r\n    identifierPositions: { [line: number]: IdentifierPosition[] } = {};\r\n    methodCallPositions: { [line: number]: MethodCallPosition[] } = {};\r\n\r\n    dependsOnModules: Map<Module, boolean>;\r\n    isStartable: boolean;\r\n    dependsOnModulesWithErrors: boolean;\r\n\r\n    static uriMap: { [name: string]: number } = {};\r\n    bracketError: string;\r\n\r\n    constructor(file: File, public main: MainBase) {\r\n        if (file == null || this.main == null) return; // used by AdhocCompiler and ApiDoc\r\n\r\n        this.file = file;\r\n        // this.uri = monaco.Uri.from({ path: '/file' + (Module.maxUriNumber++) + '.learnJava', scheme: 'file' });\r\n        let path = file.name;\r\n\r\n        let uriCounter = Module.uriMap[path];\r\n        if (uriCounter == null) {\r\n            uriCounter = 0;\r\n        } else {\r\n            uriCounter++;\r\n        }\r\n        Module.uriMap[path] = uriCounter;\r\n\r\n        if (uriCounter > 0) path += \" (\" + uriCounter + \")\";\r\n        this.uri = monaco.Uri.from({ path: path, scheme: 'inmemory' });\r\n        this.model = monaco.editor.createModel(file.text, \"myJava\", this.uri);\r\n        this.model.updateOptions({ tabSize: 3 });\r\n\r\n        this.lastSavedVersionId = this.model.getAlternativeVersionId();\r\n\r\n        let that = this;\r\n\r\n        this.model.onDidChangeContent(() => {\r\n            let versionId = that.model.getAlternativeVersionId();\r\n\r\n            if (versionId != that.lastSavedVersionId) {\r\n                that.file.dirty = true;\r\n                that.file.saved = false;\r\n                that.file.identical_to_repository_version = false;\r\n                that.lastSavedVersionId = versionId;\r\n            }\r\n\r\n            if(!that.main.isEmbedded()){\r\n                let main1: Main = <Main>main;\r\n                if(main1.workspacesOwnerId != main1.user.id){\r\n                    if(that.file.text_before_revision == null || that.file.student_edited_after_revision){\r\n                        that.file.student_edited_after_revision = false;\r\n                        that.file.text_before_revision = that.file.text;\r\n                        that.file.saved = false;\r\n                        main1.networkManager.sendUpdates(null, false);\r\n                        main1.bottomDiv.homeworkManager.showHomeWorkRevisionButton();\r\n                        main1.projectExplorer.renderHomeworkButton(that.file);\r\n                    }\r\n                } else {\r\n                    that.file.student_edited_after_revision = true;\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    getMethodDeclarationAtPosition(position: { lineNumber: number; column: number; }): MethodDeclarationNode {\r\n\r\n        if(this.classDefinitionsAST == null) return null;\r\n        \r\n        for(let cd of this.classDefinitionsAST){\r\n            if(cd.type == TokenType.keywordClass || cd.type == TokenType.keywordEnum){\r\n                for(let methodAST of cd.methods){\r\n                    if(methodAST.position != null && methodAST.scopeTo != null){\r\n                        if(methodAST.position.line <= position.lineNumber && methodAST.scopeTo.line >= position.lineNumber){\r\n                            return methodAST;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    \r\n    }\r\n\r\n\r\n    static restoreFromData(f: FileData, main: MainBase): Module {\r\n\r\n        let f1: File = {\r\n            name: f.name,\r\n            text: f.text,\r\n            text_before_revision: f.text_before_revision,\r\n            submitted_date: f.submitted_date,\r\n            student_edited_after_revision: false,\r\n            dirty: true,\r\n            saved: true,\r\n            version: f.version,\r\n            id: f.id,\r\n            is_copy_of_id: f.is_copy_of_id,\r\n            repository_file_version: f.repository_file_version,\r\n            identical_to_repository_version: f.identical_to_repository_version\r\n        }\r\n\r\n        let m: Module = new Module(f1, main);\r\n\r\n        return m;\r\n\r\n    }\r\n\r\n    getFileData(workspace: Workspace): FileData {\r\n        let file = this.file;\r\n        let fd: FileData = {\r\n            id: file.id,\r\n            name: file.name,\r\n            text: file.text,\r\n            text_before_revision: file.text_before_revision,\r\n            submitted_date: file.submitted_date,\r\n            student_edited_after_revision: file.student_edited_after_revision,\r\n            version: file.version,\r\n            is_copy_of_id: file.is_copy_of_id,\r\n            repository_file_version: file.repository_file_version,\r\n            identical_to_repository_version: file.identical_to_repository_version,\r\n            workspace_id: workspace.id,\r\n            forceUpdate: false\r\n        }\r\n\r\n        return fd;\r\n    }\r\n\r\n    pushMethodCallPosition(identifierPosition: TextPosition, commaPositions: TextPosition[],\r\n        possibleMethods: Method[] | string, rightBracketPosition: TextPosition) {\r\n\r\n        let lines: number[] = [];\r\n        lines.push(identifierPosition.line);\r\n        for (let cp of commaPositions) {\r\n            if (lines.indexOf[cp.line] < 0) {\r\n                lines.push(cp.line);\r\n            }\r\n        }\r\n\r\n        let mcp: MethodCallPosition = {\r\n            identifierPosition: identifierPosition,\r\n            commaPositions: commaPositions,\r\n            possibleMethods: possibleMethods,\r\n            rightBracketPosition: rightBracketPosition\r\n        };\r\n\r\n        for (let line of lines) {\r\n            let mcpList = this.methodCallPositions[line];\r\n            if (mcpList == null) {\r\n                this.methodCallPositions[line] = [];\r\n                mcpList = this.methodCallPositions[line];\r\n            }\r\n            mcpList.push(mcp);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    toggleBreakpoint(lineNumber: number, rerender: boolean) {\r\n        this.getBreakpointPositionsFromEditor();\r\n        if (this.getBreakpoint(lineNumber, true) == null) {\r\n            this.setBreakpoint(lineNumber, 1);\r\n        }\r\n        if (rerender) {\r\n            this.renderBreakpointDecorators();\r\n        }\r\n    }\r\n\r\n    getBreakpoint(line: number, remove: boolean = false): Breakpoint {\r\n\r\n        for (let i = 0; i < this.breakpoints.length; i++) {\r\n            let b = this.breakpoints[i];\r\n            if (b.line == line) {\r\n                this.breakpoints.splice(i, 1);\r\n                if (b.statement != null) {\r\n                    b.statement.breakpoint = undefined;\r\n                }\r\n                return b;\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    setBreakpoint(line: number, column: number): Breakpoint {\r\n\r\n        let breakpoint: Breakpoint = {\r\n            line: line,\r\n            column: column,\r\n            statement: null\r\n        }\r\n\r\n        this.attachToStatement(breakpoint);\r\n        this.breakpoints.push(breakpoint);\r\n\r\n        return breakpoint;\r\n\r\n    }\r\n\r\n    attachToStatement(breakpoint: Breakpoint, programList?: Program[]) {\r\n\r\n        if (breakpoint.statement != null) {\r\n            breakpoint.statement.breakpoint = undefined;\r\n        }\r\n\r\n        if (programList == null) programList = this.getPrograms();\r\n\r\n        let nearestStatement: Statement = null;\r\n        let nearestDistance: number = 100000;\r\n\r\n        for (let program of programList) {\r\n            for (let statement of program.statements) {\r\n\r\n                let line = statement?.position?.line;\r\n                if (line != null && line >= breakpoint.line) {\r\n                    if (line - breakpoint.line < nearestDistance) {\r\n                        nearestStatement = statement;\r\n                        nearestDistance = line - breakpoint.line;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        breakpoint.statement = nearestStatement;\r\n        if (nearestStatement != null) {\r\n            nearestStatement.breakpoint = breakpoint;\r\n            // let pp = new ProgramPrinter();\r\n            // console.log(\"Attached Breakpoint line \" + breakpoint.line + \", column \" + \r\n            //     breakpoint.column + \" to statement \" + pp.print([nearestStatement]));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    getPrograms(): Program[] {\r\n        let programList: Program[] = [];\r\n\r\n        if (this.mainProgram != null) {\r\n            programList.push(this.mainProgram);\r\n        }\r\n\r\n        if (this.typeStore != null) {\r\n\r\n            for (let type of this.typeStore.typeList) {\r\n                if (type instanceof Klass) {\r\n                    if (type.attributeInitializationProgram != null) {\r\n                        programList.push(type.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                    if (type.staticClass.attributeInitializationProgram != null) {\r\n                        programList.push(type.staticClass.attributeInitializationProgram);\r\n                    }\r\n                    for (let method of type.staticClass.methods) {\r\n                        if (method.program != null) {\r\n                            programList.push(method.program);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return programList;\r\n\r\n    }\r\n\r\n    renderBreakpointDecorators() {\r\n\r\n        this.getBreakpointPositionsFromEditor();\r\n\r\n        let decorations: monaco.editor.IModelDeltaDecoration[] = [];\r\n\r\n        for (let breakpoint of this.breakpoints) {\r\n            decorations.push({\r\n                range: { startLineNumber: breakpoint.line, endLineNumber: breakpoint.line, startColumn: 1, endColumn: 1 },\r\n                options: {\r\n                    isWholeLine: true, className: \"jo_decorate_breakpoint\",\r\n                    overviewRuler: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.OverviewRulerLane.Left\r\n                    },\r\n                    minimap: {\r\n                        color: \"#580000\",\r\n                        position: monaco.editor.MinimapPosition.Inline\r\n                    },\r\n                    marginClassName: \"jo_margin_breakpoint\",\r\n                    stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\r\n                },\r\n                //@ts-ignore\r\n                breakpoint: breakpoint\r\n            });\r\n        }\r\n\r\n        this.breakpointDecorators = this.main.getMonacoEditor().deltaDecorations(this.breakpointDecorators, decorations);\r\n\r\n        this.decoratorIdToBreakpointMap = {};\r\n        for (let i = 0; i < this.breakpointDecorators.length; i++) {\r\n            this.decoratorIdToBreakpointMap[this.breakpointDecorators[i]] = this.breakpoints[i];\r\n        }\r\n\r\n    }\r\n\r\n    getBreakpointPositionsFromEditor() {\r\n        for (let decoration of this.main.getMonacoEditor().getModel().getAllDecorations()) {\r\n            if (decoration.options.marginClassName == \"margin_breakpoint\") {\r\n                let breakpoint = this.decoratorIdToBreakpointMap[decoration.id];\r\n                if (breakpoint != null) {\r\n                    breakpoint.line = decoration.range.startLineNumber;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    findSymbolTableAtPosition(line: number, column: number) {\r\n        if (this.mainSymbolTable == null) {\r\n            return null;\r\n        }\r\n\r\n        if (line > this.mainSymbolTable.positionTo.line ||\r\n            line == this.mainSymbolTable.positionTo.line && column > this.mainSymbolTable.positionTo.column\r\n        ) {\r\n            line = this.mainSymbolTable.positionTo.line;\r\n            column = this.mainSymbolTable.positionTo.column - 1;\r\n        }\r\n\r\n        return this.mainSymbolTable.findTableAtPosition(line, column);\r\n    }\r\n\r\n    getErrorCount(): number {\r\n\r\n        let ec = 0;\r\n        for (let el of this.errors) {\r\n            el.forEach(error => ec += error.level == \"error\" ? 1 : 0);\r\n            // ec += el.length;\r\n        }\r\n\r\n        return ec;\r\n    }\r\n\r\n    hasMainProgram() {\r\n\r\n        if (this.mainProgram == null) return false;\r\n        if (this.mainProgram.statements == null) return false;\r\n        return this.mainProgram.statements.length > 2 || this.mainProgram.statements.length == 2 && this.mainProgram.statements[0].type == TokenType.callMainMethod;\r\n\r\n    }\r\n\r\n    getProgramTextFromMonacoModel(): string {\r\n        return this.model.getValue(monaco.editor.EndOfLinePreference.LF, false);\r\n    }\r\n\r\n\r\n    addIdentifierPosition(position: TextPosition, element: Type | Method | Attribute | Variable) {\r\n        let positionList: IdentifierPosition[] = this.identifierPositions[position.line];\r\n        if (positionList == null) {\r\n            positionList = [];\r\n            this.identifierPositions[position.line] = positionList;\r\n        }\r\n        positionList.push({\r\n            position: position,\r\n            element: element\r\n        });\r\n    }\r\n\r\n\r\n    getTypeAtPosition(line: number, column: number): { type: Type, isStatic: boolean } {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let foundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column <= p.position.column + p.position.length) {\r\n                foundPosition = p;\r\n                let element = foundPosition.element;\r\n                if (element instanceof Method) {\r\n                    return { type: element, isStatic: false };\r\n                }\r\n                // Attribute, Variable\r\n                let type: Type = (element instanceof Type) ? element : element.type;\r\n                //@ts-ignore\r\n                if (foundPosition.position.length > 0 && element.type != null) {\r\n                    //@ts-ignore\r\n                    return { type: <Type>type, isStatic: false };\r\n                }\r\n\r\n                return { type: type, isStatic: foundPosition.position.length > 0 };\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getElementAtPosition(line: number, column: number): Klass | Interface | Method | Attribute | Variable {\r\n\r\n        let positionsOnLine = this.identifierPositions[line];\r\n        if (positionsOnLine == null) return null;\r\n\r\n        let bestFoundPosition: IdentifierPosition = null;\r\n        for (let p of positionsOnLine) {\r\n            if (column >= p.position.column && column < p.position.column + p.position.length) {\r\n\r\n                if (p.position.length > 0) {\r\n                    if (bestFoundPosition == null) {\r\n                        bestFoundPosition = p;\r\n                    } else {\r\n                        if(p.element instanceof Method && bestFoundPosition.element instanceof Klass){\r\n                            bestFoundPosition = p;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bestFoundPosition == null ? null : <any>bestFoundPosition.element;\r\n    }\r\n\r\n    copy(): Module {\r\n        let m = new Module(this.file, this.main);\r\n        m.model = this.model;\r\n        m.mainProgram = this.mainProgram;\r\n        this.mainProgram = null;\r\n        m.mainSymbolTable = this.mainSymbolTable;\r\n        this.mainSymbolTable = null;\r\n        m.typeStore = this.typeStore;\r\n        // this.typeStore = null;\r\n        m.isStartable = this.isStartable;\r\n        m.dependsOnModulesWithErrors = this.dependsOnModulesWithErrors;\r\n\r\n        m.breakpoints = this.breakpoints;\r\n        this.breakpoints = [];\r\n        let programs = m.getPrograms();\r\n\r\n        programs.forEach((p) => p.module = m);\r\n\r\n        for (let b of m.breakpoints) {\r\n            this.breakpoints.push({\r\n                line: b.line,\r\n                column: b.column,\r\n                statement: null\r\n            });\r\n\r\n            m.attachToStatement(b, programs);\r\n\r\n        }\r\n\r\n        this.file.dirty = true;\r\n\r\n        return m;\r\n    }\r\n\r\n    clear() {\r\n\r\n        this.identifierPositions = {};\r\n\r\n        if (this.file != null && this.file.dirty) {\r\n            // Lexer\r\n            this.tokenList = null;\r\n            this.errors[0] = [];\r\n\r\n            // AST Parser\r\n            this.errors[1] = [];\r\n\r\n\r\n        }\r\n\r\n        // type resolver\r\n        this.errors[2] = [];\r\n        this.typeNodes = [];\r\n        this.typeStore = new TypeStore();\r\n\r\n        // Code generator\r\n        this.errors[3] = [];\r\n        this.mainSymbolTable = new SymbolTable(null, { line: 1, column: 1, length: 1 }, { line: 100000, column: 1, length: 0 });\r\n        this.mainProgram = null;\r\n\r\n        this.methodCallPositions = {};\r\n        this.dependsOnModules = new Map();\r\n\r\n    }\r\n\r\n    hasErrors() {\r\n\r\n        for (let el of this.errors) {\r\n            if(el.find(error => error.level == \"error\")){\r\n                return true;\r\n            }\r\n            // if (el.length > 0) {\r\n            //     return true;\r\n            // }\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    getSortedAndFilteredErrors(): Error[] {\r\n\r\n        let list: Error[] = [];\r\n\r\n        for (let el of this.errors) {\r\n            list = list.concat(el);\r\n        }\r\n\r\n        list.sort((a, b) => {\r\n            if (a.position.line > b.position.line) {\r\n                return 1;\r\n            }\r\n            if (b.position.line > a.position.line) {\r\n                return -1;\r\n            }\r\n            if (a.position.column >= b.position.column) {\r\n                return 1;\r\n            }\r\n            return -1;\r\n        });\r\n\r\n        for (let i = 0; i < list.length - 1; i++) {\r\n            let e1 = list[i];\r\n            let e2 = list[i + 1];\r\n            if (e1.position.line == e2.position.line && e1.position.column + 10 > e2.position.column) {\r\n                if(this.errorLevelCompare(e1.level, e2.level) == 1){\r\n                    list.splice(i + 1, 1);\r\n                } else {\r\n                    list.splice(i, 1);\r\n                }\r\n                i--;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    errorLevelCompare(level1: ErrorLevel, level2: ErrorLevel): number {\r\n        if(level1 == \"error\") return 1;\r\n        if(level2 == \"error\") return 2;\r\n        if(level1 == \"warning\") return 1;\r\n        if(level2 == \"warning\") return 2;\r\n        return 1;\r\n    }\r\n\r\n    renderStartButton() {\r\n        let $buttonDiv = this.file?.panelElement?.$htmlFirstLine?.find('.jo_additionalButtonStart');\r\n        if ($buttonDiv == null) return;\r\n\r\n        $buttonDiv.find('.jo_startButton').remove();\r\n\r\n        if (this.isStartable) {\r\n            let $startButtonDiv = jQuery('<div class=\"jo_startButton img_start-dark jo_button jo_active\" title=\"Hauptprogramm in der Datei starten\"></div>');\r\n            $buttonDiv.append($startButtonDiv);\r\n            let that = this;\r\n            $startButtonDiv.on('mousedown', (e) => e.stopPropagation());\r\n            $startButtonDiv.on('click', (e) => {\r\n                e.stopPropagation();\r\n\r\n                that.main.setModuleActive(that);\r\n\r\n                that.main.getInterpreter().start();\r\n            });\r\n\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\nexport class BaseModule extends Module {\r\n    constructor(main: MainBase) {\r\n\r\n        super({ name: \"Base Module\", text: \"\", text_before_revision: null, submitted_date: null, student_edited_after_revision: false, dirty: false, saved: true, version: 1 , identical_to_repository_version: true}, main);\r\n\r\n        this.isSystemModule = true;\r\n        this.mainProgram = null;\r\n\r\n        this.clear();\r\n\r\n\r\n        this.typeStore.addType(voidPrimitiveType);\r\n        this.typeStore.addType(intPrimitiveType);\r\n        this.typeStore.addType(floatPrimitiveType);\r\n        this.typeStore.addType(doublePrimitiveType);\r\n        this.typeStore.addType(charPrimitiveType);\r\n        this.typeStore.addType(booleanPrimitiveType);\r\n        this.typeStore.addType(stringPrimitiveType);\r\n        this.typeStore.addType(objectType);\r\n        this.typeStore.addType(varType);\r\n\r\n        this.typeStore.addType(IntegerType);\r\n        this.typeStore.addType(FloatType);\r\n        this.typeStore.addType(DoubleType);\r\n        this.typeStore.addType(CharacterType);\r\n        this.typeStore.addType(BooleanType);\r\n\r\n        // Collections Framework\r\n        this.typeStore.addType(new IteratorClass(this));\r\n        this.typeStore.addType(new IterableClass(this));\r\n        this.typeStore.addType(new CollectionClass(this));\r\n        this.typeStore.addType(new ListClass(this));\r\n        this.typeStore.addType(new ArrayListClass(this));\r\n        this.typeStore.addType(new VectorClass(this));\r\n        this.typeStore.addType(new QueueClass(this));\r\n        this.typeStore.addType(new DequeClass(this));\r\n        this.typeStore.addType(new LinkedListClass(this));\r\n        this.typeStore.addType(new StackClass(this));\r\n        this.typeStore.addType(new ListIteratorImplClass(this));\r\n        this.typeStore.addType(new SetClass(this));\r\n        this.typeStore.addType(new HashSetClass(this));\r\n        this.typeStore.addType(new LinkedHashSetClass(this));\r\n        this.typeStore.addType(new SetIteratorImplClass(this));\r\n        this.typeStore.addType(new MapClass(this));\r\n        this.typeStore.addType(new HashMapClass(this));\r\n\r\n        this.typeStore.addType(new ConsoleClass(this));\r\n        this.typeStore.addType(new MathClass(this));\r\n        this.typeStore.addType(new Vector2Class(this));\r\n        this.typeStore.addType(new KeyClass(this));\r\n        this.typeStore.addType(new SoundClass(this));\r\n        this.typeStore.addType(new InputClass(this));\r\n        this.typeStore.addType(new Runnable(this));\r\n        this.typeStore.addType(new TimerClass(this));\r\n        this.typeStore.addType(new ColorClass(this));\r\n        this.typeStore.addType(new ActorClass(this));\r\n        this.typeStore.addType(new ShapeClass(this));\r\n        this.typeStore.addType(new FilledShapeClass(this));\r\n        this.typeStore.addType(new RectangleClass(this));\r\n        this.typeStore.addType(new RoundedRectangleClass(this));\r\n        this.typeStore.addType(new CircleClass(this));\r\n        this.typeStore.addType(new EllipseClass(this));\r\n        this.typeStore.addType(new BitmapClass(this));\r\n        this.typeStore.addType(new AlignmentClass(this));\r\n        this.typeStore.addType(new TextClass(this));\r\n        this.typeStore.addType(new ScaleModeClass(this));\r\n        this.typeStore.addType(new SpriteLibraryClass(this));\r\n        this.typeStore.addType(new RepeatTypeClass(this));\r\n        this.typeStore.addType(new SpriteClass(this));\r\n        this.typeStore.addType(new CollisionPairClass(this));\r\n        this.typeStore.addType(new GroupClass(this));\r\n        this.typeStore.addType(new PolygonClass(this));\r\n        this.typeStore.addType(new LineClass(this));\r\n        this.typeStore.addType(new TriangleClass(this));\r\n        this.typeStore.addType(new TurtleClass(this));\r\n\r\n        this.typeStore.addType(new MouseListenerInterface(this));\r\n        this.typeStore.addType(new MouseAdapterClass(this));\r\n        this.typeStore.addType(new WorldClass(this));\r\n        this.typeStore.addType(new ProcessingClass(this));\r\n\r\n        (<ActorClass>this.typeStore.getType(\"Actor\")).registerWorldType();\r\n\r\n\r\n        this.typeStore.addType(new PrintStreamClass(this));\r\n        this.typeStore.addType(new KeyListener(this));\r\n        this.typeStore.addType(new SystemClass(this));\r\n        this.typeStore.addType(new SystemToolsClass(this));\r\n        this.typeStore.addType(new DayOfWeekEnum(this));\r\n        this.typeStore.addType(new MonthEnum(this));\r\n        this.typeStore.addType(new LocalDateTimeClass(this));\r\n    \r\n        this.typeStore.addType(new WebSocketClientClass(this));\r\n        this.typeStore.addType(new WebSocketClass(this));\r\n\r\n    \r\n\r\n        stringPrimitiveType.module = this;\r\n        // stringPrimitiveType.baseClass = <any>(this.typeStore.getType(\"Object\"));\r\n        // stringPrimitiveType.baseClass = objectType;\r\n        // IntegerType.baseClass = objectType;\r\n        // DoubleType.baseClass = objectType;\r\n        // FloatType.baseClass = objectType;\r\n        // CharacterType.baseClass = objectType;\r\n        // BooleanType.baseClass = objectType;\r\n\r\n    }\r\n\r\n    clearUsagePositions() {\r\n        for (let type of this.typeStore.typeList) {\r\n            type.clearUsagePositions();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class ModuleStore {\r\n\r\n    private modules: Module[] = [];\r\n    private moduleMap: Map<string, Module> = new Map();\r\n    private baseModule: BaseModule;\r\n\r\n    dirty: boolean = false;\r\n\r\n    constructor(private main: MainBase, withBaseModule: boolean = true) {\r\n        if (withBaseModule) {\r\n            this.baseModule = new BaseModule(main);\r\n            this.putModule(this.baseModule);\r\n        }\r\n    }\r\n\r\n    findModuleById(module_id: number): Module {\r\n        for(let module of this.modules){\r\n            if(module.file.id == module_id) return module;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getBaseModule() {\r\n        return this.baseModule;\r\n    }\r\n\r\n    public clearUsagePositions() {\r\n        this.baseModule.clearUsagePositions();\r\n    }\r\n\r\n    copy(): ModuleStore {\r\n        let ms: ModuleStore = new ModuleStore(this.main);\r\n        for (let m of this.modules) {\r\n            if (!m.isSystemModule) {\r\n                ms.putModule(m.copy());\r\n            }\r\n        }\r\n        return ms;\r\n    }\r\n\r\n    findModuleByFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                return m;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    hasErrors(): boolean {\r\n        for (let m of this.modules) {\r\n            if (m.hasErrors()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getFirstModule(): Module {\r\n        if (this.modules.length > 0) {\r\n            for (let mo of this.modules) {\r\n                if (!mo.isSystemModule) {\r\n                    return mo;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    isDirty(): boolean {\r\n\r\n        if (this.dirty) {\r\n            this.dirty = false;\r\n            return true;\r\n        }\r\n\r\n        let dirty = false;\r\n        for (let m of this.modules) {\r\n            if (m.file.dirty) {\r\n                dirty = true;\r\n                break;\r\n            }\r\n        }\r\n        return dirty;\r\n    }\r\n\r\n\r\n    getModules(includeSystemModules: boolean, excludedModuleName?: String): Module[] {\r\n        let ret = [];\r\n        for (let m of this.modules) {\r\n            if (m.file.name != excludedModuleName) {\r\n                if (!m.isSystemModule || includeSystemModules) {\r\n                    ret.push(m);\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    putModule(module: Module) {\r\n        this.modules.push(module);\r\n        this.moduleMap[module.file.name] = module;\r\n    }\r\n\r\n    removeModuleWithFile(file: File) {\r\n        for (let m of this.modules) {\r\n            if (m.file == file) {\r\n                this.removeModule(m);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n\r\n        if (this.modules.indexOf(module) < 0) return;\r\n\r\n        this.modules.splice(this.modules.indexOf(module), 1);\r\n        this.moduleMap[module.file.name] = undefined;\r\n        this.dirty = true;\r\n    }\r\n\r\n    getModule(moduleName: string): Module {\r\n        return this.moduleMap[moduleName];\r\n    }\r\n\r\n    getType(identifier: string): { type: Type, module: Module } {\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                let type = module.typeStore.getType(identifier);\r\n                if (type != null) {\r\n                    return { type: type, module: module }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getTypeCompletionItems(moduleContext: Module, rangeToReplace: monaco.IRange): monaco.languages.CompletionItem[] {\r\n\r\n        let completionItems: monaco.languages.CompletionItem[] = [];\r\n\r\n        for (let module of this.modules) {\r\n            if (module.typeStore != null) {\r\n                for (let type of module.typeStore.typeList) {\r\n                    if (module == moduleContext || (type instanceof Klass && type.visibility == Visibility.public)\r\n                        || module.isSystemModule) {\r\n\r\n                        let detail = \"Klasse\";\r\n\r\n                        if(type.documentation != null){\r\n                            detail = type.documentation;\r\n                        } else if (module.isSystemModule) {\r\n                            if (type instanceof PrimitiveType) {\r\n                                detail = \"Primitiver Datentyp\";\r\n                            } else {\r\n                                detail = \"Systemklasse\";\r\n                            }\r\n                        }\r\n\r\n                        let item = {\r\n                            label: type.identifier,\r\n                            detail: detail,\r\n                            insertText: type.identifier,\r\n                            kind: type instanceof PrimitiveType ?\r\n                                monaco.languages.CompletionItemKind.Struct : monaco.languages.CompletionItemKind.Class,\r\n                            range: rangeToReplace,\r\n                            generic: ((type instanceof Klass || type instanceof Interface) && type.typeVariables.length > 0)\r\n                        };\r\n\r\n                        completionItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return completionItems;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class TypeStore {\r\n\r\n    typeList: Type[] = [];\r\n    typeMap: Map<string, Type> = new Map();\r\n\r\n    addType(type: Type) {\r\n        this.typeList.push(type);\r\n        this.typeMap.set(type.identifier, type);\r\n    }\r\n\r\n    clear() {\r\n        this.typeList.length = 0;\r\n        this.typeMap.clear();\r\n    }\r\n\r\n    getType(identifier: string) {\r\n        return this.typeMap.get(identifier);\r\n    }\r\n\r\n\r\n\r\n}\r\n","\r\nexport class EmbeddedSlider {\r\n\r\n    $sliderDiv: JQuery<HTMLElement>;\r\n\r\n    /**\r\n     * A div contains $container and another div. Between the latter two \r\n     * a slider should get inserted.\r\n     * @param $container \r\n     * @param firstLast true, if $container is left/on top of other div; false if otherwise\r\n     * @param horVert true, if $container and other div are left/right of another; false if they are on top/below each other\r\n     * @param callback \r\n     * @param $otherDiv \r\n     */\r\n    constructor(private $container: JQuery<HTMLElement>, \r\n        private firstLast: boolean, private horVert: boolean,\r\n         private callback: (newLength: number) => void, private $otherDiv?: JQuery<HTMLElement>){\r\n            this.initSlider();\r\n    }\r\n\r\n    initSlider() {\r\n        let that = this;\r\n\r\n        if(this.$otherDiv == null){\r\n            this.$container.parent().children().each((index, element) => {\r\n                if(element != this.$container[0]){\r\n                    that.$otherDiv = jQuery(element);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.$sliderDiv = jQuery('<div class=\"joe_slider\"></div>');\r\n\r\n        this.$sliderDiv.css({\r\n            width: this.horVert ? \"100%\" : \"4px\",\r\n            height: this.horVert ? \"4px\" : \"100%\",\r\n            cursor: this.horVert ? \"row-resize\" : \"col-resize\",\r\n        });\r\n\r\n        if(this.firstLast){\r\n            this.$sliderDiv.css({\r\n                top: \"0px\",\r\n                left: \"0px\"\r\n            });\r\n        } else {\r\n            if(this.horVert){\r\n                this.$sliderDiv.css({\r\n                    bottom: \"0px\",\r\n                    left: \"0px\"\r\n                });    \r\n            } else {\r\n                this.$sliderDiv.css({\r\n                    top: \"0px\",\r\n                    right: \"0px\"\r\n                });    \r\n            }\r\n        }\r\n\r\n        this.$container.append(this.$sliderDiv);\r\n\r\n        this.$sliderDiv.on(\"mousedown\", (md: JQuery.MouseDownEvent) => {\r\n\r\n            let x = md.clientX;\r\n            let y = md.clientY;\r\n\r\n            jQuery(document).on(\"mousemove.slider\", (mm: JQuery.MouseMoveEvent) => {\r\n                let dx = mm.clientX - x;\r\n                let dy = mm.clientY - y;\r\n\r\n                that.slide(dx, dy);\r\n                \r\n                x = mm.clientX;\r\n                y = mm.clientY;\r\n\r\n            });\r\n\r\n            jQuery(document).on(\"mouseup.slider\", () => {\r\n                jQuery(document).off(\"mousemove.slider\");\r\n                jQuery(document).off(\"mouseup.slider\");\r\n            });\r\n\r\n\r\n        });\r\n\r\n        setTimeout(() => {\r\n            that.slide(1, 1);\r\n        }, 600);\r\n\r\n    }\r\n\r\n    setColor(color: string){\r\n        this.$sliderDiv.css('background-color', color);\r\n    }\r\n\r\n    slide(dx: number, dy: number){\r\n        if(this.horVert){\r\n            let height = Number.parseInt(this.$container.css('height').replace('px', ''));\r\n            let otherHeight = Number.parseInt(this.$otherDiv.css('height').replace('px', ''));\r\n            let newHeight = this.firstLast ? height -= dy : height += dy;\r\n            let newOtherHeight = this.firstLast ? otherHeight += dy : otherHeight -= dy;\r\n            this.$container.css('height', newHeight + \"px\");\r\n            this.$otherDiv.css('height', newOtherHeight + \"px\");\r\n            this.callback(newHeight);\r\n        } else {\r\n            let width = Number.parseInt(this.$container.css('width').replace('px', ''));\r\n            let otherWidth = Number.parseInt(this.$otherDiv.css('width').replace('px', ''));\r\n            let newWidth = this.firstLast ? width -= dx : width += dx;\r\n            let newOtherWidth = this.firstLast ? otherWidth += dx : otherWidth -= dx;\r\n            this.$container.css('width', newWidth + \"px\");\r\n            this.$otherDiv.css('width', newOtherWidth + \"px\");\r\n            this.callback(newWidth);\r\n        }\r\n        this.$container.css('flex', \"0 1 auto\");\r\n\r\n    }\r\n\r\n\r\n}","import { Module, ModuleStore } from \"../compiler/parser/Module.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\nimport { openContextMenu, makeEditable } from \"../tools/HtmlTools.js\";\r\nimport { JOScript, ScriptType } from \"./EmbeddedStarter.js\";\r\n\r\ntype FileData = {\r\n    type: ScriptType,\r\n    module?: Module,\r\n    hint?: string,\r\n    $fileDiv: JQuery<HTMLElement>\r\n}\r\n\r\nexport class EmbeddedFileExplorer {\r\n\r\n    currentFile: FileData;\r\n    files: FileData[] = [];\r\n\r\n    constructor(private moduleStore: ModuleStore, private $fileListDiv: JQuery<HTMLElement>, private main: MainEmbedded) {\r\n\r\n        let that = this;\r\n\r\n        for (let module of moduleStore.getModules(false)) {\r\n\r\n            this.addModule(module);\r\n\r\n        }\r\n\r\n        let $filesDiv = $fileListDiv.parent();\r\n        let $addButton = jQuery('<div class=\"joe_addFileButton jo_button img_add-dark jo_active\" title=\"Datei hinzufügen\"></div>');\r\n        $filesDiv.append($addButton);\r\n\r\n        $addButton.on(\"click\", () => {\r\n\r\n            let module = this.main.addModule({ text: \"\", title: \"Neue Datei.java\", type: \"java\" });\r\n            let fileData = this.addModule(module);\r\n\r\n            this.renameElement(fileData, () => {\r\n                // if there's no file yet and then one is added and subsequently renamed: select it!\r\n                if (that.currentFile != fileData) {\r\n                    that.selectFile(fileData);\r\n                }\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n    removeAllFiles() {\r\n        this.files.forEach(f => this.removeFile(f));\r\n    }\r\n\r\n\r\n    addHint(script: JOScript): void {\r\n        let that = this;\r\n        let $fileDiv = jQuery('<div class=\"jo_file jo_hint\" ><div class=\"jo_fileimage\"></div><div class=\"jo_filename\" style=\"line-height: 22px\">' +\r\n            script.title + '</div><div class=\"jo_additionalButtons\"></div></div></div>');\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: null,\r\n            $fileDiv: $fileDiv,\r\n            type: \"hint\",\r\n            hint: script.text\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    addModule(module: Module): FileData {\r\n        let that = this;\r\n        let $fileDiv = jQuery(`<div class=\"jo_file jo_java\" >\r\n        <div class=\"jo_fileimage\"></div>\r\n        <div class=\"jo_filename\" style=\"line-height: 22px\">${module.file.name}</div>\r\n        <div class=\"jo_additionalButtonStart\"></div>\r\n        <div class=\"jo_delete img_delete jo_button jo_active\" title=\"Datei löschen\"></div></div></div>`);\r\n        this.$fileListDiv.append($fileDiv);\r\n\r\n        let fileData: FileData = {\r\n            module: module,\r\n            $fileDiv: $fileDiv,\r\n            type: \"java\"\r\n        };\r\n\r\n        this.files.push(fileData);\r\n\r\n        module.file.panelElement = {\r\n            name: module.file.name,\r\n            $htmlFirstLine: $fileDiv\r\n        }\r\n\r\n        $fileDiv.find('.jo_delete').on(\"mousedown\", (e: JQuery.MouseDownEvent) => {\r\n            that.onDelete(fileData, e);\r\n        })\r\n\r\n        $fileDiv.find('.jo_delete').on(\"click\", (e) => { e.preventDefault(); e.stopPropagation() });\r\n\r\n        $fileDiv.on(\"click\", (event) => {\r\n            that.selectFile(fileData);\r\n        });\r\n\r\n        $fileDiv[0].addEventListener(\"contextmenu\", function (event) {\r\n            event.preventDefault();\r\n            openContextMenu([{\r\n                caption: \"Umbenennen\",\r\n                callback: () => {\r\n                    that.renameElement(fileData, () => { });\r\n                }\r\n            }], event.pageX, event.pageY);\r\n        }, false);\r\n\r\n        return fileData;\r\n\r\n    }\r\n\r\n    onDelete(fileData: FileData, ev: JQuery.MouseDownEvent) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        let that = this;\r\n        openContextMenu([{\r\n            caption: \"Abbrechen\",\r\n            callback: () => {\r\n                // nothing to do.\r\n            }\r\n        }, {\r\n            caption: \"Ich bin mir sicher: löschen!\",\r\n            color: \"#ff6060\",\r\n            callback: () => {\r\n                that.removeFile(fileData);\r\n            }\r\n        }], ev.pageX + 2, ev.pageY + 2);\r\n\r\n    }\r\n\r\n    removeFile(fileData: FileData) {\r\n        fileData.$fileDiv.remove();\r\n        this.main.removeModule(fileData.module);\r\n        this.files = this.files.filter((fd) => fd != fileData);\r\n        if (this.currentFile == fileData) {\r\n            if (this.files.length > 0) {\r\n                this.selectFile(this.files[0]);\r\n            } else {\r\n                this.main.getMonacoEditor().setValue(\"Keine Datei vorhanden.\");\r\n                this.main.getMonacoEditor().updateOptions({ readOnly: true });\r\n            }\r\n        }\r\n\r\n        this.files.forEach((file) => {\r\n            if(file.module != null){                // Hints have module == null\r\n                file.module.file.saved = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        for (let fileData of this.files) {\r\n            if (fileData.module == module) {\r\n                this.removeFile(fileData);\r\n            }\r\n        }\r\n    }\r\n\r\n    renameElement(fileData: FileData, callback: () => void) {\r\n        let that = this;\r\n        let $div = fileData.$fileDiv.find('.jo_filename');\r\n        let pointPos = fileData.module.file.name.indexOf('.');\r\n        let selection = pointPos == null ? null : { start: 0, end: pointPos };\r\n        makeEditable($div, $div, (newText: string) => {\r\n            fileData.module.file.name = newText;\r\n            $div.html(newText);\r\n            if (callback != null) callback();\r\n        }, selection);\r\n\r\n    }\r\n\r\n\r\n    setFirstFileActive() {\r\n        if (this.files.length > 0) {\r\n            this.selectFile(this.files[0]);\r\n        }\r\n    }\r\n\r\n    selectFile(fileData: FileData) {\r\n        if (fileData == null) return;\r\n        switch (fileData.type) {\r\n            case \"java\":\r\n                this.main.$hintDiv.hide();\r\n                this.main.$monacoDiv.show();\r\n                this.main.setModuleActive(fileData.module);\r\n                this.main.getMonacoEditor().focus();\r\n                break;\r\n            case \"hint\":\r\n                this.main.$monacoDiv.hide();\r\n                this.main.$hintDiv.show();\r\n\r\n                let syntaxMap: { [code: string]: string } = {};\r\n                let code: string[] = [];\r\n\r\n                //@ts-ignore\r\n                let md1 = window.markdownit({\r\n                    highlight: function (str, lang) {\r\n                        code.push(str);\r\n                        return \"\";\r\n                    }\r\n                });\r\n\r\n                md1.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                    var token = tokens[idx];\r\n                    code.push(token.content);\r\n                    // pass token to default renderer.\r\n                    return \"\"; //md1.renderer.rules.code_block(tokens, idx, options, env, self);\r\n                };\r\n\r\n                md1.render(fileData.hint);\r\n\r\n                this.colorize(code, syntaxMap, () => {\r\n                    //@ts-ignore\r\n                    let md2 = window.markdownit({\r\n                        highlight: function (str, lang) {\r\n                            return syntaxMap[str];\r\n                        }\r\n                    });\r\n\r\n                    md2.renderer.rules.code_inline = function (tokens, idx, options, env, self) {\r\n                        var token = tokens[idx];\r\n                        // pass token to default renderer.\r\n                        return syntaxMap[token.content].replace(\"<br/>\", \"\");\r\n                    };\r\n\r\n\r\n                    let html = md2.render(fileData.hint);\r\n                    this.main.$hintDiv.html(html);\r\n                });\r\n                this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n                fileData.$fileDiv.addClass('jo_active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorize(code: string[], codeMap: { [code: string]: string }, callback: () => void) {\r\n        let that = this;\r\n        if (code.length > 0) {\r\n            let uncoloredtext = code.pop();\r\n            monaco.editor.colorize(uncoloredtext, 'myJava', { tabSize: 3 }).then((text) => {\r\n                codeMap[uncoloredtext] = text;\r\n                that.colorize(code, codeMap, callback);\r\n            }\r\n            );\r\n        } else {\r\n            callback();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    markFile(module: Module) {\r\n        this.$fileListDiv.find('.jo_file').removeClass('jo_active');\r\n\r\n        this.currentFile = this.files.find((fileData) => fileData.module == module);\r\n\r\n        if (this.currentFile != null) this.currentFile.$fileDiv.addClass('jo_active');\r\n\r\n    }\r\n\r\n\r\n\r\n}","export class EmbeddedIndexedDB {\r\n\r\n    private db: IDBDatabase;\r\n\r\n    public open(successCallback: () => void) {\r\n\r\n        if (window.indexedDB) {\r\n\r\n            let request: IDBOpenDBRequest = window.indexedDB.open(\"LearnJ\", 1);\r\n\r\n            let that = this;\r\n\r\n            request.onerror = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                console.log(\"Couldn't open IndexedDB: \" + ev.type);\r\n            };\r\n\r\n            request.onsuccess = function (this: IDBRequest<IDBDatabase>, ev: Event) {\r\n                that.db = request.result;\r\n                that.db.onerror = function(event) {\r\n                    // Allgemeine Fehlerbehandlung, die für alle Anfragen an die Datenbank gilt. \r\n                    // @ts-ignore\r\n                    console.log(\"Datenbankfehler: \" + event.target.error.message);\r\n                  };\r\n                  successCallback();\r\n            };\r\n\r\n            request.onupgradeneeded = function(ev: Event){\r\n                // @ts-ignore\r\n                that.db = ev.target.result;\r\n                let objectStore = that.db.createObjectStore(\"scripts\", { keyPath: \"scriptId\", autoIncrement: false});\r\n\r\n\r\n                objectStore.transaction.oncomplete = function(event) {\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log(\"IndexedDB not available.\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public writeScript(scriptId: string, script: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.put({\r\n            scriptId: scriptId,\r\n            script: script\r\n        });\r\n\r\n    }\r\n\r\n    public removeScript(scriptId: string){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        scriptObjectStore.delete(scriptId);\r\n\r\n    }\r\n\r\n\r\n    public getScript(scriptId: string, callback: (script: string) => void){\r\n\r\n        let scriptObjectStore = this.db.transaction(\"scripts\", \"readwrite\").objectStore(\"scripts\");\r\n\r\n        let request = scriptObjectStore.get(scriptId);\r\n\r\n        request.onerror = (event) => {\r\n            callback(null);\r\n        }\r\n\r\n        request.onsuccess = (event) => {\r\n            if(request.result == null){\r\n                callback(null);\r\n            } else {\r\n                callback(request.result.script);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Compiler, CompilerStatus } from \"../compiler/Compiler.js\";\r\nimport { Module, File } from \"../compiler/parser/Module.js\";\r\nimport { Debugger } from \"../interpreter/Debugger.js\";\r\nimport { Interpreter, InterpreterState } from \"../interpreter/Interpreter.js\";\r\nimport { ActionManager } from \"../main/gui/ActionManager.js\";\r\nimport { BottomDiv } from \"../main/gui/BottomDiv.js\";\r\nimport { Editor } from \"../main/gui/Editor.js\";\r\nimport { ProgramControlButtons } from \"../main/gui/ProgramControlButtons.js\";\r\nimport { RightDiv } from \"../main/gui/RightDiv.js\";\r\nimport { MainBase } from \"../main/MainBase.js\";\r\nimport { Workspace } from \"../workspace/Workspace.js\";\r\nimport { JOScript } from \"./EmbeddedStarter.js\";\r\nimport { makeDiv, makeTabs, openContextMenu } from \"../tools/HtmlTools.js\";\r\nimport { EmbeddedSlider } from \"./EmbeddedSlider.js\";\r\nimport { TilingSprite } from \"pixi.js\";\r\nimport { EmbeddedFileExplorer } from \"./EmbeddedFileExplorer.js\";\r\nimport { TextPosition } from \"../compiler/lexer/Token.js\";\r\nimport { EmbeddedIndexedDB } from \"./EmbeddedIndexedDB.js\";\r\nimport { SemicolonAngel } from \"../compiler/parser/SemicolonAngel.js\";\r\nimport { TextPositionWithModule } from \"../compiler/types/Types.js\";\r\n\r\ntype JavaOnlineConfig = {\r\n    withFileList?: boolean,\r\n    withPCode?: boolean,\r\n    withConsole?: boolean,\r\n    withErrorList?: boolean,\r\n    withBottomPanel?: boolean,\r\n    id?: string\r\n}\r\n\r\nexport class MainEmbedded implements MainBase {\r\n    isEmbedded(): boolean { return true; }\r\n\r\n    jumpToDeclaration(module: Module, declaration: TextPositionWithModule){};\r\n\r\n    getCompiler(): Compiler {\r\n        return this.compiler;\r\n    }\r\n    getInterpreter(): Interpreter {\r\n        return this.interpreter;\r\n    }\r\n    getCurrentWorkspace(): Workspace {\r\n        return this.currentWorkspace;\r\n    }\r\n    getDebugger(): Debugger {\r\n        return this.debugger;\r\n    }\r\n    getMonacoEditor(): monaco.editor.IStandaloneCodeEditor {\r\n        return this.editor.editor;\r\n    }\r\n\r\n    getRightDiv(): RightDiv {\r\n        return this.rightDiv;\r\n    }\r\n\r\n    getBottomDiv(): BottomDiv {\r\n        return this.bottomDiv;\r\n    }\r\n\r\n    getActionManager(): ActionManager {\r\n        return this.actionManager;\r\n    }\r\n\r\n    getCurrentlyEditedModule(): Module {\r\n        if (this.config.withFileList) {\r\n            return this.fileExplorer.currentFile?.module;\r\n        } else {\r\n            return this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n    }\r\n\r\n    config: JavaOnlineConfig;\r\n\r\n    editor: Editor;\r\n    programPointerDecoration: string[] = [];\r\n    programPointerModule: Module;\r\n\r\n    currentWorkspace: Workspace;\r\n    actionManager: ActionManager;\r\n\r\n    compiler: Compiler;\r\n\r\n    interpreter: Interpreter;\r\n    $runDiv: JQuery<HTMLElement>;\r\n\r\n    debugger: Debugger;\r\n    $debuggerDiv: JQuery<HTMLElement>;\r\n\r\n    bottomDiv: BottomDiv;\r\n    $filesListDiv: JQuery<HTMLElement>;\r\n\r\n    $hintDiv: JQuery<HTMLElement>;\r\n    $monacoDiv: JQuery<HTMLElement>;\r\n    $resetButton: JQuery<HTMLElement>;\r\n\r\n    programIsExecutable = false;\r\n    version: number = 0;\r\n\r\n    timerHandle: any;\r\n\r\n    rightDiv: RightDiv;\r\n    $rightDivInner: JQuery<HTMLElement>;\r\n\r\n    fileExplorer: EmbeddedFileExplorer;\r\n\r\n    debounceDiagramDrawing: any;\r\n\r\n    indexedDB: EmbeddedIndexedDB;\r\n\r\n    compileRunsAfterCodeReset: number = 0;\r\n\r\n    semicolonAngel: SemicolonAngel;\r\n\r\n    constructor($div: JQuery<HTMLElement>, private scriptList: JOScript[]) {\r\n\r\n        this.readConfig($div);\r\n\r\n        this.initGUI($div);\r\n\r\n        this.initScripts();\r\n\r\n        this.indexedDB = new EmbeddedIndexedDB();\r\n        this.indexedDB.open(() => {\r\n\r\n            if (this.config.id != null) {\r\n                this.readScripts();\r\n            }\r\n\r\n        });\r\n\r\n        this.semicolonAngel = new SemicolonAngel(this);\r\n\r\n    }\r\n\r\n    initScripts() {\r\n\r\n        this.fileExplorer?.removeAllFiles();\r\n\r\n        this.initWorkspace(this.scriptList);\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer = new EmbeddedFileExplorer(this.currentWorkspace.moduleStore, this.$filesListDiv, this);\r\n            this.fileExplorer.setFirstFileActive();\r\n            this.scriptList.filter((script) => script.type == \"hint\").forEach((script) => this.fileExplorer.addHint(script));\r\n        } else {\r\n            this.setModuleActive(this.currentWorkspace.moduleStore.getFirstModule());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    readConfig($div: JQuery<HTMLElement>) {\r\n        let configJson: string | object = $div.data(\"java-online\");\r\n        if (configJson != null && typeof configJson == \"string\") {\r\n            this.config = JSON.parse(configJson.split(\"'\").join('\"'));\r\n        } else {\r\n            this.config = {}\r\n        }\r\n\r\n        if (this.config.withFileList == null) this.config.withFileList = true;\r\n        if (this.config.withPCode == null) this.config.withPCode = true;\r\n        if (this.config.withConsole == null) this.config.withConsole = true;\r\n        if (this.config.withErrorList == null) this.config.withErrorList = true;\r\n        if (this.config.withBottomPanel == null) this.config.withBottomPanel = true;\r\n\r\n        if (!(this.config.withConsole || this.config.withPCode || this.config.withFileList || this.config.withErrorList)) {\r\n            this.config.withBottomPanel = false;\r\n        }\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            this.config.withFileList = false;\r\n            this.config.withPCode = false;\r\n            this.config.withConsole = false;\r\n            this.config.withErrorList = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setModuleActive(module: Module) {\r\n\r\n        if (this.config.withFileList && this.fileExplorer.currentFile != null) {\r\n            this.fileExplorer.currentFile.module.editorState = this.getMonacoEditor().saveViewState();\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            this.fileExplorer.markFile(module);\r\n        }\r\n\r\n        /**\r\n         * WICHTIG: Die Reihenfolge der beiden Operationen ist extrem wichtig.\r\n         * Falls das Model im readonly-Zustand gesetzt wird, funktioniert <Strg + .> \r\n         * nicht und die Lightbulbs werden nicht angezeigt, selbst dann, wenn\r\n         * später readonly = false gesetzt wird.\r\n         */\r\n        this.getMonacoEditor().updateOptions({\r\n            readOnly: false,\r\n            lineNumbersMinChars: 4\r\n        });\r\n        this.editor.editor.setModel(module.model);\r\n\r\n\r\n        if (module.editorState != null) {\r\n            this.getMonacoEditor().restoreViewState(module.editorState);\r\n        }\r\n\r\n        module.renderBreakpointDecorators();\r\n\r\n    }\r\n\r\n\r\n\r\n    readScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let that = this;\r\n\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                setInterval(() => {\r\n                    that.saveScripts();\r\n                }, 1000);\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n                let countDown = scriptList.length;\r\n\r\n                for (let module of modules) {\r\n                    that.fileExplorer?.removeModule(module);\r\n                    that.removeModule(module);\r\n                }\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.getScript(scriptId, (script) => {\r\n                        if (script != null) {\r\n\r\n                            let module = that.addModule({\r\n                                title: name,\r\n                                text: script,\r\n                                type: \"java\"\r\n                            });\r\n\r\n                            that.fileExplorer?.addModule(module);\r\n                            that.$resetButton.fadeIn(1000);\r\n\r\n                            // console.log(\"Retrieving script \" + scriptId);\r\n                        }\r\n                        countDown--;\r\n                        if (countDown == 0) {\r\n                            setInterval(() => {\r\n                                that.saveScripts();\r\n                            }, 1000);\r\n                            that.fileExplorer?.setFirstFileActive();\r\n                            if (that.fileExplorer == null) {\r\n                                let modules = that.currentWorkspace.moduleStore.getModules(false);\r\n                                if (modules.length > 0) that.setModuleActive(modules[0]);\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    saveScripts() {\r\n\r\n        let modules = this.currentWorkspace.moduleStore.getModules(false);\r\n\r\n        let scriptList: string[] = [];\r\n        let oneNotSaved: boolean = false;\r\n\r\n        modules.forEach(m => oneNotSaved = oneNotSaved || !m.file.saved);\r\n\r\n        if (oneNotSaved) {\r\n\r\n            for (let module of modules) {\r\n                scriptList.push(module.file.name);\r\n                let scriptId = this.config.id + module.file.name;\r\n                this.indexedDB.writeScript(scriptId, module.getProgramTextFromMonacoModel());\r\n                module.file.saved = true;\r\n                // console.log(\"Saving script \" + scriptId);\r\n            }\r\n\r\n            this.indexedDB.writeScript(this.config.id, JSON.stringify(scriptList));\r\n        }\r\n\r\n    }\r\n\r\n    deleteScriptsInDB() {\r\n        this.indexedDB.getScript(this.config.id, (scriptListJSon) => {\r\n            if (scriptListJSon == null) {\r\n                return;\r\n            } else {\r\n\r\n                let scriptList: string[] = JSON.parse(scriptListJSon);\r\n\r\n                for (let name of scriptList) {\r\n\r\n                    let scriptId = this.config.id + name;\r\n                    this.indexedDB.removeScript(scriptId);\r\n                }\r\n\r\n                this.indexedDB.removeScript(this.config.id);\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initWorkspace(scriptList: JOScript[]) {\r\n        this.currentWorkspace = new Workspace(\"Embedded-Workspace\", this, 0);\r\n\r\n        let i = 0;\r\n        for (let script of scriptList) {\r\n            if (script.type == \"java\") {\r\n                this.addModule(script);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    addModule(script: JOScript): Module {\r\n        let module: Module = Module.restoreFromData({\r\n            id: this.currentWorkspace.moduleStore.getModules(true).length,\r\n            name: script.title,\r\n            text: script.text,\r\n            text_before_revision: null,\r\n            submitted_date: null,\r\n            student_edited_after_revision: false,\r\n            version: 1,\r\n            workspace_id: 0,\r\n            forceUpdate: false,\r\n            identical_to_repository_version: false\r\n        }, this);\r\n\r\n        this.currentWorkspace.moduleStore.putModule(module);\r\n\r\n        let that = this;\r\n\r\n        module.model.onDidChangeContent(() => {\r\n            that.considerShowingCodeResetButton();\r\n        });\r\n\r\n        return module;\r\n    }\r\n\r\n    removeModule(module: Module) {\r\n        this.currentWorkspace.moduleStore.removeModule(module);\r\n    }\r\n\r\n\r\n    initGUI($div: JQuery<HTMLElement>) {\r\n\r\n        // let $leftDiv = jQuery('<div class=\"joe_leftDiv\"></div>');\r\n\r\n        $div.css({\r\n            \"background-image\": \"none\",\r\n            \"background-size\": \"100%\"\r\n        })\r\n\r\n        let $centerDiv = jQuery('<div class=\"joe_centerDiv\"></div>');\r\n        let $resetModalWindow = this.makeCodeResetModalWindow($div);\r\n\r\n        let $rightDiv = this.makeRightDiv();\r\n\r\n        let $editorDiv = jQuery('<div class=\"joe_editorDiv\"></div>');\r\n        this.$monacoDiv = jQuery('<div class=\"joe_monacoDiv\"></div>');\r\n        this.$hintDiv = jQuery('<div class=\"joe_hintDiv jo_scrollable\"></div>');\r\n        this.$resetButton = jQuery('<div class=\"joe_resetButton jo_button jo_active\" title=\"Code auf Ausgangszustand zurücksetzen\">Code Reset</div>');\r\n\r\n        $editorDiv.append(this.$monacoDiv, this.$hintDiv, this.$resetButton);\r\n\r\n        let $bracketErrorDiv = this.makeBracketErrorDiv();\r\n        $editorDiv.append($bracketErrorDiv);\r\n\r\n        this.$resetButton.hide();\r\n\r\n        this.$resetButton.on(\"click\", () => { $resetModalWindow.show(); })\r\n\r\n        this.$hintDiv.hide();\r\n\r\n        let $controlsDiv = jQuery('<div class=\"joe_controlsDiv\"></div>');\r\n        let $bottomDivInner = jQuery('<div class=\"joe_bottomDivInner\"></div>');\r\n\r\n\r\n        if (this.config.withBottomPanel) {\r\n            let $bottomDiv = jQuery('<div class=\"joe_bottomDiv\"></div>');\r\n            this.makeBottomDiv($bottomDivInner, $controlsDiv);\r\n            $bottomDiv.append($bottomDivInner);\r\n            if (this.config.withFileList) {\r\n                let $filesDiv = this.makeFilesDiv();\r\n                $bottomDiv.prepend($filesDiv);\r\n                new EmbeddedSlider($filesDiv, false, false, () => { });\r\n            }\r\n            makeTabs($bottomDivInner);\r\n\r\n\r\n            $centerDiv.append($editorDiv, $bottomDiv);\r\n            new EmbeddedSlider($bottomDiv, true, true, () => { this.editor.editor.layout(); });\r\n        } else {\r\n            $centerDiv.prepend($editorDiv);\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if (!this.config.withBottomPanel) {\r\n            $centerDiv.prepend($controlsDiv);\r\n            $controlsDiv.addClass('joe_controlPanel_top');\r\n            $editorDiv.css({\r\n                'position': 'relative',\r\n                'height': '1px'\r\n            });\r\n        }\r\n\r\n        $div.addClass('joe_javaOnlineDiv');\r\n        $div.append($centerDiv, $rightDiv);\r\n        new EmbeddedSlider($rightDiv, true, false, () => {\r\n            jQuery('.jo_graphics').trigger('sizeChanged');\r\n            this.editor.editor.layout();\r\n        });\r\n\r\n        this.editor = new Editor(this, false, true);\r\n        this.editor.initGUI(this.$monacoDiv);\r\n        this.$monacoDiv.find('.monaco-editor').css('z-index', '10');\r\n\r\n        if ($div.attr('tabindex') == null) $div.attr('tabindex', \"0\");\r\n        this.actionManager = new ActionManager($div, this);\r\n        this.actionManager.init();\r\n\r\n        this.bottomDiv = new BottomDiv(this, $bottomDivInner, $div);\r\n        this.bottomDiv.initGUI();\r\n\r\n        this.rightDiv = new RightDiv(this, this.$rightDivInner);\r\n        this.rightDiv.initGUI();\r\n\r\n        let $rightSideContainer = jQuery('<div class=\"jo_rightdiv-rightside-container\">');\r\n        let $coordinates = jQuery('<div class=\"jo_coordinates\">(0/0)</div>');\r\n        this.$rightDivInner.append($rightSideContainer);\r\n        $rightSideContainer.append($coordinates);\r\n\r\n        this.debugger = new Debugger(this, this.$debuggerDiv, null);\r\n\r\n        this.interpreter = new Interpreter(this, this.debugger,\r\n            new ProgramControlButtons($controlsDiv, $editorDiv),\r\n            this.$runDiv);\r\n\r\n        let $infoButton = jQuery('<div class=\"jo_button jo_active img_ellipsis-dark\" style=\"margin-left: 16px\"></div>');\r\n        $controlsDiv.append($infoButton);\r\n\r\n        $infoButton.on('mousedown', (ev) => {\r\n            ev.preventDefault();\r\n            ev.stopPropagation();\r\n            openContextMenu([{\r\n                caption: \"Über Java-Online ...\",\r\n                link: \"https://java.mathe-pabst.de\",\r\n                callback: () => {\r\n                    // nothing to do.\r\n                }}], ev.pageX + 2, ev.pageY + 2);\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.interpreter.initGUI();\r\n            this.editor.editor.layout();\r\n            this.compiler = new Compiler(this);\r\n            this.startTimer();\r\n        }, 200);\r\n\r\n\r\n    }\r\n\r\n    makeBracketErrorDiv(): JQuery<HTMLElement> {\r\n        return jQuery(`\r\n        <div class=\"jo_parenthesis_warning\" title=\"Klammerwarnung!\" style=\"bottom: 55px\">\r\n        <div class=\"jo_warning_light\"></div>\r\n        <div class=\"jo_pw_heading\">{ }</div>\r\n        <div title=\"Letzten Schritt rückgängig\" \r\n            class=\"jo_pw_undo img_undo jo_button jo_active\"></div>\r\n        </div>\r\n        `);\r\n    }\r\n\r\n    makeCodeResetModalWindow($parent: JQuery<HTMLElement>): JQuery<HTMLElement> {\r\n        let $window = jQuery(\r\n            `\r\n            <div class=\"joe_codeResetModal\">\r\n            <div style=\"flex: 1\"></div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1\"></div>\r\n                <div style=\"padding-left: 30px;\">\r\n                <div style=\"color: red; margin-bottom: 10px; font-weight: bold\">Warnung:</div>\r\n                <div>Soll der Code wirklich auf den Ausgangszustand zurückgesetzt werden?</div>\r\n                <div>Alle von Dir gemachten Änderungen werden damit verworfen.</div>\r\n                </div>\r\n                <div style=\"flex: 1\"></div>\r\n            </div>\r\n            <div class=\"joe_codeResetModalButtons\">\r\n            <div class=\"joe_codeResetModalCancel jo_button jo_active\">Abbrechen</div>\r\n            <div class=\"joe_codeResetModalOK jo_button jo_active\">OK</div>\r\n            </div>\r\n            <div style=\"flex: 2\"></div>\r\n            </div>\r\n        `\r\n        );\r\n\r\n        $window.hide();\r\n\r\n        $parent.append($window);\r\n\r\n        jQuery(\".joe_codeResetModalCancel\").on(\"click\", () => {\r\n            $window.hide();\r\n        });\r\n\r\n        jQuery(\".joe_codeResetModalOK\").on(\"click\", () => {\r\n\r\n            this.initScripts();\r\n            this.deleteScriptsInDB();\r\n\r\n            $window.hide();\r\n            this.$resetButton.hide();\r\n            this.compileRunsAfterCodeReset = 1;\r\n\r\n        });\r\n\r\n        return $window;\r\n    }\r\n\r\n    showProgramPointerPosition(file: File, position: TextPosition) {\r\n\r\n        if (file == null) {\r\n            return;\r\n        }\r\n\r\n        if (this.config.withFileList) {\r\n            let fileData = this.fileExplorer.files.find((fileData) => fileData.module.file == file);\r\n            if (fileData == null) {\r\n                return;\r\n            }\r\n\r\n            if (fileData.module != this.getCurrentlyEditedModule()) {\r\n                this.setModuleActive(fileData.module);\r\n            }\r\n\r\n            this.programPointerModule = fileData.module;\r\n        } else {\r\n            this.programPointerModule = this.currentWorkspace.moduleStore.getFirstModule();\r\n        }\r\n\r\n        let range = {\r\n            startColumn: position.column, startLineNumber: position.line,\r\n            endColumn: position.column + position.length, endLineNumber: position.line\r\n        };\r\n\r\n        this.getMonacoEditor().revealRangeInCenterIfOutsideViewport(range);\r\n        this.programPointerDecoration = this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, [\r\n            {\r\n                range: range,\r\n                options: { className: 'jo_revealProgramPointer', isWholeLine: true }\r\n            },\r\n            {\r\n                range: range,\r\n                options: { beforeContentClassName: 'jo_revealProgramPointerBefore' }\r\n            }\r\n        ]);\r\n\r\n\r\n\r\n    }\r\n\r\n    hideProgramPointerPosition() {\r\n        if (this.getCurrentlyEditedModule() == this.programPointerModule) {\r\n            this.getMonacoEditor().deltaDecorations(this.programPointerDecoration, []);\r\n        }\r\n        this.programPointerModule = null;\r\n        this.programPointerDecoration = [];\r\n    }\r\n\r\n    makeFilesDiv(): JQuery<HTMLElement> {\r\n\r\n\r\n        let $filesDiv = jQuery('<div class=\"joe_bottomDivFiles jo_scrollable\"></div>');\r\n\r\n        let $filesHeader = jQuery('<div class=\"joe_filesHeader jo_tabheading jo_active\"  style=\"line-height: 24px\">Programmdateien</div>');\r\n\r\n        this.$filesListDiv = jQuery('<div class=\"joe_filesList jo_scrollable\"></div>');\r\n        // for (let index = 0; index < 20; index++) {            \r\n        //     let $file = jQuery('<div class=\"jo_file jo_java\"><div class=\"jo_fileimage\"></div><div class=\"jo_filename\"></div></div></div>');\r\n        //     $filesList.append($file);\r\n        // }\r\n\r\n        $filesDiv.append($filesHeader, this.$filesListDiv);\r\n\r\n        return $filesDiv;\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timerHandle != null) {\r\n            clearInterval(this.timerHandle);\r\n        }\r\n\r\n        let that = this;\r\n        this.timerHandle = setInterval(() => {\r\n\r\n            that.compileIfDirty();\r\n\r\n        }, 500);\r\n\r\n\r\n    }\r\n\r\n    compileIfDirty() {\r\n\r\n        if (this.currentWorkspace == null) return;\r\n\r\n        if (this.currentWorkspace.moduleStore.isDirty() &&\r\n            this.compiler.compilerStatus != CompilerStatus.compiling\r\n            && this.interpreter.state != InterpreterState.running\r\n            && this.interpreter.state != InterpreterState.paused) {\r\n            try {\r\n\r\n                this.compiler.compile(this.currentWorkspace.moduleStore);\r\n\r\n                let errors = this.\r\n                bottomDiv?.errorManager?.showErrors(this.currentWorkspace);\r\n\r\n                this.editor.onDidChangeCursorPosition(null); // mark occurrencies of symbol under cursor\r\n\r\n                this.printProgram();\r\n\r\n                this.version++;\r\n\r\n                let startable = this.interpreter.getStartableModule(this.currentWorkspace.moduleStore) != null;\r\n\r\n                if (startable &&\r\n                    this.interpreter.state == InterpreterState.not_initialized) {\r\n                    this.copyExecutableModuleStoreToInterpreter();\r\n                    this.interpreter.setState(InterpreterState.done);\r\n                    // this.interpreter.init();\r\n                }\r\n\r\n                if (!startable &&\r\n                    (this.interpreter.state == InterpreterState.done || this.interpreter.state == InterpreterState.error)) {\r\n                    this.interpreter.setState(InterpreterState.not_initialized);\r\n                }\r\n\r\n                // this.drawClassDiagrams(!this.rightDiv.isClassDiagramEnabled());\r\n\r\n            } catch (e) {\r\n                console.error(e);\r\n                this.compiler.compilerStatus = CompilerStatus.error;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    considerShowingCodeResetButton() {\r\n        this.compileRunsAfterCodeReset++;\r\n        if (this.compileRunsAfterCodeReset == 3) {\r\n            this.$resetButton.fadeIn(1000);\r\n        }\r\n    }\r\n    printProgram() {\r\n\r\n        this.bottomDiv.printModuleToBottomDiv(this.currentWorkspace, this.getCurrentlyEditedModule());\r\n\r\n    }\r\n\r\n    drawClassDiagrams(onlyUpdateIdentifiers: boolean) {\r\n        // clearTimeout(this.debounceDiagramDrawing);\r\n        // this.debounceDiagramDrawing = setTimeout(() => {\r\n        //     this.rightDiv?.classDiagram?.drawDiagram(this.currentWorkspace, onlyUpdateIdentifiers);\r\n        // }, 500);\r\n    }\r\n\r\n    copyExecutableModuleStoreToInterpreter() {\r\n        let ms = this.currentWorkspace.moduleStore.copy();\r\n        this.interpreter.moduleStore = ms;\r\n        this.interpreter.moduleStoreVersion = this.version;\r\n\r\n        if (this.interpreter.state == InterpreterState.not_initialized && this.programIsExecutable) {\r\n            this.interpreter.setState(InterpreterState.done);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    makeBottomDiv($bottomDiv: JQuery<HTMLElement>, $buttonDiv: JQuery<HTMLElement>) {\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRightSide = jQuery('<div class=\"joe_tabheading-right jo_noHeading\"></div>');\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsoleClear = jQuery('<div class=\"img_clear-dark jo_button jo_active jo_console-clear\"' +\r\n                'style=\"display: none; margin-right: 8px;\" title=\"Console leeren\"></div>');\r\n            $thRightSide.append($thConsoleClear);\r\n        }\r\n\r\n        $thRightSide.append($buttonDiv);\r\n\r\n        if (this.config.withErrorList) {\r\n            let $thErrors = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_errorsTab\" style=\"line-height: 24px\">Fehler</div>');\r\n            $tabheadings.append($thErrors);\r\n        }\r\n\r\n\r\n        if (this.config.withConsole) {\r\n            let $thConsole = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_consoleTab\" style=\"line-height: 24px\">Console</div>');\r\n            $tabheadings.append($thConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $thPCode = jQuery('<div class=\"jo_tabheading\" data-target=\"jo_pcodeTab\" style=\"line-height: 24px\">PCode</div>');\r\n            $tabheadings.append($thPCode);\r\n        }\r\n\r\n        $tabheadings.append($thRightSide);\r\n\r\n        $bottomDiv.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n\r\n        if (this.config.withErrorList) {\r\n            let $tabError = jQuery('<div class=\"jo_active jo_scrollable jo_errorsTab\"></div>');\r\n            $tabs.append($tabError);\r\n        }\r\n\r\n        if (this.config.withConsole) {\r\n            let $tabConsole = jQuery(\r\n                `\r\n        <div class=\"jo_editorFontSize jo_consoleTab\">\r\n        <div class=\"jo_console-inner\">\r\n            <div class=\"jo_scrollable jo_console-top\"></div>\r\n            <div class=\"jo_commandline\"></div>\r\n        </div>\r\n        </div>\r\n    `);\r\n\r\n            $tabs.append($tabConsole);\r\n        }\r\n\r\n        if (this.config.withPCode) {\r\n            let $tabPCode = jQuery('<div class=\"jo_scrollable jo_pcodeTab\">PCode</div>');\r\n            $tabs.append($tabPCode);\r\n        }\r\n\r\n        $bottomDiv.append($tabs);\r\n\r\n    }\r\n\r\n    makeRightDiv(): JQuery<HTMLElement> {\r\n\r\n        let $rightDiv = jQuery('<div class=\"joe_rightDiv\"></div>');\r\n        this.$rightDivInner = jQuery('<div class=\"joe_rightDivInner\"></div>');\r\n        $rightDiv.append(this.$rightDivInner);\r\n\r\n\r\n        let $tabheadings = jQuery('<div class=\"jo_tabheadings\"></div>');\r\n        $tabheadings.css('position', 'relative');\r\n        let $thRun = jQuery('<div class=\"jo_tabheading jo_active\" data-target=\"jo_run\" style=\"line-height: 24px\">Ausgabe</div>');\r\n        let $thVariables = jQuery('<div class=\"jo_tabheading jo_console-tab\" data-target=\"jo_variablesTab\" style=\"line-height: 24px\">Variablen</div>');\r\n        $tabheadings.append($thRun, $thVariables);\r\n        this.$rightDivInner.append($tabheadings);\r\n\r\n        let $tabs = jQuery('<div class=\"jo_tabs jo_scrollable\"></div>');\r\n        let $vd = jQuery('<div class=\"jo_scrollable jo_editorFontSize jo_variablesTab\"></div>');\r\n        this.$debuggerDiv = jQuery('<div class=\"joe_debuggerDiv\"></div>');\r\n\r\n        let $alternativeText = jQuery(`\r\n            <div class=\"jo_alternativeText jo_scrollable\">\r\n            <div style=\"font-weight: bold\">Tipp:</div>\r\n            Die Variablen sind nur dann sichtbar, wenn das Programm\r\n            <ul>\r\n            <li>im Einzelschrittmodus ausgeführt wird(Klick auf <span class=\"img_step-over-dark jo_inline-image\"></span>),</li>\r\n            <li>an einem Breakpoint hält (Setzen eines Breakpoints mit Mausklick links neben den Zeilennummern und anschließendes Starten des Programms mit \r\n            <span class=\"img_start-dark jo_inline-image\"></span>) oder </li>\r\n            <li>in sehr niedriger Geschwindigkeit ausgeführt wird (weniger als 10 Schritte/s).\r\n            </ul>\r\n            </div>\r\n        `);\r\n\r\n        $vd.append(this.$debuggerDiv, $alternativeText);\r\n\r\n        this.$runDiv = jQuery(\r\n            `\r\n<div class=\"jo_tab jo_active jo_run\">\r\n<div class=\"jo_run-programend\">Programm beendet</div>\r\n<div class=\"jo_run-input\">\r\n    <div>\r\n        <div>\r\n            <div class=\"jo_run-input-message\" class=\"jo_rix\">Bitte geben Sie eine Zahl ein!</div>\r\n            <input class=\"jo_run-input-input\" type=\"text\" class=\"jo_rix\">\r\n            <div class=\"jo_run-input-button-outer\" class=\"jo_rix\">\r\n                <div class=\"jo_run-input-button\" class=\"jo_rix\">OK</div>\r\n            </div>\r\n\r\n            <div class=\"jo_run-input-error\" class=\"jo_rix\"></div>\r\n        </div>\r\n    </div>\r\n</div> \r\n<div class=\"jo_run-inner\">\r\n    <div class=\"jo_graphics\"></div>\r\n    <div class=\"jo_output jo_scrollable\"></div>\r\n</div>\r\n\r\n</div>\r\n\r\n`);\r\n\r\n        $tabs.append(this.$runDiv, $vd);\r\n        this.$rightDivInner.append($tabs);\r\n\r\n        makeTabs($rightDiv);\r\n\r\n        return $rightDiv;\r\n    }\r\n\r\n    getSemicolonAngel(): SemicolonAngel{\r\n        return this.semicolonAngel;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { booleanPrimitiveType, charPrimitiveType, doublePrimitiveType, floatPrimitiveType, intPrimitiveType, stringPrimitiveType, voidPrimitiveType, IntegerType, FloatType, DoubleType, CharacterType, BooleanType } from \"../compiler/types/PrimitiveTypes.js\";\r\nimport { Formatter } from \"../main/gui/Formatter.js\";\r\nimport { ThemeManager } from \"../main/gui/ThemeManager.js\";\r\nimport { MainEmbedded } from \"./MainEmbedded.js\";\r\n\r\n// declare const require: any;\r\n\r\nexport type ScriptType = \"java\" | \"hint\";\r\n\r\nexport type JOScript = {\r\n    type: ScriptType;\r\n    title: string;\r\n    text: string;\r\n}\r\n\r\nexport class EmbeddedStarter {\r\n\r\n\r\n    startupComplete = 2;\r\n\r\n    themeManager: ThemeManager;\r\n\r\n    mainEmbeddedList: MainEmbedded[] = [];\r\n\r\n    initGUI() {\r\n\r\n        this.initTypes();\r\n\r\n        this.checkStartupComplete();\r\n\r\n        this.correctPIXITransform();\r\n\r\n        PIXI.utils.skipHello(); // don't show PIXI-Message in browser console\r\n\r\n        this.themeManager = new ThemeManager();\r\n    }\r\n\r\n    correctPIXITransform() {\r\n\r\n        PIXI.Transform.prototype.updateTransform = function (parentTransform) {\r\n            var lt = this.localTransform;\r\n            if (this._localID !== this._currentLocalID) {\r\n                this._currentLocalID = this._localID;\r\n                // force an update..\r\n                this._parentID = -1;\r\n            }\r\n            //@ts-ignore\r\n            if (this._parentID !== parentTransform._worldID) {\r\n                // concat the parent matrix with the objects transform.\r\n                var pt = parentTransform.worldTransform;\r\n                var wt = this.worldTransform;\r\n                wt.a = (lt.a * pt.a) + (lt.b * pt.c);\r\n                wt.b = (lt.a * pt.b) + (lt.b * pt.d);\r\n                wt.c = (lt.c * pt.a) + (lt.d * pt.c);\r\n                wt.d = (lt.c * pt.b) + (lt.d * pt.d);\r\n                wt.tx = (lt.tx * pt.a) + (lt.ty * pt.c) + pt.tx;\r\n                wt.ty = (lt.tx * pt.b) + (lt.ty * pt.d) + pt.ty;\r\n                //@ts-ignore\r\n                this._parentID = parentTransform._worldID;\r\n                // update the id of the transform..\r\n                this._worldID++;\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    initEditor() {\r\n        new Formatter().init();\r\n        this.checkStartupComplete();\r\n    }\r\n\r\n    checkStartupComplete() {\r\n        this.startupComplete--;\r\n        if (this.startupComplete == 0) {\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    initTypes() {\r\n        voidPrimitiveType.init();\r\n        intPrimitiveType.init();\r\n        floatPrimitiveType.init();\r\n        doublePrimitiveType.init();\r\n        booleanPrimitiveType.init();\r\n        stringPrimitiveType.init();\r\n        charPrimitiveType.init();\r\n\r\n        IntegerType.init();\r\n        FloatType.init();\r\n        DoubleType.init();\r\n        CharacterType.init();\r\n        BooleanType.init();\r\n    }\r\n\r\n    start() {\r\n\r\n        this.initJavaOnlineDivs();\r\n\r\n        // let that = this;\r\n        // setTimeout(() => {\r\n        //     that.monaco_editor.layout();\r\n        // }, 200);\r\n\r\n    }\r\n\r\n    initJavaOnlineDivs() {\r\n        \r\n        jQuery('.java-online').each((index: number, element: HTMLElement) => {\r\n            let $div = jQuery(element);\r\n            let scriptList: JOScript[] = [];\r\n            $div.find('script').each((index: number, element: HTMLElement) => {\r\n                let $script = jQuery(element);\r\n                let type: ScriptType = \"java\";\r\n                if($script.data('type') != null) type = <ScriptType>($script.data('type'));\r\n                let script: JOScript = {\r\n                    type: type,\r\n                    title: $script.attr('title'),\r\n                    text: $script.text().trim()\r\n                };\r\n                scriptList.push(script);\r\n            });\r\n\r\n            this.initDiv($div, scriptList);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    initDiv($div: JQuery<HTMLElement>, scriptList: JOScript[]) {\r\n\r\n        let me: MainEmbedded = new MainEmbedded($div, scriptList);\r\n\r\n    }\r\n\r\n}\r\n\r\njQuery(function () {\r\n\r\n    let embeddedStarter = new EmbeddedStarter();\r\n\r\n    let prefix = \"\";\r\n    let editorPath = \"lib/monaco-editor/dev/vs\"\r\n    //@ts-ignore\r\n    if(window.javaOnlineDir != null){\r\n        //@ts-ignore\r\n        prefix = window.javaOnlineDir;\r\n    }\r\n\r\n    //@ts-ignore\r\n    if(window.monacoEditorPath != null){\r\n        //@ts-ignore\r\n        editorPath = window.monacoEditorPath;\r\n    }\r\n\r\n    //@ts-ignore\r\n    window.require.config({ paths: { 'vs': prefix + editorPath } });\r\n    //@ts-ignore\r\n    window.require.config({\r\n        'vs/nls': {\r\n            availableLanguages: {\r\n                '*': 'de'\r\n            }\r\n        },\r\n        ignoreDuplicateModules: [\"vs/editor/editor.main\"]\r\n    });\r\n    //@ts-ignore\r\n    window.require(['vs/editor/editor.main'], function () {\r\n\r\n        embeddedStarter.initEditor();\r\n        embeddedStarter.initGUI();\r\n\r\n    });\r\n\r\n\r\n    PIXI.Loader\r\n        .shared.add(prefix + \"assets/graphics/spritesheet.json\")\r\n        .load(() => { });\r\n\r\n\r\n});\r\n"],"sourceRoot":""}